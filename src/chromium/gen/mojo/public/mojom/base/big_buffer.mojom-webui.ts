// mojo/public/mojom/base/big_buffer.mojom-webui.ts is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '//resources/mojo/mojo/public/js/bindings.js';







export const BigBufferSharedMemoryRegionSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const BigBufferSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };




export interface BigBufferSharedMemoryRegionMojoType {
  bufferHandle: MojoHandle;
  size: number;
}


export type BigBufferSharedMemoryRegion = BigBufferSharedMemoryRegionMojoType;
mojo.internal.Struct(
    BigBufferSharedMemoryRegionSpec.$,
    'BigBufferSharedMemoryRegion',
    [
      mojo.internal.StructField(
        'bufferHandle', 0,
        0,
        mojo.internal.Handle,
        null,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'size', 4,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 16],]);



mojo.internal.Union(
    BigBufferSpec.$, 'BigBuffer',
    {
      'bytes': {
        'ordinal': 0,
        'type': mojo.internal.Array(mojo.internal.Uint8, false),
      },
      'sharedMemory': {
        'ordinal': 1,
        'type': BigBufferSharedMemoryRegionSpec.$,
      },
      'invalidBuffer': {
        'ordinal': 2,
        'type': mojo.internal.Bool,
      },
    });

export interface BigBuffer {
  bytes?: number[],
  sharedMemory?: BigBufferSharedMemoryRegion,
  invalidBuffer?: boolean,
}
