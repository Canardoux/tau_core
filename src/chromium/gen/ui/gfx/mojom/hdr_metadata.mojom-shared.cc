// ui/gfx/mojom/hdr_metadata.mojom-shared.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "ui/gfx/mojom/hdr_metadata.mojom-shared.h"

// Used to support stream output operator for enums.
// TODO(dcheng): Consider omitting this somehow if not needed.
#include <ostream>
#include <utility>
#include "mojo/public/cpp/bindings/lib/validate_params.h"
#include "mojo/public/cpp/bindings/lib/validation_errors.h"
#include "mojo/public/cpp/bindings/lib/validation_util.h"
#include "third_party/perfetto/include/perfetto/tracing/traced_value.h"

#include "ui/gfx/mojom/hdr_metadata.mojom-params-data.h"
namespace gfx {
namespace mojom {

namespace internal {


// static
bool HdrMetadataCta861_3_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const HdrMetadataCta861_3_Data* object =
      static_cast<const HdrMetadataCta861_3_Data*>(data);

  return true;
}

HdrMetadataCta861_3_Data::HdrMetadataCta861_3_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool HdrMetadataSmpteSt2086_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const HdrMetadataSmpteSt2086_Data* object =
      static_cast<const HdrMetadataSmpteSt2086_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->primaries, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->primaries, validation_context))
    return false;

  return true;
}

HdrMetadataSmpteSt2086_Data::HdrMetadataSmpteSt2086_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool HdrMetadataNdwl_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const HdrMetadataNdwl_Data* object =
      static_cast<const HdrMetadataNdwl_Data*>(data);

  return true;
}

HdrMetadataNdwl_Data::HdrMetadataNdwl_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool HdrMetadataExtendedRange_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const HdrMetadataExtendedRange_Data* object =
      static_cast<const HdrMetadataExtendedRange_Data*>(data);

  return true;
}

HdrMetadataExtendedRange_Data::HdrMetadataExtendedRange_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool HDRMetadata_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 40, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const HDRMetadata_Data* object =
      static_cast<const HDRMetadata_Data*>(data);

  if (!mojo::internal::ValidateStruct(object->smpte_st_2086, validation_context))
    return false;

  if (!mojo::internal::ValidateStruct(object->cta_861_3, validation_context))
    return false;

  if (!mojo::internal::ValidateStruct(object->ndwl, validation_context))
    return false;

  if (!mojo::internal::ValidateStruct(object->extended_range, validation_context))
    return false;

  return true;
}

HDRMetadata_Data::HDRMetadata_Data()
    : header_({sizeof(*this), 0}) {}

}  // namespace internal
}  // namespace mojom
}  // namespace gfx