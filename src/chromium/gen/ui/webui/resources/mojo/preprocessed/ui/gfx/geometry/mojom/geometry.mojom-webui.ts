// ui/gfx/geometry/mojom/geometry.mojom-webui.ts is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '//resources/mojo/mojo/public/js/bindings.js';







export const PointSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const PointFSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const Point3FSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const SizeSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const SizeFSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const RectSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const RectFSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const InsetsSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const InsetsFSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const Vector2dSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const Vector2dFSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const Vector3dFSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const QuaternionSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const QuadFSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };




export interface PointMojoType {
  x: number;
  y: number;
}


export type Point = PointMojoType;
mojo.internal.Struct(
    PointSpec.$,
    'Point',
    [
      mojo.internal.StructField(
        'x', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'y', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 16],]);





export interface PointFMojoType {
  x: number;
  y: number;
}


export type PointF = PointFMojoType;
mojo.internal.Struct(
    PointFSpec.$,
    'PointF',
    [
      mojo.internal.StructField(
        'x', 0,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'y', 4,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 16],]);





export interface Point3FMojoType {
  x: number;
  y: number;
  z: number;
}


export type Point3F = Point3FMojoType;
mojo.internal.Struct(
    Point3FSpec.$,
    'Point3F',
    [
      mojo.internal.StructField(
        'x', 0,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'y', 4,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'z', 8,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 24],]);





export interface SizeMojoType {
  width: number;
  height: number;
}


export type Size = SizeMojoType;
mojo.internal.Struct(
    SizeSpec.$,
    'Size',
    [
      mojo.internal.StructField(
        'width', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'height', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 16],]);





export interface SizeFMojoType {
  width: number;
  height: number;
}


export type SizeF = SizeFMojoType;
mojo.internal.Struct(
    SizeFSpec.$,
    'SizeF',
    [
      mojo.internal.StructField(
        'width', 0,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'height', 4,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 16],]);





export interface RectMojoType {
  x: number;
  y: number;
  width: number;
  height: number;
}


export type Rect = RectMojoType;
mojo.internal.Struct(
    RectSpec.$,
    'Rect',
    [
      mojo.internal.StructField(
        'x', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'y', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'width', 8,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'height', 12,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 24],]);





export interface RectFMojoType {
  x: number;
  y: number;
  width: number;
  height: number;
}


export type RectF = RectFMojoType;
mojo.internal.Struct(
    RectFSpec.$,
    'RectF',
    [
      mojo.internal.StructField(
        'x', 0,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'y', 4,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'width', 8,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'height', 12,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 24],]);





export interface InsetsMojoType {
  top: number;
  left: number;
  bottom: number;
  right: number;
}


export type Insets = InsetsMojoType;
mojo.internal.Struct(
    InsetsSpec.$,
    'Insets',
    [
      mojo.internal.StructField(
        'top', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'left', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'bottom', 8,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'right', 12,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 24],]);





export interface InsetsFMojoType {
  top: number;
  left: number;
  bottom: number;
  right: number;
}


export type InsetsF = InsetsFMojoType;
mojo.internal.Struct(
    InsetsFSpec.$,
    'InsetsF',
    [
      mojo.internal.StructField(
        'top', 0,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'left', 4,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'bottom', 8,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'right', 12,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 24],]);





export interface Vector2dMojoType {
  x: number;
  y: number;
}


export type Vector2d = Vector2dMojoType;
mojo.internal.Struct(
    Vector2dSpec.$,
    'Vector2d',
    [
      mojo.internal.StructField(
        'x', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'y', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 16],]);





export interface Vector2dFMojoType {
  x: number;
  y: number;
}


export type Vector2dF = Vector2dFMojoType;
mojo.internal.Struct(
    Vector2dFSpec.$,
    'Vector2dF',
    [
      mojo.internal.StructField(
        'x', 0,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'y', 4,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 16],]);





export interface Vector3dFMojoType {
  x: number;
  y: number;
  z: number;
}


export type Vector3dF = Vector3dFMojoType;
mojo.internal.Struct(
    Vector3dFSpec.$,
    'Vector3dF',
    [
      mojo.internal.StructField(
        'x', 0,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'y', 4,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'z', 8,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 24],]);





export interface QuaternionMojoType {
  x: number;
  y: number;
  z: number;
  w: number;
}


export type Quaternion = QuaternionMojoType;
mojo.internal.Struct(
    QuaternionSpec.$,
    'Quaternion',
    [
      mojo.internal.StructField(
        'x', 0,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'y', 8,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'z', 16,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'w', 24,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 40],]);





export interface QuadFMojoType {
  p1: PointF;
  p2: PointF;
  p3: PointF;
  p4: PointF;
}


export type QuadF = QuadFMojoType;
mojo.internal.Struct(
    QuadFSpec.$,
    'QuadF',
    [
      mojo.internal.StructField(
        'p1', 0,
        0,
        PointFSpec.$,
        null,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'p2', 8,
        0,
        PointFSpec.$,
        null,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'p3', 16,
        0,
        PointFSpec.$,
        null,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'p4', 24,
        0,
        PointFSpec.$,
        null,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 40],]);



