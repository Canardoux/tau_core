// ui/webui/resources/cr_components/help_bubble/help_bubble.mojom-webui.ts is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '//resources/mojo/mojo/public/js/bindings.js';

import {
  TimeDelta as mojoBase_mojom_TimeDelta,
  TimeDeltaSpec as mojoBase_mojom_TimeDeltaSpec
} from '//resources/mojo/mojo/public/mojom/base/time.mojom-webui.js';
import {
  RectF as gfx_mojom_RectF,
  RectFSpec as gfx_mojom_RectFSpec
} from '//resources/mojo/ui/gfx/geometry/mojom/geometry.mojom-webui.js';





export const HelpBubbleArrowPositionSpec: { $: mojo.internal.MojomType } = { $: mojo.internal.Enum() };

export enum HelpBubbleArrowPosition {

  MIN_VALUE = 0,
  MAX_VALUE = 11,
  TOP_LEFT = 0,
  TOP_CENTER = 1,
  TOP_RIGHT = 2,
  BOTTOM_LEFT = 3,
  BOTTOM_CENTER = 4,
  BOTTOM_RIGHT = 5,
  LEFT_TOP = 6,
  LEFT_CENTER = 7,
  LEFT_BOTTOM = 8,
  RIGHT_TOP = 9,
  RIGHT_CENTER = 10,
  RIGHT_BOTTOM = 11,
}

export const HelpBubbleClosedReasonSpec: { $: mojo.internal.MojomType } = { $: mojo.internal.Enum() };

export enum HelpBubbleClosedReason {

  MIN_VALUE = 0,
  MAX_VALUE = 2,
  kPageChanged = 0,
  kDismissedByUser = 1,
  kTimedOut = 2,
}



export class HelpBubbleHandlerFactoryPendingReceiver implements
    mojo.internal.interfaceSupport.PendingReceiver {

  handle: mojo.internal.interfaceSupport.Endpoint;
  constructor(handle: MojoHandle|mojo.internal.interfaceSupport.Endpoint) {
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  bindInBrowser(scope: string = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        'help_bubble.mojom.HelpBubbleHandlerFactory',
        scope);
  }
}

export interface HelpBubbleHandlerFactoryInterface {
  createHelpBubbleHandler(client: HelpBubbleClientRemote, handler: HelpBubbleHandlerPendingReceiver): void;
}

export class HelpBubbleHandlerFactoryRemote implements HelpBubbleHandlerFactoryInterface {
  private proxy: mojo.internal.interfaceSupport.InterfaceRemoteBase<HelpBubbleHandlerFactoryPendingReceiver>;
  $: mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<HelpBubbleHandlerFactoryPendingReceiver>;
  onConnectionError: mojo.internal.interfaceSupport.ConnectionErrorEventRouter;

  constructor(
      handle?: MojoHandle|mojo.internal.interfaceSupport.Endpoint) {
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          HelpBubbleHandlerFactoryPendingReceiver, handle);

    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  createHelpBubbleHandler(
      client: HelpBubbleClientRemote,
      handler: HelpBubbleHandlerPendingReceiver): void {
    this.proxy.sendMessage(
        0,
        HelpBubbleHandlerFactory_CreateHelpBubbleHandler_ParamsSpec.$,
        null,
        [
          client,
          handler
        ]);
  }
};

/**
 * An object which receives request messages for the HelpBubbleHandlerFactory
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class HelpBubbleHandlerFactoryReceiver {
  private helper_internal_: mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<HelpBubbleHandlerFactoryRemote>;

  $: mojo.internal.interfaceSupport.InterfaceReceiverHelper<HelpBubbleHandlerFactoryRemote>;

  onConnectionError: mojo.internal.interfaceSupport.ConnectionErrorEventRouter;


  constructor(impl: HelpBubbleHandlerFactoryInterface) {

    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        HelpBubbleHandlerFactoryRemote);

    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        HelpBubbleHandlerFactory_CreateHelpBubbleHandler_ParamsSpec.$,
        null,
        impl.createHelpBubbleHandler.bind(impl));
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class HelpBubbleHandlerFactory {
  static get $interfaceName(): string {
    return "help_bubble.mojom.HelpBubbleHandlerFactory";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   */
  static getRemote(): HelpBubbleHandlerFactoryRemote {
    let remote = new HelpBubbleHandlerFactoryRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}

/**
 * An object which receives request messages for the HelpBubbleHandlerFactory
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class HelpBubbleHandlerFactoryCallbackRouter {
  private helper_internal_: mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<HelpBubbleHandlerFactoryRemote>;
  $: mojo.internal.interfaceSupport.InterfaceReceiverHelper<HelpBubbleHandlerFactoryRemote>;
  router_: mojo.internal.interfaceSupport.CallbackRouter;

  createHelpBubbleHandler: mojo.internal.interfaceSupport.InterfaceCallbackReceiver;
  onConnectionError: mojo.internal.interfaceSupport.ConnectionErrorEventRouter;

  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      HelpBubbleHandlerFactoryRemote);

    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    this.createHelpBubbleHandler =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        HelpBubbleHandlerFactory_CreateHelpBubbleHandler_ParamsSpec.$,
        null,
        this.createHelpBubbleHandler.createReceiverHandler(false /* expectsResponse */));
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param id An ID returned by a prior call to addListener.
   * @return True iff the identified listener was found and removed.
   */
  removeListener(id: number): boolean {
    return this.router_.removeListener(id);
  }
}


export class HelpBubbleHandlerPendingReceiver implements
    mojo.internal.interfaceSupport.PendingReceiver {

  handle: mojo.internal.interfaceSupport.Endpoint;
  constructor(handle: MojoHandle|mojo.internal.interfaceSupport.Endpoint) {
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  bindInBrowser(scope: string = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        'help_bubble.mojom.HelpBubbleHandler',
        scope);
  }
}

export interface HelpBubbleHandlerInterface {
  helpBubbleAnchorVisibilityChanged(nativeIdentifier: string, visible: boolean, rect: gfx_mojom_RectF): void;
  helpBubbleAnchorActivated(nativeIdentifier: string): void;
  helpBubbleAnchorCustomEvent(nativeIdentifier: string, customEventName: string): void;
  helpBubbleButtonPressed(nativeIdentifier: string, buttonIndex: number): void;
  helpBubbleClosed(nativeIdentifier: string, reason: HelpBubbleClosedReason): void;
}

export class HelpBubbleHandlerRemote implements HelpBubbleHandlerInterface {
  private proxy: mojo.internal.interfaceSupport.InterfaceRemoteBase<HelpBubbleHandlerPendingReceiver>;
  $: mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<HelpBubbleHandlerPendingReceiver>;
  onConnectionError: mojo.internal.interfaceSupport.ConnectionErrorEventRouter;

  constructor(
      handle?: MojoHandle|mojo.internal.interfaceSupport.Endpoint) {
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          HelpBubbleHandlerPendingReceiver, handle);

    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  helpBubbleAnchorVisibilityChanged(
      nativeIdentifier: string,
      visible: boolean,
      rect: gfx_mojom_RectF): void {
    this.proxy.sendMessage(
        0,
        HelpBubbleHandler_HelpBubbleAnchorVisibilityChanged_ParamsSpec.$,
        null,
        [
          nativeIdentifier,
          visible,
          rect
        ]);
  }

  helpBubbleAnchorActivated(
      nativeIdentifier: string): void {
    this.proxy.sendMessage(
        1,
        HelpBubbleHandler_HelpBubbleAnchorActivated_ParamsSpec.$,
        null,
        [
          nativeIdentifier
        ]);
  }

  helpBubbleAnchorCustomEvent(
      nativeIdentifier: string,
      customEventName: string): void {
    this.proxy.sendMessage(
        2,
        HelpBubbleHandler_HelpBubbleAnchorCustomEvent_ParamsSpec.$,
        null,
        [
          nativeIdentifier,
          customEventName
        ]);
  }

  helpBubbleButtonPressed(
      nativeIdentifier: string,
      buttonIndex: number): void {
    this.proxy.sendMessage(
        3,
        HelpBubbleHandler_HelpBubbleButtonPressed_ParamsSpec.$,
        null,
        [
          nativeIdentifier,
          buttonIndex
        ]);
  }

  helpBubbleClosed(
      nativeIdentifier: string,
      reason: HelpBubbleClosedReason): void {
    this.proxy.sendMessage(
        4,
        HelpBubbleHandler_HelpBubbleClosed_ParamsSpec.$,
        null,
        [
          nativeIdentifier,
          reason
        ]);
  }
};

/**
 * An object which receives request messages for the HelpBubbleHandler
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class HelpBubbleHandlerReceiver {
  private helper_internal_: mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<HelpBubbleHandlerRemote>;

  $: mojo.internal.interfaceSupport.InterfaceReceiverHelper<HelpBubbleHandlerRemote>;

  onConnectionError: mojo.internal.interfaceSupport.ConnectionErrorEventRouter;


  constructor(impl: HelpBubbleHandlerInterface) {

    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        HelpBubbleHandlerRemote);

    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        HelpBubbleHandler_HelpBubbleAnchorVisibilityChanged_ParamsSpec.$,
        null,
        impl.helpBubbleAnchorVisibilityChanged.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        HelpBubbleHandler_HelpBubbleAnchorActivated_ParamsSpec.$,
        null,
        impl.helpBubbleAnchorActivated.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        HelpBubbleHandler_HelpBubbleAnchorCustomEvent_ParamsSpec.$,
        null,
        impl.helpBubbleAnchorCustomEvent.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        HelpBubbleHandler_HelpBubbleButtonPressed_ParamsSpec.$,
        null,
        impl.helpBubbleButtonPressed.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        HelpBubbleHandler_HelpBubbleClosed_ParamsSpec.$,
        null,
        impl.helpBubbleClosed.bind(impl));
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class HelpBubbleHandler {
  static get $interfaceName(): string {
    return "help_bubble.mojom.HelpBubbleHandler";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   */
  static getRemote(): HelpBubbleHandlerRemote {
    let remote = new HelpBubbleHandlerRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}

/**
 * An object which receives request messages for the HelpBubbleHandler
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class HelpBubbleHandlerCallbackRouter {
  private helper_internal_: mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<HelpBubbleHandlerRemote>;
  $: mojo.internal.interfaceSupport.InterfaceReceiverHelper<HelpBubbleHandlerRemote>;
  router_: mojo.internal.interfaceSupport.CallbackRouter;

  helpBubbleAnchorVisibilityChanged: mojo.internal.interfaceSupport.InterfaceCallbackReceiver;
  helpBubbleAnchorActivated: mojo.internal.interfaceSupport.InterfaceCallbackReceiver;
  helpBubbleAnchorCustomEvent: mojo.internal.interfaceSupport.InterfaceCallbackReceiver;
  helpBubbleButtonPressed: mojo.internal.interfaceSupport.InterfaceCallbackReceiver;
  helpBubbleClosed: mojo.internal.interfaceSupport.InterfaceCallbackReceiver;
  onConnectionError: mojo.internal.interfaceSupport.ConnectionErrorEventRouter;

  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      HelpBubbleHandlerRemote);

    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    this.helpBubbleAnchorVisibilityChanged =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        HelpBubbleHandler_HelpBubbleAnchorVisibilityChanged_ParamsSpec.$,
        null,
        this.helpBubbleAnchorVisibilityChanged.createReceiverHandler(false /* expectsResponse */));
    this.helpBubbleAnchorActivated =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        HelpBubbleHandler_HelpBubbleAnchorActivated_ParamsSpec.$,
        null,
        this.helpBubbleAnchorActivated.createReceiverHandler(false /* expectsResponse */));
    this.helpBubbleAnchorCustomEvent =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        HelpBubbleHandler_HelpBubbleAnchorCustomEvent_ParamsSpec.$,
        null,
        this.helpBubbleAnchorCustomEvent.createReceiverHandler(false /* expectsResponse */));
    this.helpBubbleButtonPressed =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        HelpBubbleHandler_HelpBubbleButtonPressed_ParamsSpec.$,
        null,
        this.helpBubbleButtonPressed.createReceiverHandler(false /* expectsResponse */));
    this.helpBubbleClosed =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        HelpBubbleHandler_HelpBubbleClosed_ParamsSpec.$,
        null,
        this.helpBubbleClosed.createReceiverHandler(false /* expectsResponse */));
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param id An ID returned by a prior call to addListener.
   * @return True iff the identified listener was found and removed.
   */
  removeListener(id: number): boolean {
    return this.router_.removeListener(id);
  }
}


export class HelpBubbleClientPendingReceiver implements
    mojo.internal.interfaceSupport.PendingReceiver {

  handle: mojo.internal.interfaceSupport.Endpoint;
  constructor(handle: MojoHandle|mojo.internal.interfaceSupport.Endpoint) {
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  bindInBrowser(scope: string = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        'help_bubble.mojom.HelpBubbleClient',
        scope);
  }
}

export interface HelpBubbleClientInterface {
  showHelpBubble(params: HelpBubbleParams): void;
  toggleFocusForAccessibility(nativeIdentifier: string): void;
  hideHelpBubble(nativeIdentifier: string): void;
  externalHelpBubbleUpdated(nativeIdentifier: string, shown: boolean): void;
}

export class HelpBubbleClientRemote implements HelpBubbleClientInterface {
  private proxy: mojo.internal.interfaceSupport.InterfaceRemoteBase<HelpBubbleClientPendingReceiver>;
  $: mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<HelpBubbleClientPendingReceiver>;
  onConnectionError: mojo.internal.interfaceSupport.ConnectionErrorEventRouter;

  constructor(
      handle?: MojoHandle|mojo.internal.interfaceSupport.Endpoint) {
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          HelpBubbleClientPendingReceiver, handle);

    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  showHelpBubble(
      params: HelpBubbleParams): void {
    this.proxy.sendMessage(
        0,
        HelpBubbleClient_ShowHelpBubble_ParamsSpec.$,
        null,
        [
          params
        ]);
  }

  toggleFocusForAccessibility(
      nativeIdentifier: string): void {
    this.proxy.sendMessage(
        1,
        HelpBubbleClient_ToggleFocusForAccessibility_ParamsSpec.$,
        null,
        [
          nativeIdentifier
        ]);
  }

  hideHelpBubble(
      nativeIdentifier: string): void {
    this.proxy.sendMessage(
        2,
        HelpBubbleClient_HideHelpBubble_ParamsSpec.$,
        null,
        [
          nativeIdentifier
        ]);
  }

  externalHelpBubbleUpdated(
      nativeIdentifier: string,
      shown: boolean): void {
    this.proxy.sendMessage(
        3,
        HelpBubbleClient_ExternalHelpBubbleUpdated_ParamsSpec.$,
        null,
        [
          nativeIdentifier,
          shown
        ]);
  }
};

/**
 * An object which receives request messages for the HelpBubbleClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class HelpBubbleClientReceiver {
  private helper_internal_: mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<HelpBubbleClientRemote>;

  $: mojo.internal.interfaceSupport.InterfaceReceiverHelper<HelpBubbleClientRemote>;

  onConnectionError: mojo.internal.interfaceSupport.ConnectionErrorEventRouter;


  constructor(impl: HelpBubbleClientInterface) {

    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        HelpBubbleClientRemote);

    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        HelpBubbleClient_ShowHelpBubble_ParamsSpec.$,
        null,
        impl.showHelpBubble.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        HelpBubbleClient_ToggleFocusForAccessibility_ParamsSpec.$,
        null,
        impl.toggleFocusForAccessibility.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        HelpBubbleClient_HideHelpBubble_ParamsSpec.$,
        null,
        impl.hideHelpBubble.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        HelpBubbleClient_ExternalHelpBubbleUpdated_ParamsSpec.$,
        null,
        impl.externalHelpBubbleUpdated.bind(impl));
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class HelpBubbleClient {
  static get $interfaceName(): string {
    return "help_bubble.mojom.HelpBubbleClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   */
  static getRemote(): HelpBubbleClientRemote {
    let remote = new HelpBubbleClientRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}

/**
 * An object which receives request messages for the HelpBubbleClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class HelpBubbleClientCallbackRouter {
  private helper_internal_: mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<HelpBubbleClientRemote>;
  $: mojo.internal.interfaceSupport.InterfaceReceiverHelper<HelpBubbleClientRemote>;
  router_: mojo.internal.interfaceSupport.CallbackRouter;

  showHelpBubble: mojo.internal.interfaceSupport.InterfaceCallbackReceiver;
  toggleFocusForAccessibility: mojo.internal.interfaceSupport.InterfaceCallbackReceiver;
  hideHelpBubble: mojo.internal.interfaceSupport.InterfaceCallbackReceiver;
  externalHelpBubbleUpdated: mojo.internal.interfaceSupport.InterfaceCallbackReceiver;
  onConnectionError: mojo.internal.interfaceSupport.ConnectionErrorEventRouter;

  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      HelpBubbleClientRemote);

    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    this.showHelpBubble =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        HelpBubbleClient_ShowHelpBubble_ParamsSpec.$,
        null,
        this.showHelpBubble.createReceiverHandler(false /* expectsResponse */));
    this.toggleFocusForAccessibility =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        HelpBubbleClient_ToggleFocusForAccessibility_ParamsSpec.$,
        null,
        this.toggleFocusForAccessibility.createReceiverHandler(false /* expectsResponse */));
    this.hideHelpBubble =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        HelpBubbleClient_HideHelpBubble_ParamsSpec.$,
        null,
        this.hideHelpBubble.createReceiverHandler(false /* expectsResponse */));
    this.externalHelpBubbleUpdated =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        HelpBubbleClient_ExternalHelpBubbleUpdated_ParamsSpec.$,
        null,
        this.externalHelpBubbleUpdated.createReceiverHandler(false /* expectsResponse */));
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param id An ID returned by a prior call to addListener.
   * @return True iff the identified listener was found and removed.
   */
  removeListener(id: number): boolean {
    return this.router_.removeListener(id);
  }
}

export const HelpBubbleButtonParamsSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const ProgressSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const HelpBubbleParamsSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const HelpBubbleHandlerFactory_CreateHelpBubbleHandler_ParamsSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const HelpBubbleHandler_HelpBubbleAnchorVisibilityChanged_ParamsSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const HelpBubbleHandler_HelpBubbleAnchorActivated_ParamsSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const HelpBubbleHandler_HelpBubbleAnchorCustomEvent_ParamsSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const HelpBubbleHandler_HelpBubbleButtonPressed_ParamsSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const HelpBubbleHandler_HelpBubbleClosed_ParamsSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const HelpBubbleClient_ShowHelpBubble_ParamsSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const HelpBubbleClient_ToggleFocusForAccessibility_ParamsSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const HelpBubbleClient_HideHelpBubble_ParamsSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };

export const HelpBubbleClient_ExternalHelpBubbleUpdated_ParamsSpec: { $: mojo.internal.MojomType } =
    { $: {} as unknown as mojo.internal.MojomType };




export interface HelpBubbleButtonParamsMojoType {
  text: string;
  isDefault: boolean;
}


export type HelpBubbleButtonParams = HelpBubbleButtonParamsMojoType;
mojo.internal.Struct(
    HelpBubbleButtonParamsSpec.$,
    'HelpBubbleButtonParams',
    [
      mojo.internal.StructField(
        'text', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'isDefault', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 24],]);





export interface ProgressMojoType {
  current: number;
  total: number;
}


export type Progress = ProgressMojoType;
mojo.internal.Struct(
    ProgressSpec.$,
    'Progress',
    [
      mojo.internal.StructField(
        'current', 0,
        0,
        mojo.internal.Uint8,
        0,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'total', 1,
        0,
        mojo.internal.Uint8,
        0,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 16],]);





export interface HelpBubbleParamsMojoType {
  nativeIdentifier: string;
  position: HelpBubbleArrowPosition;
  focusOnShowHint: (boolean | null);
  titleText: (string | null);
  bodyText: string;
  closeButtonAltText: string;
  bodyIconName: (string | null);
  bodyIconAltText: string;
  progress: (Progress | null);
  buttons: HelpBubbleButtonParams[];
  timeout: (mojoBase_mojom_TimeDelta | null);
}


export type HelpBubbleParams = HelpBubbleParamsMojoType;
mojo.internal.Struct(
    HelpBubbleParamsSpec.$,
    'HelpBubbleParams',
    [
      mojo.internal.StructField(
        'nativeIdentifier', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'position', 8,
        0,
        HelpBubbleArrowPositionSpec.$,
        HelpBubbleArrowPosition.TOP_CENTER,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'titleText', 16,
        0,
        mojo.internal.String,
        null,
        true /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'bodyText', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'closeButtonAltText', 32,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'bodyIconName', 40,
        0,
        mojo.internal.String,
        null,
        true /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'bodyIconAltText', 48,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'progress', 56,
        0,
        ProgressSpec.$,
        null,
        true /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'buttons', 64,
        0,
        mojo.internal.Array(HelpBubbleButtonParamsSpec.$, false),
        null,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'focus_on_show_hint_$flag', 12,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0,
        {
          isPrimary: true,
          linkedValueFieldName: "focus_on_show_hint_$value",
          originalFieldName: "focusOnShowHint",
        }
    ),
      mojo.internal.StructField(
        'focus_on_show_hint_$value', 12,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0,
        {
          isPrimary: false,
          originalFieldName: "focusOnShowHint",
        }
    ),
      mojo.internal.StructField(
        'timeout', 72,
        0,
        mojoBase_mojom_TimeDeltaSpec.$,
        null,
        true /* nullable */,
        0,
    ),
    ],
    [[0, 88],]);





export interface HelpBubbleHandlerFactory_CreateHelpBubbleHandler_ParamsMojoType {
  client: HelpBubbleClientRemote;
  handler: HelpBubbleHandlerPendingReceiver;
}


export type HelpBubbleHandlerFactory_CreateHelpBubbleHandler_Params = HelpBubbleHandlerFactory_CreateHelpBubbleHandler_ParamsMojoType;
mojo.internal.Struct(
    HelpBubbleHandlerFactory_CreateHelpBubbleHandler_ParamsSpec.$,
    'HelpBubbleHandlerFactory_CreateHelpBubbleHandler_Params',
    [
      mojo.internal.StructField(
        'client', 0,
        0,
        mojo.internal.InterfaceProxy(HelpBubbleClientRemote),
        null,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'handler', 8,
        0,
        mojo.internal.InterfaceRequest(HelpBubbleHandlerPendingReceiver),
        null,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 24],]);





export interface HelpBubbleHandler_HelpBubbleAnchorVisibilityChanged_ParamsMojoType {
  nativeIdentifier: string;
  visible: boolean;
  rect: gfx_mojom_RectF;
}


export type HelpBubbleHandler_HelpBubbleAnchorVisibilityChanged_Params = HelpBubbleHandler_HelpBubbleAnchorVisibilityChanged_ParamsMojoType;
mojo.internal.Struct(
    HelpBubbleHandler_HelpBubbleAnchorVisibilityChanged_ParamsSpec.$,
    'HelpBubbleHandler_HelpBubbleAnchorVisibilityChanged_Params',
    [
      mojo.internal.StructField(
        'nativeIdentifier', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'visible', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'rect', 16,
        0,
        gfx_mojom_RectFSpec.$,
        null,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 32],]);





export interface HelpBubbleHandler_HelpBubbleAnchorActivated_ParamsMojoType {
  nativeIdentifier: string;
}


export type HelpBubbleHandler_HelpBubbleAnchorActivated_Params = HelpBubbleHandler_HelpBubbleAnchorActivated_ParamsMojoType;
mojo.internal.Struct(
    HelpBubbleHandler_HelpBubbleAnchorActivated_ParamsSpec.$,
    'HelpBubbleHandler_HelpBubbleAnchorActivated_Params',
    [
      mojo.internal.StructField(
        'nativeIdentifier', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 16],]);





export interface HelpBubbleHandler_HelpBubbleAnchorCustomEvent_ParamsMojoType {
  nativeIdentifier: string;
  customEventName: string;
}


export type HelpBubbleHandler_HelpBubbleAnchorCustomEvent_Params = HelpBubbleHandler_HelpBubbleAnchorCustomEvent_ParamsMojoType;
mojo.internal.Struct(
    HelpBubbleHandler_HelpBubbleAnchorCustomEvent_ParamsSpec.$,
    'HelpBubbleHandler_HelpBubbleAnchorCustomEvent_Params',
    [
      mojo.internal.StructField(
        'nativeIdentifier', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'customEventName', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 24],]);





export interface HelpBubbleHandler_HelpBubbleButtonPressed_ParamsMojoType {
  nativeIdentifier: string;
  buttonIndex: number;
}


export type HelpBubbleHandler_HelpBubbleButtonPressed_Params = HelpBubbleHandler_HelpBubbleButtonPressed_ParamsMojoType;
mojo.internal.Struct(
    HelpBubbleHandler_HelpBubbleButtonPressed_ParamsSpec.$,
    'HelpBubbleHandler_HelpBubbleButtonPressed_Params',
    [
      mojo.internal.StructField(
        'nativeIdentifier', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'buttonIndex', 8,
        0,
        mojo.internal.Uint8,
        0,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 24],]);





export interface HelpBubbleHandler_HelpBubbleClosed_ParamsMojoType {
  nativeIdentifier: string;
  reason: HelpBubbleClosedReason;
}


export type HelpBubbleHandler_HelpBubbleClosed_Params = HelpBubbleHandler_HelpBubbleClosed_ParamsMojoType;
mojo.internal.Struct(
    HelpBubbleHandler_HelpBubbleClosed_ParamsSpec.$,
    'HelpBubbleHandler_HelpBubbleClosed_Params',
    [
      mojo.internal.StructField(
        'nativeIdentifier', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'reason', 8,
        0,
        HelpBubbleClosedReasonSpec.$,
        0,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 24],]);





export interface HelpBubbleClient_ShowHelpBubble_ParamsMojoType {
  params: HelpBubbleParams;
}


export type HelpBubbleClient_ShowHelpBubble_Params = HelpBubbleClient_ShowHelpBubble_ParamsMojoType;
mojo.internal.Struct(
    HelpBubbleClient_ShowHelpBubble_ParamsSpec.$,
    'HelpBubbleClient_ShowHelpBubble_Params',
    [
      mojo.internal.StructField(
        'params', 0,
        0,
        HelpBubbleParamsSpec.$,
        null,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 16],]);





export interface HelpBubbleClient_ToggleFocusForAccessibility_ParamsMojoType {
  nativeIdentifier: string;
}


export type HelpBubbleClient_ToggleFocusForAccessibility_Params = HelpBubbleClient_ToggleFocusForAccessibility_ParamsMojoType;
mojo.internal.Struct(
    HelpBubbleClient_ToggleFocusForAccessibility_ParamsSpec.$,
    'HelpBubbleClient_ToggleFocusForAccessibility_Params',
    [
      mojo.internal.StructField(
        'nativeIdentifier', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 16],]);





export interface HelpBubbleClient_HideHelpBubble_ParamsMojoType {
  nativeIdentifier: string;
}


export type HelpBubbleClient_HideHelpBubble_Params = HelpBubbleClient_HideHelpBubble_ParamsMojoType;
mojo.internal.Struct(
    HelpBubbleClient_HideHelpBubble_ParamsSpec.$,
    'HelpBubbleClient_HideHelpBubble_Params',
    [
      mojo.internal.StructField(
        'nativeIdentifier', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 16],]);





export interface HelpBubbleClient_ExternalHelpBubbleUpdated_ParamsMojoType {
  nativeIdentifier: string;
  shown: boolean;
}


export type HelpBubbleClient_ExternalHelpBubbleUpdated_Params = HelpBubbleClient_ExternalHelpBubbleUpdated_ParamsMojoType;
mojo.internal.Struct(
    HelpBubbleClient_ExternalHelpBubbleUpdated_ParamsSpec.$,
    'HelpBubbleClient_ExternalHelpBubbleUpdated_Params',
    [
      mojo.internal.StructField(
        'nativeIdentifier', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0,
    ),
      mojo.internal.StructField(
        'shown', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0,
    ),
    ],
    [[0, 24],]);



