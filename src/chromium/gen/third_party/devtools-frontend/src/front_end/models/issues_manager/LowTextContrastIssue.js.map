{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/issues_manager/LowTextContrastIssue.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport {Issue, IssueCategory, IssueKind} from './Issue.js';\nimport type {MarkdownIssueDescription} from './MarkdownIssueDescription.js';\n\nconst UIStrings = {\n  /**\n   *@description Link title for the Low Text Contrast issue in the Issues panel\n   */\n  colorAndContrastAccessibility: 'Color and contrast accessibility',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/issues_manager/LowTextContrastIssue.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class LowTextContrastIssue extends Issue {\n  #issueDetails: Protocol.Audits.LowTextContrastIssueDetails;\n\n  constructor(issueDetails: Protocol.Audits.LowTextContrastIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel) {\n    super('LowTextContrastIssue', issuesModel);\n    this.#issueDetails = issueDetails;\n  }\n\n  primaryKey(): string {\n    // We intend to keep only one issue per element so other issues for the element will be discarded even\n    // if the issue content is slightly different.\n    return `${this.code()}-(${this.#issueDetails.violatingNodeId})`;\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.LOW_TEXT_CONTRAST;\n  }\n\n  details(): Protocol.Audits.LowTextContrastIssueDetails {\n    return this.#issueDetails;\n  }\n\n  getDescription(): MarkdownIssueDescription {\n    return {\n      file: 'LowTextContrast.md',\n      links: [\n        {\n          link: 'https://web.dev/color-and-contrast-accessibility/',\n          linkTitle: i18nString(UIStrings.colorAndContrastAccessibility),\n        },\n      ],\n    };\n  }\n\n  getKind(): IssueKind {\n    return IssueKind.IMPROVEMENT;\n  }\n\n  static fromInspectorIssue(issuesModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      LowTextContrastIssue[] {\n    const lowTextContrastIssueDetails = inspectorIssue.details.lowTextContrastIssueDetails;\n    if (!lowTextContrastIssueDetails) {\n      console.warn('LowTextContrast issue without details received.');\n      return [];\n    }\n    return [new LowTextContrastIssue(lowTextContrastIssueDetails, issuesModel)];\n  }\n}\n"],
  "mappings": ";AAIA,YAAY,UAAU;AAItB,SAAQ,OAAO,eAAe,iBAAgB;AAG9C,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA,EAIhB,+BAA+B;AACjC;AACA,MAAM,OAAO,KAAK,KAAK,kBAAkB,iDAAiD,SAAS;AACnG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW,IAAI;AAE7D,aAAM,6BAA6B,MAAM;AAAA,EAC9C;AAAA,EAEA,YAAY,cAA2D,aAA0C;AAC/G,UAAM,wBAAwB,WAAW;AACzC,SAAK,gBAAgB;AAAA,EACvB;AAAA,EAEA,aAAqB;AAGnB,WAAO,GAAG,KAAK,KAAK,CAAC,KAAK,KAAK,cAAc,eAAe;AAAA,EAC9D;AAAA,EAEA,cAA6B;AAC3B,WAAO,cAAc;AAAA,EACvB;AAAA,EAEA,UAAuD;AACrD,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,iBAA2C;AACzC,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,QACL;AAAA,UACE,MAAM;AAAA,UACN,WAAW,WAAW,UAAU,6BAA6B;AAAA,QAC/D;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EAEA,UAAqB;AACnB,WAAO,UAAU;AAAA,EACnB;AAAA,EAEA,OAAO,mBAAmB,aAA0C,gBACzC;AACzB,UAAM,8BAA8B,eAAe,QAAQ;AAC3D,QAAI,CAAC,6BAA6B;AAChC,cAAQ,KAAK,iDAAiD;AAC9D,aAAO,CAAC;AAAA,IACV;AACA,WAAO,CAAC,IAAI,qBAAqB,6BAA6B,WAAW,CAAC;AAAA,EAC5E;AACF;",
  "names": []
}
