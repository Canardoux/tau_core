{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/issues_manager/GenericIssue.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {Issue, IssueCategory, IssueKind} from './Issue.js';\n\nimport {\n  resolveLazyDescription,\n  type LazyMarkdownIssueDescription,\n  type MarkdownIssueDescription,\n} from './MarkdownIssueDescription.js';\n\nconst UIStrings = {\n  /**\n   *@description title for autofill documentation page\n   */\n  howDoesAutofillWorkPageTitle: 'How does autofill work?',\n\n  /**\n   *@description title for label form elements usage example page\n   */\n  labelFormlementsPageTitle: 'The label elements',\n\n  /**\n   *@description title for input form elements usage example page\n   */\n  inputFormElementPageTitle: 'The form input element',\n\n  /**\n   *@description title for autocomplete attribute documentation page.\n   */\n  autocompleteAttributePageTitle: 'HTML attribute: autocomplete',\n\n  /**\n   * @description title for CORB explainer.\n   */\n  corbExplainerPageTitle: 'CORB explainer',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('models/issues_manager/GenericIssue.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport class GenericIssue extends Issue {\n  #issueDetails: Protocol.Audits.GenericIssueDetails;\n\n  constructor(\n      issueDetails: Protocol.Audits.GenericIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel,\n      issueId?: Protocol.Audits.IssueId) {\n    const issueCode = [\n      Protocol.Audits.InspectorIssueCode.GenericIssue,\n      issueDetails.errorType,\n    ].join('::');\n    super(issueCode, issuesModel, issueId);\n    this.#issueDetails = issueDetails;\n  }\n\n  override requests(): Iterable<Protocol.Audits.AffectedRequest> {\n    if (this.#issueDetails.request) {\n      return [this.#issueDetails.request];\n    }\n    return [];\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.GENERIC;\n  }\n\n  primaryKey(): string {\n    const requestId = this.#issueDetails.request ? this.#issueDetails.request.requestId : 'no-request';\n    return `${this.code()}-(${this.#issueDetails.frameId})-(${this.#issueDetails.violatingNodeId})-(${\n        this.#issueDetails.violatingNodeAttribute})-(${requestId})`;\n  }\n\n  getDescription(): MarkdownIssueDescription|null {\n    const description = issueDescriptions.get(this.#issueDetails.errorType);\n    if (!description) {\n      return null;\n    }\n    return resolveLazyDescription(description);\n  }\n\n  details(): Protocol.Audits.GenericIssueDetails {\n    return this.#issueDetails;\n  }\n\n  getKind(): IssueKind {\n    return issueTypes.get(this.#issueDetails.errorType) || IssueKind.IMPROVEMENT;\n  }\n\n  static fromInspectorIssue(issuesModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      GenericIssue[] {\n    const genericDetails = inspectorIssue.details.genericIssueDetails;\n    if (!genericDetails) {\n      console.warn('Generic issue without details received.');\n      return [];\n    }\n    return [new GenericIssue(genericDetails, issuesModel, inspectorIssue.issueId)];\n  }\n}\n\nexport const genericFormLabelForNameError = {\n  file: 'genericFormLabelForNameError.md',\n  links: [{\n    link: 'https://html.spec.whatwg.org/multipage/forms.html#attr-label-for',\n    // Since the link points to a page with the same title, the 'HTML Standard'\n    // string doesn't need to be translated.\n    linkTitle: i18n.i18n.lockedLazyString('HTML Standard'),\n  }],\n};\n\nexport const genericFormInputWithNoLabelError = {\n  file: 'genericFormInputWithNoLabelError.md',\n  links: [],\n};\n\nexport const genericFormAutocompleteAttributeEmptyError = {\n  file: 'genericFormAutocompleteAttributeEmptyError.md',\n  links: [],\n};\n\nexport const genericFormDuplicateIdForInputError = {\n  file: 'genericFormDuplicateIdForInputError.md',\n  links: [{\n    link: 'https://web.dev/learn/forms/autofill/#how-does-autofill-work',\n    linkTitle: i18nLazyString(UIStrings.howDoesAutofillWorkPageTitle),\n  }],\n};\n\nexport const genericFormAriaLabelledByToNonExistingId = {\n  file: 'genericFormAriaLabelledByToNonExistingId.md',\n  links: [{\n    link: 'https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label',\n    linkTitle: i18nLazyString(UIStrings.labelFormlementsPageTitle),\n  }],\n};\n\nexport const genericFormEmptyIdAndNameAttributesForInputError = {\n  file: 'genericFormEmptyIdAndNameAttributesForInputError.md',\n  links: [{\n    link: 'https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input',\n    linkTitle: i18nLazyString(UIStrings.inputFormElementPageTitle),\n  }],\n};\n\nexport const genericFormInputAssignedAutocompleteValueToIdOrNameAttributeError = {\n  file: 'genericFormInputAssignedAutocompleteValueToIdOrNameAttributeError.md',\n  links: [{\n    link: 'https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete#values',\n    linkTitle: i18nLazyString(UIStrings.autocompleteAttributePageTitle),\n  }],\n};\n\nexport const genericFormInputHasWrongButWellIntendedAutocompleteValue = {\n  file: 'genericFormInputHasWrongButWellIntendedAutocompleteValueError.md',\n  links: [{\n    link: 'https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete#values',\n    linkTitle: i18nLazyString(UIStrings.autocompleteAttributePageTitle),\n  }],\n};\n\nexport const genericFormLabelForMatchesNonExistingIdError = {\n  file: 'genericFormLabelForMatchesNonExistingIdError.md',\n  links: [{\n    link: 'https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label',\n    linkTitle: i18nLazyString(UIStrings.labelFormlementsPageTitle),\n  }],\n};\n\nexport const genericFormLabelHasNeitherForNorNestedInput = {\n  file: 'genericFormLabelHasNeitherForNorNestedInput.md',\n  links: [{\n    link: 'https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label',\n    linkTitle: i18nLazyString(UIStrings.labelFormlementsPageTitle),\n  }],\n};\n\nexport const genericResponseWasBlockedbyORB = {\n  file: 'genericResponseWasBlockedByORB.md',\n  links: [{\n    link: 'https://www.chromium.org/Home/chromium-security/corb-for-developers/',\n    linkTitle: i18nLazyString(UIStrings.corbExplainerPageTitle),\n  }],\n};\n\nconst issueDescriptions: Map<Protocol.Audits.GenericIssueErrorType, LazyMarkdownIssueDescription> = new Map([\n  [Protocol.Audits.GenericIssueErrorType.FormLabelForNameError, genericFormLabelForNameError],\n  [Protocol.Audits.GenericIssueErrorType.FormInputWithNoLabelError, genericFormInputWithNoLabelError],\n  [\n    Protocol.Audits.GenericIssueErrorType.FormAutocompleteAttributeEmptyError,\n    genericFormAutocompleteAttributeEmptyError,\n  ],\n  [Protocol.Audits.GenericIssueErrorType.FormDuplicateIdForInputError, genericFormDuplicateIdForInputError],\n  [Protocol.Audits.GenericIssueErrorType.FormAriaLabelledByToNonExistingId, genericFormAriaLabelledByToNonExistingId],\n  [\n    Protocol.Audits.GenericIssueErrorType.FormEmptyIdAndNameAttributesForInputError,\n    genericFormEmptyIdAndNameAttributesForInputError,\n  ],\n  [\n    Protocol.Audits.GenericIssueErrorType.FormInputAssignedAutocompleteValueToIdOrNameAttributeError,\n    genericFormInputAssignedAutocompleteValueToIdOrNameAttributeError,\n  ],\n  [\n    Protocol.Audits.GenericIssueErrorType.FormLabelForMatchesNonExistingIdError,\n    genericFormLabelForMatchesNonExistingIdError,\n  ],\n  [\n    Protocol.Audits.GenericIssueErrorType.FormLabelHasNeitherForNorNestedInput,\n    genericFormLabelHasNeitherForNorNestedInput,\n  ],\n  [\n    Protocol.Audits.GenericIssueErrorType.FormInputHasWrongButWellIntendedAutocompleteValueError,\n    genericFormInputHasWrongButWellIntendedAutocompleteValue,\n  ],\n  [\n    Protocol.Audits.GenericIssueErrorType.ResponseWasBlockedByORB,\n    genericResponseWasBlockedbyORB,\n  ],\n]);\n\nconst issueTypes: Map<Protocol.Audits.GenericIssueErrorType, IssueKind> = new Map([\n  [Protocol.Audits.GenericIssueErrorType.FormLabelForNameError, IssueKind.PAGE_ERROR],\n  [Protocol.Audits.GenericIssueErrorType.FormInputWithNoLabelError, IssueKind.IMPROVEMENT],\n  [Protocol.Audits.GenericIssueErrorType.FormAutocompleteAttributeEmptyError, IssueKind.PAGE_ERROR],\n  [Protocol.Audits.GenericIssueErrorType.FormDuplicateIdForInputError, IssueKind.PAGE_ERROR],\n  [Protocol.Audits.GenericIssueErrorType.FormAriaLabelledByToNonExistingId, IssueKind.IMPROVEMENT],\n  [Protocol.Audits.GenericIssueErrorType.FormEmptyIdAndNameAttributesForInputError, IssueKind.IMPROVEMENT],\n  [\n    Protocol.Audits.GenericIssueErrorType.FormInputAssignedAutocompleteValueToIdOrNameAttributeError,\n    IssueKind.IMPROVEMENT,\n  ],\n  [Protocol.Audits.GenericIssueErrorType.FormLabelForMatchesNonExistingIdError, IssueKind.PAGE_ERROR],\n  [Protocol.Audits.GenericIssueErrorType.FormLabelHasNeitherForNorNestedInput, IssueKind.IMPROVEMENT],\n  [Protocol.Audits.GenericIssueErrorType.FormInputHasWrongButWellIntendedAutocompleteValueError, IssueKind.IMPROVEMENT],\n\n]);\n"],
  "mappings": "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",
  "names": []
}
