{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/extensions/ExtensionPanel.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as _ProtocolClient from '../../core/protocol_client/protocol_client.js';  // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as ExtensionAPI from './ExtensionAPI.js';\nimport type {ExtensionServer} from './ExtensionServer.js';\nimport {ExtensionNotifierView, ExtensionView} from './ExtensionView.js';\n\nexport class ExtensionPanel extends UI.Panel.Panel implements UI.SearchableView.Searchable {\n  private readonly server: ExtensionServer;\n  private readonly id: string;\n  private readonly panelToolbar: UI.Toolbar.Toolbar;\n  private readonly searchableViewInternal: UI.SearchableView.SearchableView;\n\n  constructor(server: ExtensionServer, panelName: string, id: string, pageURL: string) {\n    super(panelName);\n    this.server = server;\n    this.id = id;\n    this.setHideOnDetach();\n    this.panelToolbar = new UI.Toolbar.Toolbar('hidden', this.element);\n\n    this.searchableViewInternal = new UI.SearchableView.SearchableView(this, null);\n    this.searchableViewInternal.show(this.element);\n\n    const extensionView = new ExtensionView(server, this.id, pageURL, 'extension');\n    extensionView.show(this.searchableViewInternal.element);\n  }\n\n  addToolbarItem(item: UI.Toolbar.ToolbarItem): void {\n    this.panelToolbar.element.classList.remove('hidden');\n    this.panelToolbar.appendToolbarItem(item);\n  }\n\n  onSearchCanceled(): void {\n    this.server.notifySearchAction(this.id, ExtensionAPI.PrivateAPI.Panels.SearchAction.CancelSearch);\n    this.searchableViewInternal.updateSearchMatchesCount(0);\n  }\n\n  override searchableView(): UI.SearchableView.SearchableView {\n    return this.searchableViewInternal;\n  }\n\n  performSearch(searchConfig: UI.SearchableView.SearchConfig, _shouldJump: boolean, _jumpBackwards?: boolean): void {\n    const query = searchConfig.query;\n    this.server.notifySearchAction(this.id, ExtensionAPI.PrivateAPI.Panels.SearchAction.PerformSearch, query);\n  }\n\n  jumpToNextSearchResult(): void {\n    this.server.notifySearchAction(this.id, ExtensionAPI.PrivateAPI.Panels.SearchAction.NextSearchResult);\n  }\n\n  jumpToPreviousSearchResult(): void {\n    this.server.notifySearchAction(this.id, ExtensionAPI.PrivateAPI.Panels.SearchAction.PreviousSearchResult);\n  }\n\n  supportsCaseSensitiveSearch(): boolean {\n    return false;\n  }\n\n  supportsRegexSearch(): boolean {\n    return false;\n  }\n}\n\nexport class ExtensionButton {\n  private readonly id: string;\n  private readonly toolbarButtonInternal: UI.Toolbar.ToolbarButton;\n  constructor(server: ExtensionServer, id: string, iconURL: string, tooltip?: string, disabled?: boolean) {\n    this.id = id;\n\n    this.toolbarButtonInternal = new UI.Toolbar.ToolbarButton('', '');\n    this.toolbarButtonInternal.addEventListener(\n        UI.Toolbar.ToolbarButton.Events.CLICK, server.notifyButtonClicked.bind(server, this.id));\n    this.update(iconURL, tooltip, disabled);\n  }\n\n  update(iconURL?: string, tooltip?: string, disabled?: boolean): void {\n    if (typeof iconURL === 'string') {\n      this.toolbarButtonInternal.setBackgroundImage(iconURL);\n    }\n    if (typeof tooltip === 'string') {\n      this.toolbarButtonInternal.setTitle(tooltip);\n    }\n    if (typeof disabled === 'boolean') {\n      this.toolbarButtonInternal.setEnabled(!disabled);\n    }\n  }\n\n  toolbarButton(): UI.Toolbar.ToolbarButton {\n    return this.toolbarButtonInternal;\n  }\n}\n\nexport class ExtensionSidebarPane extends UI.View.SimpleView {\n  private readonly panelNameInternal: string;\n  private server: ExtensionServer;\n  private idInternal: string;\n  private extensionView?: ExtensionView;\n  private objectPropertiesView?: ExtensionNotifierView;\n  constructor(server: ExtensionServer, panelName: string, title: Platform.UIString.LocalizedString, id: string) {\n    super(title);\n    this.element.classList.add('fill');\n    this.panelNameInternal = panelName;\n    this.server = server;\n    this.idInternal = id;\n  }\n\n  id(): string {\n    return this.idInternal;\n  }\n\n  panelName(): string {\n    return this.panelNameInternal;\n  }\n\n  setObject(object: Object, title: string|undefined, callback: (arg0?: (string|null)|undefined) => void): void {\n    this.createObjectPropertiesView();\n    this.setObjectInternal(SDK.RemoteObject.RemoteObject.fromLocalObject(object), title, callback);\n  }\n\n  setExpression(\n      expression: string, title: string|undefined, evaluateOptions: Object|undefined, securityOrigin: string,\n      callback: (arg0?: (string|null)|undefined) => void): void {\n    this.createObjectPropertiesView();\n    this.server.evaluate(\n        expression, true, false, evaluateOptions, securityOrigin, this.onEvaluate.bind(this, title, callback));\n  }\n\n  setPage(url: Platform.DevToolsPath.UrlString): void {\n    if (this.objectPropertiesView) {\n      this.objectPropertiesView.detach();\n      delete this.objectPropertiesView;\n    }\n    if (this.extensionView) {\n      this.extensionView.detach(true);\n    }\n\n    this.extensionView = new ExtensionView(this.server, this.idInternal, url, 'extension fill');\n    this.extensionView.show(this.element);\n\n    if (!this.element.style.height) {\n      this.setHeight('150px');\n    }\n  }\n\n  setHeight(height: string): void {\n    this.element.style.height = height;\n  }\n\n  private onEvaluate(\n      title: string|undefined, callback: (arg0?: (string|null)|undefined) => void, error: string|null,\n      result: SDK.RemoteObject.RemoteObject|null, _wasThrown?: boolean): void {\n    if (error) {\n      callback(error.toString());\n    } else if (!result) {\n      callback();\n    } else {\n      this.setObjectInternal(result, title, callback);\n    }\n  }\n\n  private createObjectPropertiesView(): void {\n    if (this.objectPropertiesView) {\n      return;\n    }\n    if (this.extensionView) {\n      this.extensionView.detach(true);\n      delete this.extensionView;\n    }\n    this.objectPropertiesView = new ExtensionNotifierView(this.server, this.idInternal);\n    this.objectPropertiesView.show(this.element);\n  }\n\n  private setObjectInternal(\n      object: SDK.RemoteObject.RemoteObject, title: string|undefined,\n      callback: (arg0?: (string|null)|undefined) => void): void {\n    const objectPropertiesView = this.objectPropertiesView;\n    // This may only happen if setPage() was called while we were evaluating the expression.\n    if (!objectPropertiesView) {\n      callback('operation cancelled');\n      return;\n    }\n    objectPropertiesView.element.removeChildren();\n    void UI.UIUtils.Renderer.render(object, {title, editable: false}).then(result => {\n      if (!result) {\n        callback();\n        return;\n      }\n      const firstChild = result.tree && result.tree.firstChild();\n      if (firstChild) {\n        firstChild.expand();\n      }\n      objectPropertiesView.element.appendChild(result.node);\n      callback();\n    });\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
