{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/issues_manager/ContrastCheckTrigger.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\n\nlet contrastCheckTriggerInstance: ContrastCheckTrigger|null = null;\n\nexport class ContrastCheckTrigger {\n  #pageLoadListeners: WeakMap<SDK.ResourceTreeModel.ResourceTreeModel, Common.EventTarget.EventDescriptor> =\n      new WeakMap();\n  #frameAddedListeners: WeakMap<SDK.ResourceTreeModel.ResourceTreeModel, Common.EventTarget.EventDescriptor> =\n      new WeakMap();\n\n  constructor() {\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.ResourceTreeModel.ResourceTreeModel, this);\n  }\n\n  static instance({forceNew}: {forceNew: boolean} = {forceNew: false}): ContrastCheckTrigger {\n    if (!contrastCheckTriggerInstance || forceNew) {\n      contrastCheckTriggerInstance = new ContrastCheckTrigger();\n    }\n\n    return contrastCheckTriggerInstance;\n  }\n\n  async modelAdded(resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel): Promise<void> {\n    this.#pageLoadListeners.set(\n        resourceTreeModel,\n        resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.Load, this.#pageLoaded, this));\n    this.#frameAddedListeners.set(\n        resourceTreeModel,\n        resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.FrameAdded, this.#frameAdded, this));\n  }\n\n  modelRemoved(resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel): void {\n    const pageLoadListener = this.#pageLoadListeners.get(resourceTreeModel);\n    if (pageLoadListener) {\n      Common.EventTarget.removeEventListeners([pageLoadListener]);\n    }\n    const frameAddedListeners = this.#frameAddedListeners.get(resourceTreeModel);\n    if (frameAddedListeners) {\n      Common.EventTarget.removeEventListeners([frameAddedListeners]);\n    }\n  }\n\n  #checkContrast(resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel): void {\n    if (!Root.Runtime.experiments.isEnabled('contrast-issues')) {\n      return;\n    }\n    void resourceTreeModel.target().auditsAgent().invoke_checkContrast({});\n  }\n\n  #pageLoaded(event: Common.EventTarget\n                  .EventTargetEvent<{resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel, loadTime: number}>):\n      void {\n    const {resourceTreeModel} = event.data;\n    this.#checkContrast(resourceTreeModel);\n  }\n\n  async #frameAdded(event: Common.EventTarget.EventTargetEvent<SDK.ResourceTreeModel.ResourceTreeFrame>):\n      Promise<void> {\n    if (!Root.Runtime.experiments.isEnabled('contrast-issues')) {\n      return;\n    }\n    const frame = event.data;\n    if (!frame.isMainFrame()) {\n      return;\n    }\n    // If the target document finished loading, check the contrast immediately.\n    // Otherwise, it should be triggered when the page load event fires.\n    const response = await frame.resourceTreeModel().target().runtimeAgent().invoke_evaluate(\n        {expression: 'document.readyState', returnByValue: true});\n    if (response.result && response.result.value === 'complete') {\n      this.#checkContrast(frame.resourceTreeModel());\n    }\n  }\n}\n"],
  "mappings": ";AAIA,YAAY,YAAY;AACxB,YAAY,UAAU;AACtB,YAAY,SAAS;AAErB,IAAI,+BAA0D;AAEvD,aAAM,qBAAqB;AAAA,EAChC,qBACI,oBAAI,QAAQ;AAAA,EAChB,uBACI,oBAAI,QAAQ;AAAA,EAEhB,cAAc;AACZ,QAAI,cAAc,cAAc,SAAS,EAAE,cAAc,IAAI,kBAAkB,mBAAmB,IAAI;AAAA,EACxG;AAAA,EAEA,OAAO,SAAS,EAAC,SAAQ,IAAyB,EAAC,UAAU,MAAK,GAAyB;AACzF,QAAI,CAAC,gCAAgC,UAAU;AAC7C,qCAA+B,IAAI,qBAAqB;AAAA,IAC1D;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,WAAW,mBAA2E;AAC1F,SAAK,mBAAmB;AAAA,MACpB;AAAA,MACA,kBAAkB,iBAAiB,IAAI,kBAAkB,OAAO,MAAM,KAAK,aAAa,IAAI;AAAA,IAAC;AACjG,SAAK,qBAAqB;AAAA,MACtB;AAAA,MACA,kBAAkB,iBAAiB,IAAI,kBAAkB,OAAO,YAAY,KAAK,aAAa,IAAI;AAAA,IAAC;AAAA,EACzG;AAAA,EAEA,aAAa,mBAAkE;AAC7E,UAAM,mBAAmB,KAAK,mBAAmB,IAAI,iBAAiB;AACtE,QAAI,kBAAkB;AACpB,aAAO,YAAY,qBAAqB,CAAC,gBAAgB,CAAC;AAAA,IAC5D;AACA,UAAM,sBAAsB,KAAK,qBAAqB,IAAI,iBAAiB;AAC3E,QAAI,qBAAqB;AACvB,aAAO,YAAY,qBAAqB,CAAC,mBAAmB,CAAC;AAAA,IAC/D;AAAA,EACF;AAAA,EAEA,eAAe,mBAAkE;AAC/E,QAAI,CAAC,KAAK,QAAQ,YAAY,UAAU,iBAAiB,GAAG;AAC1D;AAAA,IACF;AACA,SAAK,kBAAkB,OAAO,EAAE,YAAY,EAAE,qBAAqB,CAAC,CAAC;AAAA,EACvE;AAAA,EAEA,YAAY,OAEH;AACP,UAAM,EAAC,kBAAiB,IAAI,MAAM;AAClC,SAAK,eAAe,iBAAiB;AAAA,EACvC;AAAA,EAEA,MAAM,YAAY,OACA;AAChB,QAAI,CAAC,KAAK,QAAQ,YAAY,UAAU,iBAAiB,GAAG;AAC1D;AAAA,IACF;AACA,UAAM,QAAQ,MAAM;AACpB,QAAI,CAAC,MAAM,YAAY,GAAG;AACxB;AAAA,IACF;AAGA,UAAM,WAAW,MAAM,MAAM,kBAAkB,EAAE,OAAO,EAAE,aAAa,EAAE;AAAA,MACrE,EAAC,YAAY,uBAAuB,eAAe,KAAI;AAAA,IAAC;AAC5D,QAAI,SAAS,UAAU,SAAS,OAAO,UAAU,YAAY;AAC3D,WAAK,eAAe,MAAM,kBAAkB,CAAC;AAAA,IAC/C;AAAA,EACF;AACF;",
  "names": []
}
