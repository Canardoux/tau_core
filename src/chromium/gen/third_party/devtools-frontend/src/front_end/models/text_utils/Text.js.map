{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/text_utils/Text.ts"],
  "sourcesContent": ["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\n\nimport {TextCursor} from './TextCursor.js';\nimport {SourceRange, TextRange} from './TextRange.js';\n\nexport class Text {\n  readonly #value: string;\n  #lineEndings?: number[];\n\n  constructor(value: string) {\n    this.#value = value;\n  }\n\n  lineEndings(): number[] {\n    if (!this.#lineEndings) {\n      this.#lineEndings = Platform.StringUtilities.findLineEndingIndexes(this.#value);\n    }\n    return this.#lineEndings;\n  }\n\n  value(): string {\n    return this.#value;\n  }\n\n  lineCount(): number {\n    const lineEndings = this.lineEndings();\n    return lineEndings.length;\n  }\n\n  offsetFromPosition(lineNumber: number, columnNumber: number): number {\n    return (lineNumber ? this.lineEndings()[lineNumber - 1] + 1 : 0) + columnNumber;\n  }\n\n  positionFromOffset(offset: number): Position {\n    const lineEndings = this.lineEndings();\n    const lineNumber =\n        Platform.ArrayUtilities.lowerBound(lineEndings, offset, Platform.ArrayUtilities.DEFAULT_COMPARATOR);\n    return {lineNumber, columnNumber: offset - (lineNumber && (lineEndings[lineNumber - 1] + 1))};\n  }\n\n  lineAt(lineNumber: number): string {\n    const lineEndings = this.lineEndings();\n    const lineStart = lineNumber > 0 ? lineEndings[lineNumber - 1] + 1 : 0;\n    const lineEnd = lineEndings[lineNumber];\n    let lineContent = this.#value.substring(lineStart, lineEnd);\n    if (lineContent.length > 0 && lineContent.charAt(lineContent.length - 1) === '\\r') {\n      lineContent = lineContent.substring(0, lineContent.length - 1);\n    }\n    return lineContent;\n  }\n\n  toSourceRange(range: TextRange): SourceRange {\n    const start = this.offsetFromPosition(range.startLine, range.startColumn);\n    const end = this.offsetFromPosition(range.endLine, range.endColumn);\n    return new SourceRange(start, end - start);\n  }\n\n  toTextRange(sourceRange: SourceRange): TextRange {\n    const cursor = new TextCursor(this.lineEndings());\n    const result = TextRange.createFromLocation(0, 0);\n\n    cursor.resetTo(sourceRange.offset);\n    result.startLine = cursor.lineNumber();\n    result.startColumn = cursor.columnNumber();\n\n    cursor.advance(sourceRange.offset + sourceRange.length);\n    result.endLine = cursor.lineNumber();\n    result.endColumn = cursor.columnNumber();\n    return result;\n  }\n\n  replaceRange(range: TextRange, replacement: string): string {\n    const sourceRange = this.toSourceRange(range);\n    return this.#value.substring(0, sourceRange.offset) + replacement +\n        this.#value.substring(sourceRange.offset + sourceRange.length);\n  }\n\n  extract(range: TextRange): string {\n    const sourceRange = this.toSourceRange(range);\n    return this.#value.substr(sourceRange.offset, sourceRange.length);\n  }\n}\nexport interface Position {\n  lineNumber: number;\n  columnNumber: number;\n}\n"],
  "mappings": ";AAIA,YAAY,cAAc;AAE1B,SAAQ,kBAAiB;AACzB,SAAQ,aAAa,iBAAgB;AAE9B,aAAM,KAAK;AAAA,EACP;AAAA,EACT;AAAA,EAEA,YAAY,OAAe;AACzB,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,cAAwB;AACtB,QAAI,CAAC,KAAK,cAAc;AACtB,WAAK,eAAe,SAAS,gBAAgB,sBAAsB,KAAK,MAAM;AAAA,IAChF;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,QAAgB;AACd,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,YAAoB;AAClB,UAAM,cAAc,KAAK,YAAY;AACrC,WAAO,YAAY;AAAA,EACrB;AAAA,EAEA,mBAAmB,YAAoB,cAA8B;AACnE,YAAQ,aAAa,KAAK,YAAY,EAAE,aAAa,CAAC,IAAI,IAAI,KAAK;AAAA,EACrE;AAAA,EAEA,mBAAmB,QAA0B;AAC3C,UAAM,cAAc,KAAK,YAAY;AACrC,UAAM,aACF,SAAS,eAAe,WAAW,aAAa,QAAQ,SAAS,eAAe,kBAAkB;AACtG,WAAO,EAAC,YAAY,cAAc,UAAU,cAAe,YAAY,aAAa,CAAC,IAAI,GAAG;AAAA,EAC9F;AAAA,EAEA,OAAO,YAA4B;AACjC,UAAM,cAAc,KAAK,YAAY;AACrC,UAAM,YAAY,aAAa,IAAI,YAAY,aAAa,CAAC,IAAI,IAAI;AACrE,UAAM,UAAU,YAAY,UAAU;AACtC,QAAI,cAAc,KAAK,OAAO,UAAU,WAAW,OAAO;AAC1D,QAAI,YAAY,SAAS,KAAK,YAAY,OAAO,YAAY,SAAS,CAAC,MAAM,MAAM;AACjF,oBAAc,YAAY,UAAU,GAAG,YAAY,SAAS,CAAC;AAAA,IAC/D;AACA,WAAO;AAAA,EACT;AAAA,EAEA,cAAc,OAA+B;AAC3C,UAAM,QAAQ,KAAK,mBAAmB,MAAM,WAAW,MAAM,WAAW;AACxE,UAAM,MAAM,KAAK,mBAAmB,MAAM,SAAS,MAAM,SAAS;AAClE,WAAO,IAAI,YAAY,OAAO,MAAM,KAAK;AAAA,EAC3C;AAAA,EAEA,YAAY,aAAqC;AAC/C,UAAM,SAAS,IAAI,WAAW,KAAK,YAAY,CAAC;AAChD,UAAM,SAAS,UAAU,mBAAmB,GAAG,CAAC;AAEhD,WAAO,QAAQ,YAAY,MAAM;AACjC,WAAO,YAAY,OAAO,WAAW;AACrC,WAAO,cAAc,OAAO,aAAa;AAEzC,WAAO,QAAQ,YAAY,SAAS,YAAY,MAAM;AACtD,WAAO,UAAU,OAAO,WAAW;AACnC,WAAO,YAAY,OAAO,aAAa;AACvC,WAAO;AAAA,EACT;AAAA,EAEA,aAAa,OAAkB,aAA6B;AAC1D,UAAM,cAAc,KAAK,cAAc,KAAK;AAC5C,WAAO,KAAK,OAAO,UAAU,GAAG,YAAY,MAAM,IAAI,cAClD,KAAK,OAAO,UAAU,YAAY,SAAS,YAAY,MAAM;AAAA,EACnE;AAAA,EAEA,QAAQ,OAA0B;AAChC,UAAM,cAAc,KAAK,cAAc,KAAK;AAC5C,WAAO,KAAK,OAAO,OAAO,YAAY,QAAQ,YAAY,MAAM;AAAA,EAClE;AACF;",
  "names": []
}
