{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/extensions/ExtensionServer.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n/* eslint-disable @typescript-eslint/naming-convention */\n\nimport type {Chrome} from '../../../extension-api/ExtensionAPI.js';\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as _ProtocolClient from '../../core/protocol_client/protocol_client.js';  // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport * as Bindings from '../bindings/bindings.js';\nimport * as HAR from '../har/har.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {PrivateAPI} from './ExtensionAPI.js';\nimport {ExtensionButton, ExtensionPanel, ExtensionSidebarPane} from './ExtensionPanel.js';\nimport {HostUrlPattern} from './HostUrlPattern.js';\nimport {LanguageExtensionEndpoint} from './LanguageExtensionEndpoint.js';\nimport {RecorderExtensionEndpoint} from './RecorderExtensionEndpoint.js';\nimport {RecorderPluginManager} from './RecorderPluginManager.js';\n\nconst extensionOrigins: WeakMap<MessagePort, Platform.DevToolsPath.UrlString> = new WeakMap();\nconst kPermittedSchemes = ['http:', 'https:', 'file:', 'data:', 'chrome-extension:', 'about:'];\n\ndeclare global {\n  interface Window {\n    DevToolsAPI?: {getInspectedTabId?(): string|undefined, getOriginsForbiddenForExtensions?(): string[]};\n  }\n}\n\nlet extensionServerInstance: ExtensionServer|null;\n\nexport class HostsPolicy {\n  static create(policy?: Host.InspectorFrontendHostAPI.ExtensionHostsPolicy): HostsPolicy|null {\n    const runtimeAllowedHosts = [];\n    const runtimeBlockedHosts = [];\n    if (policy) {\n      for (const pattern of policy.runtimeAllowedHosts) {\n        const parsedPattern = HostUrlPattern.parse(pattern);\n        if (!parsedPattern) {\n          return null;\n        }\n        runtimeAllowedHosts.push(parsedPattern);\n      }\n      for (const pattern of policy.runtimeBlockedHosts) {\n        const parsedPattern = HostUrlPattern.parse(pattern);\n        if (!parsedPattern) {\n          return null;\n        }\n        runtimeBlockedHosts.push(parsedPattern);\n      }\n    }\n    return new HostsPolicy(runtimeAllowedHosts, runtimeBlockedHosts);\n  }\n  private constructor(readonly runtimeAllowedHosts: HostUrlPattern[], readonly runtimeBlockedHosts: HostUrlPattern[]) {\n  }\n\n  isAllowedOnURL(inspectedURL?: Platform.DevToolsPath.UrlString): boolean {\n    if (!inspectedURL) {\n      // If there aren't any blocked hosts retain the old behavior and don't worry about the inspectedURL\n      return this.runtimeBlockedHosts.length === 0;\n    }\n    if (this.runtimeBlockedHosts.some(pattern => pattern.matchesUrl(inspectedURL)) &&\n        !this.runtimeAllowedHosts.some(pattern => pattern.matchesUrl(inspectedURL))) {\n      return false;\n    }\n    return true;\n  }\n}\n\nclass RegisteredExtension {\n  constructor(readonly name: string, readonly hostsPolicy: HostsPolicy, readonly allowFileAccess: boolean) {\n  }\n\n  isAllowedOnTarget(inspectedURL?: Platform.DevToolsPath.UrlString): boolean {\n    if (!inspectedURL) {\n      inspectedURL = SDK.TargetManager.TargetManager.instance().primaryPageTarget()?.inspectedURL();\n    }\n\n    if (!inspectedURL) {\n      return false;\n    }\n\n    if (!ExtensionServer.canInspectURL(inspectedURL)) {\n      return false;\n    }\n\n    if (!this.hostsPolicy.isAllowedOnURL(inspectedURL)) {\n      return false;\n    }\n\n    if (!this.allowFileAccess) {\n      let parsedURL;\n      try {\n        parsedURL = new URL(inspectedURL);\n      } catch (exception) {\n        return false;\n      }\n      return parsedURL.protocol !== 'file:';\n    }\n\n    return true;\n  }\n}\n\nexport class RevealableNetworkRequestFilter {\n  constructor(readonly filter: string|undefined) {\n  }\n}\n\nexport class ExtensionServer extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  private readonly clientObjects: Map<string, unknown>;\n  private readonly handlers:\n      Map<string, (message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort) => unknown>;\n  private readonly subscribers: Map<string, Set<MessagePort>>;\n  private readonly subscriptionStartHandlers: Map<string, () => unknown>;\n  private readonly subscriptionStopHandlers: Map<string, () => unknown>;\n  private readonly extraHeaders: Map<string, Map<string, unknown>>;\n  private requests: Map<number, TextUtils.ContentProvider.ContentProvider>;\n  private readonly requestIds: Map<TextUtils.ContentProvider.ContentProvider, number>;\n  private lastRequestId: number;\n  private registeredExtensions: Map<string, RegisteredExtension>;\n  private status: ExtensionStatus;\n  private readonly sidebarPanesInternal: ExtensionSidebarPane[];\n  private extensionsEnabled: boolean;\n  private inspectedTabId?: string;\n  private readonly extensionAPITestHook?: (server: unknown, api: unknown) => unknown;\n  private themeChangeHandlers: Map<string, MessagePort> = new Map();\n  readonly #pendingExtensions: Host.InspectorFrontendHostAPI.ExtensionDescriptor[] = [];\n\n  private constructor() {\n    super();\n    this.clientObjects = new Map();\n    this.handlers = new Map();\n    this.subscribers = new Map();\n    this.subscriptionStartHandlers = new Map();\n    this.subscriptionStopHandlers = new Map();\n    this.extraHeaders = new Map();\n    this.requests = new Map();\n    this.requestIds = new Map();\n    this.lastRequestId = 0;\n    this.registeredExtensions = new Map();\n    this.status = new ExtensionStatus();\n    this.sidebarPanesInternal = [];\n    // TODO(caseq): properly unload extensions when we disable them.\n    this.extensionsEnabled = true;\n\n    this.registerHandler(PrivateAPI.Commands.AddRequestHeaders, this.onAddRequestHeaders.bind(this));\n    this.registerHandler(PrivateAPI.Commands.CreatePanel, this.onCreatePanel.bind(this));\n    this.registerHandler(PrivateAPI.Commands.CreateSidebarPane, this.onCreateSidebarPane.bind(this));\n    this.registerHandler(PrivateAPI.Commands.CreateToolbarButton, this.onCreateToolbarButton.bind(this));\n    this.registerHandler(PrivateAPI.Commands.EvaluateOnInspectedPage, this.onEvaluateOnInspectedPage.bind(this));\n    this.registerHandler(PrivateAPI.Commands.ForwardKeyboardEvent, this.onForwardKeyboardEvent.bind(this));\n    this.registerHandler(PrivateAPI.Commands.GetHAR, this.onGetHAR.bind(this));\n    this.registerHandler(PrivateAPI.Commands.GetPageResources, this.onGetPageResources.bind(this));\n    this.registerHandler(PrivateAPI.Commands.GetRequestContent, this.onGetRequestContent.bind(this));\n    this.registerHandler(PrivateAPI.Commands.GetResourceContent, this.onGetResourceContent.bind(this));\n    this.registerHandler(PrivateAPI.Commands.Reload, this.onReload.bind(this));\n    this.registerHandler(PrivateAPI.Commands.SetOpenResourceHandler, this.onSetOpenResourceHandler.bind(this));\n    this.registerHandler(PrivateAPI.Commands.SetThemeChangeHandler, this.onSetThemeChangeHandler.bind(this));\n    this.registerHandler(PrivateAPI.Commands.SetResourceContent, this.onSetResourceContent.bind(this));\n    this.registerHandler(PrivateAPI.Commands.SetSidebarHeight, this.onSetSidebarHeight.bind(this));\n    this.registerHandler(PrivateAPI.Commands.SetSidebarContent, this.onSetSidebarContent.bind(this));\n    this.registerHandler(PrivateAPI.Commands.SetSidebarPage, this.onSetSidebarPage.bind(this));\n    this.registerHandler(PrivateAPI.Commands.ShowPanel, this.onShowPanel.bind(this));\n    this.registerHandler(PrivateAPI.Commands.Subscribe, this.onSubscribe.bind(this));\n    this.registerHandler(PrivateAPI.Commands.OpenResource, this.onOpenResource.bind(this));\n    this.registerHandler(PrivateAPI.Commands.Unsubscribe, this.onUnsubscribe.bind(this));\n    this.registerHandler(PrivateAPI.Commands.UpdateButton, this.onUpdateButton.bind(this));\n    this.registerHandler(\n        PrivateAPI.Commands.RegisterLanguageExtensionPlugin, this.registerLanguageExtensionEndpoint.bind(this));\n    this.registerHandler(PrivateAPI.Commands.GetWasmLinearMemory, this.onGetWasmLinearMemory.bind(this));\n    this.registerHandler(PrivateAPI.Commands.GetWasmGlobal, this.onGetWasmGlobal.bind(this));\n    this.registerHandler(PrivateAPI.Commands.GetWasmLocal, this.onGetWasmLocal.bind(this));\n    this.registerHandler(PrivateAPI.Commands.GetWasmOp, this.onGetWasmOp.bind(this));\n    this.registerHandler(\n        PrivateAPI.Commands.RegisterRecorderExtensionPlugin, this.registerRecorderExtensionEndpoint.bind(this));\n    this.registerHandler(PrivateAPI.Commands.ReportResourceLoad, this.onReportResourceLoad.bind(this));\n    this.registerHandler(PrivateAPI.Commands.CreateRecorderView, this.onCreateRecorderView.bind(this));\n    this.registerHandler(PrivateAPI.Commands.ShowRecorderView, this.onShowRecorderView.bind(this));\n    this.registerHandler(PrivateAPI.Commands.ShowNetworkPanel, this.onShowNetworkPanel.bind(this));\n    window.addEventListener('message', this.onWindowMessage, false);  // Only for main window.\n\n    const existingTabId =\n        window.DevToolsAPI && window.DevToolsAPI.getInspectedTabId && window.DevToolsAPI.getInspectedTabId();\n\n    if (existingTabId) {\n      this.setInspectedTabId({data: existingTabId});\n    }\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.SetInspectedTabId, this.setInspectedTabId, this);\n\n    this.initExtensions();\n\n    ThemeSupport.ThemeSupport.instance().addEventListener(ThemeSupport.ThemeChangeEvent.eventName, this.#onThemeChange);\n  }\n\n  get isEnabledForTest(): boolean {\n    return this.extensionsEnabled;\n  }\n\n  dispose(): void {\n    ThemeSupport.ThemeSupport.instance().removeEventListener(\n        ThemeSupport.ThemeChangeEvent.eventName, this.#onThemeChange);\n\n    // Set up by this.initExtensions in the constructor.\n    SDK.TargetManager.TargetManager.instance().removeEventListener(\n        SDK.TargetManager.Events.INSPECTED_URL_CHANGED, this.inspectedURLChanged, this);\n\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.removeEventListener(\n        Host.InspectorFrontendHostAPI.Events.SetInspectedTabId, this.setInspectedTabId, this);\n\n    window.removeEventListener('message', this.onWindowMessage, false);\n  }\n\n  #onThemeChange = (): void => {\n    const themeName = ThemeSupport.ThemeSupport.instance().themeName();\n    for (const port of this.themeChangeHandlers.values()) {\n      port.postMessage({command: PrivateAPI.Events.ThemeChange, themeName});\n    }\n  };\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ExtensionServer {\n    const {forceNew} = opts;\n    if (!extensionServerInstance || forceNew) {\n      extensionServerInstance?.dispose();\n      extensionServerInstance = new ExtensionServer();\n    }\n\n    return extensionServerInstance;\n  }\n\n  initializeExtensions(): void {\n    // Defer initialization until DevTools is fully loaded.\n    if (this.inspectedTabId !== null) {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.setAddExtensionCallback(this.addExtension.bind(this));\n    }\n  }\n\n  hasExtensions(): boolean {\n    return Boolean(this.registeredExtensions.size);\n  }\n\n  notifySearchAction(panelId: string, action: string, searchString?: string): void {\n    this.postNotification(PrivateAPI.Events.PanelSearch + panelId, action, searchString);\n  }\n\n  notifyViewShown(identifier: string, frameIndex?: number): void {\n    this.postNotification(PrivateAPI.Events.ViewShown + identifier, frameIndex);\n  }\n\n  notifyViewHidden(identifier: string): void {\n    this.postNotification(PrivateAPI.Events.ViewHidden + identifier);\n  }\n\n  notifyButtonClicked(identifier: string): void {\n    this.postNotification(PrivateAPI.Events.ButtonClicked + identifier);\n  }\n\n  profilingStarted(): void {\n    this.postNotification(PrivateAPI.Events.ProfilingStarted);\n  }\n\n  profilingStopped(): void {\n    this.postNotification(PrivateAPI.Events.ProfilingStopped);\n  }\n\n  private registerLanguageExtensionEndpoint(\n      message: PrivateAPI.ExtensionServerRequestMessage, _shared_port: MessagePort): Record {\n    if (message.command !== PrivateAPI.Commands.RegisterLanguageExtensionPlugin) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.RegisterLanguageExtensionPlugin}`);\n    }\n    const {pluginManager} = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance();\n    const {pluginName, port, supportedScriptTypes: {language, symbol_types}} = message;\n    const symbol_types_array =\n        (Array.isArray(symbol_types) && symbol_types.every(e => typeof e === 'string') ? symbol_types : []);\n    const extensionOrigin = this.getExtensionOrigin(_shared_port);\n    const registration = this.registeredExtensions.get(extensionOrigin);\n    if (!registration) {\n      throw new Error('Received a message from an unregistered extension');\n    }\n    const endpoint = new LanguageExtensionEndpoint(\n        registration.allowFileAccess, extensionOrigin, pluginName, {language, symbol_types: symbol_types_array}, port);\n    pluginManager.addPlugin(endpoint);\n    return this.status.OK();\n  }\n\n  private async loadWasmValue<T>(\n      expectValue: boolean, convert: (result: Protocol.Runtime.RemoteObject) => Record | T, expression: string,\n      stopId: unknown): Promise<Record|T> {\n    const {pluginManager} = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance();\n    const callFrame = pluginManager.callFrameForStopId(stopId as Bindings.DebuggerLanguagePlugins.StopId);\n    if (!callFrame) {\n      return this.status.E_BADARG('stopId', 'Unknown stop id');\n    }\n    const result = await callFrame.debuggerModel.agent.invoke_evaluateOnCallFrame({\n      callFrameId: callFrame.id,\n      expression,\n      silent: true,\n      returnByValue: !expectValue,\n      generatePreview: expectValue,\n      throwOnSideEffect: true,\n    });\n\n    if (!result.exceptionDetails && !result.getError()) {\n      return convert(result.result);\n    }\n\n    return this.status.E_FAILED('Failed');\n  }\n\n  private async onGetWasmLinearMemory(message: PrivateAPI.ExtensionServerRequestMessage): Promise<Record|number[]> {\n    if (message.command !== PrivateAPI.Commands.GetWasmLinearMemory) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.GetWasmLinearMemory}`);\n    }\n    return await this.loadWasmValue<number[]>(\n        false, result => result.value,\n        `[].slice.call(new Uint8Array(memories[0].buffer, ${Number(message.offset)}, ${Number(message.length)}))`,\n        message.stopId);\n  }\n\n  private convertWasmValue(valueClass: 'local'|'global'|'operand', index: number):\n      (obj: Protocol.Runtime.RemoteObject) => Chrome.DevTools.WasmValue | undefined | Record {\n    return obj => {\n      if (obj.type === 'undefined') {\n        return;\n      }\n      if (obj.type !== 'object' || obj.subtype !== 'wasmvalue') {\n        return this.status.E_FAILED('Bad object type');\n      }\n      const type = obj?.description;\n      const value: string = obj.preview?.properties?.find(o => o.name === 'value')?.value ?? '';\n      switch (type) {\n        case 'i32':\n        case 'f32':\n        case 'f64':\n          return {type, value: Number(value)};\n        case 'i64':\n          return {type, value: BigInt(value)};\n        case 'v128':\n          return {type, value};\n        default:\n          return {type: 'reftype', valueClass, index};\n      }\n    };\n  }\n\n  private async onGetWasmGlobal(message: PrivateAPI.ExtensionServerRequestMessage):\n      Promise<Record|Chrome.DevTools.WasmValue> {\n    if (message.command !== PrivateAPI.Commands.GetWasmGlobal) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.GetWasmGlobal}`);\n    }\n    const global = Number(message.global);\n    const result = await this.loadWasmValue<Chrome.DevTools.WasmValue|undefined>(\n        true, this.convertWasmValue('global', global), `globals[${global}]`, message.stopId);\n    return result ?? this.status.E_BADARG('global', `No global with index ${global}`);\n  }\n\n  private async onGetWasmLocal(message: PrivateAPI.ExtensionServerRequestMessage):\n      Promise<Record|Chrome.DevTools.WasmValue> {\n    if (message.command !== PrivateAPI.Commands.GetWasmLocal) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.GetWasmLocal}`);\n    }\n    const local = Number(message.local);\n    const result = await this.loadWasmValue<Chrome.DevTools.WasmValue|undefined>(\n        true, this.convertWasmValue('local', local), `locals[${local}]`, message.stopId);\n    return result ?? this.status.E_BADARG('local', `No local with index ${local}`);\n  }\n\n  private async onGetWasmOp(message: PrivateAPI.ExtensionServerRequestMessage):\n      Promise<Record|Chrome.DevTools.WasmValue> {\n    if (message.command !== PrivateAPI.Commands.GetWasmOp) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.GetWasmOp}`);\n    }\n    const op = Number(message.op);\n    const result = await this.loadWasmValue<Chrome.DevTools.WasmValue|undefined>(\n        true, this.convertWasmValue('operand', op), `stack[${op}]`, message.stopId);\n    return result ?? this.status.E_BADARG('op', `No operand with index ${op}`);\n  }\n\n  private registerRecorderExtensionEndpoint(\n      message: PrivateAPI.ExtensionServerRequestMessage, _shared_port: MessagePort): Record {\n    if (message.command !== PrivateAPI.Commands.RegisterRecorderExtensionPlugin) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.RegisterRecorderExtensionPlugin}`);\n    }\n    const {pluginName, mediaType, port, capabilities} = message;\n    RecorderPluginManager.instance().addPlugin(\n        new RecorderExtensionEndpoint(pluginName, port, capabilities, mediaType));\n    return this.status.OK();\n  }\n\n  private onReportResourceLoad(message: PrivateAPI.ExtensionServerRequestMessage): Record {\n    if (message.command !== PrivateAPI.Commands.ReportResourceLoad) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.ReportResourceLoad}`);\n    }\n    const {resourceUrl, extensionId, status} = message;\n    const url = resourceUrl as Platform.DevToolsPath.UrlString;\n    const initiator: SDK.PageResourceLoader.ExtensionInitiator =\n        {target: null, frameId: null, initiatorUrl: extensionId as Platform.DevToolsPath.UrlString, extensionId};\n\n    const pageResource: SDK.PageResourceLoader.PageResource = {\n      url,\n      initiator,\n      errorMessage: status.errorMessage,\n      success: status.success ?? null,\n      size: status.size ?? null,\n    };\n    SDK.PageResourceLoader.PageResourceLoader.instance().resourceLoadedThroughExtension(pageResource);\n    return this.status.OK();\n  }\n\n  private onShowRecorderView(message: PrivateAPI.ExtensionServerRequestMessage): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.ShowRecorderView) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.ShowRecorderView}`);\n    }\n    RecorderPluginManager.instance().showView(message.id);\n    return undefined;\n  }\n\n  private onShowNetworkPanel(message: PrivateAPI.ExtensionServerRequestMessage): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.ShowNetworkPanel) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.ShowNetworkPanel}`);\n    }\n    void Common.Revealer.reveal(new RevealableNetworkRequestFilter(message.filter));\n    return this.status.OK();\n  }\n\n  private onCreateRecorderView(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record {\n    if (message.command !== PrivateAPI.Commands.CreateRecorderView) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.CreateRecorderView}`);\n    }\n    const id = message.id;\n    // The ids are generated on the client API side and must be unique, so the check below\n    // shouldn't be hit unless someone is bypassing the API.\n    if (this.clientObjects.has(id)) {\n      return this.status.E_EXISTS(id);\n    }\n\n    const pagePath = ExtensionServer.expandResourcePath(this.getExtensionOrigin(port), message.pagePath);\n    if (pagePath === undefined) {\n      return this.status.E_BADARG('pagePath', 'Resources paths cannot point to non-extension resources');\n    }\n    const onShown = (): void => this.notifyViewShown(id);\n    const onHidden = (): void => this.notifyViewHidden(id);\n    RecorderPluginManager.instance().registerView({\n      id,\n      pagePath,\n      title: message.title,\n      onShown,\n      onHidden,\n    });\n    return this.status.OK();\n  }\n\n  private inspectedURLChanged(event: Common.EventTarget.EventTargetEvent<SDK.Target.Target>): void {\n    if (!ExtensionServer.canInspectURL(event.data.inspectedURL())) {\n      this.disableExtensions();\n      return;\n    }\n    if (event.data !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n      return;\n    }\n    this.requests = new Map();\n    this.enableExtensions();\n    const url = event.data.inspectedURL();\n    this.postNotification(PrivateAPI.Events.InspectedURLChanged, url);\n    const extensions = this.#pendingExtensions.splice(0);\n    extensions.forEach(e => this.addExtension(e));\n  }\n\n  hasSubscribers(type: string): boolean {\n    return this.subscribers.has(type);\n  }\n\n  private isNotificationAllowedForExtension(port: MessagePort, type: string, ..._args: unknown[]): boolean {\n    if (type === PrivateAPI.Events.NetworkRequestFinished) {\n      const entry = _args[1] as HAR.Log.EntryDTO;\n      const origin = extensionOrigins.get(port);\n      const extension = origin && this.registeredExtensions.get(origin);\n      if (extension?.isAllowedOnTarget(entry.request.url)) {\n        return true;\n      }\n      return false;\n    }\n    return true;\n  }\n\n  private postNotification(type: string, ..._vararg: unknown[]): void {\n    if (!this.extensionsEnabled) {\n      return;\n    }\n    const subscribers = this.subscribers.get(type);\n    if (!subscribers) {\n      return;\n    }\n    const message = {command: 'notify-' + type, arguments: Array.prototype.slice.call(arguments, 1)};\n    for (const subscriber of subscribers) {\n      if (this.extensionEnabled(subscriber) && this.isNotificationAllowedForExtension(subscriber, type, ..._vararg)) {\n        subscriber.postMessage(message);\n      }\n    }\n  }\n\n  private onSubscribe(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.Subscribe) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.Subscribe}`);\n    }\n    const subscribers = this.subscribers.get(message.type);\n    if (subscribers) {\n      subscribers.add(port);\n    } else {\n      this.subscribers.set(message.type, new Set([port]));\n      const handler = this.subscriptionStartHandlers.get(message.type);\n      if (handler) {\n        handler();\n      }\n    }\n    return undefined;\n  }\n\n  private onUnsubscribe(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.Unsubscribe) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.Unsubscribe}`);\n    }\n    const subscribers = this.subscribers.get(message.type);\n    if (!subscribers) {\n      return;\n    }\n    subscribers.delete(port);\n    if (!subscribers.size) {\n      this.subscribers.delete(message.type);\n      const handler = this.subscriptionStopHandlers.get(message.type);\n      if (handler) {\n        handler();\n      }\n    }\n    return undefined;\n  }\n\n  private onAddRequestHeaders(message: PrivateAPI.ExtensionServerRequestMessage): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.AddRequestHeaders) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.AddRequestHeaders}`);\n    }\n    const id = message.extensionId;\n    if (typeof id !== 'string') {\n      return this.status.E_BADARGTYPE('extensionId', typeof id, 'string');\n    }\n    let extensionHeaders = this.extraHeaders.get(id);\n    if (!extensionHeaders) {\n      extensionHeaders = new Map();\n      this.extraHeaders.set(id, extensionHeaders);\n    }\n    for (const name in message.headers) {\n      extensionHeaders.set(name, message.headers[name]);\n    }\n    const allHeaders = ({} as Protocol.Network.Headers);\n    for (const headers of this.extraHeaders.values()) {\n      for (const [name, value] of headers) {\n        if (name !== '__proto__' && typeof value === 'string') {\n          allHeaders[name] = value;\n        }\n      }\n    }\n\n    SDK.NetworkManager.MultitargetNetworkManager.instance().setExtraHTTPHeaders(allHeaders);\n    return undefined;\n  }\n\n  private getExtensionOrigin(port: MessagePort): Platform.DevToolsPath.UrlString {\n    const origin = extensionOrigins.get(port);\n    if (!origin) {\n      throw new Error('Received a message from an unregistered extension');\n    }\n    return origin;\n  }\n\n  private onCreatePanel(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record {\n    if (message.command !== PrivateAPI.Commands.CreatePanel) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.CreatePanel}`);\n    }\n    const id = message.id;\n    // The ids are generated on the client API side and must be unique, so the check below\n    // shouldn't be hit unless someone is bypassing the API.\n    if (this.clientObjects.has(id) || UI.InspectorView.InspectorView.instance().hasPanel(id)) {\n      return this.status.E_EXISTS(id);\n    }\n\n    const page = ExtensionServer.expandResourcePath(this.getExtensionOrigin(port), message.page);\n    if (page === undefined) {\n      return this.status.E_BADARG('page', 'Resources paths cannot point to non-extension resources');\n    }\n    let persistentId = this.getExtensionOrigin(port) + message.title;\n    persistentId = persistentId.replace(/\\s|:\\d+/g, '');\n    const panelView = new ExtensionServerPanelView(\n        persistentId, i18n.i18n.lockedString(message.title), new ExtensionPanel(this, persistentId, id, page));\n    this.clientObjects.set(id, panelView);\n    UI.InspectorView.InspectorView.instance().addPanel(panelView);\n    return this.status.OK();\n  }\n\n  private onShowPanel(message: PrivateAPI.ExtensionServerRequestMessage): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.ShowPanel) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.ShowPanel}`);\n    }\n\n    let panelViewId = message.id;\n    const panelView = this.clientObjects.get(message.id);\n    if (panelView && panelView instanceof ExtensionServerPanelView) {\n      panelViewId = panelView.viewId();\n    }\n    void UI.InspectorView.InspectorView.instance().showPanel(panelViewId);\n    return undefined;\n  }\n\n  private onCreateToolbarButton(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record {\n    if (message.command !== PrivateAPI.Commands.CreateToolbarButton) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.CreateToolbarButton}`);\n    }\n    const panelView = this.clientObjects.get(message.panel);\n    if (!panelView || !(panelView instanceof ExtensionServerPanelView)) {\n      return this.status.E_NOTFOUND(message.panel);\n    }\n    const resourcePath = ExtensionServer.expandResourcePath(this.getExtensionOrigin(port), message.icon);\n    if (resourcePath === undefined) {\n      return this.status.E_BADARG('icon', 'Resources paths cannot point to non-extension resources');\n    }\n    const button = new ExtensionButton(this, message.id, resourcePath, message.tooltip, message.disabled);\n    this.clientObjects.set(message.id, button);\n\n    void panelView.widget().then(appendButton);\n\n    function appendButton(panel: UI.Widget.Widget): void {\n      (panel as ExtensionPanel).addToolbarItem(button.toolbarButton());\n    }\n\n    return this.status.OK();\n  }\n\n  private onUpdateButton(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record {\n    if (message.command !== PrivateAPI.Commands.UpdateButton) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.UpdateButton}`);\n    }\n    const button = this.clientObjects.get(message.id);\n    if (!button || !(button instanceof ExtensionButton)) {\n      return this.status.E_NOTFOUND(message.id);\n    }\n    const resourcePath =\n        message.icon && ExtensionServer.expandResourcePath(this.getExtensionOrigin(port), message.icon);\n    if (message.icon && resourcePath === undefined) {\n      return this.status.E_BADARG('icon', 'Resources paths cannot point to non-extension resources');\n    }\n    button.update(resourcePath, message.tooltip, message.disabled);\n    return this.status.OK();\n  }\n\n  private onCreateSidebarPane(message: PrivateAPI.ExtensionServerRequestMessage): Record {\n    if (message.command !== PrivateAPI.Commands.CreateSidebarPane) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.CreateSidebarPane}`);\n    }\n    const id = message.id;\n    const sidebar = new ExtensionSidebarPane(this, message.panel, i18n.i18n.lockedString(message.title), id);\n    this.sidebarPanesInternal.push(sidebar);\n    this.clientObjects.set(id, sidebar);\n    this.dispatchEventToListeners(Events.SidebarPaneAdded, sidebar);\n\n    return this.status.OK();\n  }\n\n  sidebarPanes(): ExtensionSidebarPane[] {\n    return this.sidebarPanesInternal;\n  }\n\n  private onSetSidebarHeight(message: PrivateAPI.ExtensionServerRequestMessage): Record {\n    if (message.command !== PrivateAPI.Commands.SetSidebarHeight) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.SetSidebarHeight}`);\n    }\n    const sidebar = this.clientObjects.get(message.id);\n    if (!sidebar || !(sidebar instanceof ExtensionSidebarPane)) {\n      return this.status.E_NOTFOUND(message.id);\n    }\n    sidebar.setHeight(message.height);\n    return this.status.OK();\n  }\n\n  private onSetSidebarContent(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.SetSidebarContent) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.SetSidebarContent}`);\n    }\n    const {requestId, id, rootTitle, expression, evaluateOptions, evaluateOnPage} = message;\n    const sidebar = this.clientObjects.get(id);\n    if (!sidebar || !(sidebar instanceof ExtensionSidebarPane)) {\n      return this.status.E_NOTFOUND(message.id);\n    }\n\n    function callback(this: ExtensionServer, error: unknown): void {\n      const result = error ? this.status.E_FAILED(error) : this.status.OK();\n      this.dispatchCallback(requestId, port, result);\n    }\n    if (evaluateOnPage) {\n      sidebar.setExpression(expression, rootTitle, evaluateOptions, this.getExtensionOrigin(port), callback.bind(this));\n      return undefined;\n    }\n    sidebar.setObject(message.expression, message.rootTitle, callback.bind(this));\n    return undefined;\n  }\n\n  private onSetSidebarPage(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.SetSidebarPage) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.SetSidebarPage}`);\n    }\n    const sidebar = this.clientObjects.get(message.id);\n    if (!sidebar || !(sidebar instanceof ExtensionSidebarPane)) {\n      return this.status.E_NOTFOUND(message.id);\n    }\n    const resourcePath = ExtensionServer.expandResourcePath(this.getExtensionOrigin(port), message.page);\n    if (resourcePath === undefined) {\n      return this.status.E_BADARG('page', 'Resources paths cannot point to non-extension resources');\n    }\n    sidebar.setPage(resourcePath);\n    return undefined;\n  }\n\n  private onOpenResource(message: PrivateAPI.ExtensionServerRequestMessage): Record {\n    if (message.command !== PrivateAPI.Commands.OpenResource) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.OpenResource}`);\n    }\n    const uiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(message.url);\n    if (uiSourceCode) {\n      void Common.Revealer.reveal(uiSourceCode.uiLocation(message.lineNumber, message.columnNumber));\n      return this.status.OK();\n    }\n\n    const resource = Bindings.ResourceUtils.resourceForURL(message.url);\n    if (resource) {\n      void Common.Revealer.reveal(resource);\n      return this.status.OK();\n    }\n\n    const request = Logs.NetworkLog.NetworkLog.instance().requestForURL(message.url);\n    if (request) {\n      void Common.Revealer.reveal(request);\n      return this.status.OK();\n    }\n\n    return this.status.E_NOTFOUND(message.url);\n  }\n\n  private onSetOpenResourceHandler(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record\n      |undefined {\n    if (message.command !== PrivateAPI.Commands.SetOpenResourceHandler) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.SetOpenResourceHandler}`);\n    }\n    const extension = this.registeredExtensions.get(this.getExtensionOrigin(port));\n    if (!extension) {\n      throw new Error('Received a message from an unregistered extension');\n    }\n    const {name} = extension;\n    if (message.handlerPresent) {\n      Components.Linkifier.Linkifier.registerLinkHandler(name, this.handleOpenURL.bind(this, port));\n    } else {\n      Components.Linkifier.Linkifier.unregisterLinkHandler(name);\n    }\n    return undefined;\n  }\n\n  private onSetThemeChangeHandler(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record\n      |undefined {\n    if (message.command !== PrivateAPI.Commands.SetThemeChangeHandler) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.SetThemeChangeHandler}`);\n    }\n    const extensionOrigin = this.getExtensionOrigin(port);\n    const extension = this.registeredExtensions.get(extensionOrigin);\n    if (!extension) {\n      throw new Error('Received a message from an unregistered extension');\n    }\n\n    if (message.handlerPresent) {\n      this.themeChangeHandlers.set(extensionOrigin, port);\n    } else {\n      this.themeChangeHandlers.delete(extensionOrigin);\n    }\n    return undefined;\n  }\n\n  private handleOpenURL(\n      port: MessagePort, contentProvider: TextUtils.ContentProvider.ContentProvider, lineNumber: number): void {\n    port.postMessage(\n        {command: 'open-resource', resource: this.makeResource(contentProvider), lineNumber: lineNumber + 1});\n  }\n\n  private extensionAllowedOnURL(url: Platform.DevToolsPath.UrlString, port: MessagePort): boolean {\n    const origin = extensionOrigins.get(port);\n    const extension = origin && this.registeredExtensions.get(origin);\n    return Boolean(extension?.isAllowedOnTarget(url));\n  }\n\n  private extensionAllowedOnTarget(target: SDK.Target.Target, port: MessagePort): boolean {\n    return this.extensionAllowedOnURL(target.inspectedURL(), port);\n  }\n\n  private onReload(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record {\n    if (message.command !== PrivateAPI.Commands.Reload) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.Reload}`);\n    }\n    const options = (message.options || {});\n\n    SDK.NetworkManager.MultitargetNetworkManager.instance().setUserAgentOverride(\n        typeof options.userAgent === 'string' ? options.userAgent : '', null);\n    let injectedScript;\n    if (options.injectedScript) {\n      injectedScript = '(function(){' + options.injectedScript + '})()';\n    }\n    const target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    if (!target) {\n      return this.status.OK();\n    }\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (!this.extensionAllowedOnTarget(target, port)) {\n      return this.status.E_FAILED('Permission denied');\n    }\n    resourceTreeModel?.reloadPage(Boolean(options.ignoreCache), injectedScript);\n    return this.status.OK();\n  }\n\n  private onEvaluateOnInspectedPage(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record\n      |undefined {\n    if (message.command !== PrivateAPI.Commands.EvaluateOnInspectedPage) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.EvaluateOnInspectedPage}`);\n    }\n\n    const {requestId, expression, evaluateOptions} = message;\n    function callback(\n        this: ExtensionServer, error: string|null, object: SDK.RemoteObject.RemoteObject|null,\n        wasThrown: boolean): void {\n      let result;\n      if (error || !object) {\n        result = this.status.E_PROTOCOLERROR(error?.toString());\n      } else if (wasThrown) {\n        result = {isException: true, value: object.description};\n      } else {\n        result = {value: object.value};\n      }\n\n      this.dispatchCallback(requestId, port, result);\n    }\n    return this.evaluate(expression, true, true, evaluateOptions, this.getExtensionOrigin(port), callback.bind(this));\n  }\n\n  private async onGetHAR(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort):\n      Promise<Record|HAR.Log.LogDTO> {\n    if (message.command !== PrivateAPI.Commands.GetHAR) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.GetHAR}`);\n    }\n    const requests =\n        Logs.NetworkLog.NetworkLog.instance().requests().filter(r => this.extensionAllowedOnURL(r.url(), port));\n    const harLog = await HAR.Log.Log.build(requests, {sanitize: false});\n    for (let i = 0; i < harLog.entries.length; ++i) {\n      // @ts-ignore\n      harLog.entries[i]._requestId = this.requestId(requests[i]);\n    }\n    return harLog;\n  }\n\n  private makeResource(contentProvider: TextUtils.ContentProvider.ContentProvider): {url: string, type: string} {\n    return {url: contentProvider.contentURL(), type: contentProvider.contentType().name()};\n  }\n\n  private onGetPageResources(_message: unknown, port: MessagePort): {url: string, type: string}[] {\n    const resources = new Map<unknown, {\n      url: string,\n      type: string,\n    }>();\n    function pushResourceData(\n        this: ExtensionServer, contentProvider: TextUtils.ContentProvider.ContentProvider): boolean {\n      if (!resources.has(contentProvider.contentURL())) {\n        resources.set(contentProvider.contentURL(), this.makeResource(contentProvider));\n      }\n      return false;\n    }\n    let uiSourceCodes = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodesForProjectType(\n        Workspace.Workspace.projectTypes.Network);\n    uiSourceCodes = uiSourceCodes.concat(Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodesForProjectType(\n        Workspace.Workspace.projectTypes.ContentScripts));\n    uiSourceCodes.forEach(pushResourceData.bind(this));\n    for (const resourceTreeModel of SDK.TargetManager.TargetManager.instance().models(\n             SDK.ResourceTreeModel.ResourceTreeModel)) {\n      if (this.extensionAllowedOnTarget(resourceTreeModel.target(), port)) {\n        resourceTreeModel.forAllResources(pushResourceData.bind(this));\n      }\n    }\n\n    return [...resources.values()];\n  }\n\n  private async getResourceContent(\n      contentProvider: TextUtils.ContentProvider.ContentProvider, message: PrivateAPI.ExtensionServerRequestMessage,\n      port: MessagePort): Promise<void> {\n    if (!this.extensionAllowedOnURL(contentProvider.contentURL(), port)) {\n      this.dispatchCallback(message.requestId, port, this.status.E_FAILED('Permission denied'));\n      return undefined;\n    }\n    const contentData = await contentProvider.requestContentData();\n    if (TextUtils.ContentData.ContentData.isError(contentData)) {\n      this.dispatchCallback(message.requestId, port, {encoding: '', content: null});\n      return;\n    }\n    const encoding = !contentData.isTextContent ? 'base64' : '';\n    const content = contentData.isTextContent ? contentData.text : contentData.base64;\n    this.dispatchCallback(message.requestId, port, {encoding, content});\n  }\n\n  private onGetRequestContent(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.GetRequestContent) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.GetRequestContent}`);\n    }\n    const request = this.requestById(message.id);\n    if (!request) {\n      return this.status.E_NOTFOUND(message.id);\n    }\n    void this.getResourceContent(request, message, port);\n    return undefined;\n  }\n\n  private onGetResourceContent(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.GetResourceContent) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.GetResourceContent}`);\n    }\n    const url = message.url as Platform.DevToolsPath.UrlString;\n    const contentProvider = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(url) ||\n        Bindings.ResourceUtils.resourceForURL(url);\n    if (!contentProvider) {\n      return this.status.E_NOTFOUND(url);\n    }\n    void this.getResourceContent(contentProvider, message, port);\n    return undefined;\n  }\n\n  private onSetResourceContent(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.SetResourceContent) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.SetResourceContent}`);\n    }\n\n    const {url, requestId, content, commit} = message;\n    function callbackWrapper(this: ExtensionServer, error: string|null): void {\n      const response = error ? this.status.E_FAILED(error) : this.status.OK();\n      this.dispatchCallback(requestId, port, response);\n    }\n    if (!this.extensionAllowedOnURL(url as Platform.DevToolsPath.UrlString, port)) {\n      return this.status.E_FAILED('Permission denied');\n    }\n\n    const uiSourceCode =\n        Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(url as Platform.DevToolsPath.UrlString);\n    if (!uiSourceCode || !uiSourceCode.contentType().isDocumentOrScriptOrStyleSheet()) {\n      const resource = SDK.ResourceTreeModel.ResourceTreeModel.resourceForURL(url as Platform.DevToolsPath.UrlString);\n      if (!resource) {\n        return this.status.E_NOTFOUND(url);\n      }\n      return this.status.E_NOTSUPPORTED('Resource is not editable');\n    }\n    uiSourceCode.setWorkingCopy(content);\n    if (commit) {\n      uiSourceCode.commitWorkingCopy();\n    }\n    callbackWrapper.call(this, null);\n    return undefined;\n  }\n\n  private requestId(request: TextUtils.ContentProvider.ContentProvider): number {\n    const requestId = this.requestIds.get(request);\n    if (requestId === undefined) {\n      const newId = ++this.lastRequestId;\n      this.requestIds.set(request, newId);\n      this.requests.set(newId, request);\n      return newId;\n    }\n    return requestId;\n  }\n\n  private requestById(id: number): TextUtils.ContentProvider.ContentProvider|undefined {\n    return this.requests.get(id);\n  }\n\n  private onForwardKeyboardEvent(message: PrivateAPI.ExtensionServerRequestMessage): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.ForwardKeyboardEvent) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.ForwardKeyboardEvent}`);\n    }\n    message.entries.forEach(handleEventEntry);\n\n    function handleEventEntry(entry: KeyboardEventInit&{eventType: string}): void {\n      // Fool around closure compiler -- it has its own notion of both KeyboardEvent constructor\n      // and initKeyboardEvent methods and overriding these in externs.js does not have effect.\n      const event = new window.KeyboardEvent(entry.eventType, {\n        key: entry.key,\n        code: entry.code,\n        keyCode: entry.keyCode,\n        location: entry.location,\n        ctrlKey: entry.ctrlKey,\n        altKey: entry.altKey,\n        shiftKey: entry.shiftKey,\n        metaKey: entry.metaKey,\n      });\n\n      // @ts-ignore\n      event.__keyCode = keyCodeForEntry(entry);\n      document.dispatchEvent(event);\n    }\n\n    function keyCodeForEntry(entry: KeyboardEventInit): unknown {\n      let keyCode = entry.keyCode;\n      if (!keyCode) {\n        // This is required only for synthetic events (e.g. dispatched in tests).\n        if (entry.key === Platform.KeyboardUtilities.ESCAPE_KEY) {\n          keyCode = 27;\n        }\n      }\n      return keyCode || 0;\n    }\n    return undefined;\n  }\n\n  private dispatchCallback(requestId: unknown, port: MessagePort, result: unknown): void {\n    if (requestId) {\n      port.postMessage({command: 'callback', requestId, result});\n    }\n  }\n\n  private initExtensions(): void {\n    this.registerAutosubscriptionHandler(\n        PrivateAPI.Events.ResourceAdded, Workspace.Workspace.WorkspaceImpl.instance(),\n        Workspace.Workspace.Events.UISourceCodeAdded, this.notifyResourceAdded);\n    this.registerAutosubscriptionTargetManagerHandler(\n        PrivateAPI.Events.NetworkRequestFinished, SDK.NetworkManager.NetworkManager,\n        SDK.NetworkManager.Events.RequestFinished, this.notifyRequestFinished);\n\n    function onElementsSubscriptionStarted(this: ExtensionServer): void {\n      UI.Context.Context.instance().addFlavorChangeListener(\n          SDK.DOMModel.DOMNode, this.notifyElementsSelectionChanged, this);\n    }\n\n    function onElementsSubscriptionStopped(this: ExtensionServer): void {\n      UI.Context.Context.instance().removeFlavorChangeListener(\n          SDK.DOMModel.DOMNode, this.notifyElementsSelectionChanged, this);\n    }\n\n    this.registerSubscriptionHandler(\n        PrivateAPI.Events.PanelObjectSelected + 'elements', onElementsSubscriptionStarted.bind(this),\n        onElementsSubscriptionStopped.bind(this));\n    this.registerResourceContentCommittedHandler(this.notifyUISourceCodeContentCommitted);\n\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.INSPECTED_URL_CHANGED, this.inspectedURLChanged, this);\n  }\n\n  private notifyResourceAdded(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    const uiSourceCode = event.data;\n    this.postNotification(PrivateAPI.Events.ResourceAdded, this.makeResource(uiSourceCode));\n  }\n\n  private notifyUISourceCodeContentCommitted(\n      event: Common.EventTarget.EventTargetEvent<Workspace.Workspace.WorkingCopyCommitedEvent>): void {\n    const {uiSourceCode, content} = event.data;\n    this.postNotification(PrivateAPI.Events.ResourceContentCommitted, this.makeResource(uiSourceCode), content);\n  }\n\n  private async notifyRequestFinished(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.NetworkRequest>):\n      Promise<void> {\n    const request = event.data;\n    const entry = await HAR.Log.Entry.build(request, {sanitize: false});\n    this.postNotification(PrivateAPI.Events.NetworkRequestFinished, this.requestId(request), entry);\n  }\n\n  private notifyElementsSelectionChanged(): void {\n    this.postNotification(PrivateAPI.Events.PanelObjectSelected + 'elements');\n  }\n\n  sourceSelectionChanged(url: Platform.DevToolsPath.UrlString, range: TextUtils.TextRange.TextRange): void {\n    this.postNotification(PrivateAPI.Events.PanelObjectSelected + 'sources', {\n      startLine: range.startLine,\n      startColumn: range.startColumn,\n      endLine: range.endLine,\n      endColumn: range.endColumn,\n      url,\n    });\n  }\n\n  private setInspectedTabId(event: Common.EventTarget.EventTargetEvent<string>): void {\n    const oldId = this.inspectedTabId;\n    this.inspectedTabId = event.data;\n    if (oldId === null) {\n      // Run deferred init\n      this.initializeExtensions();\n    }\n  }\n\n  addExtensionFrame({startPage, name}: Host.InspectorFrontendHostAPI.ExtensionDescriptor): void {\n    const iframe = document.createElement('iframe');\n    iframe.src = startPage;\n    iframe.dataset.devtoolsExtension = name;\n    iframe.style.display = 'none';\n    document.body.appendChild(iframe);  // Only for main window.\n  }\n\n  addExtension(extensionInfo: Host.InspectorFrontendHostAPI.ExtensionDescriptor): boolean|undefined {\n    const startPage = extensionInfo.startPage;\n\n    const inspectedURL = SDK.TargetManager.TargetManager.instance().primaryPageTarget()?.inspectedURL() ?? '';\n    if (inspectedURL === '') {\n      this.#pendingExtensions.push(extensionInfo);\n      return;\n    }\n    if (!ExtensionServer.canInspectURL(inspectedURL)) {\n      this.disableExtensions();\n    }\n    if (!this.extensionsEnabled) {\n      this.#pendingExtensions.push(extensionInfo);\n      return;\n    }\n    const hostsPolicy = HostsPolicy.create(extensionInfo.hostsPolicy);\n    if (!hostsPolicy) {\n      return;\n    }\n    try {\n      const startPageURL = new URL((startPage as string));\n      const extensionOrigin = startPageURL.origin;\n      const name = extensionInfo.name || `Extension ${extensionOrigin}`;\n      const extensionRegistration = new RegisteredExtension(name, hostsPolicy, Boolean(extensionInfo.allowFileAccess));\n      if (!extensionRegistration.isAllowedOnTarget(inspectedURL)) {\n        this.#pendingExtensions.push(extensionInfo);\n        return;\n      }\n      if (!this.registeredExtensions.get(extensionOrigin)) {\n        // See ExtensionAPI.js for details.\n        const injectedAPI = self.buildExtensionAPIInjectedScript(\n            extensionInfo, this.inspectedTabId as string, ThemeSupport.ThemeSupport.instance().themeName(),\n            UI.ShortcutRegistry.ShortcutRegistry.instance().globalShortcutKeys(),\n            ExtensionServer.instance().extensionAPITestHook);\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.setInjectedScriptForOrigin(\n            extensionOrigin, injectedAPI);\n        this.registeredExtensions.set(extensionOrigin, extensionRegistration);\n      }\n      this.addExtensionFrame(extensionInfo);\n    } catch (e) {\n      console.error('Failed to initialize extension ' + startPage + ':' + e);\n      return false;\n    }\n    return true;\n  }\n\n  private registerExtension(origin: Platform.DevToolsPath.UrlString, port: MessagePort): void {\n    if (!this.registeredExtensions.has(origin)) {\n      if (origin !== window.location.origin) {  // Just ignore inspector frames.\n        console.error('Ignoring unauthorized client request from ' + origin);\n      }\n      return;\n    }\n    extensionOrigins.set(port, origin);\n    port.addEventListener('message', this.onmessage.bind(this), false);\n    port.start();\n  }\n\n  private onWindowMessage = (event: MessageEvent): void => {\n    if (event.data === 'registerExtension') {\n      this.registerExtension(event.origin as Platform.DevToolsPath.UrlString, event.ports[0]);\n    }\n  };\n\n  private extensionEnabled(port: MessagePort): boolean {\n    if (!this.extensionsEnabled) {\n      return false;\n    }\n    const origin = extensionOrigins.get(port);\n    if (!origin) {\n      return false;\n    }\n    const extension = this.registeredExtensions.get(origin);\n    if (!extension) {\n      return false;\n    }\n    return extension.isAllowedOnTarget();\n  }\n\n  private async onmessage(event: MessageEvent): Promise<void> {\n    const message = event.data;\n    let result;\n\n    const port = event.currentTarget as MessagePort;\n    const handler = this.handlers.get(message.command);\n\n    if (!handler) {\n      result = this.status.E_NOTSUPPORTED(message.command);\n    } else if (!this.extensionEnabled(port)) {\n      result = this.status.E_FAILED('Permission denied');\n    } else {\n      result = await handler(message, event.target as MessagePort);\n    }\n\n    if (result && message.requestId) {\n      this.dispatchCallback(message.requestId, event.target as MessagePort, result);\n    }\n  }\n\n  private registerHandler(\n      command: string,\n      callback: (message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort) => unknown): void {\n    console.assert(Boolean(command));\n    this.handlers.set(command, callback);\n  }\n\n  private registerSubscriptionHandler(\n      eventTopic: string, onSubscribeFirst: () => unknown, onUnsubscribeLast: () => unknown): void {\n    this.subscriptionStartHandlers.set(eventTopic, onSubscribeFirst);\n    this.subscriptionStopHandlers.set(eventTopic, onUnsubscribeLast);\n  }\n\n  private registerAutosubscriptionHandler<Events, T extends keyof Events>(\n      eventTopic: string, eventTarget: Common.EventTarget.EventTarget<Events>, frontendEventType: T,\n      handler: Common.EventTarget.EventListener<Events, T>): void {\n    this.registerSubscriptionHandler(\n        eventTopic, () => eventTarget.addEventListener(frontendEventType, handler, this),\n        () => eventTarget.removeEventListener(frontendEventType, handler, this));\n  }\n\n  private registerAutosubscriptionTargetManagerHandler<Events, T extends keyof Events>(\n      eventTopic: string, modelClass: new(arg1: SDK.Target.Target) => SDK.SDKModel.SDKModel<Events>,\n      frontendEventType: T, handler: Common.EventTarget.EventListener<Events, T>): void {\n    this.registerSubscriptionHandler(\n        eventTopic,\n        () => SDK.TargetManager.TargetManager.instance().addModelListener(modelClass, frontendEventType, handler, this),\n        () => SDK.TargetManager.TargetManager.instance().removeModelListener(\n            modelClass, frontendEventType, handler, this));\n  }\n\n  private registerResourceContentCommittedHandler(\n      handler: (arg0: Common.EventTarget.EventTargetEvent<Workspace.Workspace.WorkingCopyCommitedEvent>) => unknown):\n      void {\n    function addFirstEventListener(this: ExtensionServer): void {\n      Workspace.Workspace.WorkspaceImpl.instance().addEventListener(\n          Workspace.Workspace.Events.WorkingCopyCommittedByUser, handler, this);\n      Workspace.Workspace.WorkspaceImpl.instance().setHasResourceContentTrackingExtensions(true);\n    }\n\n    function removeLastEventListener(this: ExtensionServer): void {\n      Workspace.Workspace.WorkspaceImpl.instance().setHasResourceContentTrackingExtensions(false);\n      Workspace.Workspace.WorkspaceImpl.instance().removeEventListener(\n          Workspace.Workspace.Events.WorkingCopyCommittedByUser, handler, this);\n    }\n\n    this.registerSubscriptionHandler(\n        PrivateAPI.Events.ResourceContentCommitted, addFirstEventListener.bind(this),\n        removeLastEventListener.bind(this));\n  }\n\n  static expandResourcePath(extensionOrigin: Platform.DevToolsPath.UrlString, resourcePath: string):\n      Platform.DevToolsPath.UrlString|undefined {\n    const strippedOrigin = new URL(extensionOrigin).origin;\n    const resourceURL = new URL(Common.ParsedURL.normalizePath(resourcePath), strippedOrigin);\n    if (resourceURL.origin !== strippedOrigin) {\n      return undefined;\n    }\n    return resourceURL.href as Platform.DevToolsPath.UrlString;\n  }\n\n  evaluate(\n      expression: string, exposeCommandLineAPI: boolean, returnByValue: boolean,\n      options: PrivateAPI.EvaluateOptions|undefined, securityOrigin: string,\n      callback: (arg0: string|null, arg1: SDK.RemoteObject.RemoteObject|null, arg2: boolean) => unknown): Record\n      |undefined {\n    let context;\n\n    function resolveURLToFrame(url: Platform.DevToolsPath.UrlString): SDK.ResourceTreeModel.ResourceTreeFrame|null {\n      let found = null;\n      function hasMatchingURL(frame: SDK.ResourceTreeModel.ResourceTreeFrame): SDK.ResourceTreeModel.ResourceTreeFrame|\n          null {\n        found = (frame.url === url) ? frame : null;\n        return found;\n      }\n      SDK.ResourceTreeModel.ResourceTreeModel.frames().some(hasMatchingURL);\n      return found;\n    }\n\n    options = options || {};\n    let frame;\n    if (options.frameURL) {\n      frame = resolveURLToFrame(options.frameURL as Platform.DevToolsPath.UrlString);\n    } else {\n      const target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n      const resourceTreeModel = target && target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n      frame = resourceTreeModel && resourceTreeModel.mainFrame;\n    }\n    if (!frame) {\n      if (options.frameURL) {\n        console.warn('evaluate: there is no frame with URL ' + options.frameURL);\n      } else {\n        console.warn('evaluate: the main frame is not yet available');\n      }\n      return this.status.E_NOTFOUND(options.frameURL || '<top>');\n    }\n    // We shouldn't get here if the outermost frame can't be inspected by an extension, but\n    // let's double check for subframes.\n    const extension = this.registeredExtensions.get(securityOrigin);\n    if (!extension?.isAllowedOnTarget(frame.url)) {\n      return this.status.E_FAILED('Permission denied');\n    }\n\n    let contextSecurityOrigin;\n    if (options.useContentScriptContext) {\n      contextSecurityOrigin = securityOrigin;\n    } else if (options.scriptExecutionContext) {\n      contextSecurityOrigin = options.scriptExecutionContext;\n    }\n\n    const runtimeModel = frame.resourceTreeModel().target().model(SDK.RuntimeModel.RuntimeModel);\n    const executionContexts = runtimeModel ? runtimeModel.executionContexts() : [];\n    if (contextSecurityOrigin) {\n      for (let i = 0; i < executionContexts.length; ++i) {\n        const executionContext = executionContexts[i];\n        if (executionContext.frameId === frame.id && executionContext.origin === contextSecurityOrigin &&\n            !executionContext.isDefault) {\n          context = executionContext;\n        }\n      }\n      if (!context) {\n        console.warn('The JavaScript context ' + contextSecurityOrigin + ' was not found in the frame ' + frame.url);\n        return this.status.E_NOTFOUND(contextSecurityOrigin);\n      }\n    } else {\n      for (let i = 0; i < executionContexts.length; ++i) {\n        const executionContext = executionContexts[i];\n        if (executionContext.frameId === frame.id && executionContext.isDefault) {\n          context = executionContext;\n        }\n      }\n      if (!context) {\n        return this.status.E_FAILED(frame.url + ' has no execution context');\n      }\n    }\n    if (!extension?.isAllowedOnTarget(context.origin)) {\n      return this.status.E_FAILED('Permission denied');\n    }\n\n    void context\n        .evaluate(\n            {\n              expression,\n              objectGroup: 'extension',\n              includeCommandLineAPI: exposeCommandLineAPI,\n              silent: true,\n              returnByValue,\n              generatePreview: false,\n            },\n            /* userGesture */ false, /* awaitPromise */ false)\n        .then(onEvaluate);\n\n    function onEvaluate(result: SDK.RuntimeModel.EvaluationResult): void {\n      if ('error' in result) {\n        callback(result.error, null, false);\n        return;\n      }\n      callback(null, result.object || null, Boolean(result.exceptionDetails));\n    }\n    return undefined;\n  }\n\n  static canInspectURL(url: Platform.DevToolsPath.UrlString): boolean {\n    let parsedURL;\n    // This is only to work around invalid URLs we're occasionally getting from some tests.\n    // TODO(caseq): make sure tests supply valid URLs or we specifically handle invalid ones.\n    try {\n      parsedURL = new URL(url);\n    } catch (exception) {\n      return false;\n    }\n\n    if (!kPermittedSchemes.includes(parsedURL.protocol)) {\n      return false;\n    }\n\n    if ((window.DevToolsAPI && window.DevToolsAPI.getOriginsForbiddenForExtensions &&\n             window.DevToolsAPI.getOriginsForbiddenForExtensions() ||\n         []).includes(parsedURL.origin)) {\n      return false;\n    }\n\n    if (this.#isUrlFromChromeWebStore(parsedURL)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Tests whether a given URL is from the Chrome web store to prevent the extension server from\n   * being injected. This is treated as separate from the `getOriginsForbiddenForExtensions` API because\n   * DevTools might not be being run from a native origin and we still want to lock down this specific\n   * origin from DevTools extensions.\n   *\n   * @param parsedURL The URL to check\n   * @returns `true` if the URL corresponds to the Chrome web store; otherwise `false`\n   */\n  static #isUrlFromChromeWebStore(parsedURL: URL): boolean {\n    if (parsedURL.protocol.startsWith('http') && parsedURL.hostname.match(/^chrome\\.google\\.com\\.?$/) &&\n        parsedURL.pathname.startsWith('/webstore')) {\n      return true;\n    }\n    if (parsedURL.protocol.startsWith('http') && parsedURL.hostname.match(/^chromewebstore\\.google\\.com\\.?$/)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private disableExtensions(): void {\n    this.extensionsEnabled = false;\n  }\n\n  private enableExtensions(): void {\n    this.extensionsEnabled = true;\n  }\n}\n\nexport const enum Events {\n  SidebarPaneAdded = 'SidebarPaneAdded',\n}\n\nexport type EventTypes = {\n  [Events.SidebarPaneAdded]: ExtensionSidebarPane,\n};\n\nclass ExtensionServerPanelView extends UI.View.SimpleView {\n  private readonly name: string;\n  private readonly panel: UI.Panel.Panel;\n\n  constructor(name: string, title: Platform.UIString.LocalizedString, panel: UI.Panel.Panel) {\n    super(title);\n    this.name = name;\n    this.panel = panel;\n  }\n\n  override viewId(): string {\n    return this.name;\n  }\n\n  override widget(): Promise<UI.Widget.Widget> {\n    return Promise.resolve(this.panel) as Promise<UI.Widget.Widget>;\n  }\n}\n\nexport class ExtensionStatus {\n  OK: (...args: unknown[]) => Record;\n  E_EXISTS: (...args: unknown[]) => Record;\n  E_BADARG: (...args: unknown[]) => Record;\n  E_BADARGTYPE: (...args: unknown[]) => Record;\n  E_NOTFOUND: (...args: unknown[]) => Record;\n  E_NOTSUPPORTED: (...args: unknown[]) => Record;\n  E_PROTOCOLERROR: (...args: unknown[]) => Record;\n  E_FAILED: (...args: unknown[]) => Record;\n\n  constructor() {\n    function makeStatus(code: string, description: string, ...details: unknown[]): Record {\n      const status: Record = {code, description, details};\n      if (code !== 'OK') {\n        status.isError = true;\n        console.error('Extension server error: ' + Platform.StringUtilities.sprintf(description, ...details));\n      }\n      return status;\n    }\n\n    this.OK = makeStatus.bind(null, 'OK', 'OK');\n    this.E_EXISTS = makeStatus.bind(null, 'E_EXISTS', 'Object already exists: %s');\n    this.E_BADARG = makeStatus.bind(null, 'E_BADARG', 'Invalid argument %s: %s');\n    this.E_BADARGTYPE = makeStatus.bind(null, 'E_BADARGTYPE', 'Invalid type for argument %s: got %s, expected %s');\n    this.E_NOTFOUND = makeStatus.bind(null, 'E_NOTFOUND', 'Object not found: %s');\n    this.E_NOTSUPPORTED = makeStatus.bind(null, 'E_NOTSUPPORTED', 'Object does not support requested operation: %s');\n    this.E_PROTOCOLERROR = makeStatus.bind(null, 'E_PROTOCOLERROR', 'Inspector protocol error: %s');\n    this.E_FAILED = makeStatus.bind(null, 'E_FAILED', 'Operation failed: %s');\n  }\n}\nexport interface Record {\n  code: string;\n  description: string;\n  details: unknown[];\n  isError?: boolean;\n}\n"],
  "mappings": "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",
  "names": ["frame", "Events"]
}
