{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/persistence/PersistenceActions.ts"],
  "sourcesContent": ["// Copyright (c) 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Bindings from '../bindings/bindings.js';\nimport type * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {NetworkPersistenceManager} from './NetworkPersistenceManager.js';\nimport {PersistenceImpl} from './PersistenceImpl.js';\n\nconst UIStrings = {\n  /**\n   *@description Text to save content as a specific file type\n   */\n  saveAs: 'Save as...',\n  /**\n   *@description Context menu item for saving an image\n   */\n  saveImage: 'Save image',\n  /**\n   *@description Context menu item for showing all overridden files\n   */\n  showOverrides: 'Show all overrides',\n  /**\n   *@description A context menu item in the Persistence Actions of the Workspace settings in Settings\n   */\n  overrideContent: 'Override content',\n  /**\n   *@description A context menu item in the Persistence Actions of the Workspace settings in Settings\n   */\n  openInContainingFolder: 'Open in containing folder',\n  /**\n   *@description A message in a confirmation dialog in the Persistence Actions\n   * @example {bundle.min.js} PH1\n   */\n  overrideSourceMappedFileWarning: 'Override \u2018{PH1}\u2019 instead?',\n  /**\n   *@description A message in a confirmation dialog to explain why the action is failed in the Persistence Actions\n   * @example {index.ts} PH1\n   */\n  overrideSourceMappedFileExplanation: '\u2018{PH1}\u2019 is a source mapped file and cannot be overridden.',\n  /**\n   * @description An error message shown in the DevTools console after the user clicked \"Save as\" in\n   * the context menu of a WebAssembly file.\n   */\n  saveWasmFailed: 'Unable to save WASM module to disk. Most likely the module is too large.',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/persistence/PersistenceActions.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ContextMenuProvider implements\n    UI.ContextMenu\n        .Provider<Workspace.UISourceCode.UISourceCode|SDK.Resource.Resource|SDK.NetworkRequest.NetworkRequest> {\n  appendApplicableItems(\n      _event: Event, contextMenu: UI.ContextMenu.ContextMenu,\n      contentProvider: TextUtils.ContentProvider.ContentProvider): void {\n    async function saveAs(): Promise<void> {\n      if (contentProvider instanceof Workspace.UISourceCode.UISourceCode) {\n        (contentProvider as Workspace.UISourceCode.UISourceCode).commitWorkingCopy();\n      }\n      const url = contentProvider.contentURL();\n      let content: TextUtils.ContentProvider.DeferredContent;\n      const maybeScript = getScript(contentProvider);\n      if (maybeScript?.isWasm()) {\n        try {\n          const byteCode = await maybeScript.getWasmBytecode();\n          const base64 = await Common.Base64.encode(byteCode);\n          content = {isEncoded: true, content: base64};\n        } catch (e) {\n          console.error(`Unable to convert WASM byte code for ${url} to base64. Not saving to disk`, e.stack);\n          Common.Console.Console.instance().error(i18nString(UIStrings.saveWasmFailed), /* show=*/ false);\n          return;\n        }\n      } else {\n        content = await contentProvider.requestContent();\n      }\n      await Workspace.FileManager.FileManager.instance().save(url, content.content ?? '', true, content.isEncoded);\n      Workspace.FileManager.FileManager.instance().close(url);\n    }\n\n    async function saveImage(): Promise<void> {\n      const targetObject = contentProvider as SDK.Resource.Resource;\n      const content = (await targetObject.requestContent()).content || '';\n      const link = document.createElement('a');\n      link.download = targetObject.displayName;\n      link.href = 'data:' + targetObject.mimeType + ';base64,' + content;\n      link.click();\n    }\n\n    if (contentProvider.contentType().isDocumentOrScriptOrStyleSheet()) {\n      contextMenu.saveSection().appendItem(i18nString(UIStrings.saveAs), saveAs, {jslogContext: 'save-as'});\n    } else if (contentProvider instanceof SDK.Resource.Resource && contentProvider.contentType().isImage()) {\n      contextMenu.saveSection().appendItem(i18nString(UIStrings.saveImage), saveImage, {jslogContext: 'save-image'});\n    }\n\n    // Retrieve uiSourceCode by URL to pick network resources everywhere.\n    const uiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(contentProvider.contentURL());\n    const networkPersistenceManager = NetworkPersistenceManager.instance();\n\n    const binding = uiSourceCode && PersistenceImpl.instance().binding(uiSourceCode);\n    const fileURL = binding ? binding.fileSystem.contentURL() : contentProvider.contentURL();\n\n    if (Common.ParsedURL.schemeIs(fileURL, 'file:')) {\n      const path = Common.ParsedURL.ParsedURL.urlToRawPathString(fileURL, Host.Platform.isWin());\n      contextMenu.revealSection().appendItem(\n          i18nString(UIStrings.openInContainingFolder),\n          () => Host.InspectorFrontendHost.InspectorFrontendHostInstance.showItemInFolder(path),\n          {jslogContext: 'open-in-containing-folder'});\n    }\n\n    if (contentProvider instanceof Workspace.UISourceCode.UISourceCode &&\n        (contentProvider.project().type() === Workspace.Workspace.projectTypes.FileSystem)) {\n      // Do not append in Sources > Workspace & Overrides tab\n      return;\n    }\n\n    let disabled = true;\n    let handler = (): void => {};\n    if (uiSourceCode && networkPersistenceManager.isUISourceCodeOverridable(uiSourceCode)) {\n      if (!uiSourceCode.contentType().isFromSourceMap()) {\n        disabled = false;\n        handler = this.handleOverrideContent.bind(this, uiSourceCode, contentProvider);\n      } else {\n        // show redirect dialog for source mapped file\n        const deployedUiSourceCode = this.getDeployedUiSourceCode(uiSourceCode);\n        if (deployedUiSourceCode) {\n          disabled = false;\n          handler = this.redirectOverrideToDeployedUiSourceCode.bind(this, deployedUiSourceCode, uiSourceCode);\n        }\n      }\n    }\n    contextMenu.overrideSection().appendItem(\n        i18nString(UIStrings.overrideContent), handler, {disabled, jslogContext: 'override-content'});\n\n    if (contentProvider instanceof SDK.NetworkRequest.NetworkRequest) {\n      contextMenu.overrideSection().appendItem(i18nString(UIStrings.showOverrides), async () => {\n        await UI.ViewManager.ViewManager.instance().showView('navigator-overrides');\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.ShowAllOverridesFromNetworkContextMenu);\n      }, {jslogContext: 'show-overrides'});\n    }\n  }\n\n  private async handleOverrideContent(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      contentProvider: TextUtils.ContentProvider.ContentProvider): Promise<void> {\n    const networkPersistenceManager = NetworkPersistenceManager.instance();\n    const isSuccess = await networkPersistenceManager.setupAndStartLocalOverrides(uiSourceCode);\n    if (isSuccess) {\n      await Common.Revealer.reveal(uiSourceCode);\n    }\n\n    // Collect metrics: Context menu access point\n    if (contentProvider instanceof SDK.NetworkRequest.NetworkRequest) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.OverrideContentFromNetworkContextMenu);\n    } else if (contentProvider instanceof Workspace.UISourceCode.UISourceCode) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.OverrideContentFromSourcesContextMenu);\n    }\n    // Collect metrics: Content type\n    if (uiSourceCode.isFetchXHR()) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.OverrideFetchXHR);\n    } else if (contentProvider.contentType().isScript()) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.OverrideScript);\n    } else if (contentProvider.contentType().isDocument()) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.OverrideDocument);\n    } else if (contentProvider.contentType().isStyleSheet()) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.OverrideStyleSheet);\n    } else if (contentProvider.contentType().isImage()) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.OverrideImage);\n    } else if (contentProvider.contentType().isFont()) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.OverrideFont);\n    }\n  }\n\n  private async redirectOverrideToDeployedUiSourceCode(\n      deployedUiSourceCode: Workspace.UISourceCode.UISourceCode,\n      originalUiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.OverrideContentContextMenuSourceMappedWarning);\n    const deployedUrl = deployedUiSourceCode.url();\n    const deployedName = Bindings.ResourceUtils.displayNameForURL(deployedUrl);\n\n    const originalUrl = originalUiSourceCode.url();\n    const originalName = Bindings.ResourceUtils.displayNameForURL(originalUrl);\n\n    const warningMessage = i18nString(UIStrings.overrideSourceMappedFileWarning, {PH1: deployedName}) + '\\n' +\n        i18nString(UIStrings.overrideSourceMappedFileExplanation, {PH1: originalName});\n\n    const shouldJumpToDeployedFile = await UI.UIUtils.ConfirmDialog.show(\n        warningMessage, undefined, {jslogContext: 'override-source-mapped-file-warning'});\n\n    if (shouldJumpToDeployedFile) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.OverrideContentContextMenuRedirectToDeployed);\n      await this.handleOverrideContent(deployedUiSourceCode, deployedUiSourceCode);\n    }\n  }\n\n  private getDeployedUiSourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      Workspace.UISourceCode.UISourceCode|null {\n    const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance();\n\n    for (const deployedScript of debuggerWorkspaceBinding.scriptsForUISourceCode(uiSourceCode)) {\n      const deployedUiSourceCode = debuggerWorkspaceBinding.uiSourceCodeForScript(deployedScript);\n      if (deployedUiSourceCode) {\n        return deployedUiSourceCode;\n      }\n    }\n\n    const [deployedStylesUrl] = Bindings.SASSSourceMapping.SASSSourceMapping.uiSourceOrigin(uiSourceCode);\n\n    if (!deployedStylesUrl) {\n      return null;\n    }\n\n    const deployedUiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(deployedStylesUrl) ||\n        Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(\n            Common.ParsedURL.ParsedURL.urlWithoutHash(deployedStylesUrl) as Platform.DevToolsPath.UrlString);\n\n    return deployedUiSourceCode;\n  }\n}\n\n/**\n * @returns The script if the content provider is a UISourceCode and the DebuggerModel actually created one for the UISourceCode.\n */\nfunction getScript(contentProvider: TextUtils.ContentProvider.ContentProvider): SDK.Script.Script|null {\n  if (!(contentProvider instanceof Workspace.UISourceCode.UISourceCode)) {\n    return null;\n  }\n\n  // First we try to resolve the target and use that to get the script.\n  const target = Bindings.NetworkProject.NetworkProject.targetForUISourceCode(contentProvider);\n  const model = target?.model(SDK.DebuggerModel.DebuggerModel);\n  if (model) {\n    const resourceFile =\n        Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().scriptFile(contentProvider, model);\n    if (resourceFile?.script) {\n      return resourceFile.script;\n    }\n  }\n\n  // Otherwise we'll check all possible scripts for this UISourceCode and take the first one.\n  return Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().scriptsForUISourceCode(\n             contentProvider)[0] ??\n      null;\n}\n"],
  "mappings": "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",
  "names": ["deployedUiSourceCode"]
}
