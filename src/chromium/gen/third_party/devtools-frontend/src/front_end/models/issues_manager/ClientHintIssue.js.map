{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/issues_manager/ClientHintIssue.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {Issue, IssueCategory, IssueKind} from './Issue.js';\n\nimport {\n  resolveLazyDescription,\n  type MarkdownIssueDescription,\n  type LazyMarkdownIssueDescription,\n} from './MarkdownIssueDescription.js';\n\nconst UIStrings = {\n  /**\n   *@description Title for Client Hint specification url link\n   */\n  clientHintsInfrastructure: 'Client Hints Infrastructure',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/issues_manager/ClientHintIssue.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport class ClientHintIssue extends Issue {\n  private issueDetails: Protocol.Audits.ClientHintIssueDetails;\n\n  constructor(issueDetails: Protocol.Audits.ClientHintIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel) {\n    super(\n        {\n          code: Protocol.Audits.InspectorIssueCode.ClientHintIssue,\n          umaCode: [Protocol.Audits.InspectorIssueCode.ClientHintIssue, issueDetails.clientHintIssueReason].join('::'),\n        },\n        issuesModel);\n    this.issueDetails = issueDetails;\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.OTHER;\n  }\n\n  details(): Protocol.Audits.ClientHintIssueDetails {\n    return this.issueDetails;\n  }\n\n  getDescription(): MarkdownIssueDescription|null {\n    const description = issueDescriptions.get(this.issueDetails.clientHintIssueReason);\n    if (!description) {\n      return null;\n    }\n    return resolveLazyDescription(description);\n  }\n\n  override sources(): Iterable<Protocol.Audits.SourceCodeLocation> {\n    return [this.issueDetails.sourceCodeLocation];\n  }\n\n  primaryKey(): string {\n    return JSON.stringify(this.issueDetails);\n  }\n\n  getKind(): IssueKind {\n    return IssueKind.BREAKING_CHANGE;\n  }\n\n  static fromInspectorIssue(issuesModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      ClientHintIssue[] {\n    const details = inspectorIssue.details.clientHintIssueDetails;\n    if (!details) {\n      console.warn('Client Hint issue without details received.');\n      return [];\n    }\n    return [new ClientHintIssue(details, issuesModel)];\n  }\n}\n\nconst issueDescriptions: Map<Protocol.Audits.ClientHintIssueReason, LazyMarkdownIssueDescription> = new Map([\n  [\n    Protocol.Audits.ClientHintIssueReason.MetaTagAllowListInvalidOrigin,\n    {\n      file: 'clientHintMetaTagAllowListInvalidOrigin.md',\n      links: [{\n        link: 'https://wicg.github.io/client-hints-infrastructure/',\n        linkTitle: i18nLazyString(UIStrings.clientHintsInfrastructure),\n      }],\n    },\n  ],\n  [\n    Protocol.Audits.ClientHintIssueReason.MetaTagModifiedHTML,\n    {\n      file: 'clientHintMetaTagModifiedHTML.md',\n      links: [{\n        link: 'https://wicg.github.io/client-hints-infrastructure/',\n        linkTitle: i18nLazyString(UIStrings.clientHintsInfrastructure),\n      }],\n    },\n  ],\n]);\n"],
  "mappings": ";AAIA,YAAY,UAAU;AAEtB,YAAY,cAAc;AAE1B,SAAQ,OAAO,eAAe,iBAAgB;AAE9C;AAAA,EACE;AAAA,OAGK;AAEP,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA,EAIhB,2BAA2B;AAC7B;AACA,MAAM,OAAO,KAAK,KAAK,kBAAkB,4CAA4C,SAAS;AAC9F,MAAM,iBAAiB,KAAK,KAAK,iCAAiC,KAAK,QAAW,IAAI;AAE/E,aAAM,wBAAwB,MAAM;AAAA,EACjC;AAAA,EAER,YAAY,cAAsD,aAA0C;AAC1G;AAAA,MACI;AAAA,QACE,MAAM,SAAS,OAAO,mBAAmB;AAAA,QACzC,SAAS,CAAC,SAAS,OAAO,mBAAmB,iBAAiB,aAAa,qBAAqB,EAAE,KAAK,IAAI;AAAA,MAC7G;AAAA,MACA;AAAA,IAAW;AACf,SAAK,eAAe;AAAA,EACtB;AAAA,EAEA,cAA6B;AAC3B,WAAO,cAAc;AAAA,EACvB;AAAA,EAEA,UAAkD;AAChD,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,iBAAgD;AAC9C,UAAM,cAAc,kBAAkB,IAAI,KAAK,aAAa,qBAAqB;AACjF,QAAI,CAAC,aAAa;AAChB,aAAO;AAAA,IACT;AACA,WAAO,uBAAuB,WAAW;AAAA,EAC3C;AAAA,EAES,UAAwD;AAC/D,WAAO,CAAC,KAAK,aAAa,kBAAkB;AAAA,EAC9C;AAAA,EAEA,aAAqB;AACnB,WAAO,KAAK,UAAU,KAAK,YAAY;AAAA,EACzC;AAAA,EAEA,UAAqB;AACnB,WAAO,UAAU;AAAA,EACnB;AAAA,EAEA,OAAO,mBAAmB,aAA0C,gBAC9C;AACpB,UAAM,UAAU,eAAe,QAAQ;AACvC,QAAI,CAAC,SAAS;AACZ,cAAQ,KAAK,6CAA6C;AAC1D,aAAO,CAAC;AAAA,IACV;AACA,WAAO,CAAC,IAAI,gBAAgB,SAAS,WAAW,CAAC;AAAA,EACnD;AACF;AAEA,MAAM,oBAA8F,oBAAI,IAAI;AAAA,EAC1G;AAAA,IACE,SAAS,OAAO,sBAAsB;AAAA,IACtC;AAAA,MACE,MAAM;AAAA,MACN,OAAO,CAAC;AAAA,QACN,MAAM;AAAA,QACN,WAAW,eAAe,UAAU,yBAAyB;AAAA,MAC/D,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA;AAAA,IACE,SAAS,OAAO,sBAAsB;AAAA,IACtC;AAAA,MACE,MAAM;AAAA,MACN,OAAO,CAAC;AAAA,QACN,MAAM;AAAA,QACN,WAAW,eAAe,UAAU,yBAAyB;AAAA,MAC/D,CAAC;AAAA,IACH;AAAA,EACF;AACF,CAAC;",
  "names": []
}
