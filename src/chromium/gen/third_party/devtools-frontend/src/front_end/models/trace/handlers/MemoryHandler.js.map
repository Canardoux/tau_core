{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/models/trace/handlers/MemoryHandler.ts"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Types from '../types/types.js';\n\nexport interface MemoryData {\n  updateCountersByProcess: Map<Types.Events.ProcessID, Types.Events.UpdateCounters[]>;\n}\n\nconst updateCountersByProcess: MemoryData['updateCountersByProcess'] = new Map();\n\nexport function reset(): void {\n  updateCountersByProcess.clear();\n}\n\nexport function handleEvent(event: Types.Events.Event): void {\n  if (Types.Events.isUpdateCounters(event)) {\n    const countersForProcess = Platform.MapUtilities.getWithDefault(updateCountersByProcess, event.pid, () => []);\n    countersForProcess.push(event);\n    updateCountersByProcess.set(event.pid, countersForProcess);\n  }\n}\n\nexport async function finalize(): Promise<void> {\n}\n\nexport function data(): MemoryData {\n  return {updateCountersByProcess};\n}\n"],
  "mappings": ";AAIA,YAAY,cAAc;AAC1B,YAAY,WAAW;AAMvB,MAAM,0BAAiE,oBAAI,IAAI;AAExE,gBAAS,QAAc;AAC5B,0BAAwB,MAAM;AAChC;AAEO,gBAAS,YAAY,OAAiC;AAC3D,MAAI,MAAM,OAAO,iBAAiB,KAAK,GAAG;AACxC,UAAM,qBAAqB,SAAS,aAAa,eAAe,yBAAyB,MAAM,KAAK,MAAM,CAAC,CAAC;AAC5G,uBAAmB,KAAK,KAAK;AAC7B,4BAAwB,IAAI,MAAM,KAAK,kBAAkB;AAAA,EAC3D;AACF;AAEA,sBAAsB,WAA0B;AAChD;AAEO,gBAAS,OAAmB;AACjC,SAAO,EAAC,wBAAuB;AACjC;",
  "names": []
}
