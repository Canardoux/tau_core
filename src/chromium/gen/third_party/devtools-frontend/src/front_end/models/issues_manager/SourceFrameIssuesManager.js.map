{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/issues_manager/SourceFrameIssuesManager.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\n\nimport {\n  ContentSecurityPolicyIssue,\n  trustedTypesPolicyViolationCode,\n  trustedTypesSinkViolationCode,\n} from './ContentSecurityPolicyIssue.js';\nimport {type Issue, type IssueKind, toZeroBasedLocation} from './Issue.js';\nimport type {IssueAddedEvent, IssuesManager} from './IssuesManager.js';\nimport {Events} from './IssuesManagerEvents.js';\nimport {getIssueTitleFromMarkdownDescription} from './MarkdownIssueDescription.js';\nimport {PropertyRuleIssue} from './PropertyRuleIssue.js';\nimport {lateImportStylesheetLoadingCode, type StylesheetLoadingIssue} from './StylesheetLoadingIssue.js';\n\nexport class SourceFrameIssuesManager {\n  #sourceFrameMessageManager = new Bindings.PresentationConsoleMessageHelper.PresentationSourceFrameMessageManager();\n  constructor(private readonly issuesManager: IssuesManager) {\n    this.issuesManager.addEventListener(Events.ISSUE_ADDED, this.#onIssueAdded, this);\n    this.issuesManager.addEventListener(Events.FULL_UPDATE_REQUIRED, this.#onFullUpdateRequired, this);\n  }\n\n  #onIssueAdded(event: Common.EventTarget.EventTargetEvent<IssueAddedEvent>): void {\n    const {issue} = event.data;\n    void this.#addIssue(issue);\n  }\n\n  async #addIssue(issue: Issue): Promise<void> {\n    if (!this.#isTrustedTypeIssue(issue) && !this.#isLateImportIssue(issue) && !this.#isPropertyRuleIssue(issue)) {\n      return;\n    }\n    const issuesModel = issue.model();\n    if (!issuesModel) {\n      return;\n    }\n    const srcLocation = toZeroBasedLocation(issue.details().sourceCodeLocation);\n    const description = issue.getDescription();\n    if (!description || !srcLocation) {\n      return;\n    }\n    const messageText = await getIssueTitleFromMarkdownDescription(description);\n    if (!messageText) {\n      return;\n    }\n    const clickHandler = (): void => {\n      void Common.Revealer.reveal(issue);\n    };\n    this.#sourceFrameMessageManager.addMessage(\n        new IssueMessage(messageText, issue.getKind(), clickHandler), {\n          line: srcLocation.lineNumber,\n          column: srcLocation.columnNumber ?? -1,\n          url: srcLocation.url,\n          scriptId: srcLocation.scriptId,\n        },\n        issuesModel.target());\n  }\n\n  #onFullUpdateRequired(): void {\n    this.#resetMessages();\n    const issues = this.issuesManager.issues();\n    for (const issue of issues) {\n      void this.#addIssue(issue);\n    }\n  }\n\n  #isTrustedTypeIssue(issue: Issue): issue is ContentSecurityPolicyIssue {\n    return issue instanceof ContentSecurityPolicyIssue && issue.code() === trustedTypesSinkViolationCode ||\n        issue.code() === trustedTypesPolicyViolationCode;\n  }\n\n  #isPropertyRuleIssue(issue: Issue): issue is PropertyRuleIssue {\n    return issue instanceof PropertyRuleIssue;\n  }\n\n  #isLateImportIssue(issue: Issue): issue is StylesheetLoadingIssue {\n    return issue.code() === lateImportStylesheetLoadingCode;\n  }\n\n  #resetMessages(): void {\n    this.#sourceFrameMessageManager.clear();\n  }\n}\n\nexport class IssueMessage extends Workspace.UISourceCode.Message {\n  #kind: IssueKind;\n  constructor(title: string, kind: IssueKind, clickHandler: () => void) {\n    super(Workspace.UISourceCode.Message.Level.ISSUE, title, clickHandler);\n    this.#kind = kind;\n  }\n\n  getIssueKind(): IssueKind {\n    return this.#kind;\n  }\n}\n"],
  "mappings": ";AAIA,YAAY,YAAY;AACxB,YAAY,cAAc;AAC1B,YAAY,eAAe;AAE3B;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,OACK;AACP,SAAoC,2BAA0B;AAE9D,SAAQ,cAAa;AACrB,SAAQ,4CAA2C;AACnD,SAAQ,yBAAwB;AAChC,SAAQ,uCAAmE;AAEpE,aAAM,yBAAyB;AAAA,EAEpC,YAA6B,eAA8B;AAA9B;AAC3B,SAAK,cAAc,iBAAiB,OAAO,aAAa,KAAK,eAAe,IAAI;AAChF,SAAK,cAAc,iBAAiB,OAAO,sBAAsB,KAAK,uBAAuB,IAAI;AAAA,EACnG;AAAA,EAJA,6BAA6B,IAAI,SAAS,iCAAiC,sCAAsC;AAAA,EAMjH,cAAc,OAAmE;AAC/E,UAAM,EAAC,MAAK,IAAI,MAAM;AACtB,SAAK,KAAK,UAAU,KAAK;AAAA,EAC3B;AAAA,EAEA,MAAM,UAAU,OAA6B;AAC3C,QAAI,CAAC,KAAK,oBAAoB,KAAK,KAAK,CAAC,KAAK,mBAAmB,KAAK,KAAK,CAAC,KAAK,qBAAqB,KAAK,GAAG;AAC5G;AAAA,IACF;AACA,UAAM,cAAc,MAAM,MAAM;AAChC,QAAI,CAAC,aAAa;AAChB;AAAA,IACF;AACA,UAAM,cAAc,oBAAoB,MAAM,QAAQ,EAAE,kBAAkB;AAC1E,UAAM,cAAc,MAAM,eAAe;AACzC,QAAI,CAAC,eAAe,CAAC,aAAa;AAChC;AAAA,IACF;AACA,UAAM,cAAc,MAAM,qCAAqC,WAAW;AAC1E,QAAI,CAAC,aAAa;AAChB;AAAA,IACF;AACA,UAAM,eAAe,MAAY;AAC/B,WAAK,OAAO,SAAS,OAAO,KAAK;AAAA,IACnC;AACA,SAAK,2BAA2B;AAAA,MAC5B,IAAI,aAAa,aAAa,MAAM,QAAQ,GAAG,YAAY;AAAA,MAAG;AAAA,QAC5D,MAAM,YAAY;AAAA,QAClB,QAAQ,YAAY,gBAAgB;AAAA,QACpC,KAAK,YAAY;AAAA,QACjB,UAAU,YAAY;AAAA,MACxB;AAAA,MACA,YAAY,OAAO;AAAA,IAAC;AAAA,EAC1B;AAAA,EAEA,wBAA8B;AAC5B,SAAK,eAAe;AACpB,UAAM,SAAS,KAAK,cAAc,OAAO;AACzC,eAAW,SAAS,QAAQ;AAC1B,WAAK,KAAK,UAAU,KAAK;AAAA,IAC3B;AAAA,EACF;AAAA,EAEA,oBAAoB,OAAmD;AACrE,WAAO,iBAAiB,8BAA8B,MAAM,KAAK,MAAM,iCACnE,MAAM,KAAK,MAAM;AAAA,EACvB;AAAA,EAEA,qBAAqB,OAA0C;AAC7D,WAAO,iBAAiB;AAAA,EAC1B;AAAA,EAEA,mBAAmB,OAA+C;AAChE,WAAO,MAAM,KAAK,MAAM;AAAA,EAC1B;AAAA,EAEA,iBAAuB;AACrB,SAAK,2BAA2B,MAAM;AAAA,EACxC;AACF;AAEO,aAAM,qBAAqB,UAAU,aAAa,QAAQ;AAAA,EAC/D;AAAA,EACA,YAAY,OAAe,MAAiB,cAA0B;AACpE,UAAM,UAAU,aAAa,QAAQ,MAAM,OAAO,OAAO,YAAY;AACrE,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,eAA0B;AACxB,WAAO,KAAK;AAAA,EACd;AACF;",
  "names": []
}
