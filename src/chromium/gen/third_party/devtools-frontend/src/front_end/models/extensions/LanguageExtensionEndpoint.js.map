{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/extensions/LanguageExtensionEndpoint.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type {Chrome} from '../../../extension-api/ExtensionAPI.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../bindings/bindings.js';\n\nimport {PrivateAPI} from './ExtensionAPI.js';\nimport {ExtensionEndpoint} from './ExtensionEndpoint.js';\n\nclass LanguageExtensionEndpointImpl extends ExtensionEndpoint {\n  private plugin: LanguageExtensionEndpoint;\n  constructor(plugin: LanguageExtensionEndpoint, port: MessagePort) {\n    super(port);\n    this.plugin = plugin;\n  }\n  protected override handleEvent({event}: {event: string}): void {\n    switch (event) {\n      case PrivateAPI.LanguageExtensionPluginEvents.UnregisteredLanguageExtensionPlugin: {\n        this.disconnect();\n        const {pluginManager} = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance();\n        pluginManager.removePlugin(this.plugin);\n        break;\n      }\n    }\n  }\n}\n\nexport class LanguageExtensionEndpoint implements Bindings.DebuggerLanguagePlugins.DebuggerLanguagePlugin {\n  private readonly supportedScriptTypes: {\n    language: string,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    symbol_types: Array<string>,\n  };\n  private readonly endpoint: LanguageExtensionEndpointImpl;\n  private readonly extensionOrigin: string;\n  readonly allowFileAccess: boolean;\n  readonly name: string;\n\n  constructor(\n      allowFileAccess: boolean, extensionOrigin: string, name: string, supportedScriptTypes: {\n        language: string,\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        symbol_types: Array<string>,\n      },\n      port: MessagePort) {\n    this.name = name;\n    this.extensionOrigin = extensionOrigin;\n    this.supportedScriptTypes = supportedScriptTypes;\n    this.endpoint = new LanguageExtensionEndpointImpl(this, port);\n    this.allowFileAccess = allowFileAccess;\n  }\n\n  canAccessURL(url: string): boolean {\n    try {\n      return this.allowFileAccess || new URL(url).protocol !== 'file:';\n    } catch (e) {\n      return false;\n    }\n  }\n\n  handleScript(script: SDK.Script.Script): boolean {\n    try {\n      if (!this.canAccessURL(script.contentURL()) || (script.hasSourceURL && !this.canAccessURL(script.sourceURL)) ||\n          (script.debugSymbols?.externalURL && !this.canAccessURL(script.debugSymbols.externalURL))) {\n        return false;\n      }\n    } catch (e) {\n      return false;\n    }\n    const language = script.scriptLanguage();\n    return language !== null && script.debugSymbols !== null && language === this.supportedScriptTypes.language &&\n        this.supportedScriptTypes.symbol_types.includes(script.debugSymbols.type);\n  }\n\n  createPageResourceLoadInitiator(): SDK.PageResourceLoader.PageResourceLoadInitiator {\n    return {\n      target: null,\n      frameId: null,\n      extensionId: this.extensionOrigin,\n      initiatorUrl: this.extensionOrigin as Platform.DevToolsPath.UrlString,\n    };\n  }\n\n  /** Notify the plugin about a new script\n   */\n  addRawModule(rawModuleId: string, symbolsURL: string, rawModule: Chrome.DevTools.RawModule): Promise<string[]> {\n    if (!this.canAccessURL(symbolsURL) || !this.canAccessURL(rawModule.url)) {\n      return Promise.resolve([]);\n    }\n    return this.endpoint.sendRequest(\n               PrivateAPI.LanguageExtensionPluginCommands.AddRawModule, {rawModuleId, symbolsURL, rawModule}) as\n        Promise<string[]>;\n  }\n\n  /**\n   * Notifies the plugin that a script is removed.\n   */\n  removeRawModule(rawModuleId: string): Promise<void> {\n    return this.endpoint.sendRequest(PrivateAPI.LanguageExtensionPluginCommands.RemoveRawModule, {rawModuleId}) as\n        Promise<void>;\n  }\n\n  /** Find locations in raw modules from a location in a source file\n   */\n  sourceLocationToRawLocation(sourceLocation: Chrome.DevTools.SourceLocation):\n      Promise<Chrome.DevTools.RawLocationRange[]> {\n    return this.endpoint.sendRequest(\n               PrivateAPI.LanguageExtensionPluginCommands.SourceLocationToRawLocation, {sourceLocation}) as\n        Promise<Chrome.DevTools.RawLocationRange[]>;\n  }\n\n  /** Find locations in source files from a location in a raw module\n   */\n  rawLocationToSourceLocation(rawLocation: Chrome.DevTools.RawLocation): Promise<Chrome.DevTools.SourceLocation[]> {\n    return this.endpoint.sendRequest(\n               PrivateAPI.LanguageExtensionPluginCommands.RawLocationToSourceLocation, {rawLocation}) as\n        Promise<Chrome.DevTools.SourceLocation[]>;\n  }\n\n  getScopeInfo(type: string): Promise<Chrome.DevTools.ScopeInfo> {\n    return this.endpoint.sendRequest(PrivateAPI.LanguageExtensionPluginCommands.GetScopeInfo, {type}) as\n        Promise<Chrome.DevTools.ScopeInfo>;\n  }\n\n  /** List all variables in lexical scope at a given location in a raw module\n   */\n  listVariablesInScope(rawLocation: Chrome.DevTools.RawLocation): Promise<Chrome.DevTools.Variable[]> {\n    return this.endpoint.sendRequest(PrivateAPI.LanguageExtensionPluginCommands.ListVariablesInScope, {rawLocation}) as\n        Promise<Chrome.DevTools.Variable[]>;\n  }\n\n  /** List all function names (including inlined frames) at location\n   */\n  getFunctionInfo(rawLocation: Chrome.DevTools.RawLocation): Promise<{\n    frames: Array<Chrome.DevTools.FunctionInfo>,\n  }> {\n    return this.endpoint.sendRequest(PrivateAPI.LanguageExtensionPluginCommands.GetFunctionInfo, {rawLocation}) as\n        Promise<{\n             frames: Array<Chrome.DevTools.FunctionInfo>,\n           }>;\n  }\n\n  /** Find locations in raw modules corresponding to the inline function\n   *  that rawLocation is in.\n   */\n  getInlinedFunctionRanges(rawLocation: Chrome.DevTools.RawLocation): Promise<Chrome.DevTools.RawLocationRange[]> {\n    return this.endpoint.sendRequest(\n               PrivateAPI.LanguageExtensionPluginCommands.GetInlinedFunctionRanges, {rawLocation}) as\n        Promise<Chrome.DevTools.RawLocationRange[]>;\n  }\n\n  /** Find locations in raw modules corresponding to inline functions\n   *  called by the function or inline frame that rawLocation is in.\n   */\n  getInlinedCalleesRanges(rawLocation: Chrome.DevTools.RawLocation): Promise<Chrome.DevTools.RawLocationRange[]> {\n    return this.endpoint.sendRequest(\n               PrivateAPI.LanguageExtensionPluginCommands.GetInlinedCalleesRanges, {rawLocation}) as\n        Promise<Chrome.DevTools.RawLocationRange[]>;\n  }\n\n  async getMappedLines(rawModuleId: string, sourceFileURL: string): Promise<number[]|undefined> {\n    return this.endpoint.sendRequest(\n        PrivateAPI.LanguageExtensionPluginCommands.GetMappedLines, {rawModuleId, sourceFileURL});\n  }\n\n  async evaluate(expression: string, context: Chrome.DevTools.RawLocation, stopId: number):\n      Promise<Chrome.DevTools.RemoteObject> {\n    return this.endpoint.sendRequest(\n        PrivateAPI.LanguageExtensionPluginCommands.FormatValue, {expression, context, stopId});\n  }\n\n  getProperties(objectId: Chrome.DevTools.RemoteObjectId): Promise<Chrome.DevTools.PropertyDescriptor[]> {\n    return this.endpoint.sendRequest(PrivateAPI.LanguageExtensionPluginCommands.GetProperties, {objectId});\n  }\n\n  releaseObject(objectId: Chrome.DevTools.RemoteObjectId): Promise<void> {\n    return this.endpoint.sendRequest(PrivateAPI.LanguageExtensionPluginCommands.ReleaseObject, {objectId});\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
