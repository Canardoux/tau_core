{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/bindings/SASSSourceMapping.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {ContentProviderBasedProject} from './ContentProviderBasedProject.js';\n\nimport {CSSWorkspaceBinding, type SourceMapping} from './CSSWorkspaceBinding.js';\nimport {NetworkProject} from './NetworkProject.js';\n\nexport class SASSSourceMapping implements SourceMapping {\n  readonly #sourceMapManager: SDK.SourceMapManager.SourceMapManager<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>;\n  readonly #project: ContentProviderBasedProject;\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n  readonly #bindings: Map<string, Binding>;\n\n  constructor(\n      target: SDK.Target.Target,\n      sourceMapManager: SDK.SourceMapManager.SourceMapManager<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>,\n      workspace: Workspace.Workspace.WorkspaceImpl) {\n    this.#sourceMapManager = sourceMapManager;\n    this.#project = new ContentProviderBasedProject(\n        workspace, 'cssSourceMaps:' + target.id(), Workspace.Workspace.projectTypes.Network, '',\n        false /* isServiceProject */);\n    NetworkProject.setTargetForProject(this.#project, target);\n\n    this.#bindings = new Map();\n\n    this.#eventListeners = [\n      this.#sourceMapManager.addEventListener(\n          SDK.SourceMapManager.Events.SourceMapAttached, this.sourceMapAttached, this),\n      this.#sourceMapManager.addEventListener(\n          SDK.SourceMapManager.Events.SourceMapDetached, this.sourceMapDetached, this),\n    ];\n  }\n\n  private sourceMapAttachedForTest(_sourceMap: SDK.SourceMap.SourceMap|null): void {\n  }\n\n  private async sourceMapAttached(\n      event: Common.EventTarget\n          .EventTargetEvent<{client: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader, sourceMap: SDK.SourceMap.SourceMap}>):\n      Promise<void> {\n    const header = event.data.client;\n    const sourceMap = event.data.sourceMap;\n    const project = this.#project;\n    const bindings = this.#bindings;\n    for (const sourceURL of sourceMap.sourceURLs()) {\n      let binding = bindings.get(sourceURL);\n      if (!binding) {\n        binding = new Binding(project, sourceURL, header.createPageResourceLoadInitiator());\n        bindings.set(sourceURL, binding);\n      }\n      binding.addSourceMap(sourceMap, header.frameId);\n    }\n    await CSSWorkspaceBinding.instance().updateLocations(header);\n    this.sourceMapAttachedForTest(sourceMap);\n  }\n\n  private async sourceMapDetached(\n      event: Common.EventTarget\n          .EventTargetEvent<{client: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader, sourceMap: SDK.SourceMap.SourceMap}>):\n      Promise<void> {\n    const header = event.data.client;\n    const sourceMap = event.data.sourceMap;\n    const bindings = this.#bindings;\n    for (const sourceURL of sourceMap.sourceURLs()) {\n      const binding = bindings.get(sourceURL);\n      if (binding) {\n        binding.removeSourceMap(sourceMap, header.frameId);\n        if (!binding.getUiSourceCode()) {\n          bindings.delete(sourceURL);\n        }\n      }\n    }\n    await CSSWorkspaceBinding.instance().updateLocations(header);\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.CSSModel.CSSLocation): Workspace.UISourceCode.UILocation|null {\n    const header = rawLocation.header();\n    if (!header) {\n      return null;\n    }\n    const sourceMap = this.#sourceMapManager.sourceMapForClient(header);\n    if (!sourceMap) {\n      return null;\n    }\n    let {lineNumber, columnNumber} = rawLocation;\n    // If the source map maps the origin (line:0, column:0) but the CSS header is inline (in a HTML doc),\n    // then adjust the line and column numbers.\n    if (sourceMap.mapsOrigin() && header.isInline) {\n      lineNumber -= header.startLine;\n      if (lineNumber === 0) {\n        columnNumber -= header.startColumn;\n      }\n    }\n    const entry = sourceMap.findEntry(lineNumber, columnNumber);\n    if (!entry || !entry.sourceURL) {\n      return null;\n    }\n    const uiSourceCode = this.#project.uiSourceCodeForURL(entry.sourceURL);\n    if (!uiSourceCode) {\n      return null;\n    }\n    return uiSourceCode.uiLocation(entry.sourceLineNumber, entry.sourceColumnNumber);\n  }\n\n  uiLocationToRawLocations(uiLocation: Workspace.UISourceCode.UILocation): SDK.CSSModel.CSSLocation[] {\n    // TODO(crbug.com/1153123): Revisit the `#columnNumber || 0` and also preserve `undefined` for source maps?\n    const {uiSourceCode, lineNumber, columnNumber = 0} = uiLocation;\n    const binding = uiSourceCodeToBinding.get(uiSourceCode);\n    if (!binding) {\n      return [];\n    }\n    const locations: SDK.CSSModel.CSSLocation[] = [];\n    for (const sourceMap of binding.getReferringSourceMaps()) {\n      const entries = sourceMap.findReverseEntries(uiSourceCode.url(), lineNumber, columnNumber);\n      const header = this.#sourceMapManager.clientForSourceMap(sourceMap);\n      if (header) {\n        locations.push(\n            ...entries.map(entry => new SDK.CSSModel.CSSLocation(header, entry.lineNumber, entry.columnNumber)));\n      }\n    }\n    return locations;\n  }\n\n  static uiSourceOrigin(uiSourceCode: Workspace.UISourceCode.UISourceCode): Platform.DevToolsPath.UrlString[] {\n    const binding = uiSourceCodeToBinding.get(uiSourceCode);\n    if (binding) {\n      return binding.getReferringSourceMaps().map(sourceMap => sourceMap.compiledURL());\n    }\n    return [];\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    this.#project.dispose();\n  }\n}\n\nconst uiSourceCodeToBinding = new WeakMap<Workspace.UISourceCode.UISourceCode, Binding>();\n\nclass Binding {\n  readonly #project: ContentProviderBasedProject;\n  readonly #url: Platform.DevToolsPath.UrlString;\n  readonly #initiator: SDK.PageResourceLoader.PageResourceLoadInitiator;\n  referringSourceMaps: SDK.SourceMap.SourceMap[];\n  uiSourceCode: Workspace.UISourceCode.UISourceCode|null;\n\n  constructor(\n      project: ContentProviderBasedProject, url: Platform.DevToolsPath.UrlString,\n      initiator: SDK.PageResourceLoader.PageResourceLoadInitiator) {\n    this.#project = project;\n    this.#url = url;\n    this.#initiator = initiator;\n\n    this.referringSourceMaps = [];\n    this.uiSourceCode = null;\n  }\n\n  private recreateUISourceCodeIfNeeded(frameId: Protocol.Page.FrameId): void {\n    const sourceMap = this.referringSourceMaps[this.referringSourceMaps.length - 1];\n\n    const contentType = Common.ResourceType.resourceTypes.SourceMapStyleSheet;\n    const embeddedContent = sourceMap.embeddedContentByURL(this.#url);\n    const contentProvider = embeddedContent !== null ?\n        TextUtils.StaticContentProvider.StaticContentProvider.fromString(this.#url, contentType, embeddedContent) :\n        new SDK.CompilerSourceMappingContentProvider.CompilerSourceMappingContentProvider(\n            this.#url, contentType, this.#initiator);\n    const newUISourceCode = this.#project.createUISourceCode(this.#url, contentType);\n    uiSourceCodeToBinding.set(newUISourceCode, this);\n    const mimeType = Common.ResourceType.ResourceType.mimeFromURL(this.#url) || contentType.canonicalMimeType();\n    const metadata = typeof embeddedContent === 'string' ?\n        new Workspace.UISourceCode.UISourceCodeMetadata(null, embeddedContent.length) :\n        null;\n\n    if (this.uiSourceCode) {\n      NetworkProject.cloneInitialFrameAttribution(this.uiSourceCode, newUISourceCode);\n      this.#project.removeUISourceCode(this.uiSourceCode.url());\n    } else {\n      NetworkProject.setInitialFrameAttribution(newUISourceCode, frameId);\n    }\n    this.uiSourceCode = newUISourceCode;\n    this.#project.addUISourceCodeWithProvider(this.uiSourceCode, contentProvider, metadata, mimeType);\n  }\n\n  addSourceMap(sourceMap: SDK.SourceMap.SourceMap, frameId: Protocol.Page.FrameId): void {\n    if (this.uiSourceCode) {\n      NetworkProject.addFrameAttribution(this.uiSourceCode, frameId);\n    }\n    this.referringSourceMaps.push(sourceMap);\n    this.recreateUISourceCodeIfNeeded(frameId);\n  }\n\n  removeSourceMap(sourceMap: SDK.SourceMap.SourceMap, frameId: Protocol.Page.FrameId): void {\n    const uiSourceCode = (this.uiSourceCode as Workspace.UISourceCode.UISourceCode);\n    NetworkProject.removeFrameAttribution(uiSourceCode, frameId);\n    const lastIndex = this.referringSourceMaps.lastIndexOf(sourceMap);\n    if (lastIndex !== -1) {\n      this.referringSourceMaps.splice(lastIndex, 1);\n    }\n    if (!this.referringSourceMaps.length) {\n      this.#project.removeUISourceCode(uiSourceCode.url());\n      this.uiSourceCode = null;\n    } else {\n      this.recreateUISourceCodeIfNeeded(frameId);\n    }\n  }\n\n  getReferringSourceMaps(): Array<SDK.SourceMap.SourceMap> {\n    return this.referringSourceMaps;\n  }\n\n  getUiSourceCode(): Workspace.UISourceCode.UISourceCode|null {\n    return this.uiSourceCode;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
