{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/models/trace/handlers/WorkersHandler.ts"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Types from '../types/types.js';\n\nexport interface WorkersData {\n  workerSessionIdEvents: readonly Types.Events.TracingSessionIdForWorker[];\n  workerIdByThread: Map<Types.Events.ThreadID, Types.Events.WorkerId>;\n  workerURLById: Map<Types.Events.WorkerId, string>;\n}\n\nconst sessionIdEvents: Types.Events.TracingSessionIdForWorker[] = [];\nconst workerIdByThread: Map<Types.Events.ThreadID, Types.Events.WorkerId> = new Map();\nconst workerURLById: Map<Types.Events.WorkerId, string> = new Map();\n\nexport function reset(): void {\n  sessionIdEvents.length = 0;\n  workerIdByThread.clear();\n  workerURLById.clear();\n}\n\nexport function handleEvent(event: Types.Events.Event): void {\n  if (Types.Events.isTracingSessionIdForWorker(event)) {\n    sessionIdEvents.push(event);\n  }\n}\n\nexport async function finalize(): Promise<void> {\n  for (const sessionIdEvent of sessionIdEvents) {\n    if (!sessionIdEvent.args.data) {\n      continue;\n    }\n    workerIdByThread.set(sessionIdEvent.args.data.workerThreadId, sessionIdEvent.args.data.workerId);\n    workerURLById.set(sessionIdEvent.args.data.workerId, sessionIdEvent.args.data.url);\n  }\n}\n\nexport function data(): WorkersData {\n  return {\n    workerSessionIdEvents: sessionIdEvents,\n    workerIdByThread,\n    workerURLById,\n  };\n}\n"],
  "mappings": ";AAIA,YAAY,WAAW;AAQvB,MAAM,kBAA4D,CAAC;AACnE,MAAM,mBAAsE,oBAAI,IAAI;AACpF,MAAM,gBAAoD,oBAAI,IAAI;AAE3D,gBAAS,QAAc;AAC5B,kBAAgB,SAAS;AACzB,mBAAiB,MAAM;AACvB,gBAAc,MAAM;AACtB;AAEO,gBAAS,YAAY,OAAiC;AAC3D,MAAI,MAAM,OAAO,4BAA4B,KAAK,GAAG;AACnD,oBAAgB,KAAK,KAAK;AAAA,EAC5B;AACF;AAEA,sBAAsB,WAA0B;AAC9C,aAAW,kBAAkB,iBAAiB;AAC5C,QAAI,CAAC,eAAe,KAAK,MAAM;AAC7B;AAAA,IACF;AACA,qBAAiB,IAAI,eAAe,KAAK,KAAK,gBAAgB,eAAe,KAAK,KAAK,QAAQ;AAC/F,kBAAc,IAAI,eAAe,KAAK,KAAK,UAAU,eAAe,KAAK,KAAK,GAAG;AAAA,EACnF;AACF;AAEO,gBAAS,OAAoB;AAClC,SAAO;AAAA,IACL,uBAAuB;AAAA,IACvB;AAAA,IACA;AAAA,EACF;AACF;",
  "names": []
}
