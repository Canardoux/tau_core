{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/persistence/EditFileSystemView.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport editFileSystemViewStyles from './editFileSystemView.css.js';\nimport {Events, IsolatedFileSystemManager} from './IsolatedFileSystemManager.js';\nimport type {PlatformFileSystem} from './PlatformFileSystem.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Edit File System View of the Workspace settings in Settings to indicate that the following string is a folder URL\n   */\n  url: 'URL',\n  /**\n   *@description Text in Edit File System View of the Workspace settings in Settings\n   */\n  excludedFolders: 'Excluded sub-folders',\n  /**\n   *@description Text to add something\n   */\n  add: 'Add folder',\n  /**\n   * @description Placeholder text for an area of the UI that shows which folders have been excluded\n   * from being show in DevTools. When the user has not yet chosen any folders to exclude, this text\n   * is shown.\n   */\n  none: 'None',\n  /**\n   *@description Text in Edit File System View of the Workspace settings in Settings\n   *@example {file/path/} PH1\n   */\n  sViaDevtools: '{PH1} (via .devtools)',\n  /**\n   *@description Text in Edit File System View of the Workspace settings in Settings\n   */\n  folderPath: 'Folder path',\n  /**\n   *@description Error message when a file system path is an empty string.\n   */\n  enterAPath: 'Enter a path',\n  /**\n   *@description Error message when a file system path is identical to an existing path.\n   */\n  enterAUniquePath: 'Enter a unique path',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/persistence/EditFileSystemView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class EditFileSystemView extends UI.Widget.VBox implements UI.ListWidget.Delegate<string> {\n  private readonly fileSystemPath: Platform.DevToolsPath.UrlString;\n  private excludedFolders: Platform.DevToolsPath.EncodedPathString[];\n  private readonly eventListeners: Common.EventTarget.EventDescriptor[];\n  private readonly excludedFoldersList: UI.ListWidget.ListWidget<string>;\n  private muteUpdate?: boolean;\n  private excludedFolderEditor?: UI.ListWidget.Editor<string>;\n  constructor(fileSystemPath: Platform.DevToolsPath.UrlString) {\n    super(true);\n\n    this.fileSystemPath = fileSystemPath;\n\n    this.excludedFolders = [];\n\n    this.eventListeners = [\n      IsolatedFileSystemManager.instance().addEventListener(Events.ExcludedFolderAdded, this.update, this),\n      IsolatedFileSystemManager.instance().addEventListener(Events.ExcludedFolderRemoved, this.update, this),\n    ];\n\n    const excludedFoldersHeader = this.contentElement.createChild('div', 'excluded-folder-header');\n    excludedFoldersHeader.createChild('span').textContent = i18nString(UIStrings.url);\n    excludedFoldersHeader.createChild('span', 'excluded-folder-url').textContent = fileSystemPath;\n\n    const excludeSubFoldersText = this.contentElement.createChild('span', 'exclude-subfolders-text');\n    excludeSubFoldersText.textContent = i18nString(UIStrings.excludedFolders);\n\n    this.excludedFoldersList = new UI.ListWidget.ListWidget(this);\n    this.excludedFoldersList.element.classList.add('file-system-list');\n\n    const excludedFoldersPlaceholder = document.createElement('div');\n    excludedFoldersPlaceholder.classList.add('file-system-list-empty');\n    excludedFoldersPlaceholder.textContent = i18nString(UIStrings.none);\n    this.excludedFoldersList.setEmptyPlaceholder(excludedFoldersPlaceholder);\n    this.excludedFoldersList.show(this.contentElement);\n\n    const addButton = UI.UIUtils.createTextButton(\n        i18nString(UIStrings.add), this.addExcludedFolderButtonClicked.bind(this),\n        {className: 'add-button', jslogContext: 'settings.add-excluded-folder'});\n\n    this.contentElement.appendChild(addButton);\n\n    this.update();\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.eventListeners);\n  }\n\n  private getFileSystem(): PlatformFileSystem {\n    return IsolatedFileSystemManager.instance().fileSystem(this.fileSystemPath) as PlatformFileSystem;\n  }\n\n  override update(): void {\n    if (this.muteUpdate) {\n      return;\n    }\n\n    this.excludedFoldersList.clear();\n    this.excludedFolders = [];\n    for (const folder of this.getFileSystem().excludedFolders().values()) {\n      this.excludedFolders.push(folder);\n      this.excludedFoldersList.appendItem(folder, true);\n    }\n  }\n\n  private addExcludedFolderButtonClicked(): void {\n    this.excludedFoldersList.addNewItem(0, '');\n  }\n\n  renderItem(item: string, editable: boolean): Element {\n    const element = document.createElement('div');\n    element.classList.add('file-system-list-item');\n    const pathPrefix = editable ? item : i18nString(UIStrings.sViaDevtools, {PH1: item}) as string;\n    const pathPrefixElement = element.createChild('div', 'file-system-value');\n    pathPrefixElement.textContent = pathPrefix;\n    UI.Tooltip.Tooltip.install(pathPrefixElement, pathPrefix);\n    return element;\n  }\n\n  removeItemRequested(_item: string, index: number): void {\n    this.getFileSystem().removeExcludedFolder(this.excludedFolders[index]);\n  }\n\n  commitEdit(item: Platform.DevToolsPath.EncodedPathString, editor: UI.ListWidget.Editor<string>, isNew: boolean):\n      void {\n    this.muteUpdate = true;\n    if (!isNew) {\n      this.getFileSystem().removeExcludedFolder(item);\n    }\n    this.getFileSystem().addExcludedFolder(\n        this.normalizePrefix(editor.control('path-prefix').value) as Platform.DevToolsPath.EncodedPathString);\n    this.muteUpdate = false;\n    this.update();\n  }\n\n  beginEdit(item: string): UI.ListWidget.Editor<string> {\n    const editor = this.createExcludedFolderEditor();\n    editor.control('path-prefix').value = item;\n    return editor;\n  }\n\n  private createExcludedFolderEditor(): UI.ListWidget.Editor<string> {\n    if (this.excludedFolderEditor) {\n      return this.excludedFolderEditor;\n    }\n\n    const editor = new UI.ListWidget.Editor<string>();\n    this.excludedFolderEditor = editor;\n    const content = editor.contentElement();\n\n    const titles = content.createChild('div', 'file-system-edit-row');\n    titles.createChild('div', 'file-system-value').textContent = i18nString(UIStrings.folderPath);\n\n    const fields = content.createChild('div', 'file-system-edit-row');\n    fields.createChild('div', 'file-system-value')\n        .appendChild(editor.createInput('path-prefix', 'text', '/path/to/folder/', pathPrefixValidator.bind(this)));\n\n    return editor;\n\n    function pathPrefixValidator(\n        this: EditFileSystemView, _item: string, index: number,\n        input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      const prefix = this.normalizePrefix(input.value.trim());\n\n      if (!prefix) {\n        return {valid: false, errorMessage: i18nString(UIStrings.enterAPath)};\n      }\n\n      const configurableCount = this.getFileSystem().excludedFolders().size;\n      for (let i = 0; i < configurableCount; ++i) {\n        if (i !== index && this.excludedFolders[i] === prefix) {\n          return {valid: false, errorMessage: i18nString(UIStrings.enterAUniquePath)};\n        }\n      }\n      return {valid: true, errorMessage: undefined};\n    }\n  }\n\n  private normalizePrefix(prefix: string): string {\n    if (!prefix) {\n      return '';\n    }\n    return prefix + (prefix[prefix.length - 1] === '/' ? '' : '/');\n  }\n  override wasShown(): void {\n    super.wasShown();\n    this.excludedFoldersList.registerCSSFiles([editFileSystemViewStyles]);\n    this.registerCSSFiles([editFileSystemViewStyles]);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
