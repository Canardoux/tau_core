{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/models/trace/root-causes/RootCauses.ts"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../../generated/protocol.js';\n\nimport {LayoutShiftRootCauses} from './LayoutShift.js';\n\nexport type RootCauseProtocolInterface = {\n  getInitiatorForRequest(url: string): Protocol.Network.Initiator|null,\n  pushNodesByBackendIdsToFrontend(backendNodeIds: Protocol.DOM.BackendNodeId[]): Promise<Protocol.DOM.NodeId[]>,\n  getNode(nodeId: Protocol.DOM.NodeId): Promise<Protocol.DOM.Node|null>,\n  getComputedStyleForNode(nodeId: Protocol.DOM.NodeId): Promise<Protocol.CSS.CSSComputedStyleProperty[]>,\n  getMatchedStylesForNode(nodeId: Protocol.DOM.NodeId): Promise<Protocol.CSS.GetMatchedStylesForNodeResponse>,\n  fontFaceForSource(url: string): Protocol.CSS.FontFace|undefined,\n};\n\nexport class RootCauses {\n  readonly layoutShifts: LayoutShiftRootCauses;\n\n  constructor(protocolInterface: RootCauseProtocolInterface) {\n    this.layoutShifts = new LayoutShiftRootCauses(protocolInterface);\n  }\n}\n\nexport {LayoutShiftRootCauses} from './LayoutShift.js';\n"],
  "mappings": ";AAMA,SAAQ,6BAA4B;AAW7B,aAAM,WAAW;AAAA,EACb;AAAA,EAET,YAAY,mBAA+C;AACzD,SAAK,eAAe,IAAI,sBAAsB,iBAAiB;AAAA,EACjE;AACF;AAEA,SAAQ,6BAA4B;",
  "names": []
}
