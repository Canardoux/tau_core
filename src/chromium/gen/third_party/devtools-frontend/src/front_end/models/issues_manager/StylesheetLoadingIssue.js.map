{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/issues_manager/StylesheetLoadingIssue.ts"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {Issue, IssueCategory, IssueKind} from './Issue.js';\nimport type {MarkdownIssueDescription} from './MarkdownIssueDescription.js';\n\nexport const lateImportStylesheetLoadingCode = [\n  Protocol.Audits.InspectorIssueCode.StylesheetLoadingIssue,\n  Protocol.Audits.StyleSheetLoadingIssueReason.LateImportRule,\n].join('::');\n\nexport class StylesheetLoadingIssue extends Issue {\n  #issueDetails: Protocol.Audits.StylesheetLoadingIssueDetails;\n  constructor(issueDetails: Protocol.Audits.StylesheetLoadingIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel) {\n    const code =\n        `${Protocol.Audits.InspectorIssueCode.StylesheetLoadingIssue}::${issueDetails.styleSheetLoadingIssueReason}`;\n    super(code, issuesModel);\n    this.#issueDetails = issueDetails;\n  }\n\n  override sources(): Array<Protocol.Audits.SourceCodeLocation> {\n    return [this.#issueDetails.sourceCodeLocation];\n  }\n  override requests(): Array<Protocol.Audits.AffectedRequest> {\n    if (!this.#issueDetails.failedRequestInfo) {\n      return [];\n    }\n    const {url, requestId} = this.#issueDetails.failedRequestInfo;\n    if (!requestId) {\n      return [];\n    }\n    return [{url, requestId}];\n  }\n\n  details(): Protocol.Audits.StylesheetLoadingIssueDetails {\n    return this.#issueDetails;\n  }\n\n  primaryKey(): string {\n    return JSON.stringify(this.#issueDetails);\n  }\n\n  getDescription(): MarkdownIssueDescription {\n    switch (this.#issueDetails.styleSheetLoadingIssueReason) {\n      case Protocol.Audits.StyleSheetLoadingIssueReason.LateImportRule:\n        return {\n          file: 'stylesheetLateImport.md',\n          links: [],\n        };\n      case Protocol.Audits.StyleSheetLoadingIssueReason.RequestFailed:\n        return {\n          file: 'stylesheetRequestFailed.md',\n          links: [],\n        };\n    }\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.OTHER;\n  }\n\n  getKind(): IssueKind {\n    return IssueKind.PAGE_ERROR;\n  }\n\n  static fromInspectorIssue(issueModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      StylesheetLoadingIssue[] {\n    const stylesheetLoadingDetails = inspectorIssue.details.stylesheetLoadingIssueDetails;\n    if (!stylesheetLoadingDetails) {\n      console.warn('Stylesheet loading issue without details received');\n      return [];\n    }\n    return [new StylesheetLoadingIssue(stylesheetLoadingDetails, issueModel)];\n  }\n}\n"],
  "mappings": ";AAKA,YAAY,cAAc;AAE1B,SAAQ,OAAO,eAAe,iBAAgB;AAGvC,aAAM,kCAAkC;AAAA,EAC7C,SAAS,OAAO,mBAAmB;AAAA,EACnC,SAAS,OAAO,6BAA6B;AAC/C,EAAE,KAAK,IAAI;AAEJ,aAAM,+BAA+B,MAAM;AAAA,EAChD;AAAA,EACA,YAAY,cAA6D,aAA0C;AACjH,UAAM,OACF,GAAG,SAAS,OAAO,mBAAmB,sBAAsB,KAAK,aAAa,4BAA4B;AAC9G,UAAM,MAAM,WAAW;AACvB,SAAK,gBAAgB;AAAA,EACvB;AAAA,EAES,UAAqD;AAC5D,WAAO,CAAC,KAAK,cAAc,kBAAkB;AAAA,EAC/C;AAAA,EACS,WAAmD;AAC1D,QAAI,CAAC,KAAK,cAAc,mBAAmB;AACzC,aAAO,CAAC;AAAA,IACV;AACA,UAAM,EAAC,KAAK,UAAS,IAAI,KAAK,cAAc;AAC5C,QAAI,CAAC,WAAW;AACd,aAAO,CAAC;AAAA,IACV;AACA,WAAO,CAAC,EAAC,KAAK,UAAS,CAAC;AAAA,EAC1B;AAAA,EAEA,UAAyD;AACvD,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,aAAqB;AACnB,WAAO,KAAK,UAAU,KAAK,aAAa;AAAA,EAC1C;AAAA,EAEA,iBAA2C;AACzC,YAAQ,KAAK,cAAc,8BAA8B;AAAA,MACvD,KAAK,SAAS,OAAO,6BAA6B;AAChD,eAAO;AAAA,UACL,MAAM;AAAA,UACN,OAAO,CAAC;AAAA,QACV;AAAA,MACF,KAAK,SAAS,OAAO,6BAA6B;AAChD,eAAO;AAAA,UACL,MAAM;AAAA,UACN,OAAO,CAAC;AAAA,QACV;AAAA,IACJ;AAAA,EACF;AAAA,EAEA,cAA6B;AAC3B,WAAO,cAAc;AAAA,EACvB;AAAA,EAEA,UAAqB;AACnB,WAAO,UAAU;AAAA,EACnB;AAAA,EAEA,OAAO,mBAAmB,YAAyC,gBACtC;AAC3B,UAAM,2BAA2B,eAAe,QAAQ;AACxD,QAAI,CAAC,0BAA0B;AAC7B,cAAQ,KAAK,mDAAmD;AAChE,aAAO,CAAC;AAAA,IACV;AACA,WAAO,CAAC,IAAI,uBAAuB,0BAA0B,UAAU,CAAC;AAAA,EAC1E;AACF;",
  "names": []
}
