{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/bindings/CSSWorkspaceBinding.ts"],
  "sourcesContent": ["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Workspace from '../workspace/workspace.js';\n\nimport {\n  type LiveLocation as LiveLocationInterface,\n  type LiveLocationPool,\n  LiveLocationWithPool,\n} from './LiveLocation.js';\nimport type {ResourceMapping} from './ResourceMapping.js';\nimport {SASSSourceMapping} from './SASSSourceMapping.js';\nimport {StylesSourceMapping} from './StylesSourceMapping.js';\n\nlet cssWorkspaceBindingInstance: CSSWorkspaceBinding|undefined;\n\nexport class CSSWorkspaceBinding implements SDK.TargetManager.SDKModelObserver<SDK.CSSModel.CSSModel> {\n  readonly #resourceMapping: ResourceMapping;\n  readonly #modelToInfo: Map<SDK.CSSModel.CSSModel, ModelInfo>;\n  readonly #liveLocationPromises: Set<Promise<unknown>>;\n\n  private constructor(resourceMapping: ResourceMapping, targetManager: SDK.TargetManager.TargetManager) {\n    this.#resourceMapping = resourceMapping;\n    this.#modelToInfo = new Map();\n    targetManager.observeModels(SDK.CSSModel.CSSModel, this);\n\n    this.#liveLocationPromises = new Set();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    resourceMapping: ResourceMapping|null,\n    targetManager: SDK.TargetManager.TargetManager|null,\n  } = {forceNew: null, resourceMapping: null, targetManager: null}): CSSWorkspaceBinding {\n    const {forceNew, resourceMapping, targetManager} = opts;\n    if (!cssWorkspaceBindingInstance || forceNew) {\n      if (!resourceMapping || !targetManager) {\n        throw new Error(`Unable to create CSSWorkspaceBinding: resourceMapping and targetManager must be provided: ${\n            new Error().stack}`);\n      }\n\n      cssWorkspaceBindingInstance = new CSSWorkspaceBinding(resourceMapping, targetManager);\n    }\n\n    return cssWorkspaceBindingInstance;\n  }\n\n  static removeInstance(): void {\n    cssWorkspaceBindingInstance = undefined;\n  }\n\n  get modelToInfo(): Map<SDK.CSSModel.CSSModel, ModelInfo> {\n    return this.#modelToInfo;\n  }\n\n  private getCSSModelInfo(cssModel: SDK.CSSModel.CSSModel): ModelInfo {\n    return this.#modelToInfo.get(cssModel) as ModelInfo;\n  }\n\n  modelAdded(cssModel: SDK.CSSModel.CSSModel): void {\n    this.#modelToInfo.set(cssModel, new ModelInfo(cssModel, this.#resourceMapping));\n  }\n\n  modelRemoved(cssModel: SDK.CSSModel.CSSModel): void {\n    this.getCSSModelInfo(cssModel).dispose();\n    this.#modelToInfo.delete(cssModel);\n  }\n\n  /**\n   * The promise returned by this function is resolved once all *currently*\n   * pending LiveLocations are processed.\n   */\n  async pendingLiveLocationChangesPromise(): Promise<void> {\n    await Promise.all(this.#liveLocationPromises);\n  }\n\n  private recordLiveLocationChange(promise: Promise<unknown>): void {\n    void promise.then(() => {\n      this.#liveLocationPromises.delete(promise);\n    });\n    this.#liveLocationPromises.add(promise);\n  }\n\n  async updateLocations(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): Promise<void> {\n    const updatePromise = this.getCSSModelInfo(header.cssModel()).updateLocations(header);\n    this.recordLiveLocationChange(updatePromise);\n    await updatePromise;\n  }\n\n  createLiveLocation(\n      rawLocation: SDK.CSSModel.CSSLocation, updateDelegate: (arg0: LiveLocationInterface) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<LiveLocation> {\n    const locationPromise =\n        this.getCSSModelInfo(rawLocation.cssModel()).createLiveLocation(rawLocation, updateDelegate, locationPool);\n    this.recordLiveLocationChange(locationPromise);\n    return locationPromise;\n  }\n\n  propertyRawLocation(cssProperty: SDK.CSSProperty.CSSProperty, forName: boolean): SDK.CSSModel.CSSLocation|null {\n    const style = cssProperty.ownerStyle;\n    if (!style || style.type !== SDK.CSSStyleDeclaration.Type.Regular || !style.styleSheetId) {\n      return null;\n    }\n    const header = style.cssModel().styleSheetHeaderForId(style.styleSheetId);\n    if (!header) {\n      return null;\n    }\n\n    const range = forName ? cssProperty.nameRange() : cssProperty.valueRange();\n    if (!range) {\n      return null;\n    }\n\n    const lineNumber = range.startLine;\n    const columnNumber = range.startColumn;\n    return new SDK.CSSModel.CSSLocation(\n        header, header.lineNumberInSource(lineNumber), header.columnNumberInSource(lineNumber, columnNumber));\n  }\n\n  propertyUILocation(cssProperty: SDK.CSSProperty.CSSProperty, forName: boolean): Workspace.UISourceCode.UILocation\n      |null {\n    const rawLocation = this.propertyRawLocation(cssProperty, forName);\n    if (!rawLocation) {\n      return null;\n    }\n    return this.rawLocationToUILocation(rawLocation);\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.CSSModel.CSSLocation): Workspace.UISourceCode.UILocation|null {\n    return this.getCSSModelInfo(rawLocation.cssModel()).rawLocationToUILocation(rawLocation);\n  }\n\n  uiLocationToRawLocations(uiLocation: Workspace.UISourceCode.UILocation): SDK.CSSModel.CSSLocation[] {\n    const rawLocations = [];\n    for (const modelInfo of this.#modelToInfo.values()) {\n      rawLocations.push(...modelInfo.uiLocationToRawLocations(uiLocation));\n    }\n    return rawLocations;\n  }\n}\n\nexport interface SourceMapping {\n  rawLocationToUILocation(rawLocation: SDK.CSSModel.CSSLocation): Workspace.UISourceCode.UILocation|null;\n\n  uiLocationToRawLocations(uiLocation: Workspace.UISourceCode.UILocation): SDK.CSSModel.CSSLocation[];\n}\n\nexport class ModelInfo {\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n  readonly #resourceMapping: ResourceMapping;\n  #stylesSourceMapping: StylesSourceMapping;\n  #sassSourceMapping: SASSSourceMapping;\n  readonly #locations: Platform.MapUtilities.Multimap<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader, LiveLocation>;\n  readonly #unboundLocations: Platform.MapUtilities.Multimap<Platform.DevToolsPath.UrlString, LiveLocation>;\n  constructor(cssModel: SDK.CSSModel.CSSModel, resourceMapping: ResourceMapping) {\n    this.#eventListeners = [\n      cssModel.addEventListener(\n          SDK.CSSModel.Events.StyleSheetAdded,\n          event => {\n            void this.styleSheetAdded(event);\n          },\n          this),\n      cssModel.addEventListener(\n          SDK.CSSModel.Events.StyleSheetRemoved,\n          event => {\n            void this.styleSheetRemoved(event);\n          },\n          this),\n    ];\n\n    this.#resourceMapping = resourceMapping;\n    this.#stylesSourceMapping = new StylesSourceMapping(cssModel, resourceMapping.workspace);\n    const sourceMapManager = cssModel.sourceMapManager();\n    this.#sassSourceMapping = new SASSSourceMapping(cssModel.target(), sourceMapManager, resourceMapping.workspace);\n\n    this.#locations = new Platform.MapUtilities.Multimap();\n    this.#unboundLocations = new Platform.MapUtilities.Multimap();\n  }\n\n  get locations(): Platform.MapUtilities.Multimap<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader, LiveLocation> {\n    return this.#locations;\n  }\n\n  async createLiveLocation(\n      rawLocation: SDK.CSSModel.CSSLocation, updateDelegate: (arg0: LiveLocationInterface) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<LiveLocation> {\n    const location = new LiveLocation(rawLocation, this, updateDelegate, locationPool);\n    const header = rawLocation.header();\n    if (header) {\n      location.setHeader(header);\n      this.#locations.set(header, location);\n      await location.update();\n    } else {\n      this.#unboundLocations.set(rawLocation.url, location);\n    }\n    return location;\n  }\n\n  disposeLocation(location: LiveLocation): void {\n    const header = location.header();\n    if (header) {\n      this.#locations.delete(header, location);\n    } else {\n      this.#unboundLocations.delete(location.url, location);\n    }\n  }\n\n  updateLocations(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): Promise<void[]> {\n    const promises = [];\n    for (const location of this.#locations.get(header)) {\n      promises.push(location.update());\n    }\n    return Promise.all(promises);\n  }\n\n  private async styleSheetAdded(\n      event: Common.EventTarget.EventTargetEvent<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>): Promise<void> {\n    const header = event.data;\n    if (!header.sourceURL) {\n      return;\n    }\n\n    const promises = [];\n    for (const location of this.#unboundLocations.get(header.sourceURL)) {\n      location.setHeader(header);\n      this.#locations.set(header, location);\n      promises.push(location.update());\n    }\n    await Promise.all(promises);\n    this.#unboundLocations.deleteAll(header.sourceURL);\n  }\n\n  private async styleSheetRemoved(\n      event: Common.EventTarget.EventTargetEvent<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>): Promise<void> {\n    const header = event.data;\n    const promises = [];\n    for (const location of this.#locations.get(header)) {\n      location.setHeader(header);\n      this.#unboundLocations.set(location.url, location);\n      promises.push(location.update());\n    }\n    await Promise.all(promises);\n    this.#locations.deleteAll(header);\n  }\n\n  addSourceMap(sourceUrl: Platform.DevToolsPath.UrlString, sourceMapUrl: Platform.DevToolsPath.UrlString): void {\n    this.#stylesSourceMapping.addSourceMap(sourceUrl, sourceMapUrl);\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.CSSModel.CSSLocation): Workspace.UISourceCode.UILocation|null {\n    let uiLocation: (Workspace.UISourceCode.UILocation|null)|null = null;\n    uiLocation = uiLocation || this.#sassSourceMapping.rawLocationToUILocation(rawLocation);\n    uiLocation = uiLocation || this.#stylesSourceMapping.rawLocationToUILocation(rawLocation);\n    uiLocation = uiLocation || this.#resourceMapping.cssLocationToUILocation(rawLocation);\n    return uiLocation;\n  }\n\n  uiLocationToRawLocations(uiLocation: Workspace.UISourceCode.UILocation): SDK.CSSModel.CSSLocation[] {\n    let rawLocations = this.#sassSourceMapping.uiLocationToRawLocations(uiLocation);\n    if (rawLocations.length) {\n      return rawLocations;\n    }\n    rawLocations = this.#stylesSourceMapping.uiLocationToRawLocations(uiLocation);\n    if (rawLocations.length) {\n      return rawLocations;\n    }\n    return this.#resourceMapping.uiLocationToCSSLocations(uiLocation);\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    this.#stylesSourceMapping.dispose();\n    this.#sassSourceMapping.dispose();\n  }\n}\n\nexport class LiveLocation extends LiveLocationWithPool {\n  readonly url: Platform.DevToolsPath.UrlString;\n  readonly #lineNumber: number;\n  readonly #columnNumber: number;\n  readonly #info: ModelInfo;\n  headerInternal: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader|null;\n  constructor(\n      rawLocation: SDK.CSSModel.CSSLocation, info: ModelInfo,\n      updateDelegate: (arg0: LiveLocationInterface) => Promise<void>, locationPool: LiveLocationPool) {\n    super(updateDelegate, locationPool);\n    this.url = rawLocation.url;\n    this.#lineNumber = rawLocation.lineNumber;\n    this.#columnNumber = rawLocation.columnNumber;\n    this.#info = info;\n    this.headerInternal = null;\n  }\n\n  header(): SDK.CSSStyleSheetHeader.CSSStyleSheetHeader|null {\n    return this.headerInternal;\n  }\n\n  setHeader(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader|null): void {\n    this.headerInternal = header;\n  }\n\n  override async uiLocation(): Promise<Workspace.UISourceCode.UILocation|null> {\n    if (!this.headerInternal) {\n      return null;\n    }\n    const rawLocation = new SDK.CSSModel.CSSLocation(this.headerInternal, this.#lineNumber, this.#columnNumber);\n    return CSSWorkspaceBinding.instance().rawLocationToUILocation(rawLocation);\n  }\n\n  override dispose(): void {\n    super.dispose();\n    this.#info.disposeLocation(this);\n  }\n\n  override async isIgnoreListed(): Promise<boolean> {\n    return false;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
