{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/models/live-metrics/web-vitals-injected/OnEachInteraction.ts"],
  "sourcesContent": ["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @fileoverview web-vitals.js doesn't provide a log of all interactions.\n * This solution is hacky but it was recommended by web-vitals devs:\n * b/371052022\n */\n\nimport * as WebVitals from '../../../third_party/web-vitals/web-vitals.js';\n\nexport function onEachInteraction(onReport: (metric: WebVitals.INPMetricWithAttribution) => void): void {\n  WebVitals.entryPreProcessingCallbacks.push((entry: PerformanceEventTiming) => {\n    // Wait a microtask so this \"pre\" processing callback actually\n    // becomes a \"post\" processing callback.\n    void Promise.resolve().then(() => {\n      if (entry.interactionId) {\n        const interaction = WebVitals.attributeINP({\n          entries: [entry],\n          // The only value we really need for `attributeINP` is `entries`\n          // Everything else is included to fill out the type.\n          name: 'INP',\n          rating: 'good',\n          value: entry.duration,\n          delta: entry.duration,\n          navigationType: 'navigate',\n          id: 'N/A',\n        });\n        onReport(interaction);\n      }\n    });\n  });\n}\n"],
  "mappings": ";AAUA,YAAY,eAAe;AAEpB,gBAAS,kBAAkB,UAAsE;AACtG,YAAU,4BAA4B,KAAK,CAAC,UAAkC;AAG5E,SAAK,QAAQ,QAAQ,EAAE,KAAK,MAAM;AAChC,UAAI,MAAM,eAAe;AACvB,cAAM,cAAc,UAAU,aAAa;AAAA,UACzC,SAAS,CAAC,KAAK;AAAA;AAAA;AAAA,UAGf,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,OAAO,MAAM;AAAA,UACb,OAAO,MAAM;AAAA,UACb,gBAAgB;AAAA,UAChB,IAAI;AAAA,QACN,CAAC;AACD,iBAAS,WAAW;AAAA,MACtB;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACH;",
  "names": []
}
