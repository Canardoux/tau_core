{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/issues_manager/SharedArrayBufferIssue.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {Issue, IssueCategory, IssueKind} from './Issue.js';\nimport type {MarkdownIssueDescription} from './MarkdownIssueDescription.js';\n\nconst UIStrings = {\n  /**\n   *@description Label for the link for SharedArrayBuffer Issues. The full text reads \"Enabling `SharedArrayBuffer`\"\n   * and is the title of an article that describes how to enable a JavaScript feature called SharedArrayBuffer.\n   */\n  enablingSharedArrayBuffer: 'Enabling `SharedArrayBuffer`',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/issues_manager/SharedArrayBufferIssue.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class SharedArrayBufferIssue extends Issue {\n  #issueDetails: Protocol.Audits.SharedArrayBufferIssueDetails;\n\n  constructor(issueDetails: Protocol.Audits.SharedArrayBufferIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel) {\n    const umaCode = [Protocol.Audits.InspectorIssueCode.SharedArrayBufferIssue, issueDetails.type].join('::');\n    super({code: Protocol.Audits.InspectorIssueCode.SharedArrayBufferIssue, umaCode}, issuesModel);\n    this.#issueDetails = issueDetails;\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.OTHER;\n  }\n\n  details(): Protocol.Audits.SharedArrayBufferIssueDetails {\n    return this.#issueDetails;\n  }\n\n  getDescription(): MarkdownIssueDescription {\n    return {\n      file: 'sharedArrayBuffer.md',\n      links: [{\n        link: 'https://developer.chrome.com/blog/enabling-shared-array-buffer/',\n        linkTitle: i18nString(UIStrings.enablingSharedArrayBuffer),\n      }],\n    };\n  }\n\n  primaryKey(): string {\n    return JSON.stringify(this.#issueDetails);\n  }\n\n  getKind(): IssueKind {\n    if (this.#issueDetails.isWarning) {\n      return IssueKind.BREAKING_CHANGE;\n    }\n    return IssueKind.PAGE_ERROR;\n  }\n\n  static fromInspectorIssue(issuesModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      SharedArrayBufferIssue[] {\n    const sabIssueDetails = inspectorIssue.details.sharedArrayBufferIssueDetails;\n    if (!sabIssueDetails) {\n      console.warn('SAB transfer issue without details received.');\n      return [];\n    }\n    return [new SharedArrayBufferIssue(sabIssueDetails, issuesModel)];\n  }\n}\n"],
  "mappings": ";AAIA,YAAY,UAAU;AAEtB,YAAY,cAAc;AAE1B,SAAQ,OAAO,eAAe,iBAAgB;AAG9C,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAKhB,2BAA2B;AAC7B;AACA,MAAM,OAAO,KAAK,KAAK,kBAAkB,mDAAmD,SAAS;AACrG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW,IAAI;AAE7D,aAAM,+BAA+B,MAAM;AAAA,EAChD;AAAA,EAEA,YAAY,cAA6D,aAA0C;AACjH,UAAM,UAAU,CAAC,SAAS,OAAO,mBAAmB,wBAAwB,aAAa,IAAI,EAAE,KAAK,IAAI;AACxG,UAAM,EAAC,MAAM,SAAS,OAAO,mBAAmB,wBAAwB,QAAO,GAAG,WAAW;AAC7F,SAAK,gBAAgB;AAAA,EACvB;AAAA,EAEA,cAA6B;AAC3B,WAAO,cAAc;AAAA,EACvB;AAAA,EAEA,UAAyD;AACvD,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,iBAA2C;AACzC,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO,CAAC;AAAA,QACN,MAAM;AAAA,QACN,WAAW,WAAW,UAAU,yBAAyB;AAAA,MAC3D,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEA,aAAqB;AACnB,WAAO,KAAK,UAAU,KAAK,aAAa;AAAA,EAC1C;AAAA,EAEA,UAAqB;AACnB,QAAI,KAAK,cAAc,WAAW;AAChC,aAAO,UAAU;AAAA,IACnB;AACA,WAAO,UAAU;AAAA,EACnB;AAAA,EAEA,OAAO,mBAAmB,aAA0C,gBACvC;AAC3B,UAAM,kBAAkB,eAAe,QAAQ;AAC/C,QAAI,CAAC,iBAAiB;AACpB,cAAQ,KAAK,8CAA8C;AAC3D,aAAO,CAAC;AAAA,IACV;AACA,WAAO,CAAC,IAAI,uBAAuB,iBAAiB,WAAW,CAAC;AAAA,EAClE;AACF;",
  "names": []
}
