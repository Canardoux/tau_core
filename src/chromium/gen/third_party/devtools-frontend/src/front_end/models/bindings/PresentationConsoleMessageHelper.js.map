{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/bindings/PresentationConsoleMessageHelper.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport type * as Platform from '../../core/platform/platform.js';\n\nimport {DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';\n\nimport {LiveLocationPool, LiveLocationWithPool, type LiveLocation} from './LiveLocation.js';\nimport {CSSWorkspaceBinding} from './CSSWorkspaceBinding.js';\n\nexport interface MessageSource {\n  url?: Platform.DevToolsPath.UrlString;\n  line: number;\n  column: number;\n  scriptId?: Protocol.Runtime.ScriptId;\n  stackTrace?: Protocol.Runtime.StackTrace;\n}\n\nexport class PresentationSourceFrameMessageManager implements\n    SDK.TargetManager.SDKModelObserver<SDK.DebuggerModel.DebuggerModel>,\n    SDK.TargetManager.SDKModelObserver<SDK.CSSModel.CSSModel> {\n  #targetToMessageHelperMap = new WeakMap<SDK.Target.Target, PresentationSourceFrameMessageHelper>();\n  constructor() {\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.DebuggerModel.DebuggerModel, this);\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.CSSModel.CSSModel, this);\n  }\n\n  modelAdded(model: SDK.DebuggerModel.DebuggerModel|SDK.CSSModel.CSSModel): void {\n    const target = model.target();\n    const helper = this.#targetToMessageHelperMap.get(target) ?? new PresentationSourceFrameMessageHelper();\n    if (model instanceof SDK.DebuggerModel.DebuggerModel) {\n      helper.setDebuggerModel(model);\n    } else {\n      helper.setCSSModel(model);\n    }\n    this.#targetToMessageHelperMap.set(target, helper);\n  }\n\n  modelRemoved(model: SDK.DebuggerModel.DebuggerModel|SDK.CSSModel.CSSModel): void {\n    const target = model.target();\n    const helper = this.#targetToMessageHelperMap.get(target);\n    helper?.clear();\n  }\n\n  addMessage(message: Workspace.UISourceCode.Message, source: MessageSource, target: SDK.Target.Target): void {\n    const helper = this.#targetToMessageHelperMap.get(target);\n    void helper?.addMessage(message, source);\n  }\n\n  clear(): void {\n    for (const target of SDK.TargetManager.TargetManager.instance().targets()) {\n      const helper = this.#targetToMessageHelperMap.get(target);\n      helper?.clear();\n    }\n  }\n}\n\nexport class PresentationConsoleMessageManager {\n  #sourceFrameMessageManager = new PresentationSourceFrameMessageManager();\n\n  constructor() {\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.MessageAdded,\n        event => this.consoleMessageAdded(event.data));\n    SDK.ConsoleModel.ConsoleModel.allMessagesUnordered().forEach(this.consoleMessageAdded, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.ConsoleCleared,\n        () => this.#sourceFrameMessageManager.clear());\n  }\n\n  private consoleMessageAdded(consoleMessage: SDK.ConsoleModel.ConsoleMessage): void {\n    const runtimeModel = consoleMessage.runtimeModel();\n    if (!consoleMessage.isErrorOrWarning() || !consoleMessage.runtimeModel() ||\n        consoleMessage.source === Protocol.Log.LogEntrySource.Violation || !runtimeModel) {\n      return;\n    }\n    const level = consoleMessage.level === Protocol.Log.LogEntryLevel.Error ?\n        Workspace.UISourceCode.Message.Level.ERROR :\n        Workspace.UISourceCode.Message.Level.WARNING;\n    this.#sourceFrameMessageManager.addMessage(\n        new Workspace.UISourceCode.Message(level, consoleMessage.messageText), consoleMessage, runtimeModel.target());\n  }\n}\n\nexport class PresentationSourceFrameMessageHelper {\n  #debuggerModel?: SDK.DebuggerModel.DebuggerModel;\n  #cssModel?: SDK.CSSModel.CSSModel;\n  #presentationMessages: Map<Platform.DevToolsPath.UrlString, Array<{\n                               source: MessageSource,\n                               presentation: PresentationSourceFrameMessage,\n                             }>> = new Map();\n  readonly #locationPool: LiveLocationPool;\n\n  constructor() {\n    this.#locationPool = new LiveLocationPool();\n\n    Workspace.Workspace.WorkspaceImpl.instance().addEventListener(\n        Workspace.Workspace.Events.UISourceCodeAdded, this.#uiSourceCodeAdded.bind(this));\n  }\n\n  setDebuggerModel(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    if (this.#debuggerModel) {\n      throw new Error('Cannot set DebuggerModel twice');\n    }\n    this.#debuggerModel = debuggerModel;\n    // TODO(dgozman): queueMicrotask because we race with DebuggerWorkspaceBinding on ParsedScriptSource event delivery.\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.ParsedScriptSource, event => {\n      queueMicrotask(() => {\n        this.#parsedScriptSource(event);\n      });\n    });\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.GlobalObjectCleared, this.#debuggerReset, this);\n  }\n\n  setCSSModel(cssModel: SDK.CSSModel.CSSModel): void {\n    if (this.#cssModel) {\n      throw new Error('Cannot set CSSModel twice');\n    }\n    this.#cssModel = cssModel;\n    cssModel.addEventListener(\n        SDK.CSSModel.Events.StyleSheetAdded, event => queueMicrotask(() => this.#styleSheetAdded(event)));\n  }\n\n  async addMessage(message: Workspace.UISourceCode.Message, source: MessageSource): Promise<void> {\n    const presentation = new PresentationSourceFrameMessage(message, this.#locationPool);\n    const location = this.#rawLocation(source) ?? this.#cssLocation(source) ?? this.#uiLocation(source);\n    if (location) {\n      await presentation.updateLocationSource(location);\n    }\n    if (source.url) {\n      let messages = this.#presentationMessages.get(source.url);\n      if (!messages) {\n        messages = [];\n        this.#presentationMessages.set(source.url, messages);\n      }\n      messages.push({source, presentation});\n    }\n  }\n\n  #uiLocation(source: MessageSource): Workspace.UISourceCode.UILocation|null {\n    if (!source.url) {\n      return null;\n    }\n\n    const uiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(source.url);\n    if (!uiSourceCode) {\n      return null;\n    }\n    return new Workspace.UISourceCode.UILocation(uiSourceCode, source.line, source.column);\n  }\n\n  #cssLocation(source: MessageSource): SDK.CSSModel.CSSLocation|null {\n    if (!this.#cssModel || !source.url) {\n      return null;\n    }\n    const locations = this.#cssModel.createRawLocationsByURL(source.url, source.line, source.column);\n    return locations[0] ?? null;\n  }\n\n  #rawLocation(source: MessageSource): SDK.DebuggerModel.Location|null {\n    if (!this.#debuggerModel) {\n      return null;\n    }\n    if (source.scriptId) {\n      return this.#debuggerModel.createRawLocationByScriptId(source.scriptId, source.line, source.column);\n    }\n    const callFrame = source.stackTrace && source.stackTrace.callFrames ? source.stackTrace.callFrames[0] : null;\n    if (callFrame) {\n      return this.#debuggerModel.createRawLocationByScriptId(\n          callFrame.scriptId, callFrame.lineNumber, callFrame.columnNumber);\n    }\n    if (source.url) {\n      return this.#debuggerModel.createRawLocationByURL(source.url, source.line, source.column);\n    }\n    return null;\n  }\n\n  #parsedScriptSource(event: Common.EventTarget.EventTargetEvent<SDK.Script.Script>): void {\n    const script = event.data;\n    const messages = this.#presentationMessages.get(script.sourceURL);\n\n    const promises: Promise<void>[] = [];\n    for (const {presentation, source} of messages ?? []) {\n      const rawLocation = this.#rawLocation(source);\n      if (rawLocation && script.scriptId === rawLocation.scriptId) {\n        promises.push(presentation.updateLocationSource(rawLocation));\n      }\n    }\n\n    void Promise.all(promises).then(this.parsedScriptSourceForTest.bind(this));\n  }\n\n  parsedScriptSourceForTest(): void {\n  }\n\n  #uiSourceCodeAdded(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    const uiSourceCode = event.data;\n    const messages = this.#presentationMessages.get(uiSourceCode.url());\n\n    const promises: Promise<void>[] = [];\n    for (const {presentation, source} of messages ?? []) {\n      promises.push(presentation.updateLocationSource(\n          new Workspace.UISourceCode.UILocation(uiSourceCode, source.line, source.column)));\n    }\n    void Promise.all(promises).then(this.uiSourceCodeAddedForTest.bind(this));\n  }\n\n  uiSourceCodeAddedForTest(): void {\n  }\n\n  #styleSheetAdded(event: Common.EventTarget\n                       .EventTargetEvent<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader, SDK.CSSModel.EventTypes>): void {\n    const header = event.data;\n    const messages = this.#presentationMessages.get(header.sourceURL);\n\n    const promises: Promise<void>[] = [];\n    for (const {source, presentation} of messages ?? []) {\n      if (header.containsLocation(source.line, source.column)) {\n        promises.push(\n            presentation.updateLocationSource(new SDK.CSSModel.CSSLocation(header, source.line, source.column)));\n      }\n    }\n    void Promise.all(promises).then(this.styleSheetAddedForTest.bind(this));\n  }\n\n  styleSheetAddedForTest(): void {\n  }\n\n  clear(): void {\n    this.#debuggerReset();\n  }\n\n  #debuggerReset(): void {\n    const presentations = Array.from(this.#presentationMessages.values()).flat();\n    for (const {presentation} of presentations) {\n      presentation.dispose();\n    }\n    this.#presentationMessages.clear();\n    this.#locationPool.disposeAll();\n  }\n}\n\nclass FrozenLiveLocation extends LiveLocationWithPool {\n  #uiLocation: Workspace.UISourceCode.UILocation;\n  constructor(\n      uiLocation: Workspace.UISourceCode.UILocation, updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool) {\n    super(updateDelegate, locationPool);\n    this.#uiLocation = uiLocation;\n  }\n\n  override async isIgnoreListed(): Promise<boolean> {\n    return false;\n  }\n\n  override async uiLocation(): Promise<Workspace.UISourceCode.UILocation|null> {\n    return this.#uiLocation;\n  }\n}\n\nexport class PresentationSourceFrameMessage {\n  #uiSourceCode?: Workspace.UISourceCode.UISourceCode;\n  #liveLocation?: LiveLocation;\n  readonly #locationPool: LiveLocationPool;\n  readonly #message: Workspace.UISourceCode.Message;\n\n  constructor(message: Workspace.UISourceCode.Message, locationPool: LiveLocationPool) {\n    this.#message = message;\n    this.#locationPool = locationPool;\n  }\n\n  async updateLocationSource(source: SDK.DebuggerModel.Location|Workspace.UISourceCode.UILocation|\n                             SDK.CSSModel.CSSLocation): Promise<void> {\n    if (source instanceof SDK.DebuggerModel.Location) {\n      await DebuggerWorkspaceBinding.instance().createLiveLocation(\n          source, this.#updateLocation.bind(this), this.#locationPool);\n    } else if (source instanceof SDK.CSSModel.CSSLocation) {\n      await CSSWorkspaceBinding.instance().createLiveLocation(\n          source, this.#updateLocation.bind(this), this.#locationPool);\n    } else if (source instanceof Workspace.UISourceCode.UILocation) {\n      if (!this.#liveLocation) {  // Don't \"downgrade\" the location if a debugger or css mapping was already successful\n        this.#liveLocation = new FrozenLiveLocation(source, this.#updateLocation.bind(this), this.#locationPool);\n        await this.#liveLocation.update();\n      }\n    }\n  }\n\n  async #updateLocation(liveLocation: LiveLocation): Promise<void> {\n    if (this.#uiSourceCode) {\n      this.#uiSourceCode.removeMessage(this.#message);\n    }\n    if (liveLocation !== this.#liveLocation) {\n      this.#uiSourceCode?.removeMessage(this.#message);\n      this.#liveLocation?.dispose();\n      this.#liveLocation = liveLocation;\n    }\n    const uiLocation = await liveLocation.uiLocation();\n    if (!uiLocation) {\n      return;\n    }\n    this.#message.range =\n        TextUtils.TextRange.TextRange.createFromLocation(uiLocation.lineNumber, uiLocation.columnNumber || 0);\n    this.#uiSourceCode = uiLocation.uiSourceCode;\n    this.#uiSourceCode.addMessage(this.#message);\n  }\n\n  dispose(): void {\n    this.#uiSourceCode?.removeMessage(this.#message);\n    this.#liveLocation?.dispose();\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
