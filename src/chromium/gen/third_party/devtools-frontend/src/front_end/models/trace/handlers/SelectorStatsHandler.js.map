{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/models/trace/handlers/SelectorStatsHandler.ts"],
  "sourcesContent": ["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Types from '../types/types.js';\n\nlet lastUpdateLayoutTreeEvent: Types.Events.UpdateLayoutTree|null = null;\n\nconst selectorDataForUpdateLayoutTree = new Map<Types.Events.UpdateLayoutTree, {\n  timings: Types.Events.SelectorTiming[],\n}>();\n\nexport function reset(): void {\n  lastUpdateLayoutTreeEvent = null;\n  selectorDataForUpdateLayoutTree.clear();\n}\n\nexport function handleEvent(event: Types.Events.Event): void {\n  if (Types.Events.isSelectorStats(event) && lastUpdateLayoutTreeEvent && event.args.selector_stats) {\n    selectorDataForUpdateLayoutTree.set(lastUpdateLayoutTreeEvent, {\n      timings: event.args.selector_stats.selector_timings,\n    });\n    return;\n  }\n\n  if (Types.Events.isUpdateLayoutTree(event)) {\n    lastUpdateLayoutTreeEvent = event;\n    return;\n  }\n}\n\nexport async function finalize(): Promise<void> {\n}\n\nexport interface SelectorStatsData {\n  dataForUpdateLayoutEvent: Map<Types.Events.UpdateLayoutTree, {\n    timings: Types.Events.SelectorTiming[],\n  }>;\n}\n\nexport function data(): SelectorStatsData {\n  return {\n    dataForUpdateLayoutEvent: selectorDataForUpdateLayoutTree,\n  };\n}\n"],
  "mappings": ";AAIA,YAAY,WAAW;AAEvB,IAAI,4BAAgE;AAEpE,MAAM,kCAAkC,oBAAI,IAEzC;AAEI,gBAAS,QAAc;AAC5B,8BAA4B;AAC5B,kCAAgC,MAAM;AACxC;AAEO,gBAAS,YAAY,OAAiC;AAC3D,MAAI,MAAM,OAAO,gBAAgB,KAAK,KAAK,6BAA6B,MAAM,KAAK,gBAAgB;AACjG,oCAAgC,IAAI,2BAA2B;AAAA,MAC7D,SAAS,MAAM,KAAK,eAAe;AAAA,IACrC,CAAC;AACD;AAAA,EACF;AAEA,MAAI,MAAM,OAAO,mBAAmB,KAAK,GAAG;AAC1C,gCAA4B;AAC5B;AAAA,EACF;AACF;AAEA,sBAAsB,WAA0B;AAChD;AAQO,gBAAS,OAA0B;AACxC,SAAO;AAAA,IACL,0BAA0B;AAAA,EAC5B;AACF;",
  "names": []
}
