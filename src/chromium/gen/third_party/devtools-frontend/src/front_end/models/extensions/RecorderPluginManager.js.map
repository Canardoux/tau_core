{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/extensions/RecorderPluginManager.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\n\nimport type {RecorderExtensionEndpoint} from './RecorderExtensionEndpoint.js';\n\nlet instance: RecorderPluginManager|null = null;\n\nexport type ViewDescriptor = {\n  id: string,\n  title: string,\n  pagePath: string,\n  onShown: () => void,\n  onHidden: () => void,\n};\n\nexport class RecorderPluginManager extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  #plugins: Set<RecorderExtensionEndpoint> = new Set();\n  #views: Map<string, ViewDescriptor> = new Map();\n\n  static instance(): RecorderPluginManager {\n    if (!instance) {\n      instance = new RecorderPluginManager();\n    }\n    return instance;\n  }\n\n  addPlugin(plugin: RecorderExtensionEndpoint): void {\n    this.#plugins.add(plugin);\n    this.dispatchEventToListeners(Events.PLUGIN_ADDED, plugin);\n  }\n\n  removePlugin(plugin: RecorderExtensionEndpoint): void {\n    this.#plugins.delete(plugin);\n    this.dispatchEventToListeners(Events.PLUGIN_REMOVED, plugin);\n  }\n\n  plugins(): RecorderExtensionEndpoint[] {\n    return Array.from(this.#plugins.values());\n  }\n\n  registerView(descriptor: ViewDescriptor): void {\n    this.#views.set(descriptor.id, descriptor);\n    this.dispatchEventToListeners(Events.VIEW_REGISTERED, descriptor);\n  }\n\n  views(): ViewDescriptor[] {\n    return Array.from(this.#views.values());\n  }\n\n  getViewDescriptor(id: string): ViewDescriptor|undefined {\n    return this.#views.get(id);\n  }\n\n  showView(id: string): void {\n    const descriptor = this.#views.get(id);\n    if (!descriptor) {\n      throw new Error(`View with id ${id} is not found.`);\n    }\n    this.dispatchEventToListeners(Events.SHOW_VIEW_REQUESTED, descriptor);\n  }\n}\n\nexport const enum Events {\n  PLUGIN_ADDED = 'pluginAdded',\n  PLUGIN_REMOVED = 'pluginRemoved',\n  VIEW_REGISTERED = 'viewRegistered',\n  SHOW_VIEW_REQUESTED = 'showViewRequested',\n}\n\nexport type EventTypes = {\n  [Events.PLUGIN_ADDED]: RecorderExtensionEndpoint,\n  [Events.PLUGIN_REMOVED]: RecorderExtensionEndpoint,\n  [Events.VIEW_REGISTERED]: ViewDescriptor,\n  [Events.SHOW_VIEW_REQUESTED]: ViewDescriptor,\n};\n"],
  "mappings": ";AAIA,YAAY,YAAY;AAIxB,IAAI,WAAuC;AAUpC,aAAM,8BAA8B,OAAO,cAAc,cAA0B;AAAA,EACxF,WAA2C,oBAAI,IAAI;AAAA,EACnD,SAAsC,oBAAI,IAAI;AAAA,EAE9C,OAAO,WAAkC;AACvC,QAAI,CAAC,UAAU;AACb,iBAAW,IAAI,sBAAsB;AAAA,IACvC;AACA,WAAO;AAAA,EACT;AAAA,EAEA,UAAU,QAAyC;AACjD,SAAK,SAAS,IAAI,MAAM;AACxB,SAAK,yBAAyB,kCAAqB,MAAM;AAAA,EAC3D;AAAA,EAEA,aAAa,QAAyC;AACpD,SAAK,SAAS,OAAO,MAAM;AAC3B,SAAK,yBAAyB,sCAAuB,MAAM;AAAA,EAC7D;AAAA,EAEA,UAAuC;AACrC,WAAO,MAAM,KAAK,KAAK,SAAS,OAAO,CAAC;AAAA,EAC1C;AAAA,EAEA,aAAa,YAAkC;AAC7C,SAAK,OAAO,IAAI,WAAW,IAAI,UAAU;AACzC,SAAK,yBAAyB,wCAAwB,UAAU;AAAA,EAClE;AAAA,EAEA,QAA0B;AACxB,WAAO,MAAM,KAAK,KAAK,OAAO,OAAO,CAAC;AAAA,EACxC;AAAA,EAEA,kBAAkB,IAAsC;AACtD,WAAO,KAAK,OAAO,IAAI,EAAE;AAAA,EAC3B;AAAA,EAEA,SAAS,IAAkB;AACzB,UAAM,aAAa,KAAK,OAAO,IAAI,EAAE;AACrC,QAAI,CAAC,YAAY;AACf,YAAM,IAAI,MAAM,gBAAgB,EAAE,gBAAgB;AAAA,IACpD;AACA,SAAK,yBAAyB,+CAA4B,UAAU;AAAA,EACtE;AACF;AAEO,WAAW,SAAX,kBAAWA,YAAX;AACL,EAAAA,QAAA,kBAAe;AACf,EAAAA,QAAA,oBAAiB;AACjB,EAAAA,QAAA,qBAAkB;AAClB,EAAAA,QAAA,yBAAsB;AAJN,SAAAA;AAAA,GAAA;",
  "names": ["Events"]
}
