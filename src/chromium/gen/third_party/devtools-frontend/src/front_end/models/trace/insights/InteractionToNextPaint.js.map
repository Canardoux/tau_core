{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/models/trace/insights/InteractionToNextPaint.ts"],
  "sourcesContent": ["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Helpers from '../helpers/helpers.js';\nimport type {SyntheticInteractionPair} from '../types/TraceEvents.js';\n\nimport {InsightCategory, type InsightModel, type InsightSetContext, type RequiredData} from './types.js';\n\nconst UIStrings = {\n  /**\n   * @description Text to tell the user about the longest user interaction.\n   */\n  description:\n      'Start investigating with the longest phase. [Delays can be minimized](https://web.dev/articles/optimize-inp#optimize_interactions). To reduce processing duration, [optimize the main-thread costs](https://web.dev/articles/optimize-long-tasks), often JS.',\n  /**\n   * @description Title for the performance insight \"INP by phase\", which shows a breakdown of INP by phases / sections.\n   */\n  title: 'INP by phase',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('models/trace/insights/InteractionToNextPaint.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport function deps(): ['UserInteractions'] {\n  return ['UserInteractions'];\n}\n\nexport type INPInsightModel = InsightModel<{\n  longestInteractionEvent?: SyntheticInteractionPair,\n  highPercentileInteractionEvent?: SyntheticInteractionPair,\n}>;\n\nfunction finalize(partialModel: Omit<INPInsightModel, 'title'|'description'|'category'|'shouldShow'>): INPInsightModel {\n  return {\n    title: i18nString(UIStrings.title),\n    description: i18nString(UIStrings.description),\n    category: InsightCategory.INP,\n    shouldShow: Boolean(partialModel.longestInteractionEvent),\n    ...partialModel,\n  };\n}\n\nexport function generateInsight(parsedTrace: RequiredData<typeof deps>, context: InsightSetContext): INPInsightModel {\n  const interactionEvents = parsedTrace.UserInteractions.interactionEventsWithNoNesting.filter(event => {\n    return Helpers.Timing.eventIsInBounds(event, context.bounds);\n  });\n\n  if (!interactionEvents.length) {\n    // A valid result, when there is no user interaction.\n    return finalize({});\n  }\n\n  const longestByInteractionId = new Map<number, SyntheticInteractionPair>();\n  for (const event of interactionEvents) {\n    const key = event.interactionId;\n    const longest = longestByInteractionId.get(key);\n    if (!longest || event.dur > longest.dur) {\n      longestByInteractionId.set(key, event);\n    }\n  }\n  const normalizedInteractionEvents = [...longestByInteractionId.values()];\n  normalizedInteractionEvents.sort((a, b) => b.dur - a.dur);\n\n  // INP is the \"nearest-rank\"/inverted_cdf 98th percentile, except Chrome only\n  // keeps the 10 worst events around, so it can never be more than the 10th from\n  // last array element. To keep things simpler, sort desc and pick from front.\n  // See https://source.chromium.org/chromium/chromium/src/+/main:components/page_load_metrics/browser/responsiveness_metrics_normalization.cc;l=45-59;drc=cb0f9c8b559d9c7c3cb4ca94fc1118cc015d38ad\n  const highPercentileIndex = Math.min(9, Math.floor(normalizedInteractionEvents.length / 50));\n\n  return finalize({\n    relatedEvents: [normalizedInteractionEvents[0]],\n    longestInteractionEvent: normalizedInteractionEvents[0],\n    highPercentileInteractionEvent: normalizedInteractionEvents[highPercentileIndex],\n  });\n}\n"],
  "mappings": ";AAIA,YAAY,UAAU;AACtB,YAAY,aAAa;AAGzB,SAAQ,uBAAoF;AAE5F,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA,EAIhB,aACI;AAAA;AAAA;AAAA;AAAA,EAIJ,OAAO;AACT;AAEA,MAAM,OAAO,KAAK,KAAK,kBAAkB,mDAAmD,SAAS;AACrG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW,IAAI;AAE7D,gBAAS,OAA6B;AAC3C,SAAO,CAAC,kBAAkB;AAC5B;AAOA,SAAS,SAAS,cAAqG;AACrH,SAAO;AAAA,IACL,OAAO,WAAW,UAAU,KAAK;AAAA,IACjC,aAAa,WAAW,UAAU,WAAW;AAAA,IAC7C,UAAU,gBAAgB;AAAA,IAC1B,YAAY,QAAQ,aAAa,uBAAuB;AAAA,IACxD,GAAG;AAAA,EACL;AACF;AAEO,gBAAS,gBAAgB,aAAwC,SAA6C;AACnH,QAAM,oBAAoB,YAAY,iBAAiB,+BAA+B,OAAO,WAAS;AACpG,WAAO,QAAQ,OAAO,gBAAgB,OAAO,QAAQ,MAAM;AAAA,EAC7D,CAAC;AAED,MAAI,CAAC,kBAAkB,QAAQ;AAE7B,WAAO,SAAS,CAAC,CAAC;AAAA,EACpB;AAEA,QAAM,yBAAyB,oBAAI,IAAsC;AACzE,aAAW,SAAS,mBAAmB;AACrC,UAAM,MAAM,MAAM;AAClB,UAAM,UAAU,uBAAuB,IAAI,GAAG;AAC9C,QAAI,CAAC,WAAW,MAAM,MAAM,QAAQ,KAAK;AACvC,6BAAuB,IAAI,KAAK,KAAK;AAAA,IACvC;AAAA,EACF;AACA,QAAM,8BAA8B,CAAC,GAAG,uBAAuB,OAAO,CAAC;AACvE,8BAA4B,KAAK,CAAC,GAAG,MAAM,EAAE,MAAM,EAAE,GAAG;AAMxD,QAAM,sBAAsB,KAAK,IAAI,GAAG,KAAK,MAAM,4BAA4B,SAAS,EAAE,CAAC;AAE3F,SAAO,SAAS;AAAA,IACd,eAAe,CAAC,4BAA4B,CAAC,CAAC;AAAA,IAC9C,yBAAyB,4BAA4B,CAAC;AAAA,IACtD,gCAAgC,4BAA4B,mBAAmB;AAAA,EACjF,CAAC;AACH;",
  "names": []
}
