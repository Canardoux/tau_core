{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/persistence/WorkspaceSettingsTab.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Cards from '../../ui/components/cards/cards.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {EditFileSystemView} from './EditFileSystemView.js';\nimport type {FileSystem} from './FileSystemWorkspaceBinding.js';\nimport {IsolatedFileSystem} from './IsolatedFileSystem.js';\nimport {Events, IsolatedFileSystemManager} from './IsolatedFileSystemManager.js';\nimport {NetworkPersistenceManager} from './NetworkPersistenceManager.js';\nimport type {PlatformFileSystem} from './PlatformFileSystem.js';\nimport workspaceSettingsTabStyles from './workspaceSettingsTab.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Text of a DOM element in Workspace Settings Tab of the Workspace settings in Settings\n   */\n  workspace: 'Workspace',\n  /**\n   *@description Text of a DOM element in Workspace Settings Tab of the Workspace settings in Settings\n   */\n  mappingsAreInferredAutomatically: 'Mappings are inferred automatically.',\n  /**\n   *@description Text of the add button in Workspace Settings Tab of the Workspace settings in Settings\n   */\n  addFolder: 'Add folder',\n  /**\n   *@description Label element text content in Workspace Settings Tab of the Workspace settings in Settings\n   */\n  folderExcludePattern: 'Exclude from workspace',\n  /**\n   *@description Label for an item to remove something\n   */\n  remove: 'Remove',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/persistence/WorkspaceSettingsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class WorkspaceSettingsTab extends UI.Widget.VBox {\n  containerElement: HTMLElement;\n  #addButtonContainer: HTMLElement;\n  private readonly elementByPath: Map<Platform.DevToolsPath.UrlString, Element>;\n  private readonly mappingViewByPath: Map<Platform.DevToolsPath.UrlString, EditFileSystemView>;\n\n  constructor() {\n    super();\n\n    this.element.setAttribute('jslog', `${VisualLogging.pane('workspace')}`);\n\n    this.containerElement =\n        this.contentElement.createChild('div', 'settings-card-container-wrapper').createChild('div');\n    this.containerElement.classList.add('settings-card-container');\n\n    IsolatedFileSystemManager.instance().addEventListener(\n        Events.FileSystemAdded, event => this.fileSystemAdded(event.data), this);\n    IsolatedFileSystemManager.instance().addEventListener(\n        Events.FileSystemRemoved, event => this.fileSystemRemoved(event.data), this);\n\n    const folderExcludePatternInput = this.createFolderExcludePatternInput();\n    folderExcludePatternInput.classList.add('folder-exclude-pattern');\n    const mappingsAreInferredInfo = document.createElement('div');\n    mappingsAreInferredInfo.classList.add('mappings-info');\n    UI.UIUtils.createTextChild(mappingsAreInferredInfo, i18nString(UIStrings.mappingsAreInferredAutomatically));\n\n    const card = new Cards.Card.Card();\n    this.containerElement.appendChild(card);\n    card.data = {\n      heading: i18nString(UIStrings.workspace),\n      content: [folderExcludePatternInput, mappingsAreInferredInfo],\n    };\n\n    this.elementByPath = new Map();\n    this.mappingViewByPath = new Map();\n\n    const fileSystems = IsolatedFileSystemManager.instance().fileSystems();\n    for (let i = 0; i < fileSystems.length; ++i) {\n      this.addItem(fileSystems[i]);\n    }\n\n    this.#addButtonContainer = this.containerElement.createChild('div', 'add-button-container');\n    const addButton = UI.UIUtils.createTextButton(\n        i18nString(UIStrings.addFolder), this.addFileSystemClicked.bind(this),\n        {jslogContext: 'sources.add-folder-to-workspace'});\n    addButton.classList.add('add-folder');\n    this.#addButtonContainer.appendChild(addButton);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([workspaceSettingsTabStyles]);\n  }\n\n  private createFolderExcludePatternInput(): HTMLElement {\n    const excludePatternElement = document.createElement('div');\n    excludePatternElement.classList.add('folder-exclude-pattern');\n    const labelElement = excludePatternElement.createChild('label');\n    labelElement.textContent = i18nString(UIStrings.folderExcludePattern);\n    const folderExcludeSetting = IsolatedFileSystemManager.instance().workspaceFolderExcludePatternSetting();\n    const inputElement = UI.UIUtils.createInput('', 'text', folderExcludeSetting.name);\n    UI.ARIAUtils.bindLabelToControl(labelElement, inputElement);\n    excludePatternElement.appendChild(inputElement);\n    const setValue =\n        UI.UIUtils.bindInput(inputElement, folderExcludeSetting.set.bind(folderExcludeSetting), regexValidator, false);\n    folderExcludeSetting.addChangeListener(() => setValue.call(null, folderExcludeSetting.get()));\n    setValue(folderExcludeSetting.get());\n    return excludePatternElement;\n\n    function regexValidator(value: string): {valid: boolean, errorMessage: (string|undefined)} {\n      let regex;\n      try {\n        regex = new RegExp(value);\n      } catch (e) {\n      }\n      const valid = Boolean(regex);\n      return {valid, errorMessage: undefined};\n    }\n  }\n\n  private addItem(fileSystem: PlatformFileSystem): void {\n    // Support managing only instances of IsolatedFileSystem.\n    if (!(fileSystem instanceof IsolatedFileSystem)) {\n      return;\n    }\n    const networkPersistenceProject = NetworkPersistenceManager.instance().project();\n    if (networkPersistenceProject &&\n        IsolatedFileSystemManager.instance().fileSystem((networkPersistenceProject as FileSystem).fileSystemPath()) ===\n            fileSystem) {\n      return;\n    }\n    const filename = this.getFilename(fileSystem);\n    const removeButton = UI.UIUtils.createTextButton(\n        i18nString(UIStrings.remove), this.removeFileSystemClicked.bind(this, fileSystem),\n        {jslogContext: 'settings.remove-file-system'});\n\n    const mappingViewContainer = document.createElement('div');\n    mappingViewContainer.classList.add('mapping-view-container');\n    const fileSystemExcludeCard = new Cards.Card.Card();\n    this.containerElement.insertBefore(fileSystemExcludeCard, this.#addButtonContainer);\n    fileSystemExcludeCard.data = {\n      heading: filename,\n      headingIconName: 'folder',\n      headingSuffix: removeButton,\n      content: [mappingViewContainer],\n    };\n    const mappingView = new EditFileSystemView(fileSystem.path());\n    this.mappingViewByPath.set(fileSystem.path(), mappingView);\n    mappingView.element.classList.add('file-system-mapping-view');\n\n    mappingView.show(mappingViewContainer);\n\n    this.elementByPath.set(fileSystem.path(), fileSystemExcludeCard);\n  }\n\n  private getFilename(fileSystem: PlatformFileSystem): string {\n    const fileSystemPath = fileSystem.path();\n    const lastIndexOfSlash = fileSystemPath.lastIndexOf('/');\n    const lastPathComponent = fileSystemPath.substr(lastIndexOfSlash + 1);\n    return decodeURIComponent(lastPathComponent);\n  }\n\n  private removeFileSystemClicked(fileSystem: PlatformFileSystem): void {\n    IsolatedFileSystemManager.instance().removeFileSystem(fileSystem);\n  }\n\n  private addFileSystemClicked(): void {\n    void IsolatedFileSystemManager.instance().addFileSystem();\n  }\n\n  private fileSystemAdded(fileSystem: PlatformFileSystem): void {\n    this.addItem(fileSystem);\n  }\n\n  private fileSystemRemoved(fileSystem: PlatformFileSystem): void {\n    const mappingView = this.mappingViewByPath.get(fileSystem.path());\n    if (mappingView) {\n      mappingView.dispose();\n      this.mappingViewByPath.delete(fileSystem.path());\n    }\n\n    const element = this.elementByPath.get(fileSystem.path());\n    if (element) {\n      this.elementByPath.delete(fileSystem.path());\n      element.remove();\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
