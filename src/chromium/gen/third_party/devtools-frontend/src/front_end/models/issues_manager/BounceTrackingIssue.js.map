{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/issues_manager/BounceTrackingIssue.ts"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {Issue, IssueCategory, IssueKind} from './Issue.js';\nimport type {MarkdownIssueDescription} from './MarkdownIssueDescription.js';\n\nconst UIStrings = {\n  /**\n   *@description Title for Bounce Tracking Mitigation explainer url link.\n   */\n  bounceTrackingMitigations: 'Bounce tracking mitigations',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/issues_manager/BounceTrackingIssue.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class BounceTrackingIssue extends Issue {\n  readonly #issueDetails: Protocol.Audits.BounceTrackingIssueDetails;\n\n  constructor(issueDetails: Protocol.Audits.BounceTrackingIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel) {\n    super(Protocol.Audits.InspectorIssueCode.BounceTrackingIssue, issuesModel);\n    this.#issueDetails = issueDetails;\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.OTHER;\n  }\n\n  getDescription(): MarkdownIssueDescription {\n    return {\n      file: 'bounceTrackingMitigations.md',\n      links: [\n        {\n          link: 'https://privacycg.github.io/nav-tracking-mitigations/#bounce-tracking-mitigations',\n          linkTitle: i18nString(UIStrings.bounceTrackingMitigations),\n        },\n      ],\n    };\n  }\n\n  details(): Protocol.Audits.BounceTrackingIssueDetails {\n    return this.#issueDetails;\n  }\n\n  getKind(): IssueKind {\n    return IssueKind.BREAKING_CHANGE;\n  }\n\n  primaryKey(): string {\n    return JSON.stringify(this.#issueDetails);\n  }\n\n  override trackingSites(): Iterable<string> {\n    if (this.#issueDetails.trackingSites) {\n      return this.#issueDetails.trackingSites;\n    }\n    return [];\n  }\n\n  static fromInspectorIssue(issuesModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      BounceTrackingIssue[] {\n    const details = inspectorIssue.details.bounceTrackingIssueDetails;\n    if (!details) {\n      console.warn('Bounce tracking issue without details received.');\n      return [];\n    }\n    return [new BounceTrackingIssue(details, issuesModel)];\n  }\n}\n"],
  "mappings": ";AAIA,YAAY,UAAU;AAEtB,YAAY,cAAc;AAE1B,SAAQ,OAAO,eAAe,iBAAgB;AAG9C,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA,EAIhB,2BAA2B;AAC7B;AACA,MAAM,OAAO,KAAK,KAAK,kBAAkB,gDAAgD,SAAS;AAClG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW,IAAI;AAE7D,aAAM,4BAA4B,MAAM;AAAA,EACpC;AAAA,EAET,YAAY,cAA0D,aAA0C;AAC9G,UAAM,SAAS,OAAO,mBAAmB,qBAAqB,WAAW;AACzE,SAAK,gBAAgB;AAAA,EACvB;AAAA,EAEA,cAA6B;AAC3B,WAAO,cAAc;AAAA,EACvB;AAAA,EAEA,iBAA2C;AACzC,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,QACL;AAAA,UACE,MAAM;AAAA,UACN,WAAW,WAAW,UAAU,yBAAyB;AAAA,QAC3D;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EAEA,UAAsD;AACpD,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,UAAqB;AACnB,WAAO,UAAU;AAAA,EACnB;AAAA,EAEA,aAAqB;AACnB,WAAO,KAAK,UAAU,KAAK,aAAa;AAAA,EAC1C;AAAA,EAES,gBAAkC;AACzC,QAAI,KAAK,cAAc,eAAe;AACpC,aAAO,KAAK,cAAc;AAAA,IAC5B;AACA,WAAO,CAAC;AAAA,EACV;AAAA,EAEA,OAAO,mBAAmB,aAA0C,gBAC1C;AACxB,UAAM,UAAU,eAAe,QAAQ;AACvC,QAAI,CAAC,SAAS;AACZ,cAAQ,KAAK,iDAAiD;AAC9D,aAAO,CAAC;AAAA,IACV;AACA,WAAO,CAAC,IAAI,oBAAoB,SAAS,WAAW,CAAC;AAAA,EACvD;AACF;",
  "names": []
}
