{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/models/trace/handlers/PageFramesHandler.ts"],
  "sourcesContent": ["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Types from '../types/types.js';\n\nconst frames = new Map<string, Types.Events.TraceFrame>();\n\nexport function reset(): void {\n  frames.clear();\n}\n\nexport function handleEvent(event: Types.Events.Event): void {\n  if (Types.Events.isTracingStartedInBrowser(event)) {\n    for (const frame of event.args.data?.frames ?? []) {\n      // The ID of a frame is stored under the `frame` key.\n      frames.set(frame.frame, frame);\n    }\n    return;\n  }\n\n  // CommitLoad events can contain an updated URL or Name for a frame.\n  if (Types.Events.isCommitLoad(event)) {\n    const frameData = event.args.data;\n    if (!frameData) {\n      return;\n    }\n    // We don't want to mutate the original object, hence why\n    // we set a new object from the new and existing values.\n    const frame = frames.get(frameData.frame);\n    if (!frame) {\n      return;\n    }\n    frames.set(frameData.frame, {\n      ...frame,\n      url: frameData.url || frame.url,\n      name: frameData.name || frameData.name,\n    });\n  }\n}\n\nexport async function finalize(): Promise<void> {\n}\n\nexport interface PageFrameData {\n  frames: Map<string, Types.Events.TraceFrame>;\n}\nexport function data(): PageFrameData {\n  return {\n    frames,\n  };\n}\n"],
  "mappings": ";AAIA,YAAY,WAAW;AAEvB,MAAM,SAAS,oBAAI,IAAqC;AAEjD,gBAAS,QAAc;AAC5B,SAAO,MAAM;AACf;AAEO,gBAAS,YAAY,OAAiC;AAC3D,MAAI,MAAM,OAAO,0BAA0B,KAAK,GAAG;AACjD,eAAW,SAAS,MAAM,KAAK,MAAM,UAAU,CAAC,GAAG;AAEjD,aAAO,IAAI,MAAM,OAAO,KAAK;AAAA,IAC/B;AACA;AAAA,EACF;AAGA,MAAI,MAAM,OAAO,aAAa,KAAK,GAAG;AACpC,UAAM,YAAY,MAAM,KAAK;AAC7B,QAAI,CAAC,WAAW;AACd;AAAA,IACF;AAGA,UAAM,QAAQ,OAAO,IAAI,UAAU,KAAK;AACxC,QAAI,CAAC,OAAO;AACV;AAAA,IACF;AACA,WAAO,IAAI,UAAU,OAAO;AAAA,MAC1B,GAAG;AAAA,MACH,KAAK,UAAU,OAAO,MAAM;AAAA,MAC5B,MAAM,UAAU,QAAQ,UAAU;AAAA,IACpC,CAAC;AAAA,EACH;AACF;AAEA,sBAAsB,WAA0B;AAChD;AAKO,gBAAS,OAAsB;AACpC,SAAO;AAAA,IACL;AAAA,EACF;AACF;",
  "names": []
}
