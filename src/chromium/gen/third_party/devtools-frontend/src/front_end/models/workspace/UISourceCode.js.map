{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/workspace/UISourceCode.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\n\nimport {Events as WorkspaceImplEvents, type Project} from './WorkspaceImpl.js';\n\nconst UIStrings = {\n  /**\n   *@description Text for the index of something\n   */\n  index: '(index)',\n  /**\n   *@description Text in UISource Code of the DevTools local workspace\n   */\n  thisFileWasChangedExternally: 'This file was changed externally. Would you like to reload it?',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/workspace/UISourceCode.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class UISourceCode extends Common.ObjectWrapper.ObjectWrapper<EventTypes> implements\n    TextUtils.ContentProvider.ContentProvider {\n  private projectInternal: Project;\n  private urlInternal: Platform.DevToolsPath.UrlString;\n  private readonly originInternal: Platform.DevToolsPath.UrlString;\n  private readonly parentURLInternal: Platform.DevToolsPath.UrlString;\n  private nameInternal: string;\n  private contentTypeInternal: Common.ResourceType.ResourceType;\n  private requestContentPromise: Promise<TextUtils.ContentData.ContentDataOrError>|null;\n  private decorations: Map<string, any> = new Map();\n  private hasCommitsInternal: boolean;\n  private messagesInternal: Set<Message>|null;\n  private contentInternal: TextUtils.ContentData.ContentDataOrError|null;\n  private forceLoadOnCheckContentInternal: boolean;\n  private checkingContent: boolean;\n  private lastAcceptedContent: string|null;\n  private workingCopyInternal: string|null;\n  private workingCopyGetter: (() => string)|null;\n  private disableEditInternal: boolean;\n  private contentEncodedInternal?: boolean;\n  private isKnownThirdPartyInternal: boolean;\n  private isUnconditionallyIgnoreListedInternal: boolean;\n\n  constructor(project: Project, url: Platform.DevToolsPath.UrlString, contentType: Common.ResourceType.ResourceType) {\n    super();\n    this.projectInternal = project;\n    this.urlInternal = url;\n\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(url);\n    if (parsedURL) {\n      this.originInternal = parsedURL.securityOrigin();\n      this.parentURLInternal =\n          Common.ParsedURL.ParsedURL.concatenate(this.originInternal, parsedURL.folderPathComponents);\n      if (parsedURL.queryParams && !(parsedURL.lastPathComponent && contentType.isFromSourceMap())) {\n        // If there is a query param, display it like a URL. Unless it is from a source map,\n        // in which case the query param is probably a hash that is best left hidden.\n        this.nameInternal = parsedURL.lastPathComponent + '?' + parsedURL.queryParams;\n      } else {\n        // file name looks best decoded\n        this.nameInternal = decodeURIComponent(parsedURL.lastPathComponent);\n      }\n    } else {\n      this.originInternal = Platform.DevToolsPath.EmptyUrlString;\n      this.parentURLInternal = Platform.DevToolsPath.EmptyUrlString;\n      this.nameInternal = url;\n    }\n\n    this.contentTypeInternal = contentType;\n    this.requestContentPromise = null;\n    this.hasCommitsInternal = false;\n    this.messagesInternal = null;\n    this.contentInternal = null;\n    this.forceLoadOnCheckContentInternal = false;\n    this.checkingContent = false;\n    this.lastAcceptedContent = null;\n    this.workingCopyInternal = null;\n    this.workingCopyGetter = null;\n    this.disableEditInternal = false;\n    this.isKnownThirdPartyInternal = false;\n    this.isUnconditionallyIgnoreListedInternal = false;\n  }\n\n  requestMetadata(): Promise<UISourceCodeMetadata|null> {\n    return this.projectInternal.requestMetadata(this);\n  }\n\n  name(): string {\n    return this.nameInternal;\n  }\n\n  mimeType(): string {\n    return this.projectInternal.mimeType(this);\n  }\n\n  url(): Platform.DevToolsPath.UrlString {\n    return this.urlInternal;\n  }\n\n  // Identifier used for deduplicating scripts that are considered by the\n  // DevTools UI to be the same script. For now this is just the url but this\n  // is likely to change in the future.\n  canononicalScriptId(): string {\n    return `${this.contentTypeInternal.name()},${this.urlInternal}`;\n  }\n\n  parentURL(): Platform.DevToolsPath.UrlString {\n    return this.parentURLInternal;\n  }\n\n  origin(): Platform.DevToolsPath.UrlString {\n    return this.originInternal;\n  }\n\n  fullDisplayName(): string {\n    return this.projectInternal.fullDisplayName(this);\n  }\n\n  displayName(skipTrim?: boolean): string {\n    if (!this.nameInternal) {\n      return i18nString(UIStrings.index);\n    }\n    const name = this.nameInternal;\n    return skipTrim ? name : Platform.StringUtilities.trimEndWithMaxLength(name, 100);\n  }\n\n  canRename(): boolean {\n    return this.projectInternal.canRename();\n  }\n\n  rename(newName: Platform.DevToolsPath.RawPathString): Promise<boolean> {\n    let fulfill: (arg0: boolean) => void;\n    const promise = new Promise<boolean>(x => {\n      fulfill = x;\n    });\n    this.projectInternal.rename(this, newName, innerCallback.bind(this));\n    return promise;\n\n    function innerCallback(\n        this: UISourceCode, success: boolean, newName?: string, newURL?: Platform.DevToolsPath.UrlString,\n        newContentType?: Common.ResourceType.ResourceType): void {\n      if (success) {\n        this.updateName(\n            newName as Platform.DevToolsPath.RawPathString, newURL as Platform.DevToolsPath.UrlString,\n            newContentType as Common.ResourceType.ResourceType);\n      }\n      fulfill(success);\n    }\n  }\n\n  remove(): void {\n    this.projectInternal.deleteFile(this);\n  }\n\n  private updateName(\n      name: Platform.DevToolsPath.RawPathString, url: Platform.DevToolsPath.UrlString,\n      contentType?: Common.ResourceType.ResourceType): void {\n    const oldURL = this.urlInternal;\n    this.nameInternal = name;\n    if (url) {\n      this.urlInternal = url;\n    } else {\n      this.urlInternal = Common.ParsedURL.ParsedURL.relativePathToUrlString(name, oldURL);\n    }\n    if (contentType) {\n      this.contentTypeInternal = contentType;\n    }\n    this.dispatchEventToListeners(Events.TitleChanged, this);\n    this.project().workspace().dispatchEventToListeners(\n        WorkspaceImplEvents.UISourceCodeRenamed, {oldURL, uiSourceCode: this});\n  }\n\n  contentURL(): Platform.DevToolsPath.UrlString {\n    return this.url();\n  }\n\n  contentType(): Common.ResourceType.ResourceType {\n    return this.contentTypeInternal;\n  }\n\n  project(): Project {\n    return this.projectInternal;\n  }\n\n  requestContentData({cachedWasmOnly}: {cachedWasmOnly?: boolean} = {}):\n      Promise<TextUtils.ContentData.ContentDataOrError> {\n    if (this.requestContentPromise) {\n      return this.requestContentPromise;\n    }\n\n    if (this.contentInternal) {\n      return Promise.resolve(this.contentInternal);\n    }\n\n    if (cachedWasmOnly && this.mimeType() === 'application/wasm') {\n      return Promise.resolve(new TextUtils.WasmDisassembly.WasmDisassembly([], [], []));\n    }\n\n    this.requestContentPromise = this.requestContentImpl();\n    return this.requestContentPromise;\n  }\n\n  async requestContent(options: {cachedWasmOnly?: boolean} = {}): Promise<TextUtils.ContentProvider.DeferredContent> {\n    return TextUtils.ContentData.ContentData.asDeferredContent(await this.requestContentData(options));\n  }\n\n  private async requestContentImpl(): Promise<TextUtils.ContentData.ContentDataOrError> {\n    if (this.contentInternal) {\n      throw new Error(\n          'Called UISourceCode#requestContentImpl even though content is available for ' + this.urlInternal);\n    }\n\n    try {\n      this.contentInternal = await this.projectInternal.requestFileContent(this);\n    } catch (err) {\n      this.contentInternal = {error: err ? String(err) : ''};\n    }\n\n    return this.contentInternal;\n  }\n\n  #decodeContent(content: TextUtils.ContentProvider.DeferredContent|null): string|null {\n    if (!content) {\n      return null;\n    }\n    return content.isEncoded && content.content ? window.atob(content.content) : content.content;\n  }\n\n  /** Only used to compare whether content changed */\n  #unsafeDecodeContentData(content: TextUtils.ContentData.ContentDataOrError|null): string|null {\n    if (!content || TextUtils.ContentData.ContentData.isError(content)) {\n      return null;\n    }\n    return content.createdFromBase64 ? window.atob(content.base64) : content.text;\n  }\n\n  async checkContentUpdated(): Promise<void> {\n    if (!this.contentInternal && !this.forceLoadOnCheckContentInternal) {\n      return;\n    }\n\n    if (!this.projectInternal.canSetFileContent() || this.checkingContent) {\n      return;\n    }\n\n    this.checkingContent = true;\n    const updatedContent =\n        TextUtils.ContentData.ContentData.asDeferredContent(await this.projectInternal.requestFileContent(this));\n    if ('error' in updatedContent) {\n      return;\n    }\n    this.checkingContent = false;\n    if (updatedContent.content === null) {\n      const workingCopy = this.workingCopy();\n      this.contentCommitted('', false);\n      this.setWorkingCopy(workingCopy);\n      return;\n    }\n    if (this.lastAcceptedContent === updatedContent.content) {\n      return;\n    }\n\n    if (this.#unsafeDecodeContentData(this.contentInternal) === this.#decodeContent(updatedContent)) {\n      this.lastAcceptedContent = null;\n      return;\n    }\n\n    if (!this.isDirty() || this.workingCopyInternal === updatedContent.content) {\n      this.contentCommitted(updatedContent.content as string, false);\n      return;\n    }\n\n    await Common.Revealer.reveal(this);\n\n    // Make sure we are in the next frame before stopping the world with confirm\n    await new Promise(resolve => window.setTimeout(resolve, 0));\n\n    const shouldUpdate = window.confirm(i18nString(UIStrings.thisFileWasChangedExternally));\n    if (shouldUpdate) {\n      this.contentCommitted(updatedContent.content as string, false);\n    } else {\n      this.lastAcceptedContent = updatedContent.content;\n    }\n  }\n\n  forceLoadOnCheckContent(): void {\n    this.forceLoadOnCheckContentInternal = true;\n  }\n\n  private commitContent(content: string): void {\n    if (this.projectInternal.canSetFileContent()) {\n      void this.projectInternal.setFileContent(this, content, false);\n    }\n    this.contentCommitted(content, true);\n  }\n\n  private contentCommitted(content: string, committedByUser: boolean): void {\n    this.lastAcceptedContent = null;\n    this.contentInternal =\n        new TextUtils.ContentData.ContentData(content, Boolean(this.contentEncodedInternal), this.mimeType());\n    this.requestContentPromise = null;\n\n    this.hasCommitsInternal = true;\n\n    this.innerResetWorkingCopy();\n    const data = {uiSourceCode: this, content, encoded: this.contentEncodedInternal};\n    this.dispatchEventToListeners(Events.WorkingCopyCommitted, data);\n    this.projectInternal.workspace().dispatchEventToListeners(WorkspaceImplEvents.WorkingCopyCommitted, data);\n    if (committedByUser) {\n      this.projectInternal.workspace().dispatchEventToListeners(WorkspaceImplEvents.WorkingCopyCommittedByUser, data);\n    }\n  }\n\n  addRevision(content: string): void {\n    this.commitContent(content);\n  }\n\n  hasCommits(): boolean {\n    return this.hasCommitsInternal;\n  }\n\n  workingCopy(): string {\n    return this.workingCopyContent().content || '';\n  }\n\n  workingCopyContent(): TextUtils.ContentProvider.DeferredContent {\n    return this.workingCopyContentData().asDeferedContent();\n  }\n\n  workingCopyContentData(): TextUtils.ContentData.ContentData {\n    if (this.workingCopyGetter) {\n      this.workingCopyInternal = this.workingCopyGetter();\n      this.workingCopyGetter = null;\n    }\n    const contentData = this.contentInternal ?\n        TextUtils.ContentData.ContentData.contentDataOrEmpty(this.contentInternal) :\n        TextUtils.ContentData.EMPTY_TEXT_CONTENT_DATA;\n    if (this.workingCopyInternal !== null) {\n      return new TextUtils.ContentData.ContentData(\n          this.workingCopyInternal, /* isBase64 */ false, contentData.mimeType);\n    }\n    return contentData;\n  }\n\n  resetWorkingCopy(): void {\n    this.innerResetWorkingCopy();\n    this.workingCopyChanged();\n  }\n\n  private innerResetWorkingCopy(): void {\n    this.workingCopyInternal = null;\n    this.workingCopyGetter = null;\n  }\n\n  setWorkingCopy(newWorkingCopy: string): void {\n    this.workingCopyInternal = newWorkingCopy;\n    this.workingCopyGetter = null;\n    this.workingCopyChanged();\n  }\n\n  setContent(content: string, isBase64: boolean): void {\n    this.contentEncodedInternal = isBase64;\n    if (this.projectInternal.canSetFileContent()) {\n      void this.projectInternal.setFileContent(this, content, isBase64);\n    }\n    this.contentCommitted(content, true);\n  }\n\n  setWorkingCopyGetter(workingCopyGetter: () => string): void {\n    this.workingCopyGetter = workingCopyGetter;\n    this.workingCopyChanged();\n  }\n\n  private workingCopyChanged(): void {\n    this.removeAllMessages();\n    this.dispatchEventToListeners(Events.WorkingCopyChanged, this);\n    this.projectInternal.workspace().dispatchEventToListeners(\n        WorkspaceImplEvents.WorkingCopyChanged, {uiSourceCode: this});\n  }\n\n  removeWorkingCopyGetter(): void {\n    if (!this.workingCopyGetter) {\n      return;\n    }\n    this.workingCopyInternal = this.workingCopyGetter();\n    this.workingCopyGetter = null;\n  }\n\n  commitWorkingCopy(): void {\n    if (this.isDirty()) {\n      this.commitContent(this.workingCopy());\n    }\n  }\n\n  isDirty(): boolean {\n    return this.workingCopyInternal !== null || this.workingCopyGetter !== null;\n  }\n\n  isKnownThirdParty(): boolean {\n    return this.isKnownThirdPartyInternal;\n  }\n\n  markKnownThirdParty(): void {\n    this.isKnownThirdPartyInternal = true;\n  }\n\n  /**\n   * {@link markAsUnconditionallyIgnoreListed}\n   */\n  isUnconditionallyIgnoreListed(): boolean {\n    return this.isUnconditionallyIgnoreListedInternal;\n  }\n\n  isFetchXHR(): boolean {\n    return [Common.ResourceType.resourceTypes.XHR, Common.ResourceType.resourceTypes.Fetch].includes(\n        this.contentType());\n  }\n\n  /**\n   * Unconditionally ignore list this UISourcecode, ignoring any user\n   * setting. We use this to mark breakpoint/logpoint condition scripts for now.\n   */\n  markAsUnconditionallyIgnoreListed(): void {\n    this.isUnconditionallyIgnoreListedInternal = true;\n  }\n\n  extension(): string {\n    return Common.ParsedURL.ParsedURL.extractExtension(this.nameInternal);\n  }\n\n  content(): string {\n    if (!this.contentInternal || 'error' in this.contentInternal) {\n      return '';\n    }\n    return this.contentInternal.text;\n  }\n\n  loadError(): string|null {\n    return (this.contentInternal && 'error' in this.contentInternal && this.contentInternal.error) || null;\n  }\n\n  searchInContent(query: string, caseSensitive: boolean, isRegex: boolean):\n      Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    if (!this.contentInternal || 'error' in this.contentInternal) {\n      return this.projectInternal.searchInFileContent(this, query, caseSensitive, isRegex);\n    }\n    return Promise.resolve(\n        TextUtils.TextUtils.performSearchInContentData(this.contentInternal, query, caseSensitive, isRegex));\n  }\n\n  contentLoaded(): boolean {\n    return Boolean(this.contentInternal);\n  }\n\n  uiLocation(lineNumber: number, columnNumber?: number): UILocation {\n    return new UILocation(this, lineNumber, columnNumber);\n  }\n\n  messages(): Set<Message> {\n    return this.messagesInternal ? new Set(this.messagesInternal) : new Set();\n  }\n\n  addLineMessage(\n      level: Message.Level, text: string, lineNumber: number, columnNumber?: number,\n      clickHandler?: (() => void)): Message {\n    const range = TextUtils.TextRange.TextRange.createFromLocation(lineNumber, columnNumber || 0);\n    const message = new Message(level, text, clickHandler, range);\n    this.addMessage(message);\n    return message;\n  }\n\n  addMessage(message: Message): void {\n    if (!this.messagesInternal) {\n      this.messagesInternal = new Set();\n    }\n    this.messagesInternal.add(message);\n    this.dispatchEventToListeners(Events.MessageAdded, message);\n  }\n\n  removeMessage(message: Message): void {\n    if (this.messagesInternal?.delete(message)) {\n      this.dispatchEventToListeners(Events.MessageRemoved, message);\n    }\n  }\n\n  private removeAllMessages(): void {\n    if (!this.messagesInternal) {\n      return;\n    }\n    for (const message of this.messagesInternal) {\n      this.dispatchEventToListeners(Events.MessageRemoved, message);\n    }\n    this.messagesInternal = null;\n  }\n\n  setDecorationData(type: string, data: any): void {\n    if (data !== this.decorations.get(type)) {\n      this.decorations.set(type, data);\n      this.dispatchEventToListeners(Events.DecorationChanged, type);\n    }\n  }\n\n  getDecorationData(type: string): any {\n    return this.decorations.get(type);\n  }\n\n  disableEdit(): void {\n    this.disableEditInternal = true;\n  }\n\n  editDisabled(): boolean {\n    return this.disableEditInternal;\n  }\n}\n\nexport enum Events {\n  /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n  WorkingCopyChanged = 'WorkingCopyChanged',\n  WorkingCopyCommitted = 'WorkingCopyCommitted',\n  TitleChanged = 'TitleChanged',\n  MessageAdded = 'MessageAdded',\n  MessageRemoved = 'MessageRemoved',\n  DecorationChanged = 'DecorationChanged',\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n\nexport interface WorkingCopyCommitedEvent {\n  uiSourceCode: UISourceCode;\n  content: string;\n  encoded: boolean|undefined;\n}\n\nexport type EventTypes = {\n  [Events.WorkingCopyChanged]: UISourceCode,\n  [Events.WorkingCopyCommitted]: WorkingCopyCommitedEvent,\n  [Events.TitleChanged]: UISourceCode,\n  [Events.MessageAdded]: Message,\n  [Events.MessageRemoved]: Message,\n  [Events.DecorationChanged]: string,\n};\n\nexport class UILocation {\n  uiSourceCode: UISourceCode;\n  lineNumber: number;\n  columnNumber: number|undefined;\n  constructor(uiSourceCode: UISourceCode, lineNumber: number, columnNumber?: number) {\n    this.uiSourceCode = uiSourceCode;\n    this.lineNumber = lineNumber;\n    this.columnNumber = columnNumber;\n  }\n\n  linkText(skipTrim: boolean = false, showColumnNumber: boolean = false): string {\n    const displayName = this.uiSourceCode.displayName(skipTrim);\n    const lineAndColumnText = this.lineAndColumnText(showColumnNumber);\n    return lineAndColumnText ? displayName + ':' + lineAndColumnText : displayName;\n  }\n\n  lineAndColumnText(showColumnNumber: boolean = false): string|undefined {\n    let lineAndColumnText;\n    if (this.uiSourceCode.mimeType() === 'application/wasm') {\n      // For WebAssembly locations, we follow the conventions described in\n      // github.com/WebAssembly/design/blob/master/Web.md#developer-facing-display-conventions\n      if (typeof this.columnNumber === 'number') {\n        lineAndColumnText = `0x${this.columnNumber.toString(16)}`;\n      }\n    } else {\n      lineAndColumnText = `${this.lineNumber + 1}`;\n      if (showColumnNumber && typeof this.columnNumber === 'number') {\n        lineAndColumnText += ':' + (this.columnNumber + 1);\n      }\n    }\n    return lineAndColumnText;\n  }\n\n  id(): string {\n    if (typeof this.columnNumber === 'number') {\n      return this.uiSourceCode.project().id() + ':' + this.uiSourceCode.url() + ':' + this.lineNumber + ':' +\n          this.columnNumber;\n    }\n    return this.lineId();\n  }\n\n  lineId(): string {\n    return this.uiSourceCode.project().id() + ':' + this.uiSourceCode.url() + ':' + this.lineNumber;\n  }\n\n  toUIString(): string {\n    return this.uiSourceCode.url() + ':' + (this.lineNumber + 1);\n  }\n\n  static comparator(location1: UILocation, location2: UILocation): number {\n    return location1.compareTo(location2);\n  }\n\n  compareTo(other: UILocation): number {\n    if (this.uiSourceCode.url() !== other.uiSourceCode.url()) {\n      return this.uiSourceCode.url() > other.uiSourceCode.url() ? 1 : -1;\n    }\n    if (this.lineNumber !== other.lineNumber) {\n      return this.lineNumber - other.lineNumber;\n    }\n    // We consider `undefined` less than an actual column number, since\n    // UI location without a column number corresponds to the whole line.\n    if (this.columnNumber === other.columnNumber) {\n      return 0;\n    }\n    if (typeof this.columnNumber !== 'number') {\n      return -1;\n    }\n    if (typeof other.columnNumber !== 'number') {\n      return 1;\n    }\n    return this.columnNumber - other.columnNumber;\n  }\n}\n\n/**\n * A text range inside a specific {@link UISourceCode}.\n *\n * We use a class instead of an interface so we can implement a revealer for it.\n */\nexport class UILocationRange {\n  readonly uiSourceCode: UISourceCode;\n  readonly range: TextUtils.TextRange.TextRange;\n\n  constructor(uiSourceCode: UISourceCode, range: TextUtils.TextRange.TextRange) {\n    this.uiSourceCode = uiSourceCode;\n    this.range = range;\n  }\n}\n\n/**\n * A message associated with a range in a `UISourceCode`. The range will be\n * underlined starting at the range's start and ending at the line end (the\n * end of the range is currently disregarded).\n * An icon is going to appear at the end of the line according to the\n * `level` of the Message. This is only the model; displaying is handled\n * where UISourceCode displaying is handled.\n */\nexport class Message {\n  private readonly levelInternal: Message.Level;\n  private readonly textInternal: string;\n  range: TextUtils.TextRange.TextRange;\n  private readonly clickHandlerInternal?: (() => void);\n\n  constructor(level: Message.Level, text: string, clickHandler?: (() => void), range?: TextUtils.TextRange.TextRange) {\n    this.levelInternal = level;\n    this.textInternal = text;\n    this.range = range ?? new TextUtils.TextRange.TextRange(0, 0, 0, 0);\n    this.clickHandlerInternal = clickHandler;\n  }\n\n  level(): Message.Level {\n    return this.levelInternal;\n  }\n\n  text(): string {\n    return this.textInternal;\n  }\n\n  clickHandler(): (() => void)|undefined {\n    return this.clickHandlerInternal;\n  }\n\n  lineNumber(): number {\n    return this.range.startLine;\n  }\n\n  columnNumber(): number|undefined {\n    return this.range.startColumn;\n  }\n\n  isEqual(another: Message): boolean {\n    return this.text() === another.text() && this.level() === another.level() && this.range.equal(another.range);\n  }\n}\n\nexport namespace Message {\n  export const enum Level {\n    ERROR = 'Error',\n    ISSUE = 'Issue',\n    WARNING = 'Warning',\n  }\n}\n\nexport class LineMarker {\n  private readonly rangeInternal: TextUtils.TextRange.TextRange;\n  private readonly typeInternal: string;\n  private readonly dataInternal: any;\n\n  constructor(range: TextUtils.TextRange.TextRange, type: string, data: any) {\n    this.rangeInternal = range;\n    this.typeInternal = type;\n    this.dataInternal = data;\n  }\n\n  range(): TextUtils.TextRange.TextRange {\n    return this.rangeInternal;\n  }\n\n  type(): string {\n    return this.typeInternal;\n  }\n\n  data(): any {\n    return this.dataInternal;\n  }\n}\n\nexport class UISourceCodeMetadata {\n  modificationTime: Date|null;\n  contentSize: number|null;\n\n  constructor(modificationTime: Date|null, contentSize: number|null) {\n    this.modificationTime = modificationTime;\n    this.contentSize = contentSize;\n  }\n}\n"],
  "mappings": "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",
  "names": ["newName", "Events", "Message", "Level"]
}
