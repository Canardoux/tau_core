{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/bindings/StylesSourceMapping.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {ContentProviderBasedProject} from './ContentProviderBasedProject.js';\nimport type {SourceMapping} from './CSSWorkspaceBinding.js';\nimport {NetworkProject} from './NetworkProject.js';\nimport {metadataForURL} from './ResourceUtils.js';\n\nconst uiSourceCodeToStyleMap = new WeakMap<Workspace.UISourceCode.UISourceCode, StyleFile>();\n\nexport class StylesSourceMapping implements SourceMapping {\n  #cssModel: SDK.CSSModel.CSSModel;\n  #project: ContentProviderBasedProject;\n  readonly #styleFiles: Map<string, StyleFile>;\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n\n  constructor(cssModel: SDK.CSSModel.CSSModel, workspace: Workspace.Workspace.WorkspaceImpl) {\n    this.#cssModel = cssModel;\n    const target = this.#cssModel.target();\n    this.#project = new ContentProviderBasedProject(\n        workspace, 'css:' + target.id(), Workspace.Workspace.projectTypes.Network, '', false /* isServiceProject */);\n    NetworkProject.setTargetForProject(this.#project, target);\n\n    this.#styleFiles = new Map();\n    this.#eventListeners = [\n      this.#cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetAdded, this.styleSheetAdded, this),\n      this.#cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetRemoved, this.styleSheetRemoved, this),\n      this.#cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetChanged, this.styleSheetChanged, this),\n    ];\n  }\n\n  addSourceMap(sourceUrl: Platform.DevToolsPath.UrlString, sourceMapUrl: Platform.DevToolsPath.UrlString): void {\n    this.#styleFiles.get(sourceUrl)?.addSourceMap(sourceUrl, sourceMapUrl);\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.CSSModel.CSSLocation): Workspace.UISourceCode.UILocation|null {\n    const header = rawLocation.header();\n    if (!header || !this.acceptsHeader(header)) {\n      return null;\n    }\n    const styleFile = this.#styleFiles.get(header.resourceURL());\n    if (!styleFile) {\n      return null;\n    }\n    let lineNumber = rawLocation.lineNumber;\n    let columnNumber: undefined|number = rawLocation.columnNumber;\n    if (header.isInline && header.hasSourceURL) {\n      lineNumber -= header.lineNumberInSource(0);\n      const headerColumnNumber = header.columnNumberInSource(lineNumber, 0);\n      if (typeof headerColumnNumber === 'undefined') {\n        columnNumber = headerColumnNumber;\n      } else {\n        columnNumber -= headerColumnNumber;\n      }\n    }\n    return styleFile.getUiSourceCode().uiLocation(lineNumber, columnNumber);\n  }\n\n  uiLocationToRawLocations(uiLocation: Workspace.UISourceCode.UILocation): SDK.CSSModel.CSSLocation[] {\n    const styleFile = uiSourceCodeToStyleMap.get(uiLocation.uiSourceCode);\n    if (!styleFile) {\n      return [];\n    }\n    const rawLocations = [];\n    for (const header of styleFile.getHeaders()) {\n      let lineNumber = uiLocation.lineNumber;\n      let columnNumber = uiLocation.columnNumber;\n      if (header.isInline && header.hasSourceURL) {\n        // TODO(crbug.com/1153123): Revisit the `#columnNumber || 0` and also preserve `undefined` for source maps?\n        columnNumber = header.columnNumberInSource(lineNumber, uiLocation.columnNumber || 0);\n        lineNumber = header.lineNumberInSource(lineNumber);\n      }\n      rawLocations.push(new SDK.CSSModel.CSSLocation(header, lineNumber, columnNumber));\n    }\n    return rawLocations;\n  }\n\n  private acceptsHeader(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): boolean {\n    if (header.isConstructedByNew()) {\n      return false;\n    }\n    if (header.isInline && !header.hasSourceURL && header.origin !== 'inspector') {\n      return false;\n    }\n    if (!header.resourceURL()) {\n      return false;\n    }\n    return true;\n  }\n\n  private styleSheetAdded(event: Common.EventTarget.EventTargetEvent<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>):\n      void {\n    const header = event.data;\n    if (!this.acceptsHeader(header)) {\n      return;\n    }\n\n    const url = header.resourceURL();\n    let styleFile = this.#styleFiles.get(url);\n    if (!styleFile) {\n      styleFile = new StyleFile(this.#cssModel, this.#project, header);\n      this.#styleFiles.set(url, styleFile);\n    } else {\n      styleFile.addHeader(header);\n    }\n  }\n\n  private styleSheetRemoved(event: Common.EventTarget.EventTargetEvent<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>):\n      void {\n    const header = event.data;\n    if (!this.acceptsHeader(header)) {\n      return;\n    }\n    const url = header.resourceURL();\n    const styleFile = this.#styleFiles.get(url);\n    if (styleFile) {\n      if (styleFile.getHeaders().size === 1) {\n        styleFile.dispose();\n        this.#styleFiles.delete(url);\n      } else {\n        styleFile.removeHeader(header);\n      }\n    }\n  }\n\n  private styleSheetChanged(event: Common.EventTarget.EventTargetEvent<SDK.CSSModel.StyleSheetChangedEvent>): void {\n    const header = this.#cssModel.styleSheetHeaderForId(event.data.styleSheetId);\n    if (!header || !this.acceptsHeader(header)) {\n      return;\n    }\n    const styleFile = this.#styleFiles.get(header.resourceURL());\n    if (styleFile) {\n      styleFile.styleSheetChanged(header);\n    }\n  }\n\n  dispose(): void {\n    for (const styleFile of this.#styleFiles.values()) {\n      styleFile.dispose();\n    }\n    this.#styleFiles.clear();\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    this.#project.removeProject();\n  }\n}\n\nexport class StyleFile implements TextUtils.ContentProvider.ContentProvider {\n  readonly #cssModel: SDK.CSSModel.CSSModel;\n  readonly #project: ContentProviderBasedProject;\n  headers: Set<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>;\n  uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n  readonly #throttler: Common.Throttler.Throttler;\n  #terminated: boolean;\n  #isAddingRevision?: boolean;\n  #isUpdatingHeaders?: boolean;\n\n  constructor(\n      cssModel: SDK.CSSModel.CSSModel, project: ContentProviderBasedProject,\n      header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader) {\n    this.#cssModel = cssModel;\n    this.#project = project;\n    this.headers = new Set([header]);\n\n    const target = cssModel.target();\n\n    const url = header.resourceURL();\n    const metadata = metadataForURL(target, header.frameId, url);\n\n    this.uiSourceCode = this.#project.createUISourceCode(url, header.contentType());\n    uiSourceCodeToStyleMap.set(this.uiSourceCode, this);\n    NetworkProject.setInitialFrameAttribution(this.uiSourceCode, header.frameId);\n    this.#project.addUISourceCodeWithProvider(this.uiSourceCode, this, metadata, 'text/css');\n\n    this.#eventListeners = [\n      this.uiSourceCode.addEventListener(\n          Workspace.UISourceCode.Events.WorkingCopyChanged, this.workingCopyChanged, this),\n      this.uiSourceCode.addEventListener(\n          Workspace.UISourceCode.Events.WorkingCopyCommitted, this.workingCopyCommitted, this),\n    ];\n    this.#throttler = new Common.Throttler.Throttler(StyleFile.updateTimeout);\n    this.#terminated = false;\n  }\n\n  addHeader(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): void {\n    this.headers.add(header);\n    NetworkProject.addFrameAttribution(this.uiSourceCode, header.frameId);\n  }\n\n  removeHeader(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): void {\n    this.headers.delete(header);\n    NetworkProject.removeFrameAttribution(this.uiSourceCode, header.frameId);\n  }\n\n  styleSheetChanged(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): void {\n    console.assert(this.headers.has(header));\n    if (this.#isUpdatingHeaders || !this.headers.has(header)) {\n      return;\n    }\n    const mirrorContentBound = this.mirrorContent.bind(this, header, true /* majorChange */);\n    void this.#throttler.schedule(mirrorContentBound, Common.Throttler.Scheduling.DEFAULT);\n  }\n\n  private workingCopyCommitted(): void {\n    if (this.#isAddingRevision) {\n      return;\n    }\n    const mirrorContentBound = this.mirrorContent.bind(this, this.uiSourceCode, true /* majorChange */);\n    void this.#throttler.schedule(mirrorContentBound, Common.Throttler.Scheduling.AS_SOON_AS_POSSIBLE);\n  }\n\n  private workingCopyChanged(): void {\n    if (this.#isAddingRevision) {\n      return;\n    }\n    const mirrorContentBound = this.mirrorContent.bind(this, this.uiSourceCode, false /* majorChange */);\n    void this.#throttler.schedule(mirrorContentBound, Common.Throttler.Scheduling.DEFAULT);\n  }\n\n  private async mirrorContent(fromProvider: TextUtils.ContentProvider.ContentProvider, majorChange: boolean):\n      Promise<void> {\n    if (this.#terminated) {\n      this.styleFileSyncedForTest();\n      return;\n    }\n\n    let newContent: string|null = null;\n    if (fromProvider === this.uiSourceCode) {\n      newContent = this.uiSourceCode.workingCopy();\n    } else {\n      newContent = TextUtils.ContentData.ContentData.textOr(await fromProvider.requestContentData(), null);\n    }\n\n    if (newContent === null || this.#terminated) {\n      this.styleFileSyncedForTest();\n      return;\n    }\n\n    if (fromProvider !== this.uiSourceCode) {\n      this.#isAddingRevision = true;\n      this.uiSourceCode.addRevision(newContent);\n      this.#isAddingRevision = false;\n    }\n\n    this.#isUpdatingHeaders = true;\n    const promises = [];\n    for (const header of this.headers) {\n      if (header === fromProvider) {\n        continue;\n      }\n      promises.push(this.#cssModel.setStyleSheetText(header.id, newContent, majorChange));\n    }\n    // ------ ASYNC ------\n    await Promise.all(promises);\n    this.#isUpdatingHeaders = false;\n    this.styleFileSyncedForTest();\n  }\n\n  private styleFileSyncedForTest(): void {\n  }\n\n  dispose(): void {\n    if (this.#terminated) {\n      return;\n    }\n    this.#terminated = true;\n    this.#project.removeUISourceCode(this.uiSourceCode.url());\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n  }\n\n  contentURL(): Platform.DevToolsPath.UrlString {\n    console.assert(this.headers.size > 0);\n    return this.#firstHeader().originalContentProvider().contentURL();\n  }\n\n  contentType(): Common.ResourceType.ResourceType {\n    console.assert(this.headers.size > 0);\n    return this.#firstHeader().originalContentProvider().contentType();\n  }\n\n  requestContent(): Promise<TextUtils.ContentProvider.DeferredContent> {\n    console.assert(this.headers.size > 0);\n    return this.#firstHeader().originalContentProvider().requestContent();\n  }\n\n  requestContentData(): Promise<TextUtils.ContentData.ContentDataOrError> {\n    console.assert(this.headers.size > 0);\n    return this.#firstHeader().originalContentProvider().requestContentData();\n  }\n\n  searchInContent(query: string, caseSensitive: boolean, isRegex: boolean):\n      Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    console.assert(this.headers.size > 0);\n    return this.#firstHeader().originalContentProvider().searchInContent(query, caseSensitive, isRegex);\n  }\n\n  #firstHeader(): SDK.CSSStyleSheetHeader.CSSStyleSheetHeader {\n    console.assert(this.headers.size > 0);\n    return this.headers.values().next().value as SDK.CSSStyleSheetHeader.CSSStyleSheetHeader;\n  }\n\n  static readonly updateTimeout = 200;\n\n  getHeaders(): Set<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader> {\n    return this.headers;\n  }\n\n  getUiSourceCode(): Workspace.UISourceCode.UISourceCode {\n    return this.uiSourceCode;\n  }\n\n  addSourceMap(sourceUrl: Platform.DevToolsPath.UrlString, sourceMapUrl: Platform.DevToolsPath.UrlString): void {\n    const sourceMapManager = this.#cssModel.sourceMapManager();\n    this.headers.forEach(header => {\n      sourceMapManager.detachSourceMap(header);\n      sourceMapManager.attachSourceMap(header, sourceUrl, sourceMapUrl);\n    });\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
