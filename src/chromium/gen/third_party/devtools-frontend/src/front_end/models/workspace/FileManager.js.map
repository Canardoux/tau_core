{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/workspace/FileManager.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport type * as Platform from '../../core/platform/platform.js';\n\nlet fileManagerInstance: FileManager|null;\n\ninterface SaveCallbackParam {\n  fileSystemPath?: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString;\n}\n\nexport class FileManager extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  private readonly saveCallbacks:\n      Map<Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString, (arg0: SaveCallbackParam|null) => void>;\n  private constructor() {\n    super();\n    this.saveCallbacks = new Map();\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.SavedURL, this.savedURL, this);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.CanceledSaveURL, this.canceledSavedURL, this);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.AppendedToURL, this.appendedToURL, this);\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): FileManager {\n    const {forceNew} = opts;\n    if (!fileManagerInstance || forceNew) {\n      fileManagerInstance = new FileManager();\n    }\n\n    return fileManagerInstance;\n  }\n\n  // close() *must* be called, for the InspectorFrontendHostStub case, to complete the saving.\n  save(\n      url: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString, content: string, forceSaveAs: boolean,\n      isBase64: boolean): Promise<SaveCallbackParam|null> {\n    // Remove this url from the saved URLs while it is being saved.\n    const result = new Promise<SaveCallbackParam|null>(resolve => this.saveCallbacks.set(url, resolve));\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.save(url, content, forceSaveAs, isBase64);\n    return result;\n  }\n\n  private savedURL(event: Common.EventTarget.EventTargetEvent<Host.InspectorFrontendHostAPI.SavedURLEvent>): void {\n    const {url, fileSystemPath} = event.data;\n    const callback = this.saveCallbacks.get(url);\n    this.saveCallbacks.delete(url);\n    if (callback) {\n      callback({fileSystemPath});\n    }\n  }\n\n  private canceledSavedURL({data: url}: Common.EventTarget.EventTargetEvent<Platform.DevToolsPath.UrlString>): void {\n    const callback = this.saveCallbacks.get(url);\n    this.saveCallbacks.delete(url);\n    if (callback) {\n      callback(null);\n    }\n  }\n\n  append(url: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString, content: string): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.append(url, content);\n  }\n\n  close(url: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.close(url);\n  }\n\n  private appendedToURL({data: url}: Common.EventTarget.EventTargetEvent<string>): void {\n    this.dispatchEventToListeners(Events.APPENDED_TO_URL, url);\n  }\n}\n\nexport const enum Events {\n  APPENDED_TO_URL = 'AppendedToURL',\n}\n\nexport type EventTypes = {\n  [Events.APPENDED_TO_URL]: string,\n};\n"],
  "mappings": ";AA8BA,YAAY,YAAY;AACxB,YAAY,UAAU;AAGtB,IAAI;AAMG,aAAM,oBAAoB,OAAO,cAAc,cAA0B;AAAA,EAC7D;AAAA,EAET,cAAc;AACpB,UAAM;AACN,SAAK,gBAAgB,oBAAI,IAAI;AAC7B,SAAK,sBAAsB,8BAA8B,OAAO;AAAA,MAC5D,KAAK,yBAAyB,OAAO;AAAA,MAAU,KAAK;AAAA,MAAU;AAAA,IAAI;AACtE,SAAK,sBAAsB,8BAA8B,OAAO;AAAA,MAC5D,KAAK,yBAAyB,OAAO;AAAA,MAAiB,KAAK;AAAA,MAAkB;AAAA,IAAI;AACrF,SAAK,sBAAsB,8BAA8B,OAAO;AAAA,MAC5D,KAAK,yBAAyB,OAAO;AAAA,MAAe,KAAK;AAAA,MAAe;AAAA,IAAI;AAAA,EAClF;AAAA,EAEA,OAAO,SAAS,OAAiC,EAAC,UAAU,KAAI,GAAgB;AAC9E,UAAM,EAAC,SAAQ,IAAI;AACnB,QAAI,CAAC,uBAAuB,UAAU;AACpC,4BAAsB,IAAI,YAAY;AAAA,IACxC;AAEA,WAAO;AAAA,EACT;AAAA;AAAA,EAGA,KACI,KAA0E,SAAiB,aAC3F,UAAoD;AAEtD,UAAM,SAAS,IAAI,QAAgC,aAAW,KAAK,cAAc,IAAI,KAAK,OAAO,CAAC;AAClG,SAAK,sBAAsB,8BAA8B,KAAK,KAAK,SAAS,aAAa,QAAQ;AACjG,WAAO;AAAA,EACT;AAAA,EAEQ,SAAS,OAA+F;AAC9G,UAAM,EAAC,KAAK,eAAc,IAAI,MAAM;AACpC,UAAM,WAAW,KAAK,cAAc,IAAI,GAAG;AAC3C,SAAK,cAAc,OAAO,GAAG;AAC7B,QAAI,UAAU;AACZ,eAAS,EAAC,eAAc,CAAC;AAAA,IAC3B;AAAA,EACF;AAAA,EAEQ,iBAAiB,EAAC,MAAM,IAAG,GAA+E;AAChH,UAAM,WAAW,KAAK,cAAc,IAAI,GAAG;AAC3C,SAAK,cAAc,OAAO,GAAG;AAC7B,QAAI,UAAU;AACZ,eAAS,IAAI;AAAA,IACf;AAAA,EACF;AAAA,EAEA,OAAO,KAA0E,SAAuB;AACtG,SAAK,sBAAsB,8BAA8B,OAAO,KAAK,OAAO;AAAA,EAC9E;AAAA,EAEA,MAAM,KAAgF;AACpF,SAAK,sBAAsB,8BAA8B,MAAM,GAAG;AAAA,EACpE;AAAA,EAEQ,cAAc,EAAC,MAAM,IAAG,GAAsD;AACpF,SAAK,yBAAyB,uCAAwB,GAAG;AAAA,EAC3D;AACF;AAEO,WAAW,SAAX,kBAAWA,YAAX;AACL,EAAAA,QAAA,qBAAkB;AADF,SAAAA;AAAA,GAAA;",
  "names": ["Events"]
}
