{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/models/formatter/ScriptFormatter.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport type * as FormatterActions from '../../entrypoints/formatter_worker/FormatterActions.js';\n\nimport {formatterWorkerPool} from './FormatterWorkerPool.js';\n\nfunction locationToPosition(lineEndings: number[], lineNumber: number, columnNumber: number): number {\n  const position = lineNumber ? lineEndings[lineNumber - 1] + 1 : 0;\n  return position + columnNumber;\n}\n\nfunction positionToLocation(lineEndings: number[], position: number): number[] {\n  const lineNumber =\n      Platform.ArrayUtilities.upperBound(lineEndings, position - 1, Platform.ArrayUtilities.DEFAULT_COMPARATOR);\n  let columnNumber;\n  if (!lineNumber) {\n    columnNumber = position;\n  } else {\n    columnNumber = position - lineEndings[lineNumber - 1] - 1;\n  }\n  return [lineNumber, columnNumber];\n}\n\nexport interface FormattedContent {\n  formattedContent: string;\n  formattedMapping: FormatterSourceMapping;\n}\n\nexport async function format(\n    contentType: Common.ResourceType.ResourceType, mimeType: string, content: string,\n    indent: string =\n        Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get()): Promise<FormattedContent> {\n  if (contentType.isDocumentOrScriptOrStyleSheet()) {\n    return formatScriptContent(mimeType, content, indent);\n  }\n\n  return {formattedContent: content, formattedMapping: new IdentityFormatterSourceMapping()};\n}\n\nexport async function formatScriptContent(\n    mimeType: string, content: string,\n    indent: string =\n        Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get()): Promise<FormattedContent> {\n  const originalContent = content.replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, '\\n').replace(/^\\uFEFF/, '');\n\n  const pool = formatterWorkerPool();\n\n  const formatResult = await pool.format(mimeType, originalContent, indent);\n  const originalContentLineEndings = Platform.StringUtilities.findLineEndingIndexes(originalContent);\n  const formattedContentLineEndings = Platform.StringUtilities.findLineEndingIndexes(formatResult.content);\n\n  const sourceMapping =\n      new FormatterSourceMappingImpl(originalContentLineEndings, formattedContentLineEndings, formatResult.mapping);\n  return {formattedContent: formatResult.content, formattedMapping: sourceMapping};\n}\n\nexport interface FormatterSourceMapping {\n  originalToFormatted(lineNumber: number, columnNumber?: number): number[];\n  formattedToOriginal(lineNumber: number, columnNumber?: number): number[];\n}\n\nclass IdentityFormatterSourceMapping implements FormatterSourceMapping {\n  originalToFormatted(lineNumber: number, columnNumber = 0): number[] {\n    return [lineNumber, columnNumber];\n  }\n\n  formattedToOriginal(lineNumber: number, columnNumber = 0): number[] {\n    return [lineNumber, columnNumber];\n  }\n}\n\nclass FormatterSourceMappingImpl implements FormatterSourceMapping {\n  private readonly originalLineEndings: number[];\n  private readonly formattedLineEndings: number[];\n  private readonly mapping: FormatterActions.FormatMapping;\n\n  constructor(originalLineEndings: number[], formattedLineEndings: number[], mapping: FormatterActions.FormatMapping) {\n    this.originalLineEndings = originalLineEndings;\n    this.formattedLineEndings = formattedLineEndings;\n    this.mapping = mapping;\n  }\n\n  originalToFormatted(lineNumber: number, columnNumber?: number): number[] {\n    const originalPosition = locationToPosition(this.originalLineEndings, lineNumber, columnNumber || 0);\n    const formattedPosition = this.convertPosition(this.mapping.original, this.mapping.formatted, originalPosition);\n    return positionToLocation(this.formattedLineEndings, formattedPosition);\n  }\n\n  formattedToOriginal(lineNumber: number, columnNumber?: number): number[] {\n    const formattedPosition = locationToPosition(this.formattedLineEndings, lineNumber, columnNumber || 0);\n    const originalPosition = this.convertPosition(this.mapping.formatted, this.mapping.original, formattedPosition);\n    return positionToLocation(this.originalLineEndings, originalPosition);\n  }\n\n  private convertPosition(positions1: number[], positions2: number[], position: number): number {\n    const index =\n        Platform.ArrayUtilities.upperBound(positions1, position, Platform.ArrayUtilities.DEFAULT_COMPARATOR) - 1;\n    let convertedPosition: number = positions2[index] + position - positions1[index];\n    if (index < positions2.length - 1 && convertedPosition > positions2[index + 1]) {\n      convertedPosition = positions2[index + 1];\n    }\n    return convertedPosition;\n  }\n}\n"],
  "mappings": ";AA8BA,YAAY,YAAY;AACxB,YAAY,cAAc;AAG1B,SAAQ,2BAA0B;AAElC,SAAS,mBAAmB,aAAuB,YAAoB,cAA8B;AACnG,QAAM,WAAW,aAAa,YAAY,aAAa,CAAC,IAAI,IAAI;AAChE,SAAO,WAAW;AACpB;AAEA,SAAS,mBAAmB,aAAuB,UAA4B;AAC7E,QAAM,aACF,SAAS,eAAe,WAAW,aAAa,WAAW,GAAG,SAAS,eAAe,kBAAkB;AAC5G,MAAI;AACJ,MAAI,CAAC,YAAY;AACf,mBAAe;AAAA,EACjB,OAAO;AACL,mBAAe,WAAW,YAAY,aAAa,CAAC,IAAI;AAAA,EAC1D;AACA,SAAO,CAAC,YAAY,YAAY;AAClC;AAOA,sBAAsB,OAClB,aAA+C,UAAkB,SACjE,SACI,OAAO,SAAS,SAAS,SAAS,EAAE,cAAc,oBAAoB,EAAE,IAAI,GAA8B;AAChH,MAAI,YAAY,+BAA+B,GAAG;AAChD,WAAO,oBAAoB,UAAU,SAAS,MAAM;AAAA,EACtD;AAEA,SAAO,EAAC,kBAAkB,SAAS,kBAAkB,IAAI,+BAA+B,EAAC;AAC3F;AAEA,sBAAsB,oBAClB,UAAkB,SAClB,SACI,OAAO,SAAS,SAAS,SAAS,EAAE,cAAc,oBAAoB,EAAE,IAAI,GAA8B;AAChH,QAAM,kBAAkB,QAAQ,QAAQ,2BAA2B,IAAI,EAAE,QAAQ,WAAW,EAAE;AAE9F,QAAM,OAAO,oBAAoB;AAEjC,QAAM,eAAe,MAAM,KAAK,OAAO,UAAU,iBAAiB,MAAM;AACxE,QAAM,6BAA6B,SAAS,gBAAgB,sBAAsB,eAAe;AACjG,QAAM,8BAA8B,SAAS,gBAAgB,sBAAsB,aAAa,OAAO;AAEvG,QAAM,gBACF,IAAI,2BAA2B,4BAA4B,6BAA6B,aAAa,OAAO;AAChH,SAAO,EAAC,kBAAkB,aAAa,SAAS,kBAAkB,cAAa;AACjF;AAOA,MAAM,+BAAiE;AAAA,EACrE,oBAAoB,YAAoB,eAAe,GAAa;AAClE,WAAO,CAAC,YAAY,YAAY;AAAA,EAClC;AAAA,EAEA,oBAAoB,YAAoB,eAAe,GAAa;AAClE,WAAO,CAAC,YAAY,YAAY;AAAA,EAClC;AACF;AAEA,MAAM,2BAA6D;AAAA,EAChD;AAAA,EACA;AAAA,EACA;AAAA,EAEjB,YAAY,qBAA+B,sBAAgC,SAAyC;AAClH,SAAK,sBAAsB;AAC3B,SAAK,uBAAuB;AAC5B,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,oBAAoB,YAAoB,cAAiC;AACvE,UAAM,mBAAmB,mBAAmB,KAAK,qBAAqB,YAAY,gBAAgB,CAAC;AACnG,UAAM,oBAAoB,KAAK,gBAAgB,KAAK,QAAQ,UAAU,KAAK,QAAQ,WAAW,gBAAgB;AAC9G,WAAO,mBAAmB,KAAK,sBAAsB,iBAAiB;AAAA,EACxE;AAAA,EAEA,oBAAoB,YAAoB,cAAiC;AACvE,UAAM,oBAAoB,mBAAmB,KAAK,sBAAsB,YAAY,gBAAgB,CAAC;AACrG,UAAM,mBAAmB,KAAK,gBAAgB,KAAK,QAAQ,WAAW,KAAK,QAAQ,UAAU,iBAAiB;AAC9G,WAAO,mBAAmB,KAAK,qBAAqB,gBAAgB;AAAA,EACtE;AAAA,EAEQ,gBAAgB,YAAsB,YAAsB,UAA0B;AAC5F,UAAM,QACF,SAAS,eAAe,WAAW,YAAY,UAAU,SAAS,eAAe,kBAAkB,IAAI;AAC3G,QAAI,oBAA4B,WAAW,KAAK,IAAI,WAAW,WAAW,KAAK;AAC/E,QAAI,QAAQ,WAAW,SAAS,KAAK,oBAAoB,WAAW,QAAQ,CAAC,GAAG;AAC9E,0BAAoB,WAAW,QAAQ,CAAC;AAAA,IAC1C;AACA,WAAO;AAAA,EACT;AACF;",
  "names": []
}
