{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/models/live-metrics/web-vitals-injected/web-vitals-injected.ts"],
  "sourcesContent": ["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as WebVitals from '../../../third_party/web-vitals/web-vitals.js';\n\nimport * as OnEachInteraction from './OnEachInteraction.js';\nimport * as OnEachLayoutShift from './OnEachLayoutShift.js';\nimport * as Spec from './spec/spec.js';\n\nconst {onLCP, onCLS, onINP} = WebVitals.Attribution;\nconst {onEachInteraction} = OnEachInteraction;\nconst {onEachLayoutShift} = OnEachLayoutShift;\n\ndeclare const window: Window&{\n  getNodeForIndex: (index: number) => Node | undefined,\n  [Spec.INTERNAL_KILL_SWITCH]: () => void,\n  [Spec.EVENT_BINDING_NAME]: (payload: string) => void,\n};\n\ntype ListenerArgs = Parameters<typeof globalThis['addEventListener']>;\n\nconst windowListeners: ListenerArgs[] = [];\nconst documentListeners: ListenerArgs[] = [];\nconst observers: PerformanceObserver[] = [];\n\nconst originalWindowAddListener = Window.prototype.addEventListener;\nWindow.prototype.addEventListener = function(...args: ListenerArgs) {\n  windowListeners.push(args);\n  return originalWindowAddListener.call(this, ...args);\n};\n\nconst originalDocumentAddListener = Document.prototype.addEventListener;\nDocument.prototype.addEventListener = function(...args: ListenerArgs) {\n  documentListeners.push(args);\n  return originalDocumentAddListener.call(this, ...args);\n};\n\nclass InternalPerformanceObserver extends PerformanceObserver {\n  constructor(...args: ConstructorParameters<typeof PerformanceObserver>) {\n    super(...args);\n    observers.push(this);\n  }\n}\nglobalThis.PerformanceObserver = InternalPerformanceObserver;\n\nlet killed = false;\n\n/**\n * This is a hack solution to remove any listeners that were added by web-vitals.js\n * or additional services in this bundle. Once this function is called, the execution\n * context should be considered dead and a new one will need to be created for live metrics\n * to be served again.\n */\nwindow[Spec.INTERNAL_KILL_SWITCH] = () => {\n  if (killed) {\n    return;\n  }\n\n  for (const observer of observers) {\n    observer.disconnect();\n  }\n\n  for (const args of windowListeners) {\n    window.removeEventListener(...args);\n  }\n\n  for (const args of documentListeners) {\n    document.removeEventListener(...args);\n  }\n\n  killed = true;\n};\n\nfunction sendEventToDevTools(event: Spec.WebVitalsEvent): void {\n  const payload = JSON.stringify(event);\n  window[Spec.EVENT_BINDING_NAME](payload);\n}\n\nconst nodeList: Node[] = [];\n\nfunction establishNodeIndex(node: Node): number {\n  const index = nodeList.length;\n  nodeList.push(node);\n  return index;\n}\n\n/**\n * The data sent over the event binding needs to be JSON serializable, so we\n * can't send DOM nodes directly. Instead we create an ID for each node (see\n * `establishNodeIndex`) that we can later use to retrieve a remote object\n * for that node.\n *\n * This function is used by `Runtime.evaluate` calls to get a remote object\n * for the specified index.\n */\nwindow.getNodeForIndex = (index: number): Node|undefined => {\n  return nodeList[index];\n};\n\nfunction limitScripts(loafs: Spec.PerformanceLongAnimationFrameTimingJSON[]):\n    Spec.PerformanceLongAnimationFrameTimingJSON[] {\n  return loafs.map(loaf => {\n    const longestScripts: Spec.PerformanceScriptTimingJSON[] = [];\n    for (const script of loaf.scripts) {\n      if (longestScripts.length < Spec.SCRIPTS_PER_LOAF_LIMIT) {\n        longestScripts.push(script);\n        continue;\n      }\n\n      const shorterIndex = longestScripts.findIndex(s => s.duration < script.duration);\n      if (shorterIndex === -1) {\n        continue;\n      }\n\n      longestScripts[shorterIndex] = script;\n    }\n    longestScripts.sort((a, b) => a.startTime - b.startTime);\n    loaf.scripts = longestScripts;\n    return loaf;\n  });\n}\n\nfunction initialize(): void {\n  sendEventToDevTools({name: 'reset'});\n\n  // We want to treat bfcache navigations like a standard navigations, so emit\n  // a reset event when bfcache is restored.\n  //\n  // Metric functions will also re-emit their values using this listener's callback.\n  // To ensure this event is fired before those values are emitted, register this\n  // callback before any others.\n  WebVitals.onBFCacheRestore(() => {\n    sendEventToDevTools({name: 'reset'});\n  });\n\n  onLCP(metric => {\n    const event: Spec.LCPChangeEvent = {\n      name: 'LCP',\n      value: metric.value,\n      phases: {\n        timeToFirstByte: metric.attribution.timeToFirstByte,\n        resourceLoadDelay: metric.attribution.resourceLoadDelay,\n        resourceLoadTime: metric.attribution.resourceLoadDuration,\n        elementRenderDelay: metric.attribution.elementRenderDelay,\n      },\n    };\n\n    const element = metric.attribution.lcpEntry?.element;\n    if (element) {\n      event.nodeIndex = establishNodeIndex(element);\n    }\n    sendEventToDevTools(event);\n  }, {reportAllChanges: true});\n\n  onCLS(metric => {\n    const event: Spec.CLSChangeEvent = {\n      name: 'CLS',\n      value: metric.value,\n      clusterShiftIds: metric.entries.map(Spec.getUniqueLayoutShiftId),\n    };\n    sendEventToDevTools(event);\n  }, {reportAllChanges: true});\n\n  onINP(metric => {\n    const event: Spec.INPChangeEvent = {\n      name: 'INP',\n      value: metric.value,\n      phases: {\n        inputDelay: metric.attribution.inputDelay,\n        processingDuration: metric.attribution.processingDuration,\n        presentationDelay: metric.attribution.presentationDelay,\n      },\n      startTime: metric.entries[0].startTime,\n      entryGroupId: metric.entries[0].interactionId as Spec.InteractionEntryGroupId,\n      interactionType: metric.attribution.interactionType,\n    };\n    sendEventToDevTools(event);\n  }, {reportAllChanges: true, durationThreshold: 0});\n\n  onEachInteraction(interaction => {\n    // Multiple `InteractionEntry` events can be emitted for the same `uniqueInteractionId`\n    // However, it is easier to combine these entries in the DevTools client rather than in\n    // this injected code.\n    const event: Spec.InteractionEntryEvent = {\n      name: 'InteractionEntry',\n      duration: interaction.value,\n      phases: {\n        inputDelay: interaction.attribution.inputDelay,\n        processingDuration: interaction.attribution.processingDuration,\n        presentationDelay: interaction.attribution.presentationDelay,\n      },\n      startTime: interaction.entries[0].startTime,\n      entryGroupId: interaction.entries[0].interactionId as Spec.InteractionEntryGroupId,\n      nextPaintTime: interaction.attribution.nextPaintTime,\n      interactionType: interaction.attribution.interactionType,\n      eventName: interaction.entries[0].name,\n      // To limit the amount of events, just get the last 5 LoAFs\n      longAnimationFrameEntries: limitScripts(\n          interaction.attribution.longAnimationFrameEntries.slice(-Spec.LOAF_LIMIT).map(loaf => loaf.toJSON())),\n    };\n    const node = interaction.attribution.interactionTargetElement;\n    if (node) {\n      event.nodeIndex = establishNodeIndex(node);\n    }\n    sendEventToDevTools(event);\n  });\n\n  onEachLayoutShift(layoutShift => {\n    const event: Spec.LayoutShiftEvent = {\n      name: 'LayoutShift',\n      score: layoutShift.value,\n      uniqueLayoutShiftId: Spec.getUniqueLayoutShiftId(layoutShift.entry),\n      affectedNodeIndices: layoutShift.attribution.affectedNodes.map(establishNodeIndex),\n    };\n\n    sendEventToDevTools(event);\n  });\n}\ninitialize();\n"],
  "mappings": "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",
  "names": []
}
