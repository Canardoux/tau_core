{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/models/trace/handlers/GPUHandler.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Helpers from '../helpers/helpers.js';\nimport * as Types from '../types/types.js';\n\nimport {data as metaHandlerData} from './MetaHandler.js';\nimport type {HandlerName} from './types.js';\n\n// Each thread contains events. Events indicate the thread and process IDs, which are\n// used to store the event in the correct process thread entry below.\nconst eventsInProcessThread = new Map<Types.Events.ProcessID, Map<Types.Events.ThreadID, Types.Events.GPUTask[]>>();\n\nlet mainGPUThreadTasks: Types.Events.GPUTask[] = [];\n\nexport function reset(): void {\n  eventsInProcessThread.clear();\n  mainGPUThreadTasks = [];\n}\n\nexport function handleEvent(event: Types.Events.Event): void {\n  if (!Types.Events.isGPUTask(event)) {\n    return;\n  }\n\n  Helpers.Trace.addEventToProcessThread(event, eventsInProcessThread);\n}\n\nexport async function finalize(): Promise<void> {\n  const {gpuProcessId, gpuThreadId} = metaHandlerData();\n  const gpuThreadsForProcess = eventsInProcessThread.get(gpuProcessId);\n  if (gpuThreadsForProcess && gpuThreadId) {\n    mainGPUThreadTasks = gpuThreadsForProcess.get(gpuThreadId) || [];\n  }\n}\n\nexport interface GPUHandlerReturnData {\n  mainGPUThreadTasks: readonly Types.Events.GPUTask[];\n}\n\nexport function data(): GPUHandlerReturnData {\n  return {\n    mainGPUThreadTasks,\n  };\n}\n\nexport function deps(): HandlerName[] {\n  return ['Meta'];\n}\n"],
  "mappings": ";AAIA,YAAY,aAAa;AACzB,YAAY,WAAW;AAEvB,SAAQ,QAAQ,uBAAsB;AAKtC,MAAM,wBAAwB,oBAAI,IAAgF;AAElH,IAAI,qBAA6C,CAAC;AAE3C,gBAAS,QAAc;AAC5B,wBAAsB,MAAM;AAC5B,uBAAqB,CAAC;AACxB;AAEO,gBAAS,YAAY,OAAiC;AAC3D,MAAI,CAAC,MAAM,OAAO,UAAU,KAAK,GAAG;AAClC;AAAA,EACF;AAEA,UAAQ,MAAM,wBAAwB,OAAO,qBAAqB;AACpE;AAEA,sBAAsB,WAA0B;AAC9C,QAAM,EAAC,cAAc,YAAW,IAAI,gBAAgB;AACpD,QAAM,uBAAuB,sBAAsB,IAAI,YAAY;AACnE,MAAI,wBAAwB,aAAa;AACvC,yBAAqB,qBAAqB,IAAI,WAAW,KAAK,CAAC;AAAA,EACjE;AACF;AAMO,gBAAS,OAA6B;AAC3C,SAAO;AAAA,IACL;AAAA,EACF;AACF;AAEO,gBAAS,OAAsB;AACpC,SAAO,CAAC,MAAM;AAChB;",
  "names": []
}
