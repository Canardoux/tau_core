{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/models/trace/insights/CLSCulprits.ts"],
  "sourcesContent": ["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as Helpers from '../helpers/helpers.js';\nimport * as Types from '../types/types.js';\n\nimport {InsightCategory, type InsightModel, type InsightSetContext, type RequiredData} from './types.js';\n\nconst UIStrings = {\n  /** Title of an insight that provides details about why elements shift/move on the page. The causes for these shifts are referred to as culprits (\"reasons\"). */\n  title: 'Layout shift culprits',\n  /**\n   * @description Description of a DevTools insight that identifies the reasons that elements shift on the page.\n   * This is displayed after a user expands the section to see more. No character length limits.\n   */\n  description:\n      'Layout shifts occur when elements move absent any user interaction. [Investigate the causes of layout shifts](https://web.dev/articles/optimize-cls), such as elements being added, removed, or their fonts changing as the page loads.',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/trace/insights/CLSCulprits.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport type CLSCulpritsInsightModel = InsightModel<{\n  animationFailures: readonly NoncompositedAnimationFailure[],\n  shifts: Map<Types.Events.SyntheticLayoutShift, LayoutShiftRootCausesData>,\n  clusters: Types.Events.SyntheticLayoutShiftCluster[],\n  worstCluster: Types.Events.SyntheticLayoutShiftCluster | undefined,\n}>;\n\nexport function deps(): ['Meta', 'Animations', 'LayoutShifts', 'NetworkRequests'] {\n  return ['Meta', 'Animations', 'LayoutShifts', 'NetworkRequests'];\n}\n\nexport const enum AnimationFailureReasons {\n  ACCELERATED_ANIMATIONS_DISABLED = 'ACCELERATED_ANIMATIONS_DISABLED',\n  EFFECT_SUPPRESSED_BY_DEVTOOLS = 'EFFECT_SUPPRESSED_BY_DEVTOOLS',\n  INVALID_ANIMATION_OR_EFFECT = 'INVALID_ANIMATION_OR_EFFECT',\n  EFFECT_HAS_UNSUPPORTED_TIMING_PARAMS = 'EFFECT_HAS_UNSUPPORTED_TIMING_PARAMS',\n  EFFECT_HAS_NON_REPLACE_COMPOSITE_MODE = 'EFFECT_HAS_NON_REPLACE_COMPOSITE_MODE',\n  TARGET_HAS_INVALID_COMPOSITING_STATE = 'TARGET_HAS_INVALID_COMPOSITING_STATE',\n  TARGET_HAS_INCOMPATIBLE_ANIMATIONS = 'TARGET_HAS_INCOMPATIBLE_ANIMATIONS',\n  TARGET_HAS_CSS_OFFSET = 'TARGET_HAS_CSS_OFFSET',\n  ANIMATION_AFFECTS_NON_CSS_PROPERTIES = 'ANIMATION_AFFECTS_NON_CSS_PROPERTIES',\n  TRANSFORM_RELATED_PROPERTY_CANNOT_BE_ACCELERATED_ON_TARGET =\n      'TRANSFORM_RELATED_PROPERTY_CANNOT_BE_ACCELERATED_ON_TARGET',\n  TRANSFROM_BOX_SIZE_DEPENDENT = 'TRANSFROM_BOX_SIZE_DEPENDENT',\n  FILTER_RELATED_PROPERTY_MAY_MOVE_PIXELS = 'FILTER_RELATED_PROPERTY_MAY_MOVE_PIXELS',\n  UNSUPPORTED_CSS_PROPERTY = 'UNSUPPORTED_CSS_PROPERTY',\n  MIXED_KEYFRAME_VALUE_TYPES = 'MIXED_KEYFRAME_VALUE_TYPES',\n  TIMELINE_SOURCE_HAS_INVALID_COMPOSITING_STATE = 'TIMELINE_SOURCE_HAS_INVALID_COMPOSITING_STATE',\n  ANIMATION_HAS_NO_VISIBLE_CHANGE = 'ANIMATION_HAS_NO_VISIBLE_CHANGE',\n  AFFECTS_IMPORTANT_PROPERTY = 'AFFECTS_IMPORTANT_PROPERTY',\n  SVG_TARGET_HAS_INDEPENDENT_TRANSFORM_PROPERTY = 'SVG_TARGET_HAS_INDEPENDENT_TRANSFORM_PROPERTY',\n}\n\nexport interface NoncompositedAnimationFailure {\n  /**\n   * Animation name.\n   */\n  name?: string;\n  /**\n   * Failure reason based on mask number defined in\n   * https://source.chromium.org/search?q=f:compositor_animations.h%20%22enum%20FailureReason%22.\n   */\n  failureReasons: AnimationFailureReasons[];\n  /**\n   * Unsupported properties.\n   */\n  unsupportedProperties?: Types.Events.Animation['args']['data']['unsupportedProperties'];\n  /**\n   * Animation event.\n   */\n  animation?: Types.Events.SyntheticAnimationPair;\n}\n\n/**\n * Each failure reason is represented by a bit flag. The bit shift operator '<<' is used to define\n * which bit corresponds to each failure reason.\n * https://source.chromium.org/search?q=f:compositor_animations.h%20%22enum%20FailureReason%22\n * @type {{flag: number, failure: AnimationFailureReasons}[]}\n */\nconst ACTIONABLE_FAILURE_REASONS = [\n  {\n    flag: 1 << 0,\n    failure: AnimationFailureReasons.ACCELERATED_ANIMATIONS_DISABLED,\n  },\n  {\n    flag: 1 << 1,\n    failure: AnimationFailureReasons.EFFECT_SUPPRESSED_BY_DEVTOOLS,\n  },\n  {\n    flag: 1 << 2,\n    failure: AnimationFailureReasons.INVALID_ANIMATION_OR_EFFECT,\n  },\n  {\n    flag: 1 << 3,\n    failure: AnimationFailureReasons.EFFECT_HAS_UNSUPPORTED_TIMING_PARAMS,\n  },\n  {\n    flag: 1 << 4,\n    failure: AnimationFailureReasons.EFFECT_HAS_NON_REPLACE_COMPOSITE_MODE,\n  },\n  {\n    flag: 1 << 5,\n    failure: AnimationFailureReasons.TARGET_HAS_INVALID_COMPOSITING_STATE,\n  },\n  {\n    flag: 1 << 6,\n    failure: AnimationFailureReasons.TARGET_HAS_INCOMPATIBLE_ANIMATIONS,\n  },\n  {\n    flag: 1 << 7,\n    failure: AnimationFailureReasons.TARGET_HAS_CSS_OFFSET,\n  },\n  // The failure 1 << 8 is marked as obsolete in Blink\n  {\n    flag: 1 << 9,\n    failure: AnimationFailureReasons.ANIMATION_AFFECTS_NON_CSS_PROPERTIES,\n  },\n  {\n    flag: 1 << 10,\n    failure: AnimationFailureReasons.TRANSFORM_RELATED_PROPERTY_CANNOT_BE_ACCELERATED_ON_TARGET,\n  },\n  {\n    flag: 1 << 11,\n    failure: AnimationFailureReasons.TRANSFROM_BOX_SIZE_DEPENDENT,\n  },\n  {\n    flag: 1 << 12,\n    failure: AnimationFailureReasons.FILTER_RELATED_PROPERTY_MAY_MOVE_PIXELS,\n  },\n  {\n    flag: 1 << 13,\n    failure: AnimationFailureReasons.UNSUPPORTED_CSS_PROPERTY,\n  },\n  // The failure 1 << 14 is marked as obsolete in Blink\n  {\n    flag: 1 << 15,\n    failure: AnimationFailureReasons.MIXED_KEYFRAME_VALUE_TYPES,\n  },\n  {\n    flag: 1 << 16,\n    failure: AnimationFailureReasons.TIMELINE_SOURCE_HAS_INVALID_COMPOSITING_STATE,\n  },\n  {\n    flag: 1 << 17,\n    failure: AnimationFailureReasons.ANIMATION_HAS_NO_VISIBLE_CHANGE,\n  },\n  {\n    flag: 1 << 18,\n    failure: AnimationFailureReasons.AFFECTS_IMPORTANT_PROPERTY,\n  },\n  {\n    flag: 1 << 19,\n    failure: AnimationFailureReasons.SVG_TARGET_HAS_INDEPENDENT_TRANSFORM_PROPERTY,\n  },\n];\n\n// 500ms window.\n// Use this window to consider events and requests that may have caused a layout shift.\nconst ROOT_CAUSE_WINDOW = Helpers.Timing.secondsToMicroseconds(Types.Timing.Seconds(0.5));\n\nexport interface LayoutShiftRootCausesData {\n  iframeIds: string[];\n  fontRequests: Types.Events.SyntheticNetworkRequest[];\n  nonCompositedAnimations: NoncompositedAnimationFailure[];\n  unsizedImages: Protocol.DOM.BackendNodeId[];\n}\n\n/**\n * Returns if an event happens within the root cause window, before the target event.\n *          ROOT_CAUSE_WINDOW               v target event\n *        |------------------------|=======================\n */\nfunction isInRootCauseWindow(event: Types.Events.Event, targetEvent: Types.Events.Event): boolean {\n  const eventEnd = event.dur ? event.ts + event.dur : event.ts;\n  return eventEnd < targetEvent.ts && eventEnd >= targetEvent.ts - ROOT_CAUSE_WINDOW;\n}\n\nexport function getNonCompositedFailure(animationEvent: Types.Events.SyntheticAnimationPair):\n    NoncompositedAnimationFailure[] {\n  const failures: NoncompositedAnimationFailure[] = [];\n  const beginEvent = animationEvent.args.data.beginEvent;\n  const instantEvents = animationEvent.args.data.instantEvents || [];\n  /**\n   * Animation events containing composite information are ASYNC_NESTABLE_INSTANT ('n').\n   * An animation may also contain multiple 'n' events, so we look through those with useful non-composited data.\n   */\n  for (const event of instantEvents) {\n    const failureMask = event.args.data.compositeFailed;\n    const unsupportedProperties = event.args.data.unsupportedProperties;\n    if (!failureMask) {\n      continue;\n    }\n    const failureReasons =\n        ACTIONABLE_FAILURE_REASONS.filter(reason => failureMask & reason.flag).map(reason => reason.failure);\n    const failure: NoncompositedAnimationFailure = {\n      name: beginEvent.args.data.displayName,\n      failureReasons,\n      unsupportedProperties,\n      animation: animationEvent,\n    };\n    failures.push(failure);\n  }\n  return failures;\n}\n\nfunction getNonCompositedFailureRootCauses(\n    animationEvents: Types.Events.SyntheticAnimationPair[],\n    prePaintEvents: Types.Events.PrePaint[],\n    shiftsByPrePaint: Map<Types.Events.PrePaint, Types.Events.LayoutShift[]>,\n    rootCausesByShift: Map<Types.Events.LayoutShift, LayoutShiftRootCausesData>,\n    ): NoncompositedAnimationFailure[] {\n  const allAnimationFailures: NoncompositedAnimationFailure[] = [];\n  for (const animation of animationEvents) {\n    /**\n     * Animation events containing composite information are ASYNC_NESTABLE_INSTANT ('n').\n     * An animation may also contain multiple 'n' events, so we look through those with useful non-composited data.\n     */\n    const failures = getNonCompositedFailure(animation);\n    if (!failures) {\n      continue;\n    }\n    allAnimationFailures.push(...failures);\n\n    const nextPrePaint = getNextEvent(prePaintEvents, animation) as Types.Events.PrePaint | null;\n    // If no following prePaint, this is not a root cause.\n    if (!nextPrePaint) {\n      continue;\n    }\n\n    // If the animation event is outside the ROOT_CAUSE_WINDOW, it could not be a root cause.\n    if (!isInRootCauseWindow(animation, nextPrePaint)) {\n      continue;\n    }\n\n    const shifts = shiftsByPrePaint.get(nextPrePaint);\n    // if no layout shift(s), this is not a root cause.\n    if (!shifts) {\n      continue;\n    }\n\n    for (const shift of shifts) {\n      const rootCausesForShift = rootCausesByShift.get(shift);\n      if (!rootCausesForShift) {\n        throw new Error('Unaccounted shift');\n      }\n      rootCausesForShift.nonCompositedAnimations.push(...failures);\n    }\n  }\n\n  return allAnimationFailures;\n}\n\n/**\n * Given an array of layout shift and PrePaint events, returns a mapping from\n * PrePaint events to layout shifts dispatched within it.\n */\nfunction getShiftsByPrePaintEvents(\n    layoutShifts: Types.Events.LayoutShift[],\n    prePaintEvents: Types.Events.PrePaint[],\n    ): Map<Types.Events.PrePaint, Types.Events.LayoutShift[]> {\n  // Maps from PrePaint events to LayoutShifts that occured in each one.\n  const shiftsByPrePaint = new Map<Types.Events.PrePaint, Types.Events.LayoutShift[]>();\n\n  // Associate all shifts to their corresponding PrePaint.\n  for (const prePaintEvent of prePaintEvents) {\n    const firstShiftIndex =\n        Platform.ArrayUtilities.nearestIndexFromBeginning(layoutShifts, shift => shift.ts >= prePaintEvent.ts);\n    if (firstShiftIndex === null) {\n      // No layout shifts registered after this PrePaint start. Continue.\n      continue;\n    }\n    for (let i = firstShiftIndex; i < layoutShifts.length; i++) {\n      const shift = layoutShifts[i];\n      if (shift.ts >= prePaintEvent.ts && shift.ts <= prePaintEvent.ts + prePaintEvent.dur) {\n        const shiftsInPrePaint = Platform.MapUtilities.getWithDefault(shiftsByPrePaint, prePaintEvent, () => []);\n        shiftsInPrePaint.push(shift);\n      }\n      if (shift.ts > prePaintEvent.ts + prePaintEvent.dur) {\n        // Reached all layoutShifts of this PrePaint. Break out to continue with the next prePaint event.\n        break;\n      }\n    }\n  }\n  return shiftsByPrePaint;\n}\n\n/**\n * Given a source event list, this returns the first event of that list that directly follows the target event.\n */\nfunction getNextEvent(sourceEvents: Types.Events.Event[], targetEvent: Types.Events.Event): Types.Events.Event|\n    undefined {\n  const index = Platform.ArrayUtilities.nearestIndexFromBeginning(\n      sourceEvents, source => source.ts > targetEvent.ts + (targetEvent.dur || 0));\n  // No PrePaint event registered after this event\n  if (index === null) {\n    return undefined;\n  }\n\n  return sourceEvents[index];\n}\n\n/**\n * An Iframe is considered a root cause if the iframe event occurs before a prePaint event\n * and within this prePaint event a layout shift(s) occurs.\n */\nfunction getIframeRootCauses(\n    iframeCreatedEvents: readonly Types.Events.RenderFrameImplCreateChildFrame[],\n    prePaintEvents: Types.Events.PrePaint[], shiftsByPrePaint: Map<Types.Events.PrePaint, Types.Events.LayoutShift[]>,\n    rootCausesByShift: Map<Types.Events.LayoutShift, LayoutShiftRootCausesData>,\n    domLoadingEvents: readonly Types.Events.DomLoading[]): Map<Types.Events.LayoutShift, LayoutShiftRootCausesData> {\n  for (const iframeEvent of iframeCreatedEvents) {\n    const nextPrePaint = getNextEvent(prePaintEvents, iframeEvent) as Types.Events.PrePaint | null;\n    // If no following prePaint, this is not a root cause.\n    if (!nextPrePaint) {\n      continue;\n    }\n    const shifts = shiftsByPrePaint.get(nextPrePaint);\n    // if no layout shift(s), this is not a root cause.\n    if (!shifts) {\n      continue;\n    }\n    for (const shift of shifts) {\n      const rootCausesForShift = rootCausesByShift.get(shift);\n      if (!rootCausesForShift) {\n        throw new Error('Unaccounted shift');\n      }\n\n      // Look for the first dom event that occurs within the bounds of the iframe event.\n      // This contains the frame id.\n      const domEvent = domLoadingEvents.find(e => {\n        const maxIframe = Types.Timing.MicroSeconds(iframeEvent.ts + (iframeEvent.dur ?? 0));\n        return e.ts >= iframeEvent.ts && e.ts <= maxIframe;\n      });\n      if (domEvent && domEvent.args.frame) {\n        rootCausesForShift.iframeIds.push(domEvent.args.frame);\n      }\n    }\n  }\n  return rootCausesByShift;\n}\n\n/**\n * An unsized image is considered a root cause if its PaintImage can be correlated to a\n * layout shift. We can correlate PaintImages with unsized images by their matching nodeIds.\n *                           X      <- layout shift\n *              |----------------|\n *                    ^ PrePaint event   |-----|\n *                                          ^ PaintImage\n */\nfunction getUnsizedImageRootCauses(\n    unsizedImageEvents: readonly Types.Events.LayoutImageUnsized[], paintImageEvents: Types.Events.PaintImage[],\n    shiftsByPrePaint: Map<Types.Events.PrePaint, Types.Events.LayoutShift[]>,\n    rootCausesByShift: Map<Types.Events.LayoutShift, LayoutShiftRootCausesData>):\n    Map<Types.Events.LayoutShift, LayoutShiftRootCausesData> {\n  shiftsByPrePaint.forEach((shifts, prePaint) => {\n    const paintImage = getNextEvent(paintImageEvents, prePaint) as Types.Events.PaintImage | null;\n    // The unsized image corresponds to this PaintImage.\n    const matchingNode =\n        unsizedImageEvents.find(unsizedImage => unsizedImage.args.data.nodeId === paintImage?.args.data.nodeId);\n    if (!matchingNode) {\n      return;\n    }\n    // The unsized image is a potential root cause of all the shifts of this prePaint.\n    for (const shift of shifts) {\n      const rootCausesForShift = rootCausesByShift.get(shift);\n      if (!rootCausesForShift) {\n        throw new Error('Unaccounted shift');\n      }\n      rootCausesForShift.unsizedImages.push(matchingNode.args.data.nodeId);\n    }\n  });\n  return rootCausesByShift;\n}\n\n/**\n * A font request is considered a root cause if the request occurs before a prePaint event\n * and within this prePaint event a layout shift(s) occurs. Additionally, this font request should\n * happen within the ROOT_CAUSE_WINDOW of the prePaint event.\n */\nfunction getFontRootCauses(\n    networkRequests: Types.Events.SyntheticNetworkRequest[], prePaintEvents: Types.Events.PrePaint[],\n    shiftsByPrePaint: Map<Types.Events.PrePaint, Types.Events.LayoutShift[]>,\n    rootCausesByShift: Map<Types.Events.LayoutShift, LayoutShiftRootCausesData>):\n    Map<Types.Events.LayoutShift, LayoutShiftRootCausesData> {\n  const fontRequests =\n      networkRequests.filter(req => req.args.data.resourceType === 'Font' && req.args.data.mimeType.startsWith('font'));\n\n  for (const req of fontRequests) {\n    const nextPrePaint = getNextEvent(prePaintEvents, req) as Types.Events.PrePaint | null;\n    if (!nextPrePaint) {\n      continue;\n    }\n\n    // If the req is outside the ROOT_CAUSE_WINDOW, it could not be a root cause.\n    if (!isInRootCauseWindow(req, nextPrePaint)) {\n      continue;\n    }\n\n    // Get the shifts that belong to this prepaint\n    const shifts = shiftsByPrePaint.get(nextPrePaint);\n\n    // if no layout shift(s) in this prePaint, the request is not a root cause.\n    if (!shifts) {\n      continue;\n    }\n    // Include the root cause to the shifts in this prePaint.\n    for (const shift of shifts) {\n      const rootCausesForShift = rootCausesByShift.get(shift);\n      if (!rootCausesForShift) {\n        throw new Error('Unaccounted shift');\n      }\n      rootCausesForShift.fontRequests.push(req);\n    }\n  }\n  return rootCausesByShift;\n}\n\nfunction finalize(partialModel: Omit<CLSCulpritsInsightModel, 'title'|'description'|'category'|'shouldShow'>):\n    CLSCulpritsInsightModel {\n  let maxScore = 0;\n  for (const cluster of partialModel.clusters) {\n    if (cluster.clusterCumulativeScore > maxScore) {\n      maxScore = cluster.clusterCumulativeScore;\n    }\n  }\n\n  return {\n    title: i18nString(UIStrings.title),\n    description: i18nString(UIStrings.description),\n    category: InsightCategory.CLS,\n    // TODO: getTopCulprits in component needs to move to model so this can be set properly here.\n    shouldShow: maxScore > 0,\n    ...partialModel,\n  };\n}\n\nexport function generateInsight(\n    parsedTrace: RequiredData<typeof deps>, context: InsightSetContext): CLSCulpritsInsightModel {\n  const isWithinContext = (event: Types.Events.Event): boolean => Helpers.Timing.eventIsInBounds(event, context.bounds);\n\n  const compositeAnimationEvents = parsedTrace.Animations.animations.filter(isWithinContext);\n  const iframeEvents = parsedTrace.LayoutShifts.renderFrameImplCreateChildFrameEvents.filter(isWithinContext);\n  const networkRequests = parsedTrace.NetworkRequests.byTime.filter(isWithinContext);\n  const domLoadingEvents = parsedTrace.LayoutShifts.domLoadingEvents.filter(isWithinContext);\n  const unsizedImageEvents = parsedTrace.LayoutShifts.layoutImageUnsizedEvents.filter(isWithinContext);\n\n  const clusterKey = context.navigation ? context.navigationId : Types.Events.NO_NAVIGATION;\n  const clusters = parsedTrace.LayoutShifts.clustersByNavigationId.get(clusterKey) ?? [];\n  const clustersByScore = clusters.toSorted((a, b) => b.clusterCumulativeScore - a.clusterCumulativeScore);\n  const worstCluster = clustersByScore.at(0);\n  const layoutShifts = clusters.flatMap(cluster => cluster.events);\n  const prePaintEvents = parsedTrace.LayoutShifts.prePaintEvents.filter(isWithinContext);\n  const paintImageEvents = parsedTrace.LayoutShifts.paintImageEvents.filter(isWithinContext);\n\n  // Get root causes.\n  const rootCausesByShift = new Map<Types.Events.SyntheticLayoutShift, LayoutShiftRootCausesData>();\n  const shiftsByPrePaint = getShiftsByPrePaintEvents(layoutShifts, prePaintEvents);\n\n  for (const shift of layoutShifts) {\n    rootCausesByShift.set(shift, {iframeIds: [], fontRequests: [], nonCompositedAnimations: [], unsizedImages: []});\n  }\n\n  // Populate root causes for rootCausesByShift.\n  getIframeRootCauses(iframeEvents, prePaintEvents, shiftsByPrePaint, rootCausesByShift, domLoadingEvents);\n  getFontRootCauses(networkRequests, prePaintEvents, shiftsByPrePaint, rootCausesByShift);\n  getUnsizedImageRootCauses(unsizedImageEvents, paintImageEvents, shiftsByPrePaint, rootCausesByShift);\n  const animationFailures =\n      getNonCompositedFailureRootCauses(compositeAnimationEvents, prePaintEvents, shiftsByPrePaint, rootCausesByShift);\n\n  const relatedEvents: Types.Events.Event[] = [...layoutShifts];\n  if (worstCluster) {\n    relatedEvents.push(worstCluster);\n  }\n\n  return finalize({\n    relatedEvents,\n    animationFailures,\n    shifts: rootCausesByShift,\n    clusters,\n    worstCluster,\n  });\n}\n"],
  "mappings": "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",
  "names": ["AnimationFailureReasons"]
}
