{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/models/live-metrics/web-vitals-injected/OnEachLayoutShift.ts"],
  "sourcesContent": ["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport interface LayoutShiftWithAttribution {\n  attribution: {\n    affectedNodes: Node[],\n  };\n  entry: LayoutShift;\n  value: number;\n}\n\nexport function onEachLayoutShift(callback: (layoutShift: LayoutShiftWithAttribution) => void): void {\n  const eventObserver = new PerformanceObserver(list => {\n    const entries = list.getEntries().filter((entry): entry is LayoutShift => 'hadRecentInput' in entry);\n\n    for (const entry of entries) {\n      if (entry.hadRecentInput) {\n        continue;\n      }\n\n      const affectedNodes = entry.sources.map(source => source.node).filter(node => node instanceof Node);\n\n      callback({\n        attribution: {\n          affectedNodes,\n        },\n        entry,\n        value: entry.value,\n      });\n    }\n  });\n\n  eventObserver.observe({\n    type: 'layout-shift',\n    buffered: true,\n  });\n}\n"],
  "mappings": ";AAYO,gBAAS,kBAAkB,UAAmE;AACnG,QAAM,gBAAgB,IAAI,oBAAoB,UAAQ;AACpD,UAAM,UAAU,KAAK,WAAW,EAAE,OAAO,CAAC,UAAgC,oBAAoB,KAAK;AAEnG,eAAW,SAAS,SAAS;AAC3B,UAAI,MAAM,gBAAgB;AACxB;AAAA,MACF;AAEA,YAAM,gBAAgB,MAAM,QAAQ,IAAI,YAAU,OAAO,IAAI,EAAE,OAAO,UAAQ,gBAAgB,IAAI;AAElG,eAAS;AAAA,QACP,aAAa;AAAA,UACX;AAAA,QACF;AAAA,QACA;AAAA,QACA,OAAO,MAAM;AAAA,MACf,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AAED,gBAAc,QAAQ;AAAA,IACpB,MAAM;AAAA,IACN,UAAU;AAAA,EACZ,CAAC;AACH;",
  "names": []
}
