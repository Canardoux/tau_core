{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/core/common/Progress.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nexport class Progress {\n  setTotalWork(_totalWork: number): void {\n  }\n  setTitle(_title: string): void {\n  }\n  setWorked(_worked: number, _title?: string): void {\n  }\n  incrementWorked(_worked?: number): void {\n  }\n  done(): void {\n  }\n  isCanceled(): boolean {\n    return false;\n  }\n}\n\nexport class CompositeProgress {\n  readonly parent: Progress;\n  readonly #children: SubProgress[];\n  #childrenDone: number;\n\n  constructor(parent: Progress) {\n    this.parent = parent;\n    this.#children = [];\n    this.#childrenDone = 0;\n    this.parent.setTotalWork(1);\n    this.parent.setWorked(0);\n  }\n\n  childDone(): void {\n    if (++this.#childrenDone !== this.#children.length) {\n      return;\n    }\n    this.parent.done();\n  }\n\n  createSubProgress(weight?: number): SubProgress {\n    const child = new SubProgress(this, weight);\n    this.#children.push(child);\n    return child;\n  }\n\n  update(): void {\n    let totalWeights = 0;\n    let done = 0;\n\n    for (let i = 0; i < this.#children.length; ++i) {\n      const child = this.#children[i];\n      if (child.getTotalWork()) {\n        done += child.getWeight() * child.getWorked() / child.getTotalWork();\n      }\n      totalWeights += child.getWeight();\n    }\n    this.parent.setWorked(done / totalWeights);\n  }\n}\n\nexport class SubProgress implements Progress {\n  readonly #composite: CompositeProgress;\n  #weight: number;\n  #worked: number;\n  #totalWork: number;\n  constructor(composite: CompositeProgress, weight?: number) {\n    this.#composite = composite;\n    this.#weight = weight || 1;\n    this.#worked = 0;\n\n    this.#totalWork = 0;\n  }\n\n  isCanceled(): boolean {\n    return this.#composite.parent.isCanceled();\n  }\n\n  setTitle(title: string): void {\n    this.#composite.parent.setTitle(title);\n  }\n\n  done(): void {\n    this.setWorked(this.#totalWork);\n    this.#composite.childDone();\n  }\n\n  setTotalWork(totalWork: number): void {\n    this.#totalWork = totalWork;\n    this.#composite.update();\n  }\n\n  setWorked(worked: number, title?: string): void {\n    this.#worked = worked;\n    if (typeof title !== 'undefined') {\n      this.setTitle(title);\n    }\n    this.#composite.update();\n  }\n\n  incrementWorked(worked?: number): void {\n    this.setWorked(this.#worked + (worked || 1));\n  }\n\n  getWeight(): number {\n    return this.#weight;\n  }\n\n  getWorked(): number {\n    return this.#worked;\n  }\n\n  getTotalWork(): number {\n    return this.#totalWork;\n  }\n}\n\nexport class ProgressProxy implements Progress {\n  readonly #delegate: Progress|null|undefined;\n  readonly #doneCallback: (() => void)|undefined;\n  constructor(delegate?: Progress|null, doneCallback?: (() => void)) {\n    this.#delegate = delegate;\n    this.#doneCallback = doneCallback;\n  }\n\n  isCanceled(): boolean {\n    return this.#delegate ? this.#delegate.isCanceled() : false;\n  }\n\n  setTitle(title: string): void {\n    if (this.#delegate) {\n      this.#delegate.setTitle(title);\n    }\n  }\n\n  done(): void {\n    if (this.#delegate) {\n      this.#delegate.done();\n    }\n    if (this.#doneCallback) {\n      this.#doneCallback();\n    }\n  }\n\n  setTotalWork(totalWork: number): void {\n    if (this.#delegate) {\n      this.#delegate.setTotalWork(totalWork);\n    }\n  }\n\n  setWorked(worked: number, title?: string): void {\n    if (this.#delegate) {\n      this.#delegate.setWorked(worked, title);\n    }\n  }\n\n  incrementWorked(worked?: number): void {\n    if (this.#delegate) {\n      this.#delegate.incrementWorked(worked);\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
