{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/core/sdk/ResourceTreeModel.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the #name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Platform from '../platform/platform.js';\n\nimport {type DeferredDOMNode, DOMModel, type DOMNode} from './DOMModel.js';\nimport {FrameManager} from './FrameManager.js';\nimport {Events as NetworkManagerEvents, NetworkManager, type RequestUpdateDroppedEventData} from './NetworkManager.js';\nimport type {NetworkRequest} from './NetworkRequest.js';\nimport {Resource} from './Resource.js';\nimport {ExecutionContext, RuntimeModel} from './RuntimeModel.js';\nimport {SDKModel} from './SDKModel.js';\nimport {SecurityOriginManager} from './SecurityOriginManager.js';\nimport {StorageKeyManager} from './StorageKeyManager.js';\nimport {Capability, type Target, Type} from './Target.js';\nimport {TargetManager} from './TargetManager.js';\n\nexport class ResourceTreeModel extends SDKModel<EventTypes> {\n  readonly agent: ProtocolProxyApi.PageApi;\n  readonly storageAgent: ProtocolProxyApi.StorageApi;\n  readonly #securityOriginManager: SecurityOriginManager;\n  readonly #storageKeyManager: StorageKeyManager;\n  readonly framesInternal: Map<string, ResourceTreeFrame>;\n  #cachedResourcesProcessed: boolean;\n  #pendingReloadOptions: {\n    ignoreCache: (boolean|undefined),\n    scriptToEvaluateOnLoad: (string|undefined),\n  }|null;\n  #reloadSuspensionCount: number;\n  isInterstitialShowing: boolean;\n  mainFrame: ResourceTreeFrame|null;\n  #pendingBackForwardCacheNotUsedEvents: Set<Protocol.Page.BackForwardCacheNotUsedEvent>;\n\n  constructor(target: Target) {\n    super(target);\n\n    const networkManager = target.model(NetworkManager);\n    if (networkManager) {\n      networkManager.addEventListener(NetworkManagerEvents.RequestFinished, this.onRequestFinished, this);\n      networkManager.addEventListener(NetworkManagerEvents.RequestUpdateDropped, this.onRequestUpdateDropped, this);\n    }\n    this.agent = target.pageAgent();\n    this.storageAgent = target.storageAgent();\n    void this.agent.invoke_enable();\n    this.#securityOriginManager = (target.model(SecurityOriginManager) as SecurityOriginManager);\n    this.#storageKeyManager = (target.model(StorageKeyManager) as StorageKeyManager);\n    this.#pendingBackForwardCacheNotUsedEvents = new Set<Protocol.Page.BackForwardCacheNotUsedEvent>();\n    target.registerPageDispatcher(new PageDispatcher(this));\n\n    this.framesInternal = new Map();\n    this.#cachedResourcesProcessed = false;\n    this.#pendingReloadOptions = null;\n    this.#reloadSuspensionCount = 0;\n    this.isInterstitialShowing = false;\n    this.mainFrame = null;\n\n    void this.#buildResourceTree();\n  }\n\n  async #buildResourceTree(): Promise<void> {\n    return this.agent.invoke_getResourceTree().then(event => {\n      this.processCachedResources(event.getError() ? null : event.frameTree);\n      if (this.mainFrame) {\n        this.processPendingEvents(this.mainFrame);\n      }\n    });\n  }\n\n  static frameForRequest(request: NetworkRequest): ResourceTreeFrame|null {\n    const networkManager = NetworkManager.forRequest(request);\n    const resourceTreeModel = networkManager ? networkManager.target().model(ResourceTreeModel) : null;\n    if (!resourceTreeModel) {\n      return null;\n    }\n    return request.frameId ? resourceTreeModel.frameForId(request.frameId) : null;\n  }\n\n  static frames(): ResourceTreeFrame[] {\n    const result = [];\n    for (const resourceTreeModel of TargetManager.instance().models(ResourceTreeModel)) {\n      result.push(...resourceTreeModel.frames());\n    }\n    return result;\n  }\n\n  static resourceForURL(url: Platform.DevToolsPath.UrlString): Resource|null {\n    for (const resourceTreeModel of TargetManager.instance().models(ResourceTreeModel)) {\n      const mainFrame = resourceTreeModel.mainFrame;\n      const result = mainFrame ? mainFrame.resourceForURL(url) : null;\n      if (result) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  static reloadAllPages(bypassCache?: boolean, scriptToEvaluateOnLoad?: string): void {\n    for (const resourceTreeModel of TargetManager.instance().models(ResourceTreeModel)) {\n      if (resourceTreeModel.target().parentTarget()?.type() !== Type.FRAME) {\n        resourceTreeModel.reloadPage(bypassCache, scriptToEvaluateOnLoad);\n      }\n    }\n  }\n\n  async storageKeyForFrame(frameId: Protocol.Page.FrameId): Promise<string|null> {\n    if (!this.framesInternal.has(frameId)) {\n      return null;\n    }\n    const response = await this.storageAgent.invoke_getStorageKeyForFrame({frameId});\n    if (response.getError() === 'Frame tree node for given frame not found') {\n      return null;\n    }\n    return response.storageKey;\n  }\n\n  domModel(): DOMModel {\n    return this.target().model(DOMModel) as DOMModel;\n  }\n\n  private processCachedResources(mainFramePayload: Protocol.Page.FrameResourceTree|null): void {\n    // TODO(caseq): the url check below is a mergeable, conservative\n    // workaround for a problem caused by us requesting resources from a\n    // subtarget frame before it has committed. The proper fix is likely\n    // to be too complicated to be safely merged.\n    // See https://crbug.com/1081270 for details.\n    if (mainFramePayload && mainFramePayload.frame.url !== ':') {\n      this.dispatchEventToListeners(Events.WillLoadCachedResources);\n      this.addFramesRecursively(null, mainFramePayload);\n      this.target().setInspectedURL(mainFramePayload.frame.url as Platform.DevToolsPath.UrlString);\n    }\n    this.#cachedResourcesProcessed = true;\n    const runtimeModel = this.target().model(RuntimeModel);\n    if (runtimeModel) {\n      runtimeModel.setExecutionContextComparator(this.executionContextComparator.bind(this));\n      runtimeModel.fireExecutionContextOrderChanged();\n    }\n    this.dispatchEventToListeners(Events.CachedResourcesLoaded, this);\n  }\n\n  cachedResourcesLoaded(): boolean {\n    return this.#cachedResourcesProcessed;\n  }\n\n  private addFrame(frame: ResourceTreeFrame, _aboutToNavigate?: boolean): void {\n    this.framesInternal.set(frame.id, frame);\n    if (frame.isMainFrame()) {\n      this.mainFrame = frame;\n    }\n    this.dispatchEventToListeners(Events.FrameAdded, frame);\n    this.updateSecurityOrigins();\n    void this.updateStorageKeys();\n  }\n\n  frameAttached(\n      frameId: Protocol.Page.FrameId, parentFrameId: Protocol.Page.FrameId|null,\n      stackTrace?: Protocol.Runtime.StackTrace): ResourceTreeFrame|null {\n    const sameTargetParentFrame = parentFrameId ? (this.framesInternal.get(parentFrameId) || null) : null;\n    // Do nothing unless cached resource tree is processed - it will overwrite everything.\n    if (!this.#cachedResourcesProcessed && sameTargetParentFrame) {\n      return null;\n    }\n    if (this.framesInternal.has(frameId)) {\n      return null;\n    }\n\n    const frame = new ResourceTreeFrame(this, sameTargetParentFrame, frameId, null, stackTrace || null);\n    if (parentFrameId && !sameTargetParentFrame) {\n      frame.crossTargetParentFrameId = parentFrameId;\n    }\n    if (frame.isMainFrame() && this.mainFrame) {\n      // Navigation to the new backend process.\n      this.frameDetached(this.mainFrame.id, false);\n    }\n    this.addFrame(frame, true);\n    return frame;\n  }\n\n  frameNavigated(framePayload: Protocol.Page.Frame, type: Protocol.Page.NavigationType|undefined): void {\n    const sameTargetParentFrame =\n        framePayload.parentId ? (this.framesInternal.get(framePayload.parentId) || null) : null;\n    // Do nothing unless cached resource tree is processed - it will overwrite everything.\n    if (!this.#cachedResourcesProcessed && sameTargetParentFrame) {\n      return;\n    }\n    let frame: (ResourceTreeFrame|null) = this.framesInternal.get(framePayload.id) || null;\n    if (!frame) {\n      // Simulate missed \"frameAttached\" for a main frame navigation to the new backend process.\n      frame = this.frameAttached(framePayload.id, framePayload.parentId || null);\n      console.assert(Boolean(frame));\n      if (!frame) {\n        return;\n      }\n    }\n\n    this.dispatchEventToListeners(Events.FrameWillNavigate, frame);\n    frame.navigate(framePayload);\n    if (type) {\n      frame.backForwardCacheDetails.restoredFromCache = type === Protocol.Page.NavigationType.BackForwardCacheRestore;\n    }\n    if (frame.isMainFrame()) {\n      this.target().setInspectedURL(frame.url);\n    }\n    this.dispatchEventToListeners(Events.FrameNavigated, frame);\n\n    if (frame.isPrimaryFrame()) {\n      this.primaryPageChanged(frame, PrimaryPageChangeType.NAVIGATION);\n    }\n\n    // Fill frame with retained resources (the ones loaded using new loader).\n    const resources = frame.resources();\n    for (let i = 0; i < resources.length; ++i) {\n      this.dispatchEventToListeners(Events.ResourceAdded, resources[i]);\n    }\n\n    this.updateSecurityOrigins();\n    void this.updateStorageKeys();\n\n    if (frame.backForwardCacheDetails.restoredFromCache) {\n      FrameManager.instance().modelRemoved(this);\n      FrameManager.instance().modelAdded(this);\n      void this.#buildResourceTree();\n    }\n  }\n\n  primaryPageChanged(frame: ResourceTreeFrame, type: PrimaryPageChangeType): void {\n    this.processPendingEvents(frame);\n    this.dispatchEventToListeners(Events.PrimaryPageChanged, {frame, type});\n    const networkManager = this.target().model(NetworkManager);\n    if (networkManager && frame.isOutermostFrame()) {\n      networkManager.clearRequests();\n    }\n  }\n\n  documentOpened(framePayload: Protocol.Page.Frame): void {\n    this.frameNavigated(framePayload, undefined);\n    const frame = this.framesInternal.get(framePayload.id);\n    if (frame && !frame.getResourcesMap().get(framePayload.url)) {\n      const frameResource = this.createResourceFromFramePayload(\n          framePayload, framePayload.url as Platform.DevToolsPath.UrlString, Common.ResourceType.resourceTypes.Document,\n          framePayload.mimeType, null, null);\n      frameResource.isGenerated = true;\n      frame.addResource(frameResource);\n    }\n  }\n\n  frameDetached(frameId: Protocol.Page.FrameId, isSwap: boolean): void {\n    // Do nothing unless cached resource tree is processed - it will overwrite everything.\n    if (!this.#cachedResourcesProcessed) {\n      return;\n    }\n\n    const frame = this.framesInternal.get(frameId);\n    if (!frame) {\n      return;\n    }\n\n    const sameTargetParentFrame = frame.sameTargetParentFrame();\n    if (sameTargetParentFrame) {\n      sameTargetParentFrame.removeChildFrame(frame, isSwap);\n    } else {\n      frame.remove(isSwap);\n    }\n    this.updateSecurityOrigins();\n    void this.updateStorageKeys();\n  }\n\n  private onRequestFinished(event: Common.EventTarget.EventTargetEvent<NetworkRequest>): void {\n    if (!this.#cachedResourcesProcessed) {\n      return;\n    }\n\n    const request = event.data;\n    if (request.failed) {\n      return;\n    }\n\n    const frame = request.frameId ? this.framesInternal.get(request.frameId) : null;\n    if (frame) {\n      frame.addRequest(request);\n    }\n  }\n\n  private onRequestUpdateDropped(event: Common.EventTarget.EventTargetEvent<RequestUpdateDroppedEventData>): void {\n    if (!this.#cachedResourcesProcessed) {\n      return;\n    }\n\n    const data = event.data;\n    const frameId = data.frameId;\n    if (!frameId) {\n      return;\n    }\n    const frame = this.framesInternal.get(frameId);\n    if (!frame) {\n      return;\n    }\n\n    const url = data.url;\n    if (frame.getResourcesMap().get(url)) {\n      return;\n    }\n\n    const resource = new Resource(\n        this, null, url, frame.url, frameId, data.loaderId, Common.ResourceType.resourceTypes[data.resourceType],\n        data.mimeType, data.lastModified, null);\n    frame.addResource(resource);\n  }\n\n  frameForId(frameId: Protocol.Page.FrameId): ResourceTreeFrame|null {\n    return this.framesInternal.get(frameId) || null;\n  }\n\n  forAllResources(callback: (arg0: Resource) => boolean): boolean {\n    if (this.mainFrame) {\n      return this.mainFrame.callForFrameResources(callback);\n    }\n    return false;\n  }\n\n  frames(): ResourceTreeFrame[] {\n    return [...this.framesInternal.values()];\n  }\n\n  resourceForURL(url: Platform.DevToolsPath.UrlString): Resource|null {\n    // Workers call into this with no #frames available.\n    return this.mainFrame ? this.mainFrame.resourceForURL(url) : null;\n  }\n\n  private addFramesRecursively(\n      sameTargetParentFrame: ResourceTreeFrame|null, frameTreePayload: Protocol.Page.FrameResourceTree): void {\n    const framePayload = frameTreePayload.frame;\n    let frame = this.framesInternal.get(framePayload.id);\n    if (!frame) {\n      frame = new ResourceTreeFrame(this, sameTargetParentFrame, framePayload.id, framePayload, null);\n    }\n    if (!sameTargetParentFrame && framePayload.parentId) {\n      frame.crossTargetParentFrameId = framePayload.parentId;\n    }\n    this.addFrame(frame);\n\n    for (const childFrame of frameTreePayload.childFrames || []) {\n      this.addFramesRecursively(frame, childFrame);\n    }\n\n    for (let i = 0; i < frameTreePayload.resources.length; ++i) {\n      const subresource = frameTreePayload.resources[i];\n      const resource = this.createResourceFromFramePayload(\n          framePayload, subresource.url as Platform.DevToolsPath.UrlString,\n          Common.ResourceType.resourceTypes[subresource.type], subresource.mimeType, subresource.lastModified || null,\n          subresource.contentSize || null);\n      frame.addResource(resource);\n    }\n\n    if (!frame.getResourcesMap().get(framePayload.url)) {\n      const frameResource = this.createResourceFromFramePayload(\n          framePayload, framePayload.url as Platform.DevToolsPath.UrlString, Common.ResourceType.resourceTypes.Document,\n          framePayload.mimeType, null, null);\n      frame.addResource(frameResource);\n    }\n  }\n\n  private createResourceFromFramePayload(\n      frame: Protocol.Page.Frame, url: Platform.DevToolsPath.UrlString, type: Common.ResourceType.ResourceType,\n      mimeType: string, lastModifiedTime: number|null, contentSize: number|null): Resource {\n    const lastModified = typeof lastModifiedTime === 'number' ? new Date(lastModifiedTime * 1000) : null;\n    return new Resource(\n        this, null, url, frame.url as Platform.DevToolsPath.UrlString, frame.id, frame.loaderId, type, mimeType,\n        lastModified, contentSize);\n  }\n\n  suspendReload(): void {\n    this.#reloadSuspensionCount++;\n  }\n\n  resumeReload(): void {\n    this.#reloadSuspensionCount--;\n    console.assert(this.#reloadSuspensionCount >= 0, 'Unbalanced call to ResourceTreeModel.resumeReload()');\n    if (!this.#reloadSuspensionCount && this.#pendingReloadOptions) {\n      const {ignoreCache, scriptToEvaluateOnLoad} = this.#pendingReloadOptions;\n      this.reloadPage(ignoreCache, scriptToEvaluateOnLoad);\n    }\n  }\n\n  reloadPage(ignoreCache?: boolean, scriptToEvaluateOnLoad?: string): void {\n    const loaderId = this.mainFrame?.loaderId;\n    if (!loaderId) {\n      return;\n    }\n    // Only dispatch PageReloadRequested upon first reload request to simplify client logic.\n    if (!this.#pendingReloadOptions) {\n      this.dispatchEventToListeners(Events.PageReloadRequested, this);\n    }\n    if (this.#reloadSuspensionCount) {\n      this.#pendingReloadOptions = {ignoreCache, scriptToEvaluateOnLoad};\n      return;\n    }\n    this.#pendingReloadOptions = null;\n    const networkManager = this.target().model(NetworkManager);\n    if (networkManager) {\n      networkManager.clearRequests();\n    }\n    this.dispatchEventToListeners(Events.WillReloadPage);\n    void this.agent.invoke_reload({ignoreCache, scriptToEvaluateOnLoad, loaderId});\n  }\n\n  navigate(url: Platform.DevToolsPath.UrlString): Promise<Protocol.Page.NavigateResponse> {\n    return this.agent.invoke_navigate({url});\n  }\n\n  async navigationHistory(): Promise<{\n    currentIndex: number,\n    entries: Array<Protocol.Page.NavigationEntry>,\n  }|null> {\n    const response = await this.agent.invoke_getNavigationHistory();\n    if (response.getError()) {\n      return null;\n    }\n    return {currentIndex: response.currentIndex, entries: response.entries};\n  }\n\n  navigateToHistoryEntry(entry: Protocol.Page.NavigationEntry): void {\n    void this.agent.invoke_navigateToHistoryEntry({entryId: entry.id});\n  }\n\n  setLifecycleEventsEnabled(enabled: boolean): Promise<Protocol.ProtocolResponseWithError> {\n    return this.agent.invoke_setLifecycleEventsEnabled({enabled});\n  }\n\n  async fetchAppManifest(): Promise<{\n    url: Platform.DevToolsPath.UrlString,\n    data: string|null,\n    errors: Array<Protocol.Page.AppManifestError>,\n  }> {\n    const response = await this.agent.invoke_getAppManifest({});\n    if (response.getError()) {\n      return {url: response.url as Platform.DevToolsPath.UrlString, data: null, errors: []};\n    }\n    return {url: response.url as Platform.DevToolsPath.UrlString, data: response.data || null, errors: response.errors};\n  }\n\n  async getInstallabilityErrors(): Promise<Protocol.Page.InstallabilityError[]> {\n    const response = await this.agent.invoke_getInstallabilityErrors();\n    return response.installabilityErrors || [];\n  }\n\n  async getAppId(): Promise<Protocol.Page.GetAppIdResponse> {\n    return this.agent.invoke_getAppId();\n  }\n\n  private executionContextComparator(a: ExecutionContext, b: ExecutionContext): number {\n    function framePath(frame: ResourceTreeFrame|null): ResourceTreeFrame[] {\n      let currentFrame: (ResourceTreeFrame|null) = frame;\n      const parents = [];\n      while (currentFrame) {\n        parents.push(currentFrame);\n        currentFrame = currentFrame.sameTargetParentFrame();\n      }\n      return parents.reverse();\n    }\n\n    if (a.target() !== b.target()) {\n      return ExecutionContext.comparator(a, b);\n    }\n\n    const framesA = a.frameId ? framePath(this.frameForId(a.frameId)) : [];\n    const framesB = b.frameId ? framePath(this.frameForId(b.frameId)) : [];\n    let frameA;\n    let frameB;\n    for (let i = 0;; i++) {\n      if (!framesA[i] || !framesB[i] || (framesA[i] !== framesB[i])) {\n        frameA = framesA[i];\n        frameB = framesB[i];\n        break;\n      }\n    }\n    if (!frameA && frameB) {\n      return -1;\n    }\n\n    if (!frameB && frameA) {\n      return 1;\n    }\n\n    if (frameA && frameB) {\n      return frameA.id.localeCompare(frameB.id);\n    }\n\n    return ExecutionContext.comparator(a, b);\n  }\n\n  private getSecurityOriginData(): SecurityOriginData {\n    const securityOrigins = new Set<string>();\n\n    let mainSecurityOrigin: string|null = null;\n    let unreachableMainSecurityOrigin: string|null = null;\n    for (const frame of this.framesInternal.values()) {\n      const origin = frame.securityOrigin;\n      if (!origin) {\n        continue;\n      }\n\n      securityOrigins.add(origin);\n      if (frame.isMainFrame()) {\n        mainSecurityOrigin = origin;\n        if (frame.unreachableUrl()) {\n          const unreachableParsed = new Common.ParsedURL.ParsedURL(frame.unreachableUrl());\n          unreachableMainSecurityOrigin = unreachableParsed.securityOrigin();\n        }\n      }\n    }\n    return {\n      securityOrigins,\n      mainSecurityOrigin,\n      unreachableMainSecurityOrigin,\n    };\n  }\n\n  private async getStorageKeyData(): Promise<StorageKeyData> {\n    const storageKeys = new Set<string>();\n    let mainStorageKey: string|null = null;\n\n    for (const {isMainFrame, storageKey} of await Promise.all([...this.framesInternal.values()].map(\n             f => f.getStorageKey(/* forceFetch */ false).then(k => ({\n                                                                 isMainFrame: f.isMainFrame(),\n                                                                 storageKey: k,\n                                                               }))))) {\n      if (isMainFrame) {\n        mainStorageKey = storageKey;\n      }\n      if (storageKey) {\n        storageKeys.add(storageKey);\n      }\n    }\n\n    return {storageKeys, mainStorageKey};\n  }\n\n  private updateSecurityOrigins(): void {\n    const data = this.getSecurityOriginData();\n    this.#securityOriginManager.setMainSecurityOrigin(\n        data.mainSecurityOrigin || '', data.unreachableMainSecurityOrigin || '');\n    this.#securityOriginManager.updateSecurityOrigins(data.securityOrigins);\n  }\n\n  private async updateStorageKeys(): Promise<void> {\n    const data = await this.getStorageKeyData();\n    this.#storageKeyManager.setMainStorageKey(data.mainStorageKey || '');\n    this.#storageKeyManager.updateStorageKeys(data.storageKeys);\n  }\n\n  async getMainStorageKey(): Promise<string|null> {\n    return this.mainFrame ? this.mainFrame.getStorageKey(/* forceFetch */ false) : null;\n  }\n\n  getMainSecurityOrigin(): string|null {\n    const data = this.getSecurityOriginData();\n    return data.mainSecurityOrigin || data.unreachableMainSecurityOrigin;\n  }\n\n  onBackForwardCacheNotUsed(event: Protocol.Page.BackForwardCacheNotUsedEvent): void {\n    if (this.mainFrame && this.mainFrame.id === event.frameId && this.mainFrame.loaderId === event.loaderId) {\n      this.mainFrame.setBackForwardCacheDetails(event);\n      this.dispatchEventToListeners(Events.BackForwardCacheDetailsUpdated, this.mainFrame);\n    } else {\n      this.#pendingBackForwardCacheNotUsedEvents.add(event);\n    }\n  }\n\n  processPendingEvents(frame: ResourceTreeFrame): void {\n    if (!frame.isMainFrame()) {\n      return;\n    }\n    for (const event of this.#pendingBackForwardCacheNotUsedEvents) {\n      if (frame.id === event.frameId && frame.loaderId === event.loaderId) {\n        frame.setBackForwardCacheDetails(event);\n        this.#pendingBackForwardCacheNotUsedEvents.delete(event);\n        break;\n      }\n    }\n    // No need to dispatch events here as this method call is followed by a `PrimaryPageChanged` event.\n  }\n}\n\nexport enum Events {\n  /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n  FrameAdded = 'FrameAdded',\n  FrameNavigated = 'FrameNavigated',\n  FrameDetached = 'FrameDetached',\n  FrameResized = 'FrameResized',\n  FrameWillNavigate = 'FrameWillNavigate',\n  PrimaryPageChanged = 'PrimaryPageChanged',\n  ResourceAdded = 'ResourceAdded',\n  WillLoadCachedResources = 'WillLoadCachedResources',\n  CachedResourcesLoaded = 'CachedResourcesLoaded',\n  DOMContentLoaded = 'DOMContentLoaded',\n  LifecycleEvent = 'LifecycleEvent',\n  Load = 'Load',\n  PageReloadRequested = 'PageReloadRequested',\n  WillReloadPage = 'WillReloadPage',\n  InterstitialShown = 'InterstitialShown',\n  InterstitialHidden = 'InterstitialHidden',\n  BackForwardCacheDetailsUpdated = 'BackForwardCacheDetailsUpdated',\n  JavaScriptDialogOpening = 'JavaScriptDialogOpening',\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n\nexport type EventTypes = {\n  [Events.FrameAdded]: ResourceTreeFrame,\n  [Events.FrameNavigated]: ResourceTreeFrame,\n  [Events.FrameDetached]: {frame: ResourceTreeFrame, isSwap: boolean},\n  [Events.FrameResized]: void,\n  [Events.FrameWillNavigate]: ResourceTreeFrame,\n  [Events.PrimaryPageChanged]: {frame: ResourceTreeFrame, type: PrimaryPageChangeType},\n  [Events.ResourceAdded]: Resource,\n  [Events.WillLoadCachedResources]: void,\n  [Events.CachedResourcesLoaded]: ResourceTreeModel,\n  [Events.DOMContentLoaded]: number,\n  [Events.LifecycleEvent]: {frameId: Protocol.Page.FrameId, name: string},\n  [Events.Load]: {resourceTreeModel: ResourceTreeModel, loadTime: number},\n  [Events.PageReloadRequested]: ResourceTreeModel,\n  [Events.WillReloadPage]: void,\n  [Events.InterstitialShown]: void,\n  [Events.InterstitialHidden]: void,\n  [Events.BackForwardCacheDetailsUpdated]: ResourceTreeFrame,\n  [Events.JavaScriptDialogOpening]: Protocol.Page.JavascriptDialogOpeningEvent,\n};\n\nexport class ResourceTreeFrame {\n  #model: ResourceTreeModel;\n  #sameTargetParentFrameInternal: ResourceTreeFrame|null;\n  readonly #idInternal: Protocol.Page.FrameId;\n  crossTargetParentFrameId: string|null;\n  #loaderIdInternal: Protocol.Network.LoaderId;\n  #nameInternal: string|null|undefined;\n  #urlInternal: Platform.DevToolsPath.UrlString;\n  #domainAndRegistryInternal: string;\n  #securityOriginInternal: string|null;\n  #storageKeyInternal?: Promise<string|null>;\n  #unreachableUrlInternal: Platform.DevToolsPath.UrlString;\n  #adFrameStatusInternal?: Protocol.Page.AdFrameStatus;\n  #secureContextType: Protocol.Page.SecureContextType|null;\n  #crossOriginIsolatedContextType: Protocol.Page.CrossOriginIsolatedContextType|null;\n  #gatedAPIFeatures: Protocol.Page.GatedAPIFeatures[]|null;\n  #creationStackTrace: Protocol.Runtime.StackTrace|null;\n  #creationStackTraceTarget: Target|null;\n  #childFramesInternal: Set<ResourceTreeFrame>;\n  resourcesMap: Map<Platform.DevToolsPath.UrlString, Resource>;\n  backForwardCacheDetails: {\n    restoredFromCache: boolean|undefined,\n    explanations: Protocol.Page.BackForwardCacheNotRestoredExplanation[],\n    explanationsTree: Protocol.Page.BackForwardCacheNotRestoredExplanationTree|undefined,\n  } = {\n    restoredFromCache: undefined,\n    explanations: [],\n    explanationsTree: undefined,\n  };\n\n  constructor(\n      model: ResourceTreeModel, parentFrame: ResourceTreeFrame|null, frameId: Protocol.Page.FrameId,\n      payload: Protocol.Page.Frame|null, creationStackTrace: Protocol.Runtime.StackTrace|null) {\n    this.#model = model;\n    this.#sameTargetParentFrameInternal = parentFrame;\n    this.#idInternal = frameId;\n    this.crossTargetParentFrameId = null;\n\n    this.#loaderIdInternal = payload?.loaderId ?? '' as Protocol.Network.LoaderId;\n    this.#nameInternal = payload && payload.name;\n    this.#urlInternal =\n        payload && payload.url as Platform.DevToolsPath.UrlString || Platform.DevToolsPath.EmptyUrlString;\n    this.#domainAndRegistryInternal = (payload && payload.domainAndRegistry) || '';\n    this.#securityOriginInternal = payload && payload.securityOrigin;\n    this.#unreachableUrlInternal =\n        (payload && payload.unreachableUrl as Platform.DevToolsPath.UrlString) || Platform.DevToolsPath.EmptyUrlString;\n    this.#adFrameStatusInternal = payload?.adFrameStatus;\n    this.#secureContextType = payload && payload.secureContextType;\n    this.#crossOriginIsolatedContextType = payload && payload.crossOriginIsolatedContextType;\n    this.#gatedAPIFeatures = payload && payload.gatedAPIFeatures;\n\n    this.#creationStackTrace = creationStackTrace;\n    this.#creationStackTraceTarget = null;\n\n    this.#childFramesInternal = new Set();\n\n    this.resourcesMap = new Map();\n\n    if (this.#sameTargetParentFrameInternal) {\n      this.#sameTargetParentFrameInternal.#childFramesInternal.add(this);\n    }\n  }\n\n  isSecureContext(): boolean {\n    return this.#secureContextType !== null && this.#secureContextType.startsWith('Secure');\n  }\n\n  getSecureContextType(): Protocol.Page.SecureContextType|null {\n    return this.#secureContextType;\n  }\n\n  isCrossOriginIsolated(): boolean {\n    return this.#crossOriginIsolatedContextType !== null && this.#crossOriginIsolatedContextType.startsWith('Isolated');\n  }\n\n  getCrossOriginIsolatedContextType(): Protocol.Page.CrossOriginIsolatedContextType|null {\n    return this.#crossOriginIsolatedContextType;\n  }\n\n  getGatedAPIFeatures(): Protocol.Page.GatedAPIFeatures[]|null {\n    return this.#gatedAPIFeatures;\n  }\n\n  getCreationStackTraceData():\n      {creationStackTrace: Protocol.Runtime.StackTrace|null, creationStackTraceTarget: Target} {\n    return {\n      creationStackTrace: this.#creationStackTrace,\n      creationStackTraceTarget: this.#creationStackTraceTarget || this.resourceTreeModel().target(),\n    };\n  }\n\n  navigate(framePayload: Protocol.Page.Frame): void {\n    this.#loaderIdInternal = framePayload.loaderId;\n    this.#nameInternal = framePayload.name;\n    this.#urlInternal = framePayload.url as Platform.DevToolsPath.UrlString;\n    this.#domainAndRegistryInternal = framePayload.domainAndRegistry;\n    this.#securityOriginInternal = framePayload.securityOrigin;\n    void this.getStorageKey(/* forceFetch */ true);\n    this.#unreachableUrlInternal =\n        framePayload.unreachableUrl as Platform.DevToolsPath.UrlString || Platform.DevToolsPath.EmptyUrlString;\n    this.#adFrameStatusInternal = framePayload?.adFrameStatus;\n    this.#secureContextType = framePayload.secureContextType;\n    this.#crossOriginIsolatedContextType = framePayload.crossOriginIsolatedContextType;\n    this.#gatedAPIFeatures = framePayload.gatedAPIFeatures;\n    this.backForwardCacheDetails = {\n      restoredFromCache: undefined,\n      explanations: [],\n      explanationsTree: undefined,\n    };\n\n    const mainResource = this.resourcesMap.get(this.#urlInternal);\n    this.resourcesMap.clear();\n    this.removeChildFrames();\n    if (mainResource && mainResource.loaderId === this.#loaderIdInternal) {\n      this.addResource(mainResource);\n    }\n  }\n\n  resourceTreeModel(): ResourceTreeModel {\n    return this.#model;\n  }\n\n  get id(): Protocol.Page.FrameId {\n    return this.#idInternal;\n  }\n\n  get name(): string {\n    return this.#nameInternal || '';\n  }\n\n  get url(): Platform.DevToolsPath.UrlString {\n    return this.#urlInternal;\n  }\n\n  domainAndRegistry(): string {\n    return this.#domainAndRegistryInternal;\n  }\n\n  async getAdScriptId(frameId: Protocol.Page.FrameId): Promise<Protocol.Page.AdScriptId|null> {\n    const res = await this.#model.agent.invoke_getAdScriptId({frameId});\n    return res.adScriptId || null;\n  }\n\n  get securityOrigin(): string|null {\n    return this.#securityOriginInternal;\n  }\n\n  getStorageKey(forceFetch: boolean): Promise<string|null> {\n    if (!this.#storageKeyInternal || forceFetch) {\n      this.#storageKeyInternal = this.#model.storageKeyForFrame(this.#idInternal);\n    }\n    return this.#storageKeyInternal;\n  }\n\n  unreachableUrl(): Platform.DevToolsPath.UrlString {\n    return this.#unreachableUrlInternal;\n  }\n\n  get loaderId(): Protocol.Network.LoaderId {\n    return this.#loaderIdInternal;\n  }\n\n  adFrameType(): Protocol.Page.AdFrameType {\n    return this.#adFrameStatusInternal?.adFrameType || Protocol.Page.AdFrameType.None;\n  }\n\n  adFrameStatus(): Protocol.Page.AdFrameStatus|undefined {\n    return this.#adFrameStatusInternal;\n  }\n\n  get childFrames(): ResourceTreeFrame[] {\n    return [...this.#childFramesInternal];\n  }\n\n  /**\n   * Returns the parent frame if both #frames are part of the same process/target.\n   */\n  sameTargetParentFrame(): ResourceTreeFrame|null {\n    return this.#sameTargetParentFrameInternal;\n  }\n\n  /**\n   * Returns the parent frame if both #frames are part of different processes/targets (child is an OOPIF).\n   */\n  crossTargetParentFrame(): ResourceTreeFrame|null {\n    if (!this.crossTargetParentFrameId) {\n      return null;\n    }\n    const parentTarget = this.#model.target().parentTarget();\n    if (parentTarget?.type() !== Type.FRAME) {\n      return null;\n    }\n    const parentModel = parentTarget.model(ResourceTreeModel);\n    if (!parentModel) {\n      return null;\n    }\n    // Note that parent #model has already processed cached resources:\n    // - when parent target was created, we issued getResourceTree call;\n    // - strictly after we issued setAutoAttach call;\n    // - both of them were handled in renderer in the same order;\n    // - cached resource tree got processed on parent #model;\n    // - child target was created as a result of setAutoAttach call.\n    return parentModel.framesInternal.get(this.crossTargetParentFrameId) || null;\n  }\n\n  /**\n   * Returns the parent frame. There is only 1 parent and it's either in the\n   * same target or it's cross-target.\n   */\n  parentFrame(): ResourceTreeFrame|null {\n    return this.sameTargetParentFrame() || this.crossTargetParentFrame();\n  }\n\n  /**\n   * Returns true if this is the main frame of its target. A main frame is the root of the frame tree i.e. a frame without\n   * a parent, but the whole frame tree could be embedded in another frame tree (e.g. OOPIFs, fenced frames, portals).\n   * https://chromium.googlesource.com/chromium/src/+/HEAD/docs/frame_trees.md\n   */\n  isMainFrame(): boolean {\n    return !this.#sameTargetParentFrameInternal;\n  }\n\n  /**\n   * Returns true if this is a main frame which is not embedded in another frame tree. With MPArch features such as\n   * back/forward cache or prerender there can be multiple outermost frames.\n   * https://chromium.googlesource.com/chromium/src/+/HEAD/docs/frame_trees.md\n   */\n  isOutermostFrame(): boolean {\n    return this.#model.target().parentTarget()?.type() !== Type.FRAME && !this.#sameTargetParentFrameInternal &&\n        !this.crossTargetParentFrameId;\n  }\n\n  /**\n   * Returns true if this is the primary frame of the browser tab. There can only be one primary frame for each\n   * browser tab. It is the outermost frame being actively displayed in the browser tab.\n   * https://chromium.googlesource.com/chromium/src/+/HEAD/docs/frame_trees.md\n   */\n  isPrimaryFrame(): boolean {\n    return !this.#sameTargetParentFrameInternal &&\n        this.#model.target() === TargetManager.instance().primaryPageTarget();\n  }\n\n  removeChildFrame(frame: ResourceTreeFrame, isSwap: boolean): void {\n    this.#childFramesInternal.delete(frame);\n    frame.remove(isSwap);\n  }\n\n  private removeChildFrames(): void {\n    const frames = this.#childFramesInternal;\n    this.#childFramesInternal = new Set();\n    for (const frame of frames) {\n      frame.remove(false);\n    }\n  }\n\n  remove(isSwap: boolean): void {\n    this.removeChildFrames();\n    this.#model.framesInternal.delete(this.id);\n    this.#model.dispatchEventToListeners(Events.FrameDetached, {frame: this, isSwap});\n  }\n\n  addResource(resource: Resource): void {\n    if (this.resourcesMap.get(resource.url) === resource) {\n      // Already in the tree, we just got an extra update.\n      return;\n    }\n    this.resourcesMap.set(resource.url, resource);\n    this.#model.dispatchEventToListeners(Events.ResourceAdded, resource);\n  }\n\n  addRequest(request: NetworkRequest): void {\n    let resource = this.resourcesMap.get(request.url());\n    if (resource && resource.request === request) {\n      // Already in the tree, we just got an extra update.\n      return;\n    }\n    resource = new Resource(\n        this.#model, request, request.url(), request.documentURL, request.frameId, request.loaderId,\n        request.resourceType(), request.mimeType, null, null);\n    this.resourcesMap.set(resource.url, resource);\n    this.#model.dispatchEventToListeners(Events.ResourceAdded, resource);\n  }\n\n  resources(): Resource[] {\n    return Array.from(this.resourcesMap.values());\n  }\n\n  resourceForURL(url: Platform.DevToolsPath.UrlString): Resource|null {\n    const resource = this.resourcesMap.get(url);\n    if (resource) {\n      return resource;\n    }\n    for (const frame of this.#childFramesInternal) {\n      const resource = frame.resourceForURL(url);\n      if (resource) {\n        return resource;\n      }\n    }\n    return null;\n  }\n\n  callForFrameResources(callback: (arg0: Resource) => boolean): boolean {\n    for (const resource of this.resourcesMap.values()) {\n      if (callback(resource)) {\n        return true;\n      }\n    }\n\n    for (const frame of this.#childFramesInternal) {\n      if (frame.callForFrameResources(callback)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  displayName(): string {\n    if (this.isOutermostFrame()) {\n      return i18n.i18n.lockedString('top');\n    }\n    const subtitle = new Common.ParsedURL.ParsedURL(this.#urlInternal).displayName;\n    if (subtitle) {\n      if (!this.#nameInternal) {\n        return subtitle;\n      }\n      return this.#nameInternal + ' (' + subtitle + ')';\n    }\n    return i18n.i18n.lockedString('iframe');\n  }\n\n  async getOwnerDeferredDOMNode(): Promise<DeferredDOMNode|null> {\n    const parentFrame = this.parentFrame();\n    if (!parentFrame) {\n      return null;\n    }\n    return parentFrame.resourceTreeModel().domModel().getOwnerNodeForFrame(this.#idInternal);\n  }\n\n  async getOwnerDOMNodeOrDocument(): Promise<DOMNode|null> {\n    const deferredNode = await this.getOwnerDeferredDOMNode();\n    if (deferredNode) {\n      return deferredNode.resolvePromise();\n    }\n    if (this.isOutermostFrame()) {\n      return this.resourceTreeModel().domModel().requestDocument();\n    }\n    return null;\n  }\n\n  async highlight(): Promise<void> {\n    const parentFrame = this.parentFrame();\n    const parentTarget = this.resourceTreeModel().target().parentTarget();\n    const highlightFrameOwner = async(domModel: DOMModel): Promise<void> => {\n      const deferredNode = await domModel.getOwnerNodeForFrame(this.#idInternal);\n      if (deferredNode) {\n        domModel.overlayModel().highlightInOverlay({deferredNode, selectorList: ''}, 'all', true);\n      }\n    };\n\n    if (parentFrame) {\n      return highlightFrameOwner(parentFrame.resourceTreeModel().domModel());\n    }\n\n    // Fenced frames.\n    if (parentTarget?.type() === Type.FRAME) {\n      const domModel = parentTarget.model(DOMModel);\n      if (domModel) {\n        return highlightFrameOwner(domModel);\n      }\n    }\n\n    // For the outermost frame there is no owner node. Highlight the whole #document instead.\n    const document = await this.resourceTreeModel().domModel().requestDocument();\n    if (document) {\n      this.resourceTreeModel().domModel().overlayModel().highlightInOverlay(\n          {node: document, selectorList: ''}, 'all', true);\n    }\n  }\n\n  async getPermissionsPolicyState(): Promise<Protocol.Page.PermissionsPolicyFeatureState[]|null> {\n    const response = await this.resourceTreeModel().target().pageAgent().invoke_getPermissionsPolicyState(\n        {frameId: this.#idInternal});\n    if (response.getError()) {\n      return null;\n    }\n    return response.states;\n  }\n\n  async getOriginTrials(): Promise<Protocol.Page.OriginTrial[]> {\n    const response =\n        await this.resourceTreeModel().target().pageAgent().invoke_getOriginTrials({frameId: this.#idInternal});\n    if (response.getError()) {\n      return [];\n    }\n    return response.originTrials;\n  }\n\n  setCreationStackTrace(creationStackTraceData:\n                            {creationStackTrace: Protocol.Runtime.StackTrace|null, creationStackTraceTarget: Target}):\n      void {\n    this.#creationStackTrace = creationStackTraceData.creationStackTrace;\n    this.#creationStackTraceTarget = creationStackTraceData.creationStackTraceTarget;\n  }\n\n  setBackForwardCacheDetails(event: Protocol.Page.BackForwardCacheNotUsedEvent): void {\n    this.backForwardCacheDetails.restoredFromCache = false;\n    this.backForwardCacheDetails.explanations = event.notRestoredExplanations;\n    this.backForwardCacheDetails.explanationsTree = event.notRestoredExplanationsTree;\n  }\n\n  getResourcesMap(): Map<string, Resource> {\n    return this.resourcesMap;\n  }\n}\n\nexport class PageDispatcher implements ProtocolProxyApi.PageDispatcher {\n  #resourceTreeModel: ResourceTreeModel;\n  constructor(resourceTreeModel: ResourceTreeModel) {\n    this.#resourceTreeModel = resourceTreeModel;\n  }\n  backForwardCacheNotUsed(params: Protocol.Page.BackForwardCacheNotUsedEvent): void {\n    this.#resourceTreeModel.onBackForwardCacheNotUsed(params);\n  }\n\n  domContentEventFired({timestamp}: Protocol.Page.DomContentEventFiredEvent): void {\n    this.#resourceTreeModel.dispatchEventToListeners(Events.DOMContentLoaded, timestamp);\n  }\n\n  loadEventFired({timestamp}: Protocol.Page.LoadEventFiredEvent): void {\n    this.#resourceTreeModel.dispatchEventToListeners(\n        Events.Load, {resourceTreeModel: this.#resourceTreeModel, loadTime: timestamp});\n  }\n\n  lifecycleEvent({frameId, name}: Protocol.Page.LifecycleEventEvent): void {\n    this.#resourceTreeModel.dispatchEventToListeners(Events.LifecycleEvent, {frameId, name});\n  }\n\n  frameAttached({frameId, parentFrameId, stack}: Protocol.Page.FrameAttachedEvent): void {\n    this.#resourceTreeModel.frameAttached(frameId, parentFrameId, stack);\n  }\n\n  frameNavigated({frame, type}: Protocol.Page.FrameNavigatedEvent): void {\n    this.#resourceTreeModel.frameNavigated(frame, type);\n  }\n\n  documentOpened({frame}: Protocol.Page.DocumentOpenedEvent): void {\n    this.#resourceTreeModel.documentOpened(frame);\n  }\n\n  frameDetached({frameId, reason}: Protocol.Page.FrameDetachedEvent): void {\n    this.#resourceTreeModel.frameDetached(frameId, reason === Protocol.Page.FrameDetachedEventReason.Swap);\n  }\n\n  frameSubtreeWillBeDetached(_params: Protocol.Page.FrameSubtreeWillBeDetachedEvent): void {\n  }\n\n  frameStartedLoading({}: Protocol.Page.FrameStartedLoadingEvent): void {\n  }\n\n  frameStoppedLoading({}: Protocol.Page.FrameStoppedLoadingEvent): void {\n  }\n\n  frameRequestedNavigation({}: Protocol.Page.FrameRequestedNavigationEvent): void {\n  }\n\n  frameScheduledNavigation({}: Protocol.Page.FrameScheduledNavigationEvent): void {\n  }\n\n  frameClearedScheduledNavigation({}: Protocol.Page.FrameClearedScheduledNavigationEvent): void {\n  }\n\n  navigatedWithinDocument({}: Protocol.Page.NavigatedWithinDocumentEvent): void {\n  }\n\n  frameResized(): void {\n    this.#resourceTreeModel.dispatchEventToListeners(Events.FrameResized);\n  }\n\n  javascriptDialogOpening(event: Protocol.Page.JavascriptDialogOpeningEvent): void {\n    this.#resourceTreeModel.dispatchEventToListeners(Events.JavaScriptDialogOpening, event);\n    if (!event.hasBrowserHandler) {\n      void this.#resourceTreeModel.agent.invoke_handleJavaScriptDialog({accept: false});\n    }\n  }\n\n  javascriptDialogClosed({}: Protocol.Page.JavascriptDialogClosedEvent): void {\n  }\n\n  screencastFrame({}: Protocol.Page.ScreencastFrameEvent): void {\n  }\n\n  screencastVisibilityChanged({}: Protocol.Page.ScreencastVisibilityChangedEvent): void {\n  }\n\n  interstitialShown(): void {\n    this.#resourceTreeModel.isInterstitialShowing = true;\n    this.#resourceTreeModel.dispatchEventToListeners(Events.InterstitialShown);\n  }\n\n  interstitialHidden(): void {\n    this.#resourceTreeModel.isInterstitialShowing = false;\n    this.#resourceTreeModel.dispatchEventToListeners(Events.InterstitialHidden);\n  }\n\n  windowOpen({}: Protocol.Page.WindowOpenEvent): void {\n  }\n\n  compilationCacheProduced({}: Protocol.Page.CompilationCacheProducedEvent): void {\n  }\n\n  fileChooserOpened({}: Protocol.Page.FileChooserOpenedEvent): void {\n  }\n\n  downloadWillBegin({}: Protocol.Page.DownloadWillBeginEvent): void {\n  }\n\n  downloadProgress(): void {\n  }\n}\n\nSDKModel.register(ResourceTreeModel, {capabilities: Capability.DOM, autostart: true, early: true});\nexport interface SecurityOriginData {\n  securityOrigins: Set<string>;\n  mainSecurityOrigin: string|null;\n  unreachableMainSecurityOrigin: string|null;\n}\n\nexport interface StorageKeyData {\n  storageKeys: Set<string>;\n  mainStorageKey: string|null;\n}\n\nexport const enum PrimaryPageChangeType {\n  NAVIGATION = 'Navigation',\n  ACTIVATION = 'Activation',\n}\n"],
  "mappings": "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",
  "names": ["Events", "resource", "PrimaryPageChangeType"]
}
