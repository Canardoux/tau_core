{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/core/sdk/WebAuthnModel.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport {SDKModel} from './SDKModel.js';\nimport {Capability, type Target} from './Target.js';\n\nexport const enum Events {\n  CREDENTIAL_ADDED = 'CredentialAdded',\n  CREDENTIAL_ASSERTED = 'CredentialAsserted',\n  CREDENTIAL_DELETED = 'CredentialDeleted',\n  CREDENTIAL_UPDATED = 'CredentialUpdated',\n}\n\nexport type EventTypes = {\n  [Events.CREDENTIAL_ADDED]: Protocol.WebAuthn.CredentialAddedEvent,\n  [Events.CREDENTIAL_ASSERTED]: Protocol.WebAuthn.CredentialAssertedEvent,\n  [Events.CREDENTIAL_DELETED]: Protocol.WebAuthn.CredentialDeletedEvent,\n  [Events.CREDENTIAL_UPDATED]: Protocol.WebAuthn.CredentialUpdatedEvent,\n};\n\nexport class WebAuthnModel extends SDKModel<EventTypes> {\n  readonly #agent: ProtocolProxyApi.WebAuthnApi;\n  constructor(target: Target) {\n    super(target);\n    this.#agent = target.webAuthnAgent();\n    target.registerWebAuthnDispatcher(new WebAuthnDispatcher(this));\n  }\n\n  setVirtualAuthEnvEnabled(enable: boolean): Promise<Object> {\n    if (enable) {\n      return this.#agent.invoke_enable({enableUI: true});\n    }\n    return this.#agent.invoke_disable();\n  }\n\n  async addAuthenticator(options: Protocol.WebAuthn.VirtualAuthenticatorOptions):\n      Promise<Protocol.WebAuthn.AuthenticatorId> {\n    const response = await this.#agent.invoke_addVirtualAuthenticator({options});\n    return response.authenticatorId;\n  }\n\n  async removeAuthenticator(authenticatorId: Protocol.WebAuthn.AuthenticatorId): Promise<void> {\n    await this.#agent.invoke_removeVirtualAuthenticator({authenticatorId});\n  }\n\n  async setAutomaticPresenceSimulation(authenticatorId: Protocol.WebAuthn.AuthenticatorId, enabled: boolean):\n      Promise<void> {\n    await this.#agent.invoke_setAutomaticPresenceSimulation({authenticatorId, enabled});\n  }\n\n  async getCredentials(authenticatorId: Protocol.WebAuthn.AuthenticatorId): Promise<Protocol.WebAuthn.Credential[]> {\n    const response = await this.#agent.invoke_getCredentials({authenticatorId});\n    return response.credentials;\n  }\n\n  async removeCredential(authenticatorId: Protocol.WebAuthn.AuthenticatorId, credentialId: string): Promise<void> {\n    await this.#agent.invoke_removeCredential({authenticatorId, credentialId});\n  }\n\n  credentialAdded(params: Protocol.WebAuthn.CredentialAddedEvent): void {\n    this.dispatchEventToListeners(Events.CREDENTIAL_ADDED, params);\n  }\n\n  credentialAsserted(params: Protocol.WebAuthn.CredentialAssertedEvent): void {\n    this.dispatchEventToListeners(Events.CREDENTIAL_ASSERTED, params);\n  }\n\n  credentialDeleted(params: Protocol.WebAuthn.CredentialDeletedEvent): void {\n    this.dispatchEventToListeners(Events.CREDENTIAL_DELETED, params);\n  }\n\n  credentialUpdated(params: Protocol.WebAuthn.CredentialUpdatedEvent): void {\n    this.dispatchEventToListeners(Events.CREDENTIAL_UPDATED, params);\n  }\n}\n\nclass WebAuthnDispatcher implements ProtocolProxyApi.WebAuthnDispatcher {\n  readonly #model: WebAuthnModel;\n  constructor(model: WebAuthnModel) {\n    this.#model = model;\n  }\n\n  credentialAdded(params: Protocol.WebAuthn.CredentialAddedEvent): void {\n    this.#model.credentialAdded(params);\n  }\n\n  credentialAsserted(params: Protocol.WebAuthn.CredentialAssertedEvent): void {\n    this.#model.credentialAsserted(params);\n  }\n\n  credentialDeleted(params: Protocol.WebAuthn.CredentialDeletedEvent): void {\n    this.#model.credentialDeleted(params);\n  }\n\n  credentialUpdated(params: Protocol.WebAuthn.CredentialUpdatedEvent): void {\n    this.#model.credentialUpdated(params);\n  }\n}\n\nSDKModel.register(WebAuthnModel, {capabilities: Capability.WEB_AUTHN, autostart: false});\n"],
  "mappings": ";AAOA,SAAQ,gBAAe;AACvB,SAAQ,kBAA8B;AAE/B,WAAW,SAAX,kBAAWA,YAAX;AACL,EAAAA,QAAA,sBAAmB;AACnB,EAAAA,QAAA,yBAAsB;AACtB,EAAAA,QAAA,wBAAqB;AACrB,EAAAA,QAAA,wBAAqB;AAJL,SAAAA;AAAA,GAAA;AAcX,aAAM,sBAAsB,SAAqB;AAAA,EAC7C;AAAA,EACT,YAAY,QAAgB;AAC1B,UAAM,MAAM;AACZ,SAAK,SAAS,OAAO,cAAc;AACnC,WAAO,2BAA2B,IAAI,mBAAmB,IAAI,CAAC;AAAA,EAChE;AAAA,EAEA,yBAAyB,QAAkC;AACzD,QAAI,QAAQ;AACV,aAAO,KAAK,OAAO,cAAc,EAAC,UAAU,KAAI,CAAC;AAAA,IACnD;AACA,WAAO,KAAK,OAAO,eAAe;AAAA,EACpC;AAAA,EAEA,MAAM,iBAAiB,SACwB;AAC7C,UAAM,WAAW,MAAM,KAAK,OAAO,+BAA+B,EAAC,QAAO,CAAC;AAC3E,WAAO,SAAS;AAAA,EAClB;AAAA,EAEA,MAAM,oBAAoB,iBAAmE;AAC3F,UAAM,KAAK,OAAO,kCAAkC,EAAC,gBAAe,CAAC;AAAA,EACvE;AAAA,EAEA,MAAM,+BAA+B,iBAAoD,SACvE;AAChB,UAAM,KAAK,OAAO,sCAAsC,EAAC,iBAAiB,QAAO,CAAC;AAAA,EACpF;AAAA,EAEA,MAAM,eAAe,iBAA6F;AAChH,UAAM,WAAW,MAAM,KAAK,OAAO,sBAAsB,EAAC,gBAAe,CAAC;AAC1E,WAAO,SAAS;AAAA,EAClB;AAAA,EAEA,MAAM,iBAAiB,iBAAoD,cAAqC;AAC9G,UAAM,KAAK,OAAO,wBAAwB,EAAC,iBAAiB,aAAY,CAAC;AAAA,EAC3E;AAAA,EAEA,gBAAgB,QAAsD;AACpE,SAAK,yBAAyB,0CAAyB,MAAM;AAAA,EAC/D;AAAA,EAEA,mBAAmB,QAAyD;AAC1E,SAAK,yBAAyB,gDAA4B,MAAM;AAAA,EAClE;AAAA,EAEA,kBAAkB,QAAwD;AACxE,SAAK,yBAAyB,8CAA2B,MAAM;AAAA,EACjE;AAAA,EAEA,kBAAkB,QAAwD;AACxE,SAAK,yBAAyB,8CAA2B,MAAM;AAAA,EACjE;AACF;AAEA,MAAM,mBAAkE;AAAA,EAC7D;AAAA,EACT,YAAY,OAAsB;AAChC,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,gBAAgB,QAAsD;AACpE,SAAK,OAAO,gBAAgB,MAAM;AAAA,EACpC;AAAA,EAEA,mBAAmB,QAAyD;AAC1E,SAAK,OAAO,mBAAmB,MAAM;AAAA,EACvC;AAAA,EAEA,kBAAkB,QAAwD;AACxE,SAAK,OAAO,kBAAkB,MAAM;AAAA,EACtC;AAAA,EAEA,kBAAkB,QAAwD;AACxE,SAAK,OAAO,kBAAkB,MAAM;AAAA,EACtC;AACF;AAEA,SAAS,SAAS,eAAe,EAAC,cAAc,WAAW,WAAW,WAAW,MAAK,CAAC;",
  "names": ["Events"]
}
