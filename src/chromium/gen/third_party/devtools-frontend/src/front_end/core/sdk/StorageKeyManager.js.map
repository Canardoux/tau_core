{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/core/sdk/StorageKeyManager.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {Capability, type Target} from './Target.js';\nimport {SDKModel} from './SDKModel.js';\nimport * as Common from '../common/common.js';\nimport type * as Platform from '../platform/platform.js';\n\nexport class StorageKeyManager extends SDKModel<EventTypes> {\n  #mainStorageKeyInternal: string;\n  #storageKeysInternal: Set<string>;\n  constructor(target: Target) {\n    super(target);\n\n    this.#mainStorageKeyInternal = '';\n    this.#storageKeysInternal = new Set();\n  }\n\n  updateStorageKeys(storageKeys: Set<string>): void {\n    const oldStorageKeys = this.#storageKeysInternal;\n    this.#storageKeysInternal = storageKeys;\n\n    for (const storageKey of oldStorageKeys) {\n      if (!this.#storageKeysInternal.has(storageKey)) {\n        this.dispatchEventToListeners(Events.STORAGE_KEY_REMOVED, storageKey);\n      }\n    }\n\n    for (const storageKey of this.#storageKeysInternal) {\n      if (!oldStorageKeys.has(storageKey)) {\n        this.dispatchEventToListeners(Events.STORAGE_KEY_ADDED, storageKey);\n      }\n    }\n  }\n\n  storageKeys(): string[] {\n    return [...this.#storageKeysInternal];\n  }\n\n  mainStorageKey(): string {\n    return this.#mainStorageKeyInternal;\n  }\n\n  setMainStorageKey(storageKey: string): void {\n    this.#mainStorageKeyInternal = storageKey;\n    this.dispatchEventToListeners(Events.MAIN_STORAGE_KEY_CHANGED, {\n      mainStorageKey: this.#mainStorageKeyInternal,\n    });\n  }\n}\n\nexport function parseStorageKey(storageKeyString: string): StorageKey {\n  // Based on the canonical implementation of StorageKey::Deserialize in\n  // third_party/blink/common/storage_key/storage_key.cc\n  const components = storageKeyString.split('^');\n  const origin = Common.ParsedURL.ParsedURL.extractOrigin(components[0] as Platform.DevToolsPath.UrlString);\n  const storageKey = {origin, components: new Map<StorageKeyComponent, string>()};\n  for (let i = 1; i < components.length; ++i) {\n    storageKey.components.set(components[i].charAt(0) as StorageKeyComponent, components[i].substring(1));\n  }\n  return storageKey;\n}\n\nexport const enum StorageKeyComponent {\n  TOP_LEVEL_SITE = '0',\n  NONCE_HIGH = '1',\n  NONCE_LOW = '2',\n  ANCESTOR_CHAIN_BIT = '3',\n  TOP_LEVEL_SITE_OPAQUE_NONCE_HIGH = '4',\n  TOP_LEVEL_SITE_OPAQUE_NONCE_LOW = '5',\n  TOP_LEVEL_SITE_OPAQUE_NONCE_PRECURSOR = '6',\n}\n\nexport interface StorageKey {\n  origin: Platform.DevToolsPath.UrlString;\n  components: Map<StorageKeyComponent, string>;\n}\n\nexport const enum Events {\n  STORAGE_KEY_ADDED = 'StorageKeyAdded',\n  STORAGE_KEY_REMOVED = 'StorageKeyRemoved',\n  MAIN_STORAGE_KEY_CHANGED = 'MainStorageKeyChanged',\n}\n\nexport interface MainStorageKeyChangedEvent {\n  mainStorageKey: string;\n}\n\nexport type EventTypes = {\n  [Events.STORAGE_KEY_ADDED]: string,\n  [Events.STORAGE_KEY_REMOVED]: string,\n  [Events.MAIN_STORAGE_KEY_CHANGED]: MainStorageKeyChangedEvent,\n};\n\n// TODO(jarhar): this is the one of the two usages of Capability.None. Do something about it!\nSDKModel.register(StorageKeyManager, {capabilities: Capability.NONE, autostart: false});\n"],
  "mappings": ";AAIA,SAAQ,kBAA8B;AACtC,SAAQ,gBAAe;AACvB,YAAY,YAAY;AAGjB,aAAM,0BAA0B,SAAqB;AAAA,EAC1D;AAAA,EACA;AAAA,EACA,YAAY,QAAgB;AAC1B,UAAM,MAAM;AAEZ,SAAK,0BAA0B;AAC/B,SAAK,uBAAuB,oBAAI,IAAI;AAAA,EACtC;AAAA,EAEA,kBAAkB,aAAgC;AAChD,UAAM,iBAAiB,KAAK;AAC5B,SAAK,uBAAuB;AAE5B,eAAW,cAAc,gBAAgB;AACvC,UAAI,CAAC,KAAK,qBAAqB,IAAI,UAAU,GAAG;AAC9C,aAAK,yBAAyB,+CAA4B,UAAU;AAAA,MACtE;AAAA,IACF;AAEA,eAAW,cAAc,KAAK,sBAAsB;AAClD,UAAI,CAAC,eAAe,IAAI,UAAU,GAAG;AACnC,aAAK,yBAAyB,2CAA0B,UAAU;AAAA,MACpE;AAAA,IACF;AAAA,EACF;AAAA,EAEA,cAAwB;AACtB,WAAO,CAAC,GAAG,KAAK,oBAAoB;AAAA,EACtC;AAAA,EAEA,iBAAyB;AACvB,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,kBAAkB,YAA0B;AAC1C,SAAK,0BAA0B;AAC/B,SAAK,yBAAyB,wDAAiC;AAAA,MAC7D,gBAAgB,KAAK;AAAA,IACvB,CAAC;AAAA,EACH;AACF;AAEO,gBAAS,gBAAgB,kBAAsC;AAGpE,QAAM,aAAa,iBAAiB,MAAM,GAAG;AAC7C,QAAM,SAAS,OAAO,UAAU,UAAU,cAAc,WAAW,CAAC,CAAoC;AACxG,QAAM,aAAa,EAAC,QAAQ,YAAY,oBAAI,IAAiC,EAAC;AAC9E,WAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,EAAE,GAAG;AAC1C,eAAW,WAAW,IAAI,WAAW,CAAC,EAAE,OAAO,CAAC,GAA0B,WAAW,CAAC,EAAE,UAAU,CAAC,CAAC;AAAA,EACtG;AACA,SAAO;AACT;AAEO,WAAW,sBAAX,kBAAWA,yBAAX;AACL,EAAAA,qBAAA,oBAAiB;AACjB,EAAAA,qBAAA,gBAAa;AACb,EAAAA,qBAAA,eAAY;AACZ,EAAAA,qBAAA,wBAAqB;AACrB,EAAAA,qBAAA,sCAAmC;AACnC,EAAAA,qBAAA,qCAAkC;AAClC,EAAAA,qBAAA,2CAAwC;AAPxB,SAAAA;AAAA,GAAA;AAeX,WAAW,SAAX,kBAAWC,YAAX;AACL,EAAAA,QAAA,uBAAoB;AACpB,EAAAA,QAAA,yBAAsB;AACtB,EAAAA,QAAA,8BAA2B;AAHX,SAAAA;AAAA,GAAA;AAiBlB,SAAS,SAAS,mBAAmB,EAAC,cAAc,WAAW,MAAM,WAAW,MAAK,CAAC;",
  "names": ["StorageKeyComponent", "Events"]
}
