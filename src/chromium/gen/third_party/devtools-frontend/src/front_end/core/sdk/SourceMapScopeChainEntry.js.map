{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/core/sdk/SourceMapScopeChainEntry.ts"],
  "sourcesContent": ["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../../generated/protocol.js';\nimport * as i18n from '../i18n/i18n.js';\n\nimport type {CallFrame, LocationRange, ScopeChainEntry} from './DebuggerModel.js';\nimport {type GetPropertiesResult, type RemoteObject, RemoteObjectImpl, RemoteObjectProperty} from './RemoteObject.js';\nimport type {GeneratedRange, OriginalScope} from './SourceMapScopes.js';\nimport {contains} from './SourceMapScopesInfo.js';\n\nconst UIStrings = {\n  /**\n   *@description Title of a section in the debugger showing local JavaScript variables.\n   */\n  local: 'Local',\n  /**\n   *@description Text that refers to closure as a programming term\n   */\n  closure: 'Closure',\n  /**\n   *@description Noun that represents a section or block of code in the Debugger Model. Shown in the Sources tab, while paused on a breakpoint.\n   */\n  block: 'Block',\n  /**\n   *@description Title of a section in the debugger showing JavaScript variables from the global scope.\n   */\n  global: 'Global',\n  /**\n   *@description Text in Scope Chain Sidebar Pane of the Sources panel\n   */\n  returnValue: 'Return value',\n};\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/SourceMapScopeChainEntry.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class SourceMapScopeChainEntry implements ScopeChainEntry {\n  readonly #callFrame: CallFrame;\n  readonly #scope: OriginalScope;\n  readonly #range?: GeneratedRange;\n  readonly #isInnerMostFunction: boolean;\n  readonly #returnValue?: RemoteObject;\n\n  /**\n   * @param isInnerMostFunction If `scope` is the innermost 'function' scope. Only used for labeling as we name the\n   * scope of the paused function 'Local', while other outer 'function' scopes are named 'Closure'.\n   */\n  constructor(\n      callFrame: CallFrame, scope: OriginalScope, range: GeneratedRange|undefined, isInnerMostFunction: boolean,\n      returnValue: RemoteObject|undefined) {\n    this.#callFrame = callFrame;\n    this.#scope = scope;\n    this.#range = range;\n    this.#isInnerMostFunction = isInnerMostFunction;\n    this.#returnValue = returnValue;\n  }\n\n  extraProperties(): RemoteObjectProperty[] {\n    if (this.#returnValue) {\n      return [new RemoteObjectProperty(\n          i18nString(UIStrings.returnValue), this.#returnValue, undefined, undefined, undefined, undefined, undefined,\n          /* synthetic */ true)];\n    }\n    return [];\n  }\n\n  callFrame(): CallFrame {\n    return this.#callFrame;\n  }\n\n  type(): string {\n    switch (this.#scope.kind) {\n      case 'global':\n        return Protocol.Debugger.ScopeType.Global;\n      case 'function':\n        return this.#isInnerMostFunction ? Protocol.Debugger.ScopeType.Local : Protocol.Debugger.ScopeType.Closure;\n      case 'block':\n        return Protocol.Debugger.ScopeType.Block;\n    }\n    return this.#scope.kind ?? '';\n  }\n\n  typeName(): string {\n    switch (this.#scope.kind) {\n      case 'global':\n        return i18nString(UIStrings.global);\n      case 'function':\n        return this.#isInnerMostFunction ? i18nString(UIStrings.local) : i18nString(UIStrings.closure);\n      case 'block':\n        return i18nString(UIStrings.block);\n    }\n    return this.#scope.kind ?? '';\n  }\n\n  name(): string|undefined {\n    return this.#scope.name;\n  }\n\n  range(): LocationRange|null {\n    return null;\n  }\n\n  object(): RemoteObject {\n    return new SourceMapScopeRemoteObject(this.#callFrame, this.#scope, this.#range);\n  }\n\n  description(): string {\n    return '';\n  }\n\n  icon(): string|undefined {\n    return undefined;\n  }\n}\n\nclass SourceMapScopeRemoteObject extends RemoteObjectImpl {\n  readonly #callFrame: CallFrame;\n  readonly #scope: OriginalScope;\n  readonly #range?: GeneratedRange;\n\n  constructor(callFrame: CallFrame, scope: OriginalScope, range: GeneratedRange|undefined) {\n    super(\n        callFrame.debuggerModel.runtimeModel(), /* objectId */ undefined, 'object', /* sub type */ undefined,\n        /* value */ null);\n    this.#callFrame = callFrame;\n    this.#scope = scope;\n    this.#range = range;\n  }\n\n  override async doGetProperties(_ownProperties: boolean, accessorPropertiesOnly: boolean, generatePreview: boolean):\n      Promise<GetPropertiesResult> {\n    if (accessorPropertiesOnly) {\n      return {properties: [], internalProperties: []};\n    }\n\n    const properties: RemoteObjectProperty[] = [];\n    for (const [index, variable] of this.#scope.variables.entries()) {\n      const expression = this.#findExpression(index);\n      if (expression === null) {\n        properties.push(SourceMapScopeRemoteObject.#unavailableProperty(variable));\n        continue;\n      }\n\n      // TODO(crbug.com/40277685): Once we can evaluate expressions in scopes other than the innermost one,\n      //         we need to find the find the CDP scope that matches `this.#range` and evaluate in that.\n      const result = await this.#callFrame.evaluate({expression, generatePreview});\n      if ('error' in result || result.exceptionDetails) {\n        // TODO(crbug.com/40277685): Make these errors user-visible to aid tooling developers.\n        //         E.g. show the error on hover or expose it in the developer resources panel.\n        properties.push(SourceMapScopeRemoteObject.#unavailableProperty(variable));\n      } else {\n        properties.push(new RemoteObjectProperty(\n            variable, result.object, /* enumerable */ false, /* writable */ false, /* isOwn */ true,\n            /* wasThrown */ false));\n      }\n    }\n\n    return {properties, internalProperties: []};\n  }\n\n  /** @returns null if the variable is unavailable at the current paused location */\n  #findExpression(index: number): string|null {\n    if (!this.#range) {\n      return null;\n    }\n\n    const expressionOrSubRanges = this.#range.values[index];\n    if (typeof expressionOrSubRanges === 'string') {\n      return expressionOrSubRanges;\n    }\n    if (expressionOrSubRanges === undefined) {\n      return null;\n    }\n\n    const pausedPosition = this.#callFrame.location();\n    for (const range of expressionOrSubRanges) {\n      if (contains({start: range.from, end: range.to}, pausedPosition.lineNumber, pausedPosition.columnNumber)) {\n        return range.value ?? null;\n      }\n    }\n    return null;\n  }\n\n  static #unavailableProperty(name: string): RemoteObjectProperty {\n    return new RemoteObjectProperty(\n        name, null, /* enumerable */ false, /* writeable */ false, /* isOwn */ true, /* wasThrown */ false);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
