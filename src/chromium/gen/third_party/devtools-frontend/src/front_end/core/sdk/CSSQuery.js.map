{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/core/sdk/CSSQuery.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport type * as TextUtils from '../../models/text_utils/text_utils.js';\n\nimport {CSSLocation, type CSSModel, type Edit} from './CSSModel.js';\nimport type {CSSStyleSheetHeader} from './CSSStyleSheetHeader.js';\n\ntype CSSQueryPayload =\n    Protocol.CSS.CSSMedia|Protocol.CSS.CSSContainerQuery|Protocol.CSS.CSSSupports|Protocol.CSS.CSSScope;\n\nexport abstract class CSSQuery {\n  text = '';\n  range?: TextUtils.TextRange.TextRange|null;\n  styleSheetId?: Protocol.CSS.StyleSheetId;\n  protected cssModel: CSSModel;\n\n  constructor(cssModel: CSSModel) {\n    this.cssModel = cssModel;\n  }\n\n  protected abstract reinitialize(payload: CSSQueryPayload): void;\n\n  abstract active(): boolean;\n\n  rebase(edit: Edit): void {\n    if (this.styleSheetId !== edit.styleSheetId || !this.range) {\n      return;\n    }\n    if (edit.oldRange.equal(this.range)) {\n      this.reinitialize(edit.payload as CSSQueryPayload);\n    } else {\n      this.range = this.range.rebaseAfterTextEdit(edit.oldRange, edit.newRange);\n    }\n  }\n\n  equal(other: CSSQuery): boolean {\n    if (!this.styleSheetId || !this.range || !other.range) {\n      return false;\n    }\n    return this.styleSheetId === other.styleSheetId && this.range.equal(other.range);\n  }\n\n  lineNumberInSource(): number|undefined {\n    if (!this.range) {\n      return undefined;\n    }\n    return this.header()?.lineNumberInSource(this.range.startLine);\n  }\n\n  columnNumberInSource(): number|undefined {\n    if (!this.range) {\n      return undefined;\n    }\n    return this.header()?.columnNumberInSource(this.range.startLine, this.range.startColumn);\n  }\n\n  header(): CSSStyleSheetHeader|null {\n    return this.styleSheetId ? this.cssModel.styleSheetHeaderForId(this.styleSheetId) : null;\n  }\n\n  rawLocation(): CSSLocation|null {\n    const header = this.header();\n    if (!header || this.lineNumberInSource() === undefined) {\n      return null;\n    }\n    const lineNumber = Number(this.lineNumberInSource());\n    return new CSSLocation(header, lineNumber, this.columnNumberInSource());\n  }\n}\n"],
  "mappings": ";AAOA,SAAQ,mBAA4C;AAM7C,aAAe,SAAS;AAAA,EAC7B,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACU;AAAA,EAEV,YAAY,UAAoB;AAC9B,SAAK,WAAW;AAAA,EAClB;AAAA,EAMA,OAAO,MAAkB;AACvB,QAAI,KAAK,iBAAiB,KAAK,gBAAgB,CAAC,KAAK,OAAO;AAC1D;AAAA,IACF;AACA,QAAI,KAAK,SAAS,MAAM,KAAK,KAAK,GAAG;AACnC,WAAK,aAAa,KAAK,OAA0B;AAAA,IACnD,OAAO;AACL,WAAK,QAAQ,KAAK,MAAM,oBAAoB,KAAK,UAAU,KAAK,QAAQ;AAAA,IAC1E;AAAA,EACF;AAAA,EAEA,MAAM,OAA0B;AAC9B,QAAI,CAAC,KAAK,gBAAgB,CAAC,KAAK,SAAS,CAAC,MAAM,OAAO;AACrD,aAAO;AAAA,IACT;AACA,WAAO,KAAK,iBAAiB,MAAM,gBAAgB,KAAK,MAAM,MAAM,MAAM,KAAK;AAAA,EACjF;AAAA,EAEA,qBAAuC;AACrC,QAAI,CAAC,KAAK,OAAO;AACf,aAAO;AAAA,IACT;AACA,WAAO,KAAK,OAAO,GAAG,mBAAmB,KAAK,MAAM,SAAS;AAAA,EAC/D;AAAA,EAEA,uBAAyC;AACvC,QAAI,CAAC,KAAK,OAAO;AACf,aAAO;AAAA,IACT;AACA,WAAO,KAAK,OAAO,GAAG,qBAAqB,KAAK,MAAM,WAAW,KAAK,MAAM,WAAW;AAAA,EACzF;AAAA,EAEA,SAAmC;AACjC,WAAO,KAAK,eAAe,KAAK,SAAS,sBAAsB,KAAK,YAAY,IAAI;AAAA,EACtF;AAAA,EAEA,cAAgC;AAC9B,UAAM,SAAS,KAAK,OAAO;AAC3B,QAAI,CAAC,UAAU,KAAK,mBAAmB,MAAM,QAAW;AACtD,aAAO;AAAA,IACT;AACA,UAAM,aAAa,OAAO,KAAK,mBAAmB,CAAC;AACnD,WAAO,IAAI,YAAY,QAAQ,YAAY,KAAK,qBAAqB,CAAC;AAAA,EACxE;AACF;",
  "names": []
}
