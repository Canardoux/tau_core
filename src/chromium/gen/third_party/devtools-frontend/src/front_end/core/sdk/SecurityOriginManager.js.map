{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/core/sdk/SecurityOriginManager.ts"],
  "sourcesContent": ["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {Capability, type Target} from './Target.js';\nimport {SDKModel} from './SDKModel.js';\n\nexport class SecurityOriginManager extends SDKModel<EventTypes> {\n  #mainSecurityOriginInternal: string;\n  #unreachableMainSecurityOriginInternal: string|null;\n  #securityOriginsInternal: Set<string>;\n  constructor(target: Target) {\n    super(target);\n\n    // if a URL is unreachable, the browser will jump to an error page at\n    // 'chrome-error://chromewebdata/', and |this.#mainSecurityOriginInternal| stores\n    // its origin. In this situation, the original unreachable URL's security\n    // origin will be stored in |this.#unreachableMainSecurityOriginInternal|.\n    this.#mainSecurityOriginInternal = '';\n    this.#unreachableMainSecurityOriginInternal = '';\n\n    this.#securityOriginsInternal = new Set();\n  }\n\n  updateSecurityOrigins(securityOrigins: Set<string>): void {\n    const oldOrigins = this.#securityOriginsInternal;\n    this.#securityOriginsInternal = securityOrigins;\n\n    for (const origin of oldOrigins) {\n      if (!this.#securityOriginsInternal.has(origin)) {\n        this.dispatchEventToListeners(Events.SecurityOriginRemoved, origin);\n      }\n    }\n\n    for (const origin of this.#securityOriginsInternal) {\n      if (!oldOrigins.has(origin)) {\n        this.dispatchEventToListeners(Events.SecurityOriginAdded, origin);\n      }\n    }\n  }\n\n  securityOrigins(): string[] {\n    return [...this.#securityOriginsInternal];\n  }\n\n  mainSecurityOrigin(): string {\n    return this.#mainSecurityOriginInternal;\n  }\n\n  unreachableMainSecurityOrigin(): string|null {\n    return this.#unreachableMainSecurityOriginInternal;\n  }\n\n  setMainSecurityOrigin(securityOrigin: string, unreachableSecurityOrigin: string): void {\n    this.#mainSecurityOriginInternal = securityOrigin;\n    this.#unreachableMainSecurityOriginInternal = unreachableSecurityOrigin || null;\n    this.dispatchEventToListeners(Events.MainSecurityOriginChanged, {\n      mainSecurityOrigin: this.#mainSecurityOriginInternal,\n      unreachableMainSecurityOrigin: this.#unreachableMainSecurityOriginInternal,\n    });\n  }\n}\n\nexport enum Events {\n  /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n  SecurityOriginAdded = 'SecurityOriginAdded',\n  SecurityOriginRemoved = 'SecurityOriginRemoved',\n  MainSecurityOriginChanged = 'MainSecurityOriginChanged',\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n\nexport interface MainSecurityOriginChangedEvent {\n  mainSecurityOrigin: string;\n  unreachableMainSecurityOrigin: string|null;\n}\n\nexport type EventTypes = {\n  [Events.SecurityOriginAdded]: string,\n  [Events.SecurityOriginRemoved]: string,\n  [Events.MainSecurityOriginChanged]: MainSecurityOriginChangedEvent,\n};\n\n// TODO(jarhar): this is the one of the two usages of Capability.None. Do something about it!\nSDKModel.register(SecurityOriginManager, {capabilities: Capability.NONE, autostart: false});\n"],
  "mappings": ";AAIA,SAAQ,kBAA8B;AACtC,SAAQ,gBAAe;AAEhB,aAAM,8BAA8B,SAAqB;AAAA,EAC9D;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY,QAAgB;AAC1B,UAAM,MAAM;AAMZ,SAAK,8BAA8B;AACnC,SAAK,yCAAyC;AAE9C,SAAK,2BAA2B,oBAAI,IAAI;AAAA,EAC1C;AAAA,EAEA,sBAAsB,iBAAoC;AACxD,UAAM,aAAa,KAAK;AACxB,SAAK,2BAA2B;AAEhC,eAAW,UAAU,YAAY;AAC/B,UAAI,CAAC,KAAK,yBAAyB,IAAI,MAAM,GAAG;AAC9C,aAAK,yBAAyB,qDAA8B,MAAM;AAAA,MACpE;AAAA,IACF;AAEA,eAAW,UAAU,KAAK,0BAA0B;AAClD,UAAI,CAAC,WAAW,IAAI,MAAM,GAAG;AAC3B,aAAK,yBAAyB,iDAA4B,MAAM;AAAA,MAClE;AAAA,IACF;AAAA,EACF;AAAA,EAEA,kBAA4B;AAC1B,WAAO,CAAC,GAAG,KAAK,wBAAwB;AAAA,EAC1C;AAAA,EAEA,qBAA6B;AAC3B,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,gCAA6C;AAC3C,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,sBAAsB,gBAAwB,2BAAyC;AACrF,SAAK,8BAA8B;AACnC,SAAK,yCAAyC,6BAA6B;AAC3E,SAAK,yBAAyB,6DAAkC;AAAA,MAC9D,oBAAoB,KAAK;AAAA,MACzB,+BAA+B,KAAK;AAAA,IACtC,CAAC;AAAA,EACH;AACF;AAEO,WAAK,SAAL,kBAAKA,YAAL;AAEL,EAAAA,QAAA,yBAAsB;AACtB,EAAAA,QAAA,2BAAwB;AACxB,EAAAA,QAAA,+BAA4B;AAJlB,SAAAA;AAAA,GAAA;AAoBZ,SAAS,SAAS,uBAAuB,EAAC,cAAc,WAAW,MAAM,WAAW,MAAK,CAAC;",
  "names": ["Events"]
}
