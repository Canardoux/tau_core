{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/core/sdk/DOMModel.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2009, 2010 Google Inc. All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the #name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport * as Platform from '../platform/platform.js';\nimport * as Root from '../root/root.js';\n\nimport {CSSModel} from './CSSModel.js';\nimport {FrameManager} from './FrameManager.js';\nimport {OverlayModel} from './OverlayModel.js';\nimport {RemoteObject} from './RemoteObject.js';\nimport {ResourceTreeModel} from './ResourceTreeModel.js';\nimport {RuntimeModel} from './RuntimeModel.js';\nimport {SDKModel} from './SDKModel.js';\nimport {Capability, type Target} from './Target.js';\nimport {TargetManager} from './TargetManager.js';\n\nexport class DOMNode {\n  #domModelInternal: DOMModel;\n  #agent: ProtocolProxyApi.DOMApi;\n  ownerDocument!: DOMDocument|null;\n  #isInShadowTreeInternal!: boolean;\n  id!: Protocol.DOM.NodeId;\n  index: number|undefined;\n  #backendNodeIdInternal!: Protocol.DOM.BackendNodeId;\n  #nodeTypeInternal!: number;\n  #nodeNameInternal!: string;\n  #localNameInternal!: string;\n  nodeValueInternal!: string;\n  #pseudoTypeInternal!: Protocol.DOM.PseudoType|undefined;\n  #pseudoIdentifier?: string;\n  #shadowRootTypeInternal!: Protocol.DOM.ShadowRootType|undefined;\n  #frameOwnerFrameIdInternal!: Protocol.Page.FrameId|null;\n  #xmlVersion!: string|undefined;\n  #isSVGNodeInternal!: boolean;\n  #isScrollableInternal!: boolean;\n  #creationStackTraceInternal: Promise<Protocol.Runtime.StackTrace|null>|null;\n  #pseudoElements: Map<string, DOMNode[]>;\n  #distributedNodesInternal: DOMNodeShortcut[];\n  assignedSlot: DOMNodeShortcut|null;\n  readonly shadowRootsInternal: DOMNode[];\n  #attributesInternal: Map<string, Attribute>;\n  #markers: Map<string, unknown>;\n  #subtreeMarkerCount: number;\n  childNodeCountInternal!: number;\n  childrenInternal: DOMNode[]|null;\n  nextSibling: DOMNode|null;\n  previousSibling: DOMNode|null;\n  firstChild: DOMNode|null;\n  lastChild: DOMNode|null;\n  parentNode: DOMNode|null;\n  templateContentInternal?: DOMNode;\n  contentDocumentInternal?: DOMDocument;\n  childDocumentPromiseForTesting?: Promise<DOMDocument|null>;\n  #importedDocumentInternal?: DOMNode;\n  publicId?: string;\n  systemId?: string;\n  internalSubset?: string;\n  name?: string;\n  value?: string;\n\n  constructor(domModel: DOMModel) {\n    this.#domModelInternal = domModel;\n    this.#agent = this.#domModelInternal.getAgent();\n    this.index = undefined;\n    this.#creationStackTraceInternal = null;\n    this.#pseudoElements = new Map();\n    this.#distributedNodesInternal = [];\n    this.assignedSlot = null;\n    this.shadowRootsInternal = [];\n    this.#attributesInternal = new Map();\n    this.#markers = new Map();\n    this.#subtreeMarkerCount = 0;\n    this.childrenInternal = null;\n    this.nextSibling = null;\n    this.previousSibling = null;\n    this.firstChild = null;\n    this.lastChild = null;\n    this.parentNode = null;\n  }\n\n  static create(domModel: DOMModel, doc: DOMDocument|null, isInShadowTree: boolean, payload: Protocol.DOM.Node):\n      DOMNode {\n    const node = new DOMNode(domModel);\n    node.init(doc, isInShadowTree, payload);\n    return node;\n  }\n\n  init(doc: DOMDocument|null, isInShadowTree: boolean, payload: Protocol.DOM.Node): void {\n    this.#agent = this.#domModelInternal.getAgent();\n    this.ownerDocument = doc;\n    this.#isInShadowTreeInternal = isInShadowTree;\n\n    this.id = payload.nodeId;\n    this.#backendNodeIdInternal = payload.backendNodeId;\n    this.#domModelInternal.registerNode(this);\n    this.#nodeTypeInternal = payload.nodeType;\n    this.#nodeNameInternal = payload.nodeName;\n    this.#localNameInternal = payload.localName;\n    this.nodeValueInternal = payload.nodeValue;\n    this.#pseudoTypeInternal = payload.pseudoType;\n    this.#pseudoIdentifier = payload.pseudoIdentifier;\n    this.#shadowRootTypeInternal = payload.shadowRootType;\n    this.#frameOwnerFrameIdInternal = payload.frameId || null;\n    this.#xmlVersion = payload.xmlVersion;\n    this.#isSVGNodeInternal = Boolean(payload.isSVG);\n    this.#isScrollableInternal = Boolean(payload.isScrollable);\n\n    if (payload.attributes) {\n      this.setAttributesPayload(payload.attributes);\n    }\n\n    this.childNodeCountInternal = payload.childNodeCount || 0;\n    if (payload.shadowRoots) {\n      for (let i = 0; i < payload.shadowRoots.length; ++i) {\n        const root = payload.shadowRoots[i];\n        const node = DOMNode.create(this.#domModelInternal, this.ownerDocument, true, root);\n        this.shadowRootsInternal.push(node);\n        node.parentNode = this;\n      }\n    }\n\n    if (payload.templateContent) {\n      this.templateContentInternal =\n          DOMNode.create(this.#domModelInternal, this.ownerDocument, true, payload.templateContent);\n      this.templateContentInternal.parentNode = this;\n      this.childrenInternal = [];\n    }\n\n    const frameOwnerTags = new Set(['EMBED', 'IFRAME', 'OBJECT', 'FENCEDFRAME']);\n    if (payload.contentDocument) {\n      this.contentDocumentInternal = new DOMDocument(this.#domModelInternal, payload.contentDocument);\n      this.contentDocumentInternal.parentNode = this;\n      this.childrenInternal = [];\n    } else if (payload.frameId && frameOwnerTags.has(payload.nodeName)) {\n      // At this point we know we are in an OOPIF, otherwise `payload.contentDocument` would have been set.\n      this.childDocumentPromiseForTesting = this.requestChildDocument(payload.frameId, this.#domModelInternal.target());\n      this.childrenInternal = [];\n    }\n\n    if (payload.importedDocument) {\n      this.#importedDocumentInternal =\n          DOMNode.create(this.#domModelInternal, this.ownerDocument, true, payload.importedDocument);\n      this.#importedDocumentInternal.parentNode = this;\n      this.childrenInternal = [];\n    }\n\n    if (payload.distributedNodes) {\n      this.setDistributedNodePayloads(payload.distributedNodes);\n    }\n\n    if (payload.assignedSlot) {\n      this.setAssignedSlot(payload.assignedSlot);\n    }\n\n    if (payload.children) {\n      this.setChildrenPayload(payload.children);\n    }\n\n    this.setPseudoElements(payload.pseudoElements);\n\n    if (this.#nodeTypeInternal === Node.ELEMENT_NODE) {\n      // HTML and BODY from internal iframes should not overwrite top-level ones.\n      if (this.ownerDocument && !this.ownerDocument.documentElement && this.#nodeNameInternal === 'HTML') {\n        this.ownerDocument.documentElement = this;\n      }\n      if (this.ownerDocument && !this.ownerDocument.body && this.#nodeNameInternal === 'BODY') {\n        this.ownerDocument.body = this;\n      }\n    } else if (this.#nodeTypeInternal === Node.DOCUMENT_TYPE_NODE) {\n      this.publicId = payload.publicId;\n      this.systemId = payload.systemId;\n      this.internalSubset = payload.internalSubset;\n    } else if (this.#nodeTypeInternal === Node.ATTRIBUTE_NODE) {\n      this.name = payload.name;\n      this.value = payload.value;\n    }\n  }\n\n  private async requestChildDocument(frameId: Protocol.Page.FrameId, notInTarget: Target): Promise<DOMDocument|null> {\n    const frame = await FrameManager.instance().getOrWaitForFrame(frameId, notInTarget);\n    const childModel = frame.resourceTreeModel()?.target().model(DOMModel);\n    return childModel?.requestDocument() || null;\n  }\n\n  isAdFrameNode(): boolean {\n    if (this.isIframe() && this.#frameOwnerFrameIdInternal) {\n      const frame = FrameManager.instance().getFrame(this.#frameOwnerFrameIdInternal);\n      if (!frame) {\n        return false;\n      }\n      return frame.adFrameType() !== Protocol.Page.AdFrameType.None;\n    }\n    return false;\n  }\n\n  isSVGNode(): boolean {\n    return this.#isSVGNodeInternal;\n  }\n\n  isScrollable(): boolean {\n    return this.#isScrollableInternal;\n  }\n\n  isMediaNode(): boolean {\n    return this.#nodeNameInternal === 'AUDIO' || this.#nodeNameInternal === 'VIDEO';\n  }\n\n  isViewTransitionPseudoNode(): boolean {\n    if (!this.#pseudoTypeInternal) {\n      return false;\n    }\n\n    return [\n      Protocol.DOM.PseudoType.ViewTransition,\n      Protocol.DOM.PseudoType.ViewTransitionGroup,\n      Protocol.DOM.PseudoType.ViewTransitionImagePair,\n      Protocol.DOM.PseudoType.ViewTransitionOld,\n      Protocol.DOM.PseudoType.ViewTransitionNew,\n    ].includes(this.#pseudoTypeInternal);\n  }\n\n  creationStackTrace(): Promise<Protocol.Runtime.StackTrace|null> {\n    if (this.#creationStackTraceInternal) {\n      return this.#creationStackTraceInternal;\n    }\n\n    const stackTracesPromise = this.#agent.invoke_getNodeStackTraces({nodeId: this.id});\n    this.#creationStackTraceInternal = stackTracesPromise.then(res => res.creation || null);\n    return this.#creationStackTraceInternal;\n  }\n\n  get subtreeMarkerCount(): number {\n    return this.#subtreeMarkerCount;\n  }\n\n  domModel(): DOMModel {\n    return this.#domModelInternal;\n  }\n\n  backendNodeId(): Protocol.DOM.BackendNodeId {\n    return this.#backendNodeIdInternal;\n  }\n\n  children(): DOMNode[]|null {\n    return this.childrenInternal ? this.childrenInternal.slice() : null;\n  }\n\n  setChildren(children: DOMNode[]): void {\n    this.childrenInternal = children;\n  }\n\n  setIsScrollable(isScrollable: boolean): void {\n    this.#isScrollableInternal = isScrollable;\n  }\n\n  hasAttributes(): boolean {\n    return this.#attributesInternal.size > 0;\n  }\n\n  childNodeCount(): number {\n    return this.childNodeCountInternal;\n  }\n\n  setChildNodeCount(childNodeCount: number): void {\n    this.childNodeCountInternal = childNodeCount;\n  }\n\n  hasShadowRoots(): boolean {\n    return Boolean(this.shadowRootsInternal.length);\n  }\n\n  shadowRoots(): DOMNode[] {\n    return this.shadowRootsInternal.slice();\n  }\n\n  templateContent(): DOMNode|null {\n    return this.templateContentInternal || null;\n  }\n\n  contentDocument(): DOMDocument|null {\n    return this.contentDocumentInternal || null;\n  }\n\n  setContentDocument(node: DOMDocument): void {\n    this.contentDocumentInternal = node;\n  }\n\n  isIframe(): boolean {\n    return this.#nodeNameInternal === 'IFRAME';\n  }\n\n  importedDocument(): DOMNode|null {\n    return this.#importedDocumentInternal || null;\n  }\n\n  nodeType(): number {\n    return this.#nodeTypeInternal;\n  }\n\n  nodeName(): string {\n    return this.#nodeNameInternal;\n  }\n\n  pseudoType(): string|undefined {\n    return this.#pseudoTypeInternal;\n  }\n\n  pseudoIdentifier(): string|undefined {\n    return this.#pseudoIdentifier;\n  }\n\n  hasPseudoElements(): boolean {\n    return this.#pseudoElements.size > 0;\n  }\n\n  pseudoElements(): Map<string, DOMNode[]> {\n    return this.#pseudoElements;\n  }\n\n  beforePseudoElement(): DOMNode|undefined {\n    return this.#pseudoElements.get(Protocol.DOM.PseudoType.Before)?.at(-1);\n  }\n\n  afterPseudoElement(): DOMNode|undefined {\n    return this.#pseudoElements.get(Protocol.DOM.PseudoType.After)?.at(-1);\n  }\n\n  markerPseudoElement(): DOMNode|undefined {\n    return this.#pseudoElements.get(Protocol.DOM.PseudoType.Marker)?.at(-1);\n  }\n\n  backdropPseudoElement(): DOMNode|undefined {\n    return this.#pseudoElements.get(Protocol.DOM.PseudoType.Backdrop)?.at(-1);\n  }\n\n  viewTransitionPseudoElements(): DOMNode[] {\n    return [\n      ...this.#pseudoElements.get(Protocol.DOM.PseudoType.ViewTransition) || [],\n      ...this.#pseudoElements.get(Protocol.DOM.PseudoType.ViewTransitionGroup) || [],\n      ...this.#pseudoElements.get(Protocol.DOM.PseudoType.ViewTransitionImagePair) || [],\n      ...this.#pseudoElements.get(Protocol.DOM.PseudoType.ViewTransitionOld) || [],\n      ...this.#pseudoElements.get(Protocol.DOM.PseudoType.ViewTransitionNew) || [],\n    ];\n  }\n\n  hasAssignedSlot(): boolean {\n    return this.assignedSlot !== null;\n  }\n\n  isInsertionPoint(): boolean {\n    return !this.isXMLNode() &&\n        (this.#nodeNameInternal === 'SHADOW' || this.#nodeNameInternal === 'CONTENT' ||\n         this.#nodeNameInternal === 'SLOT');\n  }\n\n  distributedNodes(): DOMNodeShortcut[] {\n    return this.#distributedNodesInternal;\n  }\n\n  isInShadowTree(): boolean {\n    return this.#isInShadowTreeInternal;\n  }\n\n  ancestorShadowHost(): DOMNode|null {\n    const ancestorShadowRoot = this.ancestorShadowRoot();\n    return ancestorShadowRoot ? ancestorShadowRoot.parentNode : null;\n  }\n\n  ancestorShadowRoot(): DOMNode|null {\n    if (!this.#isInShadowTreeInternal) {\n      return null;\n    }\n\n    let current: (DOMNode|null) = (this as DOMNode | null);\n    while (current && !current.isShadowRoot()) {\n      current = current.parentNode;\n    }\n    return current;\n  }\n\n  ancestorUserAgentShadowRoot(): DOMNode|null {\n    const ancestorShadowRoot = this.ancestorShadowRoot();\n    if (!ancestorShadowRoot) {\n      return null;\n    }\n    return ancestorShadowRoot.shadowRootType() === DOMNode.ShadowRootTypes.UserAgent ? ancestorShadowRoot : null;\n  }\n\n  isShadowRoot(): boolean {\n    return Boolean(this.#shadowRootTypeInternal);\n  }\n\n  shadowRootType(): string|null {\n    return this.#shadowRootTypeInternal || null;\n  }\n\n  nodeNameInCorrectCase(): string {\n    const shadowRootType = this.shadowRootType();\n    if (shadowRootType) {\n      return '#shadow-root (' + shadowRootType + ')';\n    }\n\n    // If there is no local #name, it's case sensitive\n    if (!this.localName()) {\n      return this.nodeName();\n    }\n\n    // If the names are different lengths, there is a prefix and it's case sensitive\n    if (this.localName().length !== this.nodeName().length) {\n      return this.nodeName();\n    }\n\n    // Return the localname, which will be case insensitive if its an html node\n    return this.localName();\n  }\n\n  setNodeName(name: string, callback?: ((arg0: string|null, arg1: DOMNode|null) => void)): void {\n    void this.#agent.invoke_setNodeName({nodeId: this.id, name}).then(response => {\n      if (!response.getError()) {\n        this.#domModelInternal.markUndoableState();\n      }\n      if (callback) {\n        callback(response.getError() || null, this.#domModelInternal.nodeForId(response.nodeId));\n      }\n    });\n  }\n\n  localName(): string {\n    return this.#localNameInternal;\n  }\n\n  nodeValue(): string {\n    return this.nodeValueInternal;\n  }\n\n  setNodeValueInternal(nodeValue: string): void {\n    this.nodeValueInternal = nodeValue;\n  }\n\n  setNodeValue(value: string, callback?: ((arg0: string|null) => void)): void {\n    void this.#agent.invoke_setNodeValue({nodeId: this.id, value}).then(response => {\n      if (!response.getError()) {\n        this.#domModelInternal.markUndoableState();\n      }\n      if (callback) {\n        callback(response.getError() || null);\n      }\n    });\n  }\n\n  getAttribute(name: string): string|undefined {\n    const attr = this.#attributesInternal.get(name);\n    return attr ? attr.value : undefined;\n  }\n\n  setAttribute(name: string, text: string, callback?: ((arg0: string|null) => void)): void {\n    void this.#agent.invoke_setAttributesAsText({nodeId: this.id, text, name}).then(response => {\n      if (!response.getError()) {\n        this.#domModelInternal.markUndoableState();\n      }\n      if (callback) {\n        callback(response.getError() || null);\n      }\n    });\n  }\n\n  setAttributeValue(name: string, value: string, callback?: ((arg0: string|null) => void)): void {\n    void this.#agent.invoke_setAttributeValue({nodeId: this.id, name, value}).then(response => {\n      if (!response.getError()) {\n        this.#domModelInternal.markUndoableState();\n      }\n      if (callback) {\n        callback(response.getError() || null);\n      }\n    });\n  }\n\n  setAttributeValuePromise(name: string, value: string): Promise<string|null> {\n    return new Promise(fulfill => this.setAttributeValue(name, value, fulfill));\n  }\n\n  attributes(): Attribute[] {\n    return [...this.#attributesInternal.values()];\n  }\n\n  async removeAttribute(name: string): Promise<void> {\n    const response = await this.#agent.invoke_removeAttribute({nodeId: this.id, name});\n    if (response.getError()) {\n      return;\n    }\n    this.#attributesInternal.delete(name);\n    this.#domModelInternal.markUndoableState();\n  }\n\n  getChildNodesPromise(): Promise<DOMNode[]|null> {\n    return new Promise(resolve => {\n      return this.getChildNodes(childNodes => resolve(childNodes));\n    });\n  }\n\n  getChildNodes(callback: (arg0: Array<DOMNode>|null) => void): void {\n    if (this.childrenInternal) {\n      callback(this.children());\n      return;\n    }\n    void this.#agent.invoke_requestChildNodes({nodeId: this.id}).then(response => {\n      callback(response.getError() ? null : this.children());\n    });\n  }\n\n  async getSubtree(depth: number, pierce: boolean): Promise<DOMNode[]|null> {\n    const response = await this.#agent.invoke_requestChildNodes({nodeId: this.id, depth, pierce});\n    return response.getError() ? null : this.childrenInternal;\n  }\n\n  async getOuterHTML(): Promise<string|null> {\n    const {outerHTML} = await this.#agent.invoke_getOuterHTML({nodeId: this.id});\n    return outerHTML;\n  }\n\n  setOuterHTML(html: string, callback?: ((arg0: string|null) => void)): void {\n    void this.#agent.invoke_setOuterHTML({nodeId: this.id, outerHTML: html}).then(response => {\n      if (!response.getError()) {\n        this.#domModelInternal.markUndoableState();\n      }\n      if (callback) {\n        callback(response.getError() || null);\n      }\n    });\n  }\n\n  removeNode(callback?: ((arg0: string|null, arg1?: Protocol.DOM.NodeId|undefined) => void)): Promise<void> {\n    return this.#agent.invoke_removeNode({nodeId: this.id}).then(response => {\n      if (!response.getError()) {\n        this.#domModelInternal.markUndoableState();\n      }\n      if (callback) {\n        callback(response.getError() || null);\n      }\n    });\n  }\n\n  async copyNode(): Promise<string|null> {\n    const {outerHTML} = await this.#agent.invoke_getOuterHTML({nodeId: this.id});\n    if (outerHTML !== null) {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(outerHTML);\n    }\n    return outerHTML;\n  }\n\n  path(): string {\n    function getNodeKey(node: DOMNode): number|'u'|'a'|'d'|null {\n      if (!node.#nodeNameInternal.length) {\n        return null;\n      }\n      if (node.index !== undefined) {\n        return node.index;\n      }\n      if (!node.parentNode) {\n        return null;\n      }\n      if (node.isShadowRoot()) {\n        return node.shadowRootType() === DOMNode.ShadowRootTypes.UserAgent ? 'u' : 'a';\n      }\n      if (node.nodeType() === Node.DOCUMENT_NODE) {\n        return 'd';\n      }\n      return null;\n    }\n\n    const path = [];\n    let node: (DOMNode|null) = (this as DOMNode | null);\n    while (node) {\n      const key = getNodeKey(node);\n      if (key === null) {\n        break;\n      }\n\n      path.push([key, node.#nodeNameInternal]);\n      node = node.parentNode;\n    }\n    path.reverse();\n    return path.join(',');\n  }\n\n  isAncestor(node: DOMNode): boolean {\n    if (!node) {\n      return false;\n    }\n\n    let currentNode: (DOMNode|null) = node.parentNode;\n    while (currentNode) {\n      if (this === currentNode) {\n        return true;\n      }\n      currentNode = currentNode.parentNode;\n    }\n    return false;\n  }\n\n  isDescendant(descendant: DOMNode): boolean {\n    return descendant !== null && descendant.isAncestor(this);\n  }\n\n  frameOwnerFrameId(): Protocol.Page.FrameId|null {\n    return this.#frameOwnerFrameIdInternal;\n  }\n\n  frameId(): Protocol.Page.FrameId|null {\n    let node: DOMNode = this.parentNode || this;\n    while (!node.#frameOwnerFrameIdInternal && node.parentNode) {\n      node = node.parentNode;\n    }\n    return node.#frameOwnerFrameIdInternal;\n  }\n\n  setAttributesPayload(attrs: string[]): boolean {\n    let attributesChanged: true|boolean =\n        !this.#attributesInternal || attrs.length !== this.#attributesInternal.size * 2;\n    const oldAttributesMap = this.#attributesInternal || new Map();\n\n    this.#attributesInternal = new Map();\n\n    for (let i = 0; i < attrs.length; i += 2) {\n      const name = attrs[i];\n      const value = attrs[i + 1];\n      this.addAttribute(name, value);\n\n      if (attributesChanged) {\n        continue;\n      }\n\n      const oldAttribute = oldAttributesMap.get(name);\n      if (!oldAttribute || oldAttribute.value !== value) {\n        attributesChanged = true;\n      }\n    }\n    return attributesChanged;\n  }\n\n  insertChild(prev: DOMNode|undefined, payload: Protocol.DOM.Node): DOMNode {\n    if (!this.childrenInternal) {\n      throw new Error('DOMNode._children is expected to not be null.');\n    }\n    const node = DOMNode.create(this.#domModelInternal, this.ownerDocument, this.#isInShadowTreeInternal, payload);\n    this.childrenInternal.splice(prev ? this.childrenInternal.indexOf(prev) + 1 : 0, 0, node);\n    this.renumber();\n    return node;\n  }\n\n  removeChild(node: DOMNode): void {\n    const pseudoType = node.pseudoType();\n    if (pseudoType) {\n      const updatedPseudoElements = this.#pseudoElements.get(pseudoType)?.filter(element => element !== node);\n      if (updatedPseudoElements && updatedPseudoElements.length > 0) {\n        this.#pseudoElements.set(pseudoType, updatedPseudoElements);\n      } else {\n        this.#pseudoElements.delete(pseudoType);\n      }\n    } else {\n      const shadowRootIndex = this.shadowRootsInternal.indexOf(node);\n      if (shadowRootIndex !== -1) {\n        this.shadowRootsInternal.splice(shadowRootIndex, 1);\n      } else {\n        if (!this.childrenInternal) {\n          throw new Error('DOMNode._children is expected to not be null.');\n        }\n        if (this.childrenInternal.indexOf(node) === -1) {\n          throw new Error('DOMNode._children is expected to contain the node to be removed.');\n        }\n        this.childrenInternal.splice(this.childrenInternal.indexOf(node), 1);\n      }\n    }\n    node.parentNode = null;\n    this.#subtreeMarkerCount -= node.#subtreeMarkerCount;\n    if (node.#subtreeMarkerCount) {\n      this.#domModelInternal.dispatchEventToListeners(Events.MarkersChanged, this);\n    }\n    this.renumber();\n  }\n\n  setChildrenPayload(payloads: Protocol.DOM.Node[]): void {\n    this.childrenInternal = [];\n    for (let i = 0; i < payloads.length; ++i) {\n      const payload = payloads[i];\n      const node = DOMNode.create(this.#domModelInternal, this.ownerDocument, this.#isInShadowTreeInternal, payload);\n      this.childrenInternal.push(node);\n    }\n    this.renumber();\n  }\n\n  private setPseudoElements(payloads: Protocol.DOM.Node[]|undefined): void {\n    if (!payloads) {\n      return;\n    }\n\n    for (let i = 0; i < payloads.length; ++i) {\n      const node =\n          DOMNode.create(this.#domModelInternal, this.ownerDocument, this.#isInShadowTreeInternal, payloads[i]);\n      node.parentNode = this;\n      const pseudoType = node.pseudoType();\n      if (!pseudoType) {\n        throw new Error('DOMNode.pseudoType() is expected to be defined.');\n      }\n      const currentPseudoElements = this.#pseudoElements.get(pseudoType);\n      if (currentPseudoElements) {\n        currentPseudoElements.push(node);\n      } else {\n        this.#pseudoElements.set(pseudoType, [node]);\n      }\n    }\n  }\n\n  setDistributedNodePayloads(payloads: Protocol.DOM.BackendNode[]): void {\n    this.#distributedNodesInternal = [];\n    for (const payload of payloads) {\n      this.#distributedNodesInternal.push(new DOMNodeShortcut(\n          this.#domModelInternal.target(), payload.backendNodeId, payload.nodeType, payload.nodeName));\n    }\n  }\n\n  setAssignedSlot(payload: Protocol.DOM.BackendNode): void {\n    this.assignedSlot =\n        new DOMNodeShortcut(this.#domModelInternal.target(), payload.backendNodeId, payload.nodeType, payload.nodeName);\n  }\n\n  private renumber(): void {\n    if (!this.childrenInternal) {\n      throw new Error('DOMNode._children is expected to not be null.');\n    }\n    this.childNodeCountInternal = this.childrenInternal.length;\n    if (this.childNodeCountInternal === 0) {\n      this.firstChild = null;\n      this.lastChild = null;\n      return;\n    }\n    this.firstChild = this.childrenInternal[0];\n    this.lastChild = this.childrenInternal[this.childNodeCountInternal - 1];\n    for (let i = 0; i < this.childNodeCountInternal; ++i) {\n      const child = this.childrenInternal[i];\n      child.index = i;\n      child.nextSibling = i + 1 < this.childNodeCountInternal ? this.childrenInternal[i + 1] : null;\n      child.previousSibling = i - 1 >= 0 ? this.childrenInternal[i - 1] : null;\n      child.parentNode = this;\n    }\n  }\n\n  private addAttribute(name: string, value: string): void {\n    const attr = {name, value, _node: this};\n    this.#attributesInternal.set(name, attr);\n  }\n\n  setAttributeInternal(name: string, value: string): void {\n    const attr = this.#attributesInternal.get(name);\n    if (attr) {\n      attr.value = value;\n    } else {\n      this.addAttribute(name, value);\n    }\n  }\n\n  removeAttributeInternal(name: string): void {\n    this.#attributesInternal.delete(name);\n  }\n\n  copyTo(targetNode: DOMNode, anchorNode: DOMNode|null, callback?: ((arg0: string|null, arg1: DOMNode|null) => void)):\n      void {\n    void this.#agent\n        .invoke_copyTo(\n            {nodeId: this.id, targetNodeId: targetNode.id, insertBeforeNodeId: anchorNode ? anchorNode.id : undefined})\n        .then(response => {\n          if (!response.getError()) {\n            this.#domModelInternal.markUndoableState();\n          }\n          if (callback) {\n            callback(response.getError() || null, this.#domModelInternal.nodeForId(response.nodeId));\n          }\n        });\n  }\n\n  moveTo(targetNode: DOMNode, anchorNode: DOMNode|null, callback?: ((arg0: string|null, arg1: DOMNode|null) => void)):\n      void {\n    void this.#agent\n        .invoke_moveTo(\n            {nodeId: this.id, targetNodeId: targetNode.id, insertBeforeNodeId: anchorNode ? anchorNode.id : undefined})\n        .then(response => {\n          if (!response.getError()) {\n            this.#domModelInternal.markUndoableState();\n          }\n          if (callback) {\n            callback(response.getError() || null, this.#domModelInternal.nodeForId(response.nodeId));\n          }\n        });\n  }\n\n  isXMLNode(): boolean {\n    return Boolean(this.#xmlVersion);\n  }\n\n  setMarker(name: string, value: unknown): void {\n    if (value === null) {\n      if (!this.#markers.has(name)) {\n        return;\n      }\n\n      this.#markers.delete(name);\n      for (let node: (DOMNode|null) = (this as DOMNode | null); node; node = node.parentNode) {\n        --node.#subtreeMarkerCount;\n      }\n      for (let node: (DOMNode|null) = (this as DOMNode | null); node; node = node.parentNode) {\n        this.#domModelInternal.dispatchEventToListeners(Events.MarkersChanged, node);\n      }\n      return;\n    }\n\n    if (this.parentNode && !this.#markers.has(name)) {\n      for (let node: (DOMNode|null) = (this as DOMNode | null); node; node = node.parentNode) {\n        ++node.#subtreeMarkerCount;\n      }\n    }\n    this.#markers.set(name, value);\n    for (let node: (DOMNode|null) = (this as DOMNode | null); node; node = node.parentNode) {\n      this.#domModelInternal.dispatchEventToListeners(Events.MarkersChanged, node);\n    }\n  }\n\n  marker<T>(name: string): T|null {\n    return this.#markers.get(name) as T || null;\n  }\n\n  getMarkerKeysForTest(): string[] {\n    return [...this.#markers.keys()];\n  }\n\n  traverseMarkers(visitor: (arg0: DOMNode, arg1: string) => void): void {\n    function traverse(node: DOMNode): void {\n      if (!node.#subtreeMarkerCount) {\n        return;\n      }\n      for (const marker of node.#markers.keys()) {\n        visitor(node, marker);\n      }\n      if (!node.childrenInternal) {\n        return;\n      }\n      for (const child of node.childrenInternal) {\n        traverse(child);\n      }\n    }\n    traverse(this);\n  }\n\n  resolveURL(url: string): Platform.DevToolsPath.UrlString|null {\n    if (!url) {\n      return url as Platform.DevToolsPath.UrlString;\n    }\n    for (let frameOwnerCandidate: (DOMNode|null) = (this as DOMNode | null); frameOwnerCandidate;\n         frameOwnerCandidate = frameOwnerCandidate.parentNode) {\n      if (frameOwnerCandidate instanceof DOMDocument && frameOwnerCandidate.baseURL) {\n        return Common.ParsedURL.ParsedURL.completeURL(frameOwnerCandidate.baseURL, url);\n      }\n    }\n    return null;\n  }\n\n  highlight(mode?: string): void {\n    this.#domModelInternal.overlayModel().highlightInOverlay({node: this, selectorList: undefined}, mode);\n  }\n\n  highlightForTwoSeconds(): void {\n    this.#domModelInternal.overlayModel().highlightInOverlayForTwoSeconds({node: this, selectorList: undefined});\n  }\n\n  async resolveToObject(objectGroup?: string, executionContextId?: Protocol.Runtime.ExecutionContextId):\n      Promise<RemoteObject|null> {\n    const {object} = await this.#agent.invoke_resolveNode(\n        {nodeId: this.id, backendNodeId: undefined, executionContextId, objectGroup});\n    return object && this.#domModelInternal.runtimeModelInternal.createRemoteObject(object) || null;\n  }\n\n  async boxModel(): Promise<Protocol.DOM.BoxModel|null> {\n    const {model} = await this.#agent.invoke_getBoxModel({nodeId: this.id});\n    return model;\n  }\n\n  async setAsInspectedNode(): Promise<void> {\n    let node: (DOMNode|null)|DOMNode = (this as DOMNode | null);\n    if (node && node.pseudoType()) {\n      node = node.parentNode;\n    }\n    while (node) {\n      let ancestor = node.ancestorUserAgentShadowRoot();\n      if (!ancestor) {\n        break;\n      }\n      ancestor = node.ancestorShadowHost();\n      if (!ancestor) {\n        break;\n      }\n      // User #agent shadow root, keep climbing up.\n      node = ancestor;\n    }\n    if (!node) {\n      throw new Error('In DOMNode.setAsInspectedNode: node is expected to not be null.');\n    }\n    await this.#agent.invoke_setInspectedNode({nodeId: node.id});\n  }\n\n  enclosingElementOrSelf(): DOMNode|null {\n    let node: DOMNode|null|(DOMNode | null) = (this as DOMNode | null);\n    if (node && node.nodeType() === Node.TEXT_NODE && node.parentNode) {\n      node = node.parentNode;\n    }\n\n    if (node && node.nodeType() !== Node.ELEMENT_NODE) {\n      node = null;\n    }\n    return node;\n  }\n\n  async callFunction<T, U extends string|number>(fn: (this: HTMLElement, ...args: U[]) => T, args: U[] = []):\n      Promise<{value: T}|null> {\n    const object = await this.resolveToObject();\n    if (!object) {\n      return null;\n    }\n\n    const result = await object.callFunction(fn, args.map(arg => RemoteObject.toCallArgument(arg)));\n    object.release();\n    if (result.wasThrown || !result.object) {\n      return null;\n    }\n    return {\n      value: result.object.value as T,\n    };\n  }\n\n  async scrollIntoView(): Promise<void> {\n    const node = this.enclosingElementOrSelf();\n    if (!node) {\n      return;\n    }\n\n    const result = await node.callFunction(scrollIntoViewInPage);\n    if (!result) {\n      return;\n    }\n\n    node.highlightForTwoSeconds();\n\n    function scrollIntoViewInPage(this: Element): void {\n      this.scrollIntoViewIfNeeded(true);\n    }\n  }\n\n  async focus(): Promise<void> {\n    const node = this.enclosingElementOrSelf();\n    if (!node) {\n      throw new Error('DOMNode.focus expects node to not be null.');\n    }\n    const result = await node.callFunction(focusInPage);\n    if (!result) {\n      return;\n    }\n\n    node.highlightForTwoSeconds();\n    await this.#domModelInternal.target().pageAgent().invoke_bringToFront();\n\n    function focusInPage(this: HTMLElement): void {\n      this.focus();\n    }\n  }\n\n  simpleSelector(): string {\n    const lowerCaseName = this.localName() || this.nodeName().toLowerCase();\n    if (this.nodeType() !== Node.ELEMENT_NODE) {\n      return lowerCaseName;\n    }\n    const type = this.getAttribute('type');\n    const id = this.getAttribute('id');\n    const classes = this.getAttribute('class');\n\n    if (lowerCaseName === 'input' && type && !id && !classes) {\n      return lowerCaseName + '[type=\"' + CSS.escape(type) + '\"]';\n    }\n    if (id) {\n      return lowerCaseName + '#' + CSS.escape(id);\n    }\n    if (classes) {\n      const classList = classes.trim().split(/\\s+/g);\n      return (lowerCaseName === 'div' ? '' : lowerCaseName) + '.' + classList.map(cls => CSS.escape(cls)).join('.');\n    }\n    if (this.pseudoIdentifier()) {\n      return `${lowerCaseName}(${this.pseudoIdentifier()})`;\n    }\n    return lowerCaseName;\n  }\n\n  async getAnchorBySpecifier(specifier?: string): Promise<DOMNode|null> {\n    const response = await this.#agent.invoke_getAnchorElement({\n      nodeId: this.id,\n      anchorSpecifier: specifier,\n    });\n\n    if (response.getError()) {\n      return null;\n    }\n\n    return this.domModel().nodeForId(response.nodeId);\n  }\n}\n\nexport namespace DOMNode {\n  export enum ShadowRootTypes {\n    /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n    UserAgent = 'user-agent',\n    Open = 'open',\n    Closed = 'closed',\n    /* eslint-enable @typescript-eslint/naming-convention */\n  }\n}\n\nexport class DeferredDOMNode {\n  readonly #domModelInternal: DOMModel;\n  readonly #backendNodeIdInternal: Protocol.DOM.BackendNodeId;\n\n  constructor(target: Target, backendNodeId: Protocol.DOM.BackendNodeId) {\n    this.#domModelInternal = (target.model(DOMModel) as DOMModel);\n    this.#backendNodeIdInternal = backendNodeId;\n  }\n\n  resolve(callback: (arg0: DOMNode|null) => void): void {\n    void this.resolvePromise().then(callback);\n  }\n\n  async resolvePromise(): Promise<DOMNode|null> {\n    const nodeIds =\n        await this.#domModelInternal.pushNodesByBackendIdsToFrontend(new Set([this.#backendNodeIdInternal]));\n    return nodeIds && nodeIds.get(this.#backendNodeIdInternal) || null;\n  }\n\n  backendNodeId(): Protocol.DOM.BackendNodeId {\n    return this.#backendNodeIdInternal;\n  }\n\n  domModel(): DOMModel {\n    return this.#domModelInternal;\n  }\n\n  highlight(): void {\n    this.#domModelInternal.overlayModel().highlightInOverlay({deferredNode: this, selectorList: undefined});\n  }\n}\n\nexport class DOMNodeShortcut {\n  nodeType: number;\n  nodeName: string;\n  deferredNode: DeferredDOMNode;\n  constructor(target: Target, backendNodeId: Protocol.DOM.BackendNodeId, nodeType: number, nodeName: string) {\n    this.nodeType = nodeType;\n    this.nodeName = nodeName;\n    this.deferredNode = new DeferredDOMNode(target, backendNodeId);\n  }\n}\n\nexport class DOMDocument extends DOMNode {\n  body: DOMNode|null;\n  documentElement: DOMNode|null;\n  documentURL: Platform.DevToolsPath.UrlString;\n  baseURL: Platform.DevToolsPath.UrlString;\n  constructor(domModel: DOMModel, payload: Protocol.DOM.Node) {\n    super(domModel);\n    this.body = null;\n    this.documentElement = null;\n    this.init(this, false, payload);\n    this.documentURL = (payload.documentURL || '') as Platform.DevToolsPath.UrlString;\n    this.baseURL = (payload.baseURL || '') as Platform.DevToolsPath.UrlString;\n  }\n}\n\nexport class DOMModel extends SDKModel<EventTypes> {\n  agent: ProtocolProxyApi.DOMApi;\n  idToDOMNode: Map<Protocol.DOM.NodeId, DOMNode> = new Map();\n  #document: DOMDocument|null;\n  readonly #attributeLoadNodeIds: Set<Protocol.DOM.NodeId>;\n  readonly runtimeModelInternal: RuntimeModel;\n  #lastMutationId!: number;\n  #pendingDocumentRequestPromise: Promise<DOMDocument|null>|null;\n  #frameOwnerNode?: DOMNode|null;\n  #loadNodeAttributesTimeout?: number;\n  #searchId?: string;\n  constructor(target: Target) {\n    super(target);\n\n    this.agent = target.domAgent();\n\n    this.#document = null;\n    this.#attributeLoadNodeIds = new Set();\n    target.registerDOMDispatcher(new DOMDispatcher(this));\n    this.runtimeModelInternal = (target.model(RuntimeModel) as RuntimeModel);\n\n    this.#pendingDocumentRequestPromise = null;\n\n    if (!target.suspended()) {\n      void this.agent.invoke_enable({});\n    }\n\n    if (Root.Runtime.experiments.isEnabled('capture-node-creation-stacks')) {\n      void this.agent.invoke_setNodeStackTracesEnabled({enable: true});\n    }\n  }\n\n  runtimeModel(): RuntimeModel {\n    return this.runtimeModelInternal;\n  }\n\n  cssModel(): CSSModel {\n    return this.target().model(CSSModel) as CSSModel;\n  }\n\n  overlayModel(): OverlayModel {\n    return this.target().model(OverlayModel) as OverlayModel;\n  }\n\n  static cancelSearch(): void {\n    for (const domModel of TargetManager.instance().models(DOMModel)) {\n      domModel.cancelSearch();\n    }\n  }\n\n  private scheduleMutationEvent(node: DOMNode): void {\n    if (!this.hasEventListeners(Events.DOMMutated)) {\n      return;\n    }\n\n    this.#lastMutationId = (this.#lastMutationId || 0) + 1;\n    void Promise.resolve().then(callObserve.bind(this, node, this.#lastMutationId));\n\n    function callObserve(this: DOMModel, node: DOMNode, mutationId: number): void {\n      if (!this.hasEventListeners(Events.DOMMutated) || this.#lastMutationId !== mutationId) {\n        return;\n      }\n\n      this.dispatchEventToListeners(Events.DOMMutated, node);\n    }\n  }\n\n  requestDocument(): Promise<DOMDocument|null> {\n    if (this.#document) {\n      return Promise.resolve(this.#document);\n    }\n    if (!this.#pendingDocumentRequestPromise) {\n      this.#pendingDocumentRequestPromise = this.requestDocumentInternal();\n    }\n    return this.#pendingDocumentRequestPromise;\n  }\n\n  async getOwnerNodeForFrame(frameId: Protocol.Page.FrameId): Promise<DeferredDOMNode|null> {\n    // Returns an error if the frameId does not belong to the current target.\n    const response = await this.agent.invoke_getFrameOwner({frameId});\n    if (response.getError()) {\n      return null;\n    }\n    return new DeferredDOMNode(this.target(), response.backendNodeId);\n  }\n\n  private async requestDocumentInternal(): Promise<DOMDocument|null> {\n    const response = await this.agent.invoke_getDocument({});\n    if (response.getError()) {\n      return null;\n    }\n    const {root: documentPayload} = response;\n    this.#pendingDocumentRequestPromise = null;\n\n    if (documentPayload) {\n      this.setDocument(documentPayload);\n    }\n    if (!this.#document) {\n      console.error('No document');\n      return null;\n    }\n\n    const parentModel = this.parentModel();\n    if (parentModel && !this.#frameOwnerNode) {\n      await parentModel.requestDocument();\n      const mainFrame = this.target().model(ResourceTreeModel)?.mainFrame;\n      if (mainFrame) {\n        const response = await parentModel.agent.invoke_getFrameOwner({frameId: mainFrame.id});\n        if (!response.getError() && response.nodeId) {\n          this.#frameOwnerNode = parentModel.nodeForId(response.nodeId);\n        }\n      }\n    }\n\n    // Document could have been cleared by now.\n    if (this.#frameOwnerNode) {\n      const oldDocument = this.#frameOwnerNode.contentDocument();\n      this.#frameOwnerNode.setContentDocument(this.#document);\n      this.#frameOwnerNode.setChildren([]);\n      if (this.#document) {\n        this.#document.parentNode = this.#frameOwnerNode;\n        this.dispatchEventToListeners(Events.NodeInserted, this.#document);\n      } else if (oldDocument) {\n        this.dispatchEventToListeners(Events.NodeRemoved, {node: oldDocument, parent: this.#frameOwnerNode});\n      }\n    }\n    return this.#document;\n  }\n\n  existingDocument(): DOMDocument|null {\n    return this.#document;\n  }\n\n  async pushNodeToFrontend(objectId: Protocol.Runtime.RemoteObjectId): Promise<DOMNode|null> {\n    await this.requestDocument();\n    const {nodeId} = await this.agent.invoke_requestNode({objectId});\n    return nodeId ? this.nodeForId(nodeId) : null;\n  }\n\n  pushNodeByPathToFrontend(path: string): Promise<Protocol.DOM.NodeId|null> {\n    return this.requestDocument()\n        .then(() => this.agent.invoke_pushNodeByPathToFrontend({path}))\n        .then(({nodeId}) => nodeId);\n  }\n\n  async pushNodesByBackendIdsToFrontend(backendNodeIds: Set<Protocol.DOM.BackendNodeId>):\n      Promise<Map<Protocol.DOM.BackendNodeId, DOMNode|null>|null> {\n    await this.requestDocument();\n    const backendNodeIdsArray = [...backendNodeIds];\n    const {nodeIds} = await this.agent.invoke_pushNodesByBackendIdsToFrontend({backendNodeIds: backendNodeIdsArray});\n    if (!nodeIds) {\n      return null;\n    }\n    const map = new Map<Protocol.DOM.BackendNodeId, DOMNode|null>();\n    for (let i = 0; i < nodeIds.length; ++i) {\n      if (nodeIds[i]) {\n        map.set(backendNodeIdsArray[i], this.nodeForId(nodeIds[i]));\n      }\n    }\n    return map;\n  }\n\n  attributeModified(nodeId: Protocol.DOM.NodeId, name: string, value: string): void {\n    const node = this.idToDOMNode.get(nodeId);\n    if (!node) {\n      return;\n    }\n\n    node.setAttributeInternal(name, value);\n    this.dispatchEventToListeners(Events.AttrModified, {node, name});\n    this.scheduleMutationEvent(node);\n  }\n\n  attributeRemoved(nodeId: Protocol.DOM.NodeId, name: string): void {\n    const node = this.idToDOMNode.get(nodeId);\n    if (!node) {\n      return;\n    }\n    node.removeAttributeInternal(name);\n    this.dispatchEventToListeners(Events.AttrRemoved, {node, name});\n    this.scheduleMutationEvent(node);\n  }\n\n  inlineStyleInvalidated(nodeIds: Protocol.DOM.NodeId[]): void {\n    nodeIds.forEach(nodeId => this.#attributeLoadNodeIds.add(nodeId));\n    if (!this.#loadNodeAttributesTimeout) {\n      this.#loadNodeAttributesTimeout = window.setTimeout(this.loadNodeAttributes.bind(this), 20);\n    }\n  }\n\n  private loadNodeAttributes(): void {\n    this.#loadNodeAttributesTimeout = undefined;\n    for (const nodeId of this.#attributeLoadNodeIds) {\n      void this.agent.invoke_getAttributes({nodeId}).then(({attributes}) => {\n        if (!attributes) {\n          // We are calling loadNodeAttributes asynchronously, it is ok if node is not found.\n          return;\n        }\n        const node = this.idToDOMNode.get(nodeId);\n        if (!node) {\n          return;\n        }\n        if (node.setAttributesPayload(attributes)) {\n          this.dispatchEventToListeners(Events.AttrModified, {node, name: 'style'});\n          this.scheduleMutationEvent(node);\n        }\n      });\n    }\n    this.#attributeLoadNodeIds.clear();\n  }\n\n  characterDataModified(nodeId: Protocol.DOM.NodeId, newValue: string): void {\n    const node = this.idToDOMNode.get(nodeId);\n    if (!node) {\n      console.error('nodeId could not be resolved to a node');\n      return;\n    }\n    node.setNodeValueInternal(newValue);\n    this.dispatchEventToListeners(Events.CharacterDataModified, node);\n    this.scheduleMutationEvent(node);\n  }\n\n  nodeForId(nodeId: Protocol.DOM.NodeId|null): DOMNode|null {\n    return nodeId ? this.idToDOMNode.get(nodeId) || null : null;\n  }\n\n  documentUpdated(): void {\n    // If this frame doesn't have a document now,\n    // it means that its document is not requested yet and\n    // it will be requested when needed. (ex: setChildNodes event is received for the frame owner node)\n    // So, we don't need to request the document if we don't\n    // already have a document.\n    const alreadyHasDocument = Boolean(this.#document);\n    this.setDocument(null);\n    // If we have this.#pendingDocumentRequestPromise in flight,\n    // it will contain most recent result.\n    if (this.parentModel() && alreadyHasDocument && !this.#pendingDocumentRequestPromise) {\n      void this.requestDocument();\n    }\n  }\n\n  private setDocument(payload: Protocol.DOM.Node|null): void {\n    this.idToDOMNode = new Map();\n    if (payload && 'nodeId' in payload) {\n      this.#document = new DOMDocument(this, payload);\n    } else {\n      this.#document = null;\n    }\n    DOMModelUndoStack.instance().dispose(this);\n\n    if (!this.parentModel()) {\n      this.dispatchEventToListeners(Events.DocumentUpdated, this);\n    }\n  }\n\n  setDocumentForTest(document: Protocol.DOM.Node|null): void {\n    this.setDocument(document);\n  }\n\n  private setDetachedRoot(payload: Protocol.DOM.Node): void {\n    if (payload.nodeName === '#document') {\n      new DOMDocument(this, payload);\n    } else {\n      DOMNode.create(this, null, false, payload);\n    }\n  }\n\n  setChildNodes(parentId: Protocol.DOM.NodeId, payloads: Protocol.DOM.Node[]): void {\n    if (!parentId && payloads.length) {\n      this.setDetachedRoot(payloads[0]);\n      return;\n    }\n\n    const parent = this.idToDOMNode.get(parentId);\n    parent?.setChildrenPayload(payloads);\n  }\n\n  childNodeCountUpdated(nodeId: Protocol.DOM.NodeId, newValue: number): void {\n    const node = this.idToDOMNode.get(nodeId);\n    if (!node) {\n      console.error('nodeId could not be resolved to a node');\n      return;\n    }\n    node.setChildNodeCount(newValue);\n    this.dispatchEventToListeners(Events.ChildNodeCountUpdated, node);\n    this.scheduleMutationEvent(node);\n  }\n\n  childNodeInserted(parentId: Protocol.DOM.NodeId, prevId: Protocol.DOM.NodeId, payload: Protocol.DOM.Node): void {\n    const parent = this.idToDOMNode.get(parentId);\n    const prev = this.idToDOMNode.get(prevId);\n    if (!parent) {\n      console.error('parentId could not be resolved to a node');\n      return;\n    }\n    const node = parent.insertChild(prev, payload);\n    this.idToDOMNode.set(node.id, node);\n    this.dispatchEventToListeners(Events.NodeInserted, node);\n    this.scheduleMutationEvent(node);\n  }\n\n  childNodeRemoved(parentId: Protocol.DOM.NodeId, nodeId: Protocol.DOM.NodeId): void {\n    const parent = this.idToDOMNode.get(parentId);\n    const node = this.idToDOMNode.get(nodeId);\n    if (!parent || !node) {\n      console.error('parentId or nodeId could not be resolved to a node');\n      return;\n    }\n    parent.removeChild(node);\n    this.unbind(node);\n    this.dispatchEventToListeners(Events.NodeRemoved, {node, parent});\n    this.scheduleMutationEvent(node);\n  }\n\n  shadowRootPushed(hostId: Protocol.DOM.NodeId, root: Protocol.DOM.Node): void {\n    const host = this.idToDOMNode.get(hostId);\n    if (!host) {\n      return;\n    }\n    const node = DOMNode.create(this, host.ownerDocument, true, root);\n    node.parentNode = host;\n    this.idToDOMNode.set(node.id, node);\n    host.shadowRootsInternal.unshift(node);\n    this.dispatchEventToListeners(Events.NodeInserted, node);\n    this.scheduleMutationEvent(node);\n  }\n\n  shadowRootPopped(hostId: Protocol.DOM.NodeId, rootId: Protocol.DOM.NodeId): void {\n    const host = this.idToDOMNode.get(hostId);\n    if (!host) {\n      return;\n    }\n    const root = this.idToDOMNode.get(rootId);\n    if (!root) {\n      return;\n    }\n    host.removeChild(root);\n    this.unbind(root);\n    this.dispatchEventToListeners(Events.NodeRemoved, {node: root, parent: host});\n    this.scheduleMutationEvent(root);\n  }\n\n  pseudoElementAdded(parentId: Protocol.DOM.NodeId, pseudoElement: Protocol.DOM.Node): void {\n    const parent = this.idToDOMNode.get(parentId);\n    if (!parent) {\n      return;\n    }\n    const node = DOMNode.create(this, parent.ownerDocument, false, pseudoElement);\n    node.parentNode = parent;\n    this.idToDOMNode.set(node.id, node);\n    const pseudoType = node.pseudoType();\n    if (!pseudoType) {\n      throw new Error('DOMModel._pseudoElementAdded expects pseudoType to be defined.');\n    }\n    const currentPseudoElements = parent.pseudoElements().get(pseudoType);\n    if (currentPseudoElements) {\n      if (!pseudoType.startsWith('view-transition')) {\n        throw new Error(\n            'DOMModel.pseudoElementAdded expects parent to not already have this pseudo type added; only view-transition* pseudo elements can coexist under the same parent.');\n      }\n      currentPseudoElements.push(node);\n    } else {\n      parent.pseudoElements().set(pseudoType, [node]);\n    }\n    this.dispatchEventToListeners(Events.NodeInserted, node);\n    this.scheduleMutationEvent(node);\n  }\n\n  scrollableFlagUpdated(nodeId: Protocol.DOM.NodeId, isScrollable: boolean): void {\n    const node = this.nodeForId(nodeId);\n    if (!node || node.isScrollable() === isScrollable) {\n      return;\n    }\n    node.setIsScrollable(isScrollable);\n    this.dispatchEventToListeners(Events.ScrollableFlagUpdated, {node});\n  }\n\n  topLayerElementsUpdated(): void {\n    this.dispatchEventToListeners(Events.TopLayerElementsChanged);\n  }\n\n  pseudoElementRemoved(parentId: Protocol.DOM.NodeId, pseudoElementId: Protocol.DOM.NodeId): void {\n    const parent = this.idToDOMNode.get(parentId);\n    if (!parent) {\n      return;\n    }\n    const pseudoElement = this.idToDOMNode.get(pseudoElementId);\n    if (!pseudoElement) {\n      return;\n    }\n    parent.removeChild(pseudoElement);\n    this.unbind(pseudoElement);\n    this.dispatchEventToListeners(Events.NodeRemoved, {node: pseudoElement, parent});\n    this.scheduleMutationEvent(pseudoElement);\n  }\n\n  distributedNodesUpdated(insertionPointId: Protocol.DOM.NodeId, distributedNodes: Protocol.DOM.BackendNode[]): void {\n    const insertionPoint = this.idToDOMNode.get(insertionPointId);\n    if (!insertionPoint) {\n      return;\n    }\n    insertionPoint.setDistributedNodePayloads(distributedNodes);\n    this.dispatchEventToListeners(Events.DistributedNodesChanged, insertionPoint);\n    this.scheduleMutationEvent(insertionPoint);\n  }\n\n  private unbind(node: DOMNode): void {\n    this.idToDOMNode.delete(node.id);\n    const children = node.children();\n    for (let i = 0; children && i < children.length; ++i) {\n      this.unbind(children[i]);\n    }\n    for (let i = 0; i < node.shadowRootsInternal.length; ++i) {\n      this.unbind(node.shadowRootsInternal[i]);\n    }\n    const pseudoElements = node.pseudoElements();\n    for (const value of pseudoElements.values()) {\n      for (const pseudoElement of value) {\n        this.unbind(pseudoElement);\n      }\n    }\n    const templateContent = node.templateContent();\n    if (templateContent) {\n      this.unbind(templateContent);\n    }\n  }\n\n  async getNodesByStyle(\n      computedStyles: {\n        name: string,\n        value: string,\n      }[],\n      pierce: boolean = false): Promise<Protocol.DOM.NodeId[]> {\n    await this.requestDocument();\n    if (!this.#document) {\n      throw new Error('DOMModel.getNodesByStyle expects to have a document.');\n    }\n    const response =\n        await this.agent.invoke_getNodesForSubtreeByStyle({nodeId: this.#document.id, computedStyles, pierce});\n    if (response.getError()) {\n      throw response.getError();\n    }\n    return response.nodeIds;\n  }\n\n  async performSearch(query: string, includeUserAgentShadowDOM: boolean): Promise<number> {\n    const response = await this.agent.invoke_performSearch({query, includeUserAgentShadowDOM});\n    if (!response.getError()) {\n      this.#searchId = response.searchId;\n    }\n    return response.getError() ? 0 : response.resultCount;\n  }\n\n  async searchResult(index: number): Promise<DOMNode|null> {\n    if (!this.#searchId) {\n      return null;\n    }\n    const {nodeIds} =\n        await this.agent.invoke_getSearchResults({searchId: this.#searchId, fromIndex: index, toIndex: index + 1});\n    return nodeIds && nodeIds.length === 1 ? this.nodeForId(nodeIds[0]) : null;\n  }\n\n  private cancelSearch(): void {\n    if (!this.#searchId) {\n      return;\n    }\n    void this.agent.invoke_discardSearchResults({searchId: this.#searchId});\n    this.#searchId = undefined;\n  }\n\n  classNamesPromise(nodeId: Protocol.DOM.NodeId): Promise<string[]> {\n    return this.agent.invoke_collectClassNamesFromSubtree({nodeId}).then(({classNames}) => classNames || []);\n  }\n\n  querySelector(nodeId: Protocol.DOM.NodeId, selector: string): Promise<Protocol.DOM.NodeId|null> {\n    return this.agent.invoke_querySelector({nodeId, selector}).then(({nodeId}) => nodeId);\n  }\n\n  querySelectorAll(nodeId: Protocol.DOM.NodeId, selector: string): Promise<Protocol.DOM.NodeId[]|null> {\n    return this.agent.invoke_querySelectorAll({nodeId, selector}).then(({nodeIds}) => nodeIds);\n  }\n\n  getTopLayerElements(): Promise<Protocol.DOM.NodeId[]|null> {\n    return this.agent.invoke_getTopLayerElements().then(({nodeIds}) => nodeIds);\n  }\n\n  getDetachedDOMNodes(): Promise<Protocol.DOM.DetachedElementInfo[]|null> {\n    return this.agent.invoke_getDetachedDomNodes().then(({detachedNodes}) => detachedNodes);\n  }\n\n  getElementByRelation(nodeId: Protocol.DOM.NodeId, relation: Protocol.DOM.GetElementByRelationRequestRelation):\n      Promise<Protocol.DOM.NodeId|null> {\n    return this.agent.invoke_getElementByRelation({nodeId, relation}).then(({nodeId}) => nodeId);\n  }\n\n  markUndoableState(minorChange?: boolean): void {\n    void DOMModelUndoStack.instance().markUndoableState(this, minorChange || false);\n  }\n\n  async nodeForLocation(x: number, y: number, includeUserAgentShadowDOM: boolean): Promise<DOMNode|null> {\n    const response = await this.agent.invoke_getNodeForLocation({x, y, includeUserAgentShadowDOM});\n    if (response.getError() || !response.nodeId) {\n      return null;\n    }\n    return this.nodeForId(response.nodeId);\n  }\n\n  async getContainerForNode(\n      nodeId: Protocol.DOM.NodeId, containerName?: string, physicalAxes?: Protocol.DOM.PhysicalAxes,\n      logicalAxes?: Protocol.DOM.LogicalAxes, queriesScrollState?: boolean): Promise<DOMNode|null> {\n    const {nodeId: containerNodeId} = await this.agent.invoke_getContainerForNode(\n        {nodeId, containerName, physicalAxes, logicalAxes, queriesScrollState});\n    if (!containerNodeId) {\n      return null;\n    }\n    return this.nodeForId(containerNodeId);\n  }\n\n  pushObjectAsNodeToFrontend(object: RemoteObject): Promise<DOMNode|null> {\n    return object.isNode() && object.objectId ? this.pushNodeToFrontend(object.objectId) : Promise.resolve(null);\n  }\n\n  override suspendModel(): Promise<void> {\n    return this.agent.invoke_disable().then(() => this.setDocument(null));\n  }\n\n  override async resumeModel(): Promise<void> {\n    await this.agent.invoke_enable({});\n  }\n\n  override dispose(): void {\n    DOMModelUndoStack.instance().dispose(this);\n  }\n\n  parentModel(): DOMModel|null {\n    const parentTarget = this.target().parentTarget();\n    return parentTarget ? parentTarget.model(DOMModel) : null;\n  }\n\n  getAgent(): ProtocolProxyApi.DOMApi {\n    return this.agent;\n  }\n\n  registerNode(node: DOMNode): void {\n    this.idToDOMNode.set(node.id, node);\n  }\n}\n\nexport enum Events {\n  /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n  AttrModified = 'AttrModified',\n  AttrRemoved = 'AttrRemoved',\n  CharacterDataModified = 'CharacterDataModified',\n  DOMMutated = 'DOMMutated',\n  NodeInserted = 'NodeInserted',\n  NodeRemoved = 'NodeRemoved',\n  DocumentUpdated = 'DocumentUpdated',\n  ChildNodeCountUpdated = 'ChildNodeCountUpdated',\n  DistributedNodesChanged = 'DistributedNodesChanged',\n  MarkersChanged = 'MarkersChanged',\n  TopLayerElementsChanged = 'TopLayerElementsChanged',\n  ScrollableFlagUpdated = 'ScrollableFlagUpdated',\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n\nexport type EventTypes = {\n  [Events.AttrModified]: {node: DOMNode, name: string},\n  [Events.AttrRemoved]: {node: DOMNode, name: string},\n  [Events.CharacterDataModified]: DOMNode,\n  [Events.DOMMutated]: DOMNode,\n  [Events.NodeInserted]: DOMNode,\n  [Events.NodeRemoved]: {node: DOMNode, parent: DOMNode},\n  [Events.DocumentUpdated]: DOMModel,\n  [Events.ChildNodeCountUpdated]: DOMNode,\n  [Events.DistributedNodesChanged]: DOMNode,\n  [Events.MarkersChanged]: DOMNode,\n  [Events.TopLayerElementsChanged]: void,\n  [Events.ScrollableFlagUpdated]: {node: DOMNode},\n};\n\nclass DOMDispatcher implements ProtocolProxyApi.DOMDispatcher {\n  readonly #domModel: DOMModel;\n  constructor(domModel: DOMModel) {\n    this.#domModel = domModel;\n  }\n\n  documentUpdated(): void {\n    this.#domModel.documentUpdated();\n  }\n\n  attributeModified({nodeId, name, value}: Protocol.DOM.AttributeModifiedEvent): void {\n    this.#domModel.attributeModified(nodeId, name, value);\n  }\n\n  attributeRemoved({nodeId, name}: Protocol.DOM.AttributeRemovedEvent): void {\n    this.#domModel.attributeRemoved(nodeId, name);\n  }\n\n  inlineStyleInvalidated({nodeIds}: Protocol.DOM.InlineStyleInvalidatedEvent): void {\n    this.#domModel.inlineStyleInvalidated(nodeIds);\n  }\n\n  characterDataModified({nodeId, characterData}: Protocol.DOM.CharacterDataModifiedEvent): void {\n    this.#domModel.characterDataModified(nodeId, characterData);\n  }\n\n  setChildNodes({parentId, nodes}: Protocol.DOM.SetChildNodesEvent): void {\n    this.#domModel.setChildNodes(parentId, nodes);\n  }\n\n  childNodeCountUpdated({nodeId, childNodeCount}: Protocol.DOM.ChildNodeCountUpdatedEvent): void {\n    this.#domModel.childNodeCountUpdated(nodeId, childNodeCount);\n  }\n\n  childNodeInserted({parentNodeId, previousNodeId, node}: Protocol.DOM.ChildNodeInsertedEvent): void {\n    this.#domModel.childNodeInserted(parentNodeId, previousNodeId, node);\n  }\n\n  childNodeRemoved({parentNodeId, nodeId}: Protocol.DOM.ChildNodeRemovedEvent): void {\n    this.#domModel.childNodeRemoved(parentNodeId, nodeId);\n  }\n\n  shadowRootPushed({hostId, root}: Protocol.DOM.ShadowRootPushedEvent): void {\n    this.#domModel.shadowRootPushed(hostId, root);\n  }\n\n  shadowRootPopped({hostId, rootId}: Protocol.DOM.ShadowRootPoppedEvent): void {\n    this.#domModel.shadowRootPopped(hostId, rootId);\n  }\n\n  pseudoElementAdded({parentId, pseudoElement}: Protocol.DOM.PseudoElementAddedEvent): void {\n    this.#domModel.pseudoElementAdded(parentId, pseudoElement);\n  }\n\n  pseudoElementRemoved({parentId, pseudoElementId}: Protocol.DOM.PseudoElementRemovedEvent): void {\n    this.#domModel.pseudoElementRemoved(parentId, pseudoElementId);\n  }\n\n  distributedNodesUpdated({insertionPointId, distributedNodes}: Protocol.DOM.DistributedNodesUpdatedEvent): void {\n    this.#domModel.distributedNodesUpdated(insertionPointId, distributedNodes);\n  }\n\n  topLayerElementsUpdated(): void {\n    this.#domModel.topLayerElementsUpdated();\n  }\n\n  scrollableFlagUpdated({nodeId, isScrollable}: Protocol.DOM.ScrollableFlagUpdatedEvent): void {\n    this.#domModel.scrollableFlagUpdated(nodeId, isScrollable);\n  }\n}\n\nlet domModelUndoStackInstance: DOMModelUndoStack|null = null;\n\nexport class DOMModelUndoStack {\n  #stack: DOMModel[];\n  #index: number;\n  #lastModelWithMinorChange: DOMModel|null;\n  constructor() {\n    this.#stack = [];\n    this.#index = 0;\n    this.#lastModelWithMinorChange = null;\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): DOMModelUndoStack {\n    const {forceNew} = opts;\n    if (!domModelUndoStackInstance || forceNew) {\n      domModelUndoStackInstance = new DOMModelUndoStack();\n    }\n\n    return domModelUndoStackInstance;\n  }\n\n  async markUndoableState(model: DOMModel, minorChange: boolean): Promise<void> {\n    // Both minor and major changes get into the #stack, but minor updates are coalesced.\n    // Commit major undoable state in the old model upon model switch.\n    if (this.#lastModelWithMinorChange && model !== this.#lastModelWithMinorChange) {\n      this.#lastModelWithMinorChange.markUndoableState();\n      this.#lastModelWithMinorChange = null;\n    }\n\n    // Previous minor change is already in the #stack.\n    if (minorChange && this.#lastModelWithMinorChange === model) {\n      return;\n    }\n\n    this.#stack = this.#stack.slice(0, this.#index);\n    this.#stack.push(model);\n    this.#index = this.#stack.length;\n\n    // Delay marking as major undoable states in case of minor operations until the\n    // major or model switch.\n    if (minorChange) {\n      this.#lastModelWithMinorChange = model;\n    } else {\n      await model.getAgent().invoke_markUndoableState();\n      this.#lastModelWithMinorChange = null;\n    }\n  }\n\n  async undo(): Promise<void> {\n    if (this.#index === 0) {\n      return Promise.resolve();\n    }\n    --this.#index;\n    this.#lastModelWithMinorChange = null;\n    await this.#stack[this.#index].getAgent().invoke_undo();\n  }\n\n  async redo(): Promise<void> {\n    if (this.#index >= this.#stack.length) {\n      return Promise.resolve();\n    }\n    ++this.#index;\n    this.#lastModelWithMinorChange = null;\n    await this.#stack[this.#index - 1].getAgent().invoke_redo();\n  }\n\n  dispose(model: DOMModel): void {\n    let shift = 0;\n    for (let i = 0; i < this.#index; ++i) {\n      if (this.#stack[i] === model) {\n        ++shift;\n      }\n    }\n    Platform.ArrayUtilities.removeElement(this.#stack, model);\n    this.#index -= shift;\n    if (this.#lastModelWithMinorChange === model) {\n      this.#lastModelWithMinorChange = null;\n    }\n  }\n}\n\nSDKModel.register(DOMModel, {capabilities: Capability.DOM, autostart: true});\nexport interface Attribute {\n  name: string;\n  value: string;\n  _node: DOMNode;\n}\n"],
  "mappings": "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",
  "names": ["node", "DOMNode", "ShadowRootTypes", "response", "nodeId", "Events"]
}
