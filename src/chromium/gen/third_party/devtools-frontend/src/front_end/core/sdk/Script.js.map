{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/core/sdk/Script.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\n\nimport {\n  COND_BREAKPOINT_SOURCE_URL,\n  type DebuggerModel,\n  Events,\n  Location,\n  LOGPOINT_SOURCE_URL,\n} from './DebuggerModel.js';\nimport type {FrameAssociated} from './FrameAssociated.js';\nimport type {PageResourceLoadInitiator} from './PageResourceLoader.js';\nimport {ResourceTreeModel} from './ResourceTreeModel.js';\nimport type {ExecutionContext} from './RuntimeModel.js';\nimport type {SourceMap} from './SourceMap.js';\nimport type {Target} from './Target.js';\n\nconst UIStrings = {\n  /**\n   *@description Error message for when a script can't be loaded which had been previously\n   */\n  scriptRemovedOrDeleted: 'Script removed or deleted.',\n  /**\n   *@description Error message when failing to load a script source text\n   */\n  unableToFetchScriptSource: 'Unable to fetch script source.',\n};\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/Script.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet scriptCacheInstance: {\n  cache: Map<string, WeakRef<Promise<TextUtils.ContentData.ContentDataOrError>>>,\n  registry: FinalizationRegistry<string>,\n}|null = null;\n\nexport class Script implements TextUtils.ContentProvider.ContentProvider, FrameAssociated {\n  debuggerModel: DebuggerModel;\n  scriptId: Protocol.Runtime.ScriptId;\n  sourceURL: Platform.DevToolsPath.UrlString;\n  lineOffset: number;\n  columnOffset: number;\n  endLine: number;\n  endColumn: number;\n  executionContextId: number;\n  hash: string;\n  readonly #isContentScriptInternal: boolean;\n  readonly #isLiveEditInternal: boolean;\n  sourceMapURL?: string;\n  debugSymbols: Protocol.Debugger.DebugSymbols|null;\n  hasSourceURL: boolean;\n  contentLength: number;\n  originStackTrace: Protocol.Runtime.StackTrace|null;\n  readonly #codeOffsetInternal: number|null;\n  readonly #language: string|null;\n  #contentPromise: Promise<TextUtils.ContentData.ContentDataOrError>|null;\n  readonly #embedderNameInternal: Platform.DevToolsPath.UrlString|null;\n  readonly isModule: boolean|null;\n  constructor(\n      debuggerModel: DebuggerModel, scriptId: Protocol.Runtime.ScriptId, sourceURL: Platform.DevToolsPath.UrlString,\n      startLine: number, startColumn: number, endLine: number, endColumn: number, executionContextId: number,\n      hash: string, isContentScript: boolean, isLiveEdit: boolean, sourceMapURL: string|undefined,\n      hasSourceURL: boolean, length: number, isModule: boolean|null, originStackTrace: Protocol.Runtime.StackTrace|null,\n      codeOffset: number|null, scriptLanguage: string|null, debugSymbols: Protocol.Debugger.DebugSymbols|null,\n      embedderName: Platform.DevToolsPath.UrlString|null) {\n    this.debuggerModel = debuggerModel;\n    this.scriptId = scriptId;\n    this.sourceURL = sourceURL;\n    this.lineOffset = startLine;\n    this.columnOffset = startColumn;\n    this.endLine = endLine;\n    this.endColumn = endColumn;\n    this.isModule = isModule;\n\n    this.executionContextId = executionContextId;\n    this.hash = hash;\n    this.#isContentScriptInternal = isContentScript;\n    this.#isLiveEditInternal = isLiveEdit;\n    this.sourceMapURL = sourceMapURL;\n    this.debugSymbols = debugSymbols;\n    this.hasSourceURL = hasSourceURL;\n    this.contentLength = length;\n    this.originStackTrace = originStackTrace;\n    this.#codeOffsetInternal = codeOffset;\n    this.#language = scriptLanguage;\n    this.#contentPromise = null;\n    this.#embedderNameInternal = embedderName;\n  }\n\n  embedderName(): Platform.DevToolsPath.UrlString|null {\n    return this.#embedderNameInternal;\n  }\n\n  target(): Target {\n    return this.debuggerModel.target();\n  }\n\n  private static trimSourceURLComment(source: string): string {\n    let sourceURLIndex = source.lastIndexOf('//# sourceURL=');\n    if (sourceURLIndex === -1) {\n      sourceURLIndex = source.lastIndexOf('//@ sourceURL=');\n      if (sourceURLIndex === -1) {\n        return source;\n      }\n    }\n    const sourceURLLineIndex = source.lastIndexOf('\\n', sourceURLIndex);\n    if (sourceURLLineIndex === -1) {\n      return source;\n    }\n    const sourceURLLine = source.substr(sourceURLLineIndex + 1);\n    if (!sourceURLLine.match(sourceURLRegex)) {\n      return source;\n    }\n    return source.substr(0, sourceURLLineIndex);\n  }\n\n  isContentScript(): boolean {\n    return this.#isContentScriptInternal;\n  }\n\n  codeOffset(): number|null {\n    return this.#codeOffsetInternal;\n  }\n\n  isJavaScript(): boolean {\n    return this.#language === Protocol.Debugger.ScriptLanguage.JavaScript;\n  }\n\n  isWasm(): boolean {\n    return this.#language === Protocol.Debugger.ScriptLanguage.WebAssembly;\n  }\n\n  scriptLanguage(): string|null {\n    return this.#language;\n  }\n\n  executionContext(): ExecutionContext|null {\n    return this.debuggerModel.runtimeModel().executionContext(this.executionContextId);\n  }\n\n  isLiveEdit(): boolean {\n    return this.#isLiveEditInternal;\n  }\n\n  contentURL(): Platform.DevToolsPath.UrlString {\n    return this.sourceURL;\n  }\n\n  contentType(): Common.ResourceType.ResourceType {\n    return Common.ResourceType.resourceTypes.Script;\n  }\n\n  private async loadTextContent(): Promise<TextUtils.ContentData.ContentData> {\n    const result = await this.debuggerModel.target().debuggerAgent().invoke_getScriptSource({scriptId: this.scriptId});\n    if (result.getError()) {\n      throw new Error(result.getError());\n    }\n    const {scriptSource, bytecode} = result;\n    if (bytecode) {\n      return new TextUtils.ContentData.ContentData(bytecode, /* isBase64 */ true, 'application/wasm');\n    }\n    let content: string = scriptSource || '';\n    if (this.hasSourceURL && Common.ParsedURL.schemeIs(this.sourceURL, 'snippet:')) {\n      // TODO(crbug.com/1330846): Find a better way to establish the snippet automapping binding then adding\n      // a sourceURL comment before evaluation and removing it here.\n      content = Script.trimSourceURLComment(content);\n    }\n    return new TextUtils.ContentData.ContentData(content, /* isBase64 */ false, 'text/javascript');\n  }\n\n  private async loadWasmContent(): Promise<TextUtils.ContentData.ContentDataOrError> {\n    if (!this.isWasm()) {\n      throw new Error('Not a wasm script');\n    }\n    const result =\n        await this.debuggerModel.target().debuggerAgent().invoke_disassembleWasmModule({scriptId: this.scriptId});\n\n    if (result.getError()) {\n      // Fall through to text content loading if v8-based disassembly fails. This is to ensure backwards compatibility with\n      // older v8 versions.\n      const contentData = await this.loadTextContent();\n      return await disassembleWasm(contentData.base64);\n    }\n\n    const {streamId, functionBodyOffsets, chunk: {lines, bytecodeOffsets}} = result;\n    const lineChunks = [];\n    const bytecodeOffsetChunks = [];\n    let totalLength = lines.reduce<number>((sum, line) => sum + line.length + 1, 0);\n    const truncationMessage = '<truncated>';\n    // This is a magic number used in code mirror which, when exceeded, sends it into an infinite loop.\n    const cmSizeLimit = 1000000000 - truncationMessage.length;\n    if (streamId) {\n      while (true) {\n        const result = await this.debuggerModel.target().debuggerAgent().invoke_nextWasmDisassemblyChunk({streamId});\n\n        if (result.getError()) {\n          throw new Error(result.getError());\n        }\n\n        const {chunk: {lines: linesChunk, bytecodeOffsets: bytecodeOffsetsChunk}} = result;\n        totalLength += linesChunk.reduce<number>((sum, line) => sum + line.length + 1, 0);\n        if (linesChunk.length === 0) {\n          break;\n        }\n        if (totalLength >= cmSizeLimit) {\n          lineChunks.push([truncationMessage]);\n          bytecodeOffsetChunks.push([0]);\n          break;\n        }\n\n        lineChunks.push(linesChunk);\n        bytecodeOffsetChunks.push(bytecodeOffsetsChunk);\n      }\n    }\n    const functionBodyRanges: Array<{start: number, end: number}> = [];\n    // functionBodyOffsets contains a sequence of pairs of start and end offsets\n    for (let i = 0; i < functionBodyOffsets.length; i += 2) {\n      functionBodyRanges.push({start: functionBodyOffsets[i], end: functionBodyOffsets[i + 1]});\n    }\n    return new TextUtils.WasmDisassembly.WasmDisassembly(\n        lines.concat(...lineChunks), bytecodeOffsets.concat(...bytecodeOffsetChunks), functionBodyRanges);\n  }\n\n  requestContentData(): Promise<TextUtils.ContentData.ContentDataOrError> {\n    if (!this.#contentPromise) {\n      const fileSizeToCache = 65535;  // We won't bother cacheing files under 64K\n      if (this.hash && !this.#isLiveEditInternal && this.contentLength > fileSizeToCache) {\n        // For large files that aren't live edits and have a hash, we keep a content-addressed cache\n        // so we don't need to load multiple copies or disassemble wasm modules multiple times.\n        if (!scriptCacheInstance) {\n          // Initialize script cache singleton. Add a finalizer for removing keys from the map.\n          scriptCacheInstance = {\n            cache: new Map(),\n            registry: new FinalizationRegistry(hashCode => scriptCacheInstance?.cache.delete(hashCode)),\n          };\n        }\n        // This key should be sufficient to identify scripts that are known to have the same content.\n        const fullHash = [\n          this.#language,\n          this.contentLength,\n          this.lineOffset,\n          this.columnOffset,\n          this.endLine,\n          this.endColumn,\n          this.#codeOffsetInternal,\n          this.hash,\n        ].join(':');\n        const cachedContentPromise = scriptCacheInstance.cache.get(fullHash)?.deref();\n        if (cachedContentPromise) {\n          this.#contentPromise = cachedContentPromise;\n        } else {\n          this.#contentPromise = this.requestContentInternal();\n          scriptCacheInstance.cache.set(fullHash, new WeakRef(this.#contentPromise));\n          scriptCacheInstance.registry.register(this.#contentPromise, fullHash);\n        }\n      } else {\n        this.#contentPromise = this.requestContentInternal();\n      }\n    }\n    return this.#contentPromise;\n  }\n\n  async requestContent(): Promise<TextUtils.ContentProvider.DeferredContent> {\n    const contentData = await this.requestContentData();\n    return TextUtils.ContentData.ContentData.asDeferredContent(contentData);\n  }\n\n  private async requestContentInternal(): Promise<TextUtils.ContentData.ContentDataOrError> {\n    if (!this.scriptId) {\n      return {error: i18nString(UIStrings.scriptRemovedOrDeleted)};\n    }\n    try {\n      return this.isWasm() ? await this.loadWasmContent() : await this.loadTextContent();\n    } catch (err) {\n      // TODO(bmeurer): Propagate errors as exceptions / rejections.\n      return {error: i18nString(UIStrings.unableToFetchScriptSource)};\n    }\n  }\n\n  async getWasmBytecode(): Promise<ArrayBuffer> {\n    const base64 = await this.debuggerModel.target().debuggerAgent().invoke_getWasmBytecode({scriptId: this.scriptId});\n    const response = await fetch(`data:application/wasm;base64,${base64.bytecode}`);\n    return response.arrayBuffer();\n  }\n\n  originalContentProvider(): TextUtils.ContentProvider.ContentProvider {\n    return new TextUtils.StaticContentProvider.StaticContentProvider(\n        this.contentURL(), this.contentType(), () => this.requestContentData());\n  }\n\n  async searchInContent(query: string, caseSensitive: boolean, isRegex: boolean):\n      Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    if (!this.scriptId) {\n      return [];\n    }\n\n    const matches = await this.debuggerModel.target().debuggerAgent().invoke_searchInContent(\n        {scriptId: this.scriptId, query, caseSensitive, isRegex});\n    return TextUtils.TextUtils.performSearchInSearchMatches(matches.result || [], query, caseSensitive, isRegex);\n  }\n\n  private appendSourceURLCommentIfNeeded(source: string): string {\n    if (!this.hasSourceURL) {\n      return source;\n    }\n    return source + '\\n //# sourceURL=' + this.sourceURL;\n  }\n\n  async editSource(newSource: string): Promise<{\n    changed: boolean,\n    status: Protocol.Debugger.SetScriptSourceResponseStatus,\n    exceptionDetails?: Protocol.Runtime.ExceptionDetails,\n  }> {\n    newSource = Script.trimSourceURLComment(newSource);\n    // We append correct #sourceURL to script for consistency only. It's not actually needed for things to work correctly.\n    newSource = this.appendSourceURLCommentIfNeeded(newSource);\n\n    const oldSource = TextUtils.ContentData.ContentData.textOr(await this.requestContentData(), null);\n    if (oldSource === newSource) {\n      return {changed: false, status: Protocol.Debugger.SetScriptSourceResponseStatus.Ok};\n    }\n    const response = await this.debuggerModel.target().debuggerAgent().invoke_setScriptSource(\n        {scriptId: this.scriptId, scriptSource: newSource, allowTopFrameEditing: true});\n    if (response.getError()) {\n      // Something went seriously wrong, like the V8 inspector no longer knowing about this script without\n      // shutting down the Debugger agent etc.\n      throw new Error(`Script#editSource failed for script with id ${this.scriptId}: ${response.getError()}`);\n    }\n\n    if (!response.getError() && response.status === Protocol.Debugger.SetScriptSourceResponseStatus.Ok) {\n      this.#contentPromise =\n          Promise.resolve(new TextUtils.ContentData.ContentData(newSource, /* isBase64 */ false, 'text/javascript'));\n    }\n\n    this.debuggerModel.dispatchEventToListeners(Events.ScriptSourceWasEdited, {script: this, status: response.status});\n    return {changed: true, status: response.status, exceptionDetails: response.exceptionDetails};\n  }\n\n  rawLocation(lineNumber: number, columnNumber: number): Location|null {\n    if (this.containsLocation(lineNumber, columnNumber)) {\n      return new Location(this.debuggerModel, this.scriptId, lineNumber, columnNumber);\n    }\n    return null;\n  }\n\n  isInlineScript(): boolean {\n    const startsAtZero = !this.lineOffset && !this.columnOffset;\n    return !this.isWasm() && Boolean(this.sourceURL) && !startsAtZero;\n  }\n\n  isAnonymousScript(): boolean {\n    return !this.sourceURL;\n  }\n\n  async setBlackboxedRanges(positions: Protocol.Debugger.ScriptPosition[]): Promise<boolean> {\n    const response = await this.debuggerModel.target().debuggerAgent().invoke_setBlackboxedRanges(\n        {scriptId: this.scriptId, positions});\n    return !response.getError();\n  }\n\n  containsLocation(lineNumber: number, columnNumber: number): boolean {\n    const afterStart =\n        (lineNumber === this.lineOffset && columnNumber >= this.columnOffset) || lineNumber > this.lineOffset;\n    const beforeEnd = lineNumber < this.endLine || (lineNumber === this.endLine && columnNumber <= this.endColumn);\n    return afterStart && beforeEnd;\n  }\n\n  get frameId(): Protocol.Page.FrameId {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // @ts-expect-error\n    if (typeof this[frameIdSymbol] !== 'string') {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // @ts-expect-error\n      this[frameIdSymbol] = frameIdForScript(this);\n    }\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // @ts-expect-error\n    return this[frameIdSymbol];\n  }\n\n  /**\n   * @returns true, iff this script originates from a breakpoint/logpoint condition\n   */\n  get isBreakpointCondition(): boolean {\n    return [COND_BREAKPOINT_SOURCE_URL, LOGPOINT_SOURCE_URL].includes(this.sourceURL);\n  }\n\n  /**\n   * @returns the currently attached source map for this Script or `undefined` if there is none or it\n   * hasn't loaded yet.\n   */\n  sourceMap(): SourceMap|undefined {\n    return this.debuggerModel.sourceMapManager().sourceMapForClient(this);\n  }\n\n  createPageResourceLoadInitiator(): PageResourceLoadInitiator {\n    return {target: this.target(), frameId: this.frameId, initiatorUrl: this.embedderName()};\n  }\n\n  /**\n   * Translates the `rawLocation` from line and column number in terms of what V8 understands\n   * to a script relative location. Specifically this means that for inline `<script>`'s\n   * without a `//# sourceURL=` annotation, the line and column offset of the script\n   * content is subtracted to make the location within the script independent of the\n   * location of the `<script>` tag within the surrounding document.\n   *\n   * @param rawLocation the raw location in terms of what V8 understands.\n   * @returns the script relative line and column number for the {@link rawLocation}.\n   */\n  rawLocationToRelativeLocation(rawLocation: {lineNumber: number, columnNumber: number}):\n      {lineNumber: number, columnNumber: number};\n  rawLocationToRelativeLocation(rawLocation: {lineNumber: number, columnNumber: number|undefined}):\n      {lineNumber: number, columnNumber: number|undefined};\n  rawLocationToRelativeLocation(rawLocation: {lineNumber: number, columnNumber: number|undefined}):\n      {lineNumber: number, columnNumber: number|undefined} {\n    let {lineNumber, columnNumber} = rawLocation;\n    if (!this.hasSourceURL && this.isInlineScript()) {\n      lineNumber -= this.lineOffset;\n      if (lineNumber === 0 && columnNumber !== undefined) {\n        columnNumber -= this.columnOffset;\n      }\n    }\n    return {lineNumber, columnNumber};\n  }\n\n  /**\n   * Translates the `relativeLocation` from script relative line and column number to\n   * the raw location in terms of what V8 understands. Specifically this means that for\n   * inline `<script>`'s without a `//# sourceURL=` annotation, the line and column offset\n   * of the script content is added to make the location relative to the start of the\n   * surrounding document.\n   *\n   * @param relativeLocation the script relative location.\n   * @returns the raw location in terms of what V8 understands for the {@link relativeLocation}.\n   */\n  relativeLocationToRawLocation(relativeLocation: {lineNumber: number, columnNumber: number}):\n      {lineNumber: number, columnNumber: number};\n  relativeLocationToRawLocation(relativeLocation: {lineNumber: number, columnNumber: number|undefined}):\n      {lineNumber: number, columnNumber: number|undefined};\n  relativeLocationToRawLocation(relativeLocation: {lineNumber: number, columnNumber: number|undefined}):\n      {lineNumber: number, columnNumber: number|undefined} {\n    let {lineNumber, columnNumber} = relativeLocation;\n    if (!this.hasSourceURL && this.isInlineScript()) {\n      if (lineNumber === 0 && columnNumber !== undefined) {\n        columnNumber += this.columnOffset;\n      }\n      lineNumber += this.lineOffset;\n    }\n    return {lineNumber, columnNumber};\n  }\n}\n\nconst frameIdSymbol = Symbol('frameid');\n\nfunction frameIdForScript(script: Script): Protocol.Page.FrameId|null {\n  const executionContext = script.executionContext();\n  if (executionContext) {\n    return executionContext.frameId || null;\n  }\n  // This is to overcome compilation cache which doesn't get reset.\n  const resourceTreeModel = script.debuggerModel.target().model(ResourceTreeModel);\n  if (!resourceTreeModel || !resourceTreeModel.mainFrame) {\n    return null;\n  }\n  return resourceTreeModel.mainFrame.id;\n}\n\nexport const sourceURLRegex = /^[\\x20\\t]*\\/\\/[@#] sourceURL=\\s*(\\S*?)\\s*$/;\n\nexport async function disassembleWasm(content: string): Promise<TextUtils.WasmDisassembly.WasmDisassembly> {\n  const worker = Common.Worker.WorkerWrapper.fromURL(\n      new URL('../../entrypoints/wasmparser_worker/wasmparser_worker-entrypoint.js', import.meta.url));\n  const promise = new Promise<TextUtils.WasmDisassembly.WasmDisassembly>((resolve, reject) => {\n    worker.onmessage = ({data}: MessageEvent) => {\n      if ('method' in data) {\n        switch (data.method) {\n          case 'disassemble':\n            if ('error' in data) {\n              reject(data.error);\n            } else if ('result' in data) {\n              const {lines, offsets, functionBodyOffsets} = data.result;\n              resolve(new TextUtils.WasmDisassembly.WasmDisassembly(lines, offsets, functionBodyOffsets));\n            }\n            break;\n        }\n      }\n    };\n    worker.onerror = reject;\n  });\n\n  worker.postMessage({method: 'disassemble', params: {content}});\n\n  try {\n    return await promise;  // The await is important here or we terminate the worker too early.\n  } finally {\n    worker.terminate();\n  }\n}\n"],
  "mappings": "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",
  "names": ["result"]
}
