{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/core/sdk/Resource.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Common from '../common/common.js';\nimport * as Platform from '../platform/platform.js';\n\nimport type {NetworkRequest} from './NetworkRequest.js';\nimport type {ResourceTreeFrame, ResourceTreeModel} from './ResourceTreeModel.js';\n\nexport class Resource implements TextUtils.ContentProvider.ContentProvider {\n  readonly #resourceTreeModel: ResourceTreeModel;\n  #requestInternal: NetworkRequest|null;\n  #urlInternal!: Platform.DevToolsPath.UrlString;\n  readonly #documentURLInternal: Platform.DevToolsPath.UrlString;\n  readonly #frameIdInternal: Protocol.Page.FrameId|null;\n  readonly #loaderIdInternal: Protocol.Network.LoaderId|null;\n  readonly #type: Common.ResourceType.ResourceType;\n  #mimeTypeInternal: string;\n  #isGeneratedInternal: boolean;\n  #lastModifiedInternal: Date|null;\n  readonly #contentSizeInternal: number|null;\n  #parsedURLInternal?: Common.ParsedURL.ParsedURL;\n  #contentData: TextUtils.ContentData.ContentData|null = null;\n  /**\n   * There is always at most one CDP \"getResourceContent\" call in-flight. But once it's done\n   * we'll hit the backend again in case we failed.\n   */\n  #pendingContentData: Promise<TextUtils.ContentData.ContentDataOrError>|null = null;\n\n  constructor(\n      resourceTreeModel: ResourceTreeModel, request: NetworkRequest|null, url: Platform.DevToolsPath.UrlString,\n      documentURL: Platform.DevToolsPath.UrlString, frameId: Protocol.Page.FrameId|null,\n      loaderId: Protocol.Network.LoaderId|null, type: Common.ResourceType.ResourceType, mimeType: string,\n      lastModified: Date|null, contentSize: number|null) {\n    this.#resourceTreeModel = resourceTreeModel;\n    this.#requestInternal = request;\n    this.url = url;\n\n    this.#documentURLInternal = documentURL;\n    this.#frameIdInternal = frameId;\n    this.#loaderIdInternal = loaderId;\n    this.#type = type || Common.ResourceType.resourceTypes.Other;\n    this.#mimeTypeInternal = mimeType;\n    this.#isGeneratedInternal = false;\n\n    this.#lastModifiedInternal = lastModified && Platform.DateUtilities.isValid(lastModified) ? lastModified : null;\n    this.#contentSizeInternal = contentSize;\n  }\n\n  lastModified(): Date|null {\n    if (this.#lastModifiedInternal || !this.#requestInternal) {\n      return this.#lastModifiedInternal;\n    }\n    const lastModifiedHeader = this.#requestInternal.responseLastModified();\n    const date = lastModifiedHeader ? new Date(lastModifiedHeader) : null;\n    this.#lastModifiedInternal = date && Platform.DateUtilities.isValid(date) ? date : null;\n    return this.#lastModifiedInternal;\n  }\n\n  contentSize(): number|null {\n    if (typeof this.#contentSizeInternal === 'number' || !this.#requestInternal) {\n      return this.#contentSizeInternal;\n    }\n    return this.#requestInternal.resourceSize;\n  }\n\n  get request(): NetworkRequest|null {\n    return this.#requestInternal;\n  }\n\n  get url(): Platform.DevToolsPath.UrlString {\n    return this.#urlInternal;\n  }\n\n  set url(x: Platform.DevToolsPath.UrlString) {\n    this.#urlInternal = x;\n    this.#parsedURLInternal = new Common.ParsedURL.ParsedURL(x);\n  }\n\n  get parsedURL(): Common.ParsedURL.ParsedURL|undefined {\n    return this.#parsedURLInternal;\n  }\n\n  get documentURL(): Platform.DevToolsPath.UrlString {\n    return this.#documentURLInternal;\n  }\n\n  get frameId(): Protocol.Page.FrameId|null {\n    return this.#frameIdInternal;\n  }\n\n  get loaderId(): Protocol.Network.LoaderId|null {\n    return this.#loaderIdInternal;\n  }\n\n  get displayName(): string {\n    return this.#parsedURLInternal ? this.#parsedURLInternal.displayName : '';\n  }\n\n  resourceType(): Common.ResourceType.ResourceType {\n    return this.#requestInternal ? this.#requestInternal.resourceType() : this.#type;\n  }\n\n  get mimeType(): string {\n    return this.#requestInternal ? this.#requestInternal.mimeType : this.#mimeTypeInternal;\n  }\n\n  get content(): string|null {\n    if (this.#contentData?.isTextContent) {\n      return this.#contentData.text;\n    }\n    return this.#contentData?.base64 ?? null;\n  }\n\n  get isGenerated(): boolean {\n    return this.#isGeneratedInternal;\n  }\n\n  set isGenerated(val: boolean) {\n    this.#isGeneratedInternal = val;\n  }\n\n  contentURL(): Platform.DevToolsPath.UrlString {\n    return this.#urlInternal;\n  }\n\n  contentType(): Common.ResourceType.ResourceType {\n    if (this.resourceType() === Common.ResourceType.resourceTypes.Document &&\n        this.mimeType.indexOf('javascript') !== -1) {\n      return Common.ResourceType.resourceTypes.Script;\n    }\n    return this.resourceType();\n  }\n\n  async requestContent(): Promise<TextUtils.ContentProvider.DeferredContent> {\n    const contentData = await this.requestContentData();\n    return TextUtils.ContentData.ContentData.asDeferredContent(contentData);\n  }\n\n  async requestContentData(): Promise<TextUtils.ContentData.ContentDataOrError> {\n    if (this.#contentData) {\n      return this.#contentData;\n    }\n    if (this.#pendingContentData) {\n      return this.#pendingContentData;\n    }\n    this.#pendingContentData = this.innerRequestContent().then(contentData => {\n      // If an error happended we don't set `this.#contentData` so future `requestContentData` will\n      // attempt again to hit the backend for this Resource.\n      if (!TextUtils.ContentData.ContentData.isError(contentData)) {\n        this.#contentData = contentData;\n      }\n      this.#pendingContentData = null;\n      return contentData;\n    });\n    return this.#pendingContentData;\n  }\n\n  canonicalMimeType(): string {\n    return this.contentType().canonicalMimeType() || this.mimeType;\n  }\n\n  async searchInContent(query: string, caseSensitive: boolean, isRegex: boolean):\n      Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    if (!this.frameId) {\n      return [];\n    }\n    if (this.request) {\n      return this.request.searchInContent(query, caseSensitive, isRegex);\n    }\n    const result = await this.#resourceTreeModel.target().pageAgent().invoke_searchInResource(\n        {frameId: this.frameId, url: this.url, query, caseSensitive, isRegex});\n    return TextUtils.TextUtils.performSearchInSearchMatches(result.result || [], query, caseSensitive, isRegex);\n  }\n\n  async populateImageSource(image: HTMLImageElement): Promise<void> {\n    const contentData = await this.requestContentData();\n    if (TextUtils.ContentData.ContentData.isError(contentData)) {\n      return;\n    }\n    image.src = contentData.asDataUrl() ?? this.#urlInternal;\n  }\n\n  private async innerRequestContent(): Promise<TextUtils.ContentData.ContentDataOrError> {\n    if (this.request) {\n      // The `contentData` promise only resolves once the request is done.\n      return this.request.requestContentData();\n    }\n\n    const response = await this.#resourceTreeModel.target().pageAgent().invoke_getResourceContent(\n        {frameId: this.frameId as Protocol.Page.FrameId, url: this.url});\n    const error = response.getError();\n    if (error) {\n      return {error};\n    }\n    return new TextUtils.ContentData.ContentData(response.content, response.base64Encoded, this.mimeType);\n  }\n\n  hasTextContent(): boolean {\n    if (this.#contentData?.isTextContent) {\n      return true;\n    }\n    return this.#type.isTextType() || Platform.MimeType.isTextType(this.mimeType);\n  }\n\n  frame(): ResourceTreeFrame|null {\n    return this.#frameIdInternal ? this.#resourceTreeModel.frameForId(this.#frameIdInternal) : null;\n  }\n\n  statusCode(): number {\n    return this.#requestInternal ? this.#requestInternal.statusCode : 0;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
