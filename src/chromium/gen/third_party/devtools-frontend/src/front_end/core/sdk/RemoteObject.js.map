{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/core/sdk/RemoteObject.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2009 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the #name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport type {DOMPinnedWebIDLProp, DOMPinnedWebIDLType} from '../common/JavaScriptMetaData.js';\n\nimport type {DebuggerModel, FunctionDetails} from './DebuggerModel.js';\nimport type {RuntimeModel} from './RuntimeModel.js';\n\n// This cannot be an interface due to \"instanceof RemoteObject\" checks in the code.\nexport class RemoteObject {\n  static fromLocalObject(value: unknown): RemoteObject {\n    return new LocalJSONObject(value);\n  }\n\n  static type(remoteObject: RemoteObject): string {\n    if (remoteObject === null) {\n      return 'null';\n    }\n\n    const type = typeof remoteObject;\n    if (type !== 'object' && type !== 'function') {\n      return type;\n    }\n\n    return remoteObject.type;\n  }\n\n  static isNullOrUndefined(remoteObject?: RemoteObject): boolean {\n    if (remoteObject === undefined) {\n      return true;\n    }\n    switch (remoteObject.type) {\n      case Protocol.Runtime.RemoteObjectType.Object:\n        return remoteObject.subtype === Protocol.Runtime.RemoteObjectSubtype.Null;\n      case Protocol.Runtime.RemoteObjectType.Undefined:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  static arrayNameFromDescription(description: string): string {\n    return description.replace(descriptionLengthParenRegex, '').replace(descriptionLengthSquareRegex, '');\n  }\n\n  static arrayLength(object: RemoteObject|Protocol.Runtime.RemoteObject|Protocol.Runtime.ObjectPreview): number {\n    if (object.subtype !== 'array' && object.subtype !== 'typedarray') {\n      return 0;\n    }\n    // Array lengths in V8-generated descriptions switched from square brackets to parentheses.\n    // Both formats are checked in case the front end is dealing with an old version of V8.\n    const parenMatches = object.description && object.description.match(descriptionLengthParenRegex);\n    const squareMatches = object.description && object.description.match(descriptionLengthSquareRegex);\n    return parenMatches ? parseInt(parenMatches[1], 10) : (squareMatches ? parseInt(squareMatches[1], 10) : 0);\n  }\n\n  static arrayBufferByteLength(object: RemoteObject|Protocol.Runtime.RemoteObject|\n                               Protocol.Runtime.ObjectPreview): number {\n    if (object.subtype !== 'arraybuffer') {\n      return 0;\n    }\n    const matches = object.description && object.description.match(descriptionLengthParenRegex);\n    return matches ? parseInt(matches[1], 10) : 0;\n  }\n\n  static unserializableDescription(object: unknown): string|null {\n    if (typeof object === 'number') {\n      const description = String(object);\n      if (object === 0 && 1 / object < 0) {\n        return UnserializableNumber.NEGATIVE_ZERO;\n      }\n      if (description === UnserializableNumber.NAN || description === UnserializableNumber.INFINITY ||\n          description === UnserializableNumber.NEGATIVE_INFINITY) {\n        return description;\n      }\n    }\n    if (typeof object === 'bigint') {\n      return object + 'n';\n    }\n    return null;\n  }\n\n  static toCallArgument(object: string|number|bigint|boolean|RemoteObject|Protocol.Runtime.RemoteObject|null|\n                        undefined): Protocol.Runtime.CallArgument {\n    const type = typeof object;\n    if (type === 'undefined') {\n      return {};\n    }\n    const unserializableDescription = RemoteObject.unserializableDescription(object);\n    if (type === 'number') {\n      if (unserializableDescription !== null) {\n        return {unserializableValue: unserializableDescription};\n      }\n      return {value: object};\n    }\n    if (type === 'bigint') {\n      return {unserializableValue: (unserializableDescription as string)};\n    }\n    if (type === 'string' || type === 'boolean') {\n      return {value: object};\n    }\n\n    if (!object) {\n      return {value: null};\n    }\n\n    // The unserializableValue is a function on RemoteObject's and a simple property on\n    // Protocol.Runtime.RemoteObject's.\n    const objectAsProtocolRemoteObject = (object as Protocol.Runtime.RemoteObject);\n    if (object instanceof RemoteObject) {\n      const unserializableValue = object.unserializableValue();\n      if (unserializableValue !== undefined) {\n        return {unserializableValue};\n      }\n    } else if (objectAsProtocolRemoteObject.unserializableValue !== undefined) {\n      return {unserializableValue: objectAsProtocolRemoteObject.unserializableValue};\n    }\n\n    if (typeof objectAsProtocolRemoteObject.objectId !== 'undefined') {\n      return {objectId: objectAsProtocolRemoteObject.objectId};\n    }\n\n    return {value: objectAsProtocolRemoteObject.value};\n  }\n\n  static async loadFromObjectPerProto(\n      object: RemoteObject, generatePreview: boolean,\n      nonIndexedPropertiesOnly: boolean = false): Promise<GetPropertiesResult> {\n    const result = await Promise.all([\n      object.getAllProperties(true /* accessorPropertiesOnly */, generatePreview, nonIndexedPropertiesOnly),\n      object.getOwnProperties(generatePreview, nonIndexedPropertiesOnly),\n    ]);\n    const accessorProperties = result[0].properties;\n    const ownProperties = result[1].properties;\n    const internalProperties = result[1].internalProperties;\n    if (!ownProperties || !accessorProperties) {\n      return {properties: null, internalProperties: null} as GetPropertiesResult;\n    }\n    const propertiesMap = new Map<string, RemoteObjectProperty>();\n    const propertySymbols = [];\n    for (let i = 0; i < accessorProperties.length; i++) {\n      const property = accessorProperties[i];\n      if (property.symbol) {\n        propertySymbols.push(property);\n      } else if (property.isOwn || property.name !== '__proto__') {\n        // TODO(crbug/1076820): Eventually we should move away from\n        // showing accessor #properties directly on the receiver.\n        propertiesMap.set(property.name, property);\n      }\n    }\n    for (let i = 0; i < ownProperties.length; i++) {\n      const property = ownProperties[i];\n      if (property.isAccessorProperty()) {\n        continue;\n      }\n      if (property.private || property.symbol) {\n        propertySymbols.push(property);\n      } else {\n        propertiesMap.set(property.name, property);\n      }\n    }\n    return {\n      properties: [...propertiesMap.values()].concat(propertySymbols),\n      internalProperties: internalProperties ? internalProperties : null,\n    };\n  }\n\n  customPreview(): Protocol.Runtime.CustomPreview|null {\n    return null;\n  }\n\n  get objectId(): Protocol.Runtime.RemoteObjectId|undefined {\n    // TODO(crbug.com/1226471): Return undefined here.\n    return 'Not implemented' as Protocol.Runtime.RemoteObjectId;\n  }\n\n  get type(): string {\n    throw 'Not implemented';\n  }\n\n  get subtype(): string|undefined {\n    throw 'Not implemented';\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get value(): any {\n    throw 'Not implemented';\n  }\n\n  unserializableValue(): string|undefined {\n    throw 'Not implemented';\n  }\n\n  get description(): string|undefined {\n    throw 'Not implemented';\n  }\n\n  set description(description: string|undefined) {\n    throw 'Not implemented';\n  }\n\n  get hasChildren(): boolean {\n    throw 'Not implemented';\n  }\n\n  get preview(): Protocol.Runtime.ObjectPreview|undefined {\n    return undefined;\n  }\n\n  get className(): string|null {\n    return null;\n  }\n\n  arrayLength(): number {\n    throw 'Not implemented';\n  }\n\n  arrayBufferByteLength(): number {\n    throw 'Not implemented';\n  }\n\n  getOwnProperties(_generatePreview: boolean, _nonIndexedPropertiesOnly?: boolean): Promise<GetPropertiesResult> {\n    throw 'Not implemented';\n  }\n\n  getAllProperties(_accessorPropertiesOnly: boolean, _generatePreview: boolean, _nonIndexedPropertiesOnly?: boolean):\n      Promise<GetPropertiesResult> {\n    throw 'Not implemented';\n  }\n\n  async deleteProperty(_name: Protocol.Runtime.CallArgument): Promise<string|undefined> {\n    throw 'Not implemented';\n  }\n\n  async setPropertyValue(_name: string|Protocol.Runtime.CallArgument, _value: string): Promise<string|undefined> {\n    throw 'Not implemented';\n  }\n\n  callFunction<T, U>(_functionDeclaration: (this: U, ...args: any[]) => T, _args?: Protocol.Runtime.CallArgument[]):\n      Promise<CallFunctionResult> {\n    throw 'Not implemented';\n  }\n\n  callFunctionJSON<T, U>(\n      _functionDeclaration: (this: U, ...args: any[]) => T,\n      _args: Protocol.Runtime.CallArgument[]|undefined): Promise<T> {\n    throw 'Not implemented';\n  }\n\n  release(): void {\n  }\n\n  debuggerModel(): DebuggerModel {\n    throw new Error('DebuggerModel-less object');\n  }\n\n  runtimeModel(): RuntimeModel {\n    throw new Error('RuntimeModel-less object');\n  }\n\n  isNode(): boolean {\n    return false;\n  }\n\n  /**\n   * Checks whether this object can be inspected with the Linear memory inspector.\n   * @returns `true` if this object can be inspected with the Linear memory inspector.\n   */\n  isLinearMemoryInspectable(): boolean {\n    return false;\n  }\n\n  webIdl?: RemoteObjectWebIdlTypeMetadata;\n}\n\nexport class RemoteObjectImpl extends RemoteObject {\n  runtimeModelInternal: RuntimeModel;\n  readonly #runtimeAgent: ProtocolProxyApi.RuntimeApi;\n  readonly #typeInternal: string;\n  readonly #subtypeInternal: string|undefined;\n  #objectIdInternal: Protocol.Runtime.RemoteObjectId|undefined;\n  #descriptionInternal: string|undefined;\n  hasChildrenInternal: boolean;\n  readonly #previewInternal: Protocol.Runtime.ObjectPreview|undefined;\n  readonly #unserializableValueInternal: string|undefined;\n  readonly #valueInternal: typeof RemoteObject.prototype.value;\n  readonly #customPreviewInternal: Protocol.Runtime.CustomPreview|null;\n  readonly #classNameInternal: string|null;\n\n  constructor(\n      runtimeModel: RuntimeModel, objectId: Protocol.Runtime.RemoteObjectId|undefined, type: string,\n      subtype: string|undefined, value: typeof RemoteObject.prototype.value, unserializableValue?: string,\n      description?: string, preview?: Protocol.Runtime.ObjectPreview, customPreview?: Protocol.Runtime.CustomPreview,\n      className?: string) {\n    super();\n\n    this.runtimeModelInternal = runtimeModel;\n    this.#runtimeAgent = runtimeModel.target().runtimeAgent();\n\n    this.#typeInternal = type;\n    this.#subtypeInternal = subtype;\n    if (objectId) {\n      // handle\n      this.#objectIdInternal = objectId;\n      this.#descriptionInternal = description;\n      this.hasChildrenInternal = (type !== 'symbol');\n      this.#previewInternal = preview;\n    } else {\n      this.#descriptionInternal = description;\n      if (!this.description && unserializableValue) {\n        this.#descriptionInternal = unserializableValue;\n      }\n      if (!this.#descriptionInternal && (typeof value !== 'object' || value === null)) {\n        this.#descriptionInternal = String(value);\n      }\n      this.hasChildrenInternal = false;\n      if (typeof unserializableValue === 'string') {\n        this.#unserializableValueInternal = unserializableValue;\n        if (unserializableValue === UnserializableNumber.INFINITY ||\n            unserializableValue === UnserializableNumber.NEGATIVE_INFINITY ||\n            unserializableValue === UnserializableNumber.NEGATIVE_ZERO ||\n            unserializableValue === UnserializableNumber.NAN) {\n          this.#valueInternal = Number(unserializableValue);\n        } else if (type === 'bigint' && unserializableValue.endsWith('n')) {\n          this.#valueInternal = BigInt(unserializableValue.substring(0, unserializableValue.length - 1));\n        } else {\n          this.#valueInternal = unserializableValue;\n        }\n\n      } else {\n        this.#valueInternal = value;\n      }\n    }\n    this.#customPreviewInternal = customPreview || null;\n    this.#classNameInternal = typeof className === 'string' ? className : null;\n  }\n\n  override customPreview(): Protocol.Runtime.CustomPreview|null {\n    return this.#customPreviewInternal;\n  }\n\n  override get objectId(): Protocol.Runtime.RemoteObjectId|undefined {\n    return this.#objectIdInternal;\n  }\n\n  override get type(): string {\n    return this.#typeInternal;\n  }\n\n  override get subtype(): string|undefined {\n    return this.#subtypeInternal;\n  }\n\n  override get value(): typeof RemoteObject.prototype.value {\n    return this.#valueInternal;\n  }\n\n  override unserializableValue(): string|undefined {\n    return this.#unserializableValueInternal;\n  }\n\n  override get description(): string|undefined {\n    return this.#descriptionInternal;\n  }\n\n  override set description(description: string|undefined) {\n    this.#descriptionInternal = description;\n  }\n\n  override get hasChildren(): boolean {\n    return this.hasChildrenInternal;\n  }\n\n  override get preview(): Protocol.Runtime.ObjectPreview|undefined {\n    return this.#previewInternal;\n  }\n\n  override get className(): string|null {\n    return this.#classNameInternal;\n  }\n\n  override getOwnProperties(generatePreview: boolean, nonIndexedPropertiesOnly: boolean = false):\n      Promise<GetPropertiesResult> {\n    return this.doGetProperties(true, false, nonIndexedPropertiesOnly, generatePreview);\n  }\n\n  override getAllProperties(\n      accessorPropertiesOnly: boolean, generatePreview: boolean,\n      nonIndexedPropertiesOnly: boolean = false): Promise<GetPropertiesResult> {\n    return this.doGetProperties(false, accessorPropertiesOnly, nonIndexedPropertiesOnly, generatePreview);\n  }\n\n  async createRemoteObject(object: Protocol.Runtime.RemoteObject): Promise<RemoteObject> {\n    return this.runtimeModelInternal.createRemoteObject(object);\n  }\n\n  async doGetProperties(\n      ownProperties: boolean, accessorPropertiesOnly: boolean, nonIndexedPropertiesOnly: boolean,\n      generatePreview: boolean): Promise<GetPropertiesResult> {\n    if (!this.#objectIdInternal) {\n      return {properties: null, internalProperties: null} as GetPropertiesResult;\n    }\n\n    const response = await this.#runtimeAgent.invoke_getProperties({\n      objectId: this.#objectIdInternal,\n      ownProperties,\n      accessorPropertiesOnly,\n      nonIndexedPropertiesOnly,\n      generatePreview,\n    });\n    if (response.getError()) {\n      return {properties: null, internalProperties: null} as GetPropertiesResult;\n    }\n    if (response.exceptionDetails) {\n      this.runtimeModelInternal.exceptionThrown(Date.now(), response.exceptionDetails);\n      return {properties: null, internalProperties: null} as GetPropertiesResult;\n    }\n    const {result: properties = [], internalProperties = [], privateProperties = []} = response;\n    const result = [];\n    for (const property of properties) {\n      const propertyValue = property.value ? await this.createRemoteObject(property.value) : null;\n      const propertySymbol = property.symbol ? this.runtimeModelInternal.createRemoteObject(property.symbol) : null;\n      const remoteProperty = new RemoteObjectProperty(\n          property.name, propertyValue, Boolean(property.enumerable), Boolean(property.writable),\n          Boolean(property.isOwn), Boolean(property.wasThrown), propertySymbol);\n\n      if (typeof property.value === 'undefined') {\n        if (property.get && property.get.type !== 'undefined') {\n          remoteProperty.getter = this.runtimeModelInternal.createRemoteObject(property.get);\n        }\n        if (property.set && property.set.type !== 'undefined') {\n          remoteProperty.setter = this.runtimeModelInternal.createRemoteObject(property.set);\n        }\n      }\n      result.push(remoteProperty);\n    }\n    for (const property of privateProperties) {\n      const propertyValue = property.value ? this.runtimeModelInternal.createRemoteObject(property.value) : null;\n      const remoteProperty = new RemoteObjectProperty(\n          property.name, propertyValue, true, true, true, false, undefined, false, undefined, true);\n\n      if (typeof property.value === 'undefined') {\n        if (property.get && property.get.type !== 'undefined') {\n          remoteProperty.getter = this.runtimeModelInternal.createRemoteObject(property.get);\n        }\n        if (property.set && property.set.type !== 'undefined') {\n          remoteProperty.setter = this.runtimeModelInternal.createRemoteObject(property.set);\n        }\n      }\n      result.push(remoteProperty);\n    }\n\n    const internalPropertiesResult = [];\n    for (const property of internalProperties) {\n      if (!property.value) {\n        continue;\n      }\n      const propertyValue = this.runtimeModelInternal.createRemoteObject(property.value);\n      internalPropertiesResult.push(\n          new RemoteObjectProperty(property.name, propertyValue, true, false, undefined, undefined, undefined, true));\n    }\n    return {properties: result, internalProperties: internalPropertiesResult};\n  }\n\n  override async setPropertyValue(name: string|Protocol.Runtime.CallArgument, value: string):\n      Promise<string|undefined> {\n    if (!this.#objectIdInternal) {\n      return 'Can\u2019t set a property of non-object.';\n    }\n\n    const response = await this.#runtimeAgent.invoke_evaluate({expression: value, silent: true});\n    if (response.getError() || response.exceptionDetails) {\n      return response.getError() ||\n          (response.result.type !== 'string' ? response.result.description : response.result.value as string);\n    }\n\n    if (typeof name === 'string') {\n      name = RemoteObject.toCallArgument(name);\n    }\n\n    const resultPromise = this.doSetObjectPropertyValue(response.result, name);\n\n    if (response.result.objectId) {\n      void this.#runtimeAgent.invoke_releaseObject({objectId: response.result.objectId});\n    }\n\n    return resultPromise;\n  }\n\n  async doSetObjectPropertyValue(result: Protocol.Runtime.RemoteObject, name: Protocol.Runtime.CallArgument):\n      Promise<string|undefined> {\n    // This assignment may be for a regular (data) property, and for an accessor property (with getter/setter).\n    // Note the sensitive matter about accessor property: the property may be physically defined in some proto object,\n    // but logically it is bound to the object in question. JavaScript passes this object to getters/setters, not the object\n    // where property was defined; so do we.\n    const setPropertyValueFunction = 'function(a, b) { this[a] = b; }';\n\n    const argv = [name, RemoteObject.toCallArgument(result)];\n    const response = await this.#runtimeAgent.invoke_callFunctionOn({\n      objectId: this.#objectIdInternal,\n      functionDeclaration: setPropertyValueFunction,\n      arguments: argv,\n      silent: true,\n    });\n    const error = response.getError();\n    return error || response.exceptionDetails ? error || response.result.description : undefined;\n  }\n\n  override async deleteProperty(name: Protocol.Runtime.CallArgument): Promise<string|undefined> {\n    if (!this.#objectIdInternal) {\n      return 'Can\u2019t delete a property of non-object.';\n    }\n\n    const deletePropertyFunction = 'function(a) { delete this[a]; return !(a in this); }';\n    const response = await this.#runtimeAgent.invoke_callFunctionOn({\n      objectId: this.#objectIdInternal,\n      functionDeclaration: deletePropertyFunction,\n      arguments: [name],\n      silent: true,\n    });\n\n    if (response.getError() || response.exceptionDetails) {\n      return response.getError() || response.result.description;\n    }\n\n    if (!response.result.value) {\n      return 'Failed to delete property.';\n    }\n\n    return undefined;\n  }\n\n  override async callFunction<T, U>(\n      functionDeclaration: (this: U, ...args: any[]) => T,\n      args?: Protocol.Runtime.CallArgument[]): Promise<CallFunctionResult> {\n    const response = await this.#runtimeAgent.invoke_callFunctionOn({\n      objectId: this.#objectIdInternal,\n      functionDeclaration: functionDeclaration.toString(),\n      arguments: args,\n      silent: true,\n    });\n    if (response.getError()) {\n      return {object: null, wasThrown: false};\n    }\n    // TODO: release exceptionDetails object\n    return {\n      object: this.runtimeModelInternal.createRemoteObject(response.result),\n      wasThrown: Boolean(response.exceptionDetails),\n    };\n  }\n\n  override async callFunctionJSON<T, U>(\n      functionDeclaration: (this: U, ...args: any[]) => T,\n      args: Protocol.Runtime.CallArgument[]|undefined): Promise<T> {\n    const response = await this.#runtimeAgent.invoke_callFunctionOn({\n      objectId: this.#objectIdInternal,\n      functionDeclaration: functionDeclaration.toString(),\n      arguments: args,\n      silent: true,\n      returnByValue: true,\n    });\n\n    return response.getError() || response.exceptionDetails ? null : response.result.value;\n  }\n\n  override release(): void {\n    if (!this.#objectIdInternal) {\n      return;\n    }\n    void this.#runtimeAgent.invoke_releaseObject({objectId: this.#objectIdInternal});\n  }\n\n  override arrayLength(): number {\n    return RemoteObject.arrayLength(this);\n  }\n\n  override arrayBufferByteLength(): number {\n    return RemoteObject.arrayBufferByteLength(this);\n  }\n\n  override debuggerModel(): DebuggerModel {\n    return this.runtimeModelInternal.debuggerModel();\n  }\n\n  override runtimeModel(): RuntimeModel {\n    return this.runtimeModelInternal;\n  }\n\n  override isNode(): boolean {\n    return Boolean(this.#objectIdInternal) && this.type === 'object' && this.subtype === 'node';\n  }\n\n  override isLinearMemoryInspectable(): boolean {\n    return this.type === 'object' && this.subtype !== undefined &&\n        ['webassemblymemory', 'typedarray', 'dataview', 'arraybuffer'].includes(this.subtype);\n  }\n}\n\nexport class ScopeRemoteObject extends RemoteObjectImpl {\n  readonly #scopeRef: ScopeRef;\n  #savedScopeProperties: RemoteObjectProperty[]|undefined;\n\n  constructor(\n      runtimeModel: RuntimeModel, objectId: Protocol.Runtime.RemoteObjectId|undefined, scopeRef: ScopeRef, type: string,\n      subtype: string|undefined, value: typeof RemoteObjectImpl.prototype.value, unserializableValue?: string,\n      description?: string, preview?: Protocol.Runtime.ObjectPreview) {\n    super(runtimeModel, objectId, type, subtype, value, unserializableValue, description, preview);\n    this.#scopeRef = scopeRef;\n    this.#savedScopeProperties = undefined;\n  }\n\n  override async doGetProperties(ownProperties: boolean, accessorPropertiesOnly: boolean, _generatePreview: boolean):\n      Promise<GetPropertiesResult> {\n    if (accessorPropertiesOnly) {\n      return {properties: [], internalProperties: []} as GetPropertiesResult;\n    }\n\n    if (this.#savedScopeProperties) {\n      // No need to reload scope variables, as the remote object never\n      // changes its #properties. If variable is updated, the #properties\n      // array is patched locally.\n      return {properties: this.#savedScopeProperties.slice(), internalProperties: null};\n    }\n\n    const allProperties = await super.doGetProperties(\n        ownProperties, accessorPropertiesOnly, false /* nonIndexedPropertiesOnly */, true /* generatePreview */);\n    if (Array.isArray(allProperties.properties)) {\n      this.#savedScopeProperties = allProperties.properties.slice();\n      for (const property of this.#savedScopeProperties) {\n        property.writable = false;\n      }\n    }\n    return allProperties;\n  }\n\n  override async doSetObjectPropertyValue(\n      result: Protocol.Runtime.RemoteObject, argumentName: Protocol.Runtime.CallArgument): Promise<string|undefined> {\n    const name = (argumentName.value as string);\n    const error = await this.debuggerModel().setVariableValue(\n        this.#scopeRef.number, name, RemoteObject.toCallArgument(result), this.#scopeRef.callFrameId);\n    if (error) {\n      return error;\n    }\n    if (this.#savedScopeProperties) {\n      for (const property of this.#savedScopeProperties) {\n        if (property.name === name) {\n          property.value = this.runtimeModel().createRemoteObject(result);\n        }\n      }\n    }\n    return;\n  }\n}\n\nexport class ScopeRef {\n  readonly number: number;\n  readonly callFrameId: Protocol.Debugger.CallFrameId;\n\n  constructor(number: number, callFrameId: Protocol.Debugger.CallFrameId) {\n    this.number = number;\n    this.callFrameId = callFrameId;\n  }\n}\n\nexport class RemoteObjectProperty {\n  name: string;\n  value?: RemoteObject;\n  enumerable: boolean;\n  writable: boolean;\n  isOwn: boolean;\n  wasThrown: boolean;\n  symbol: RemoteObject|undefined;\n  synthetic: boolean;\n  syntheticSetter: ((arg0: string) => Promise<RemoteObject|null>)|undefined;\n\n  private: boolean;\n  getter: RemoteObject|undefined;\n  setter: RemoteObject|undefined;\n\n  webIdl?: RemoteObjectWebIdlPropertyMetadata;\n\n  constructor(\n      name: string, value: RemoteObject|null, enumerable?: boolean, writable?: boolean, isOwn?: boolean,\n      wasThrown?: boolean, symbol?: RemoteObject|null, synthetic?: boolean,\n      syntheticSetter?: ((arg0: string) => Promise<RemoteObject|null>), isPrivate?: boolean) {\n    this.name = name;\n    this.value = value !== null ? value : undefined;\n    this.enumerable = typeof enumerable !== 'undefined' ? enumerable : true;\n    const isNonSyntheticOrSyntheticWritable = !synthetic || Boolean(syntheticSetter);\n    this.writable = typeof writable !== 'undefined' ? writable : isNonSyntheticOrSyntheticWritable;\n    this.isOwn = Boolean(isOwn);\n    this.wasThrown = Boolean(wasThrown);\n    if (symbol) {\n      this.symbol = symbol;\n    }\n    this.synthetic = Boolean(synthetic);\n    if (syntheticSetter) {\n      this.syntheticSetter = syntheticSetter;\n    }\n    this.private = Boolean(isPrivate);\n  }\n\n  async setSyntheticValue(expression: string): Promise<boolean> {\n    if (!this.syntheticSetter) {\n      return false;\n    }\n    const result = await this.syntheticSetter(expression);\n    if (result) {\n      this.value = result;\n    }\n    return Boolean(result);\n  }\n\n  isAccessorProperty(): boolean {\n    return Boolean(this.getter || this.setter);\n  }\n\n  match({includeNullOrUndefinedValues, regex}: {includeNullOrUndefinedValues: boolean, regex: RegExp|null}): boolean {\n    if (regex !== null) {\n      if (!regex.test(this.name) && !regex.test(this.value?.description ?? '')) {\n        return false;\n      }\n    }\n    if (!includeNullOrUndefinedValues) {\n      if (!this.isAccessorProperty() && RemoteObject.isNullOrUndefined(this.value)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  cloneWithNewName(newName: string): RemoteObjectProperty {\n    const property = new RemoteObjectProperty(\n        newName, this.value ?? null, this.enumerable, this.writable, this.isOwn, this.wasThrown, this.symbol,\n        this.synthetic, this.syntheticSetter, this.private);\n    property.getter = this.getter;\n    property.setter = this.setter;\n    return property;\n  }\n}\n\n// Below is a wrapper around a local object that implements the RemoteObject interface,\n// which can be used by the UI code (primarily ObjectPropertiesSection).\n// Note that only JSON-compliant objects are currently supported, as there's no provision\n// for traversing prototypes, extracting class names via constructor, handling #properties\n// or functions.\n\nexport class LocalJSONObject extends RemoteObject {\n  valueInternal: typeof RemoteObject.prototype.value;\n  #cachedDescription!: string;\n  #cachedChildren!: RemoteObjectProperty[];\n\n  constructor(value: typeof RemoteObject.prototype.value) {\n    super();\n    this.valueInternal = value;\n  }\n\n  override get objectId(): Protocol.Runtime.RemoteObjectId|undefined {\n    return undefined;\n  }\n\n  override get value(): typeof RemoteObject.prototype.value {\n    return this.valueInternal;\n  }\n\n  override unserializableValue(): string|undefined {\n    const unserializableDescription = RemoteObject.unserializableDescription(this.valueInternal);\n    return unserializableDescription || undefined;\n  }\n\n  override get description(): string {\n    if (this.#cachedDescription) {\n      return this.#cachedDescription;\n    }\n\n    function formatArrayItem(this: LocalJSONObject, property: RemoteObjectProperty): string {\n      return this.formatValue(property.value || null);\n    }\n\n    function formatObjectItem(this: LocalJSONObject, property: RemoteObjectProperty): string {\n      let name: string = property.name;\n      if (/^\\s|\\s$|^$|\\n/.test(name)) {\n        name = '\"' + name.replace(/\\n/g, '\\u21B5') + '\"';\n      }\n      return name + ': ' + this.formatValue(property.value || null);\n    }\n\n    if (this.type === 'object') {\n      switch (this.subtype) {\n        case 'array':\n          this.#cachedDescription = this.concatenate('[', ']', formatArrayItem.bind(this));\n          break;\n        case 'date':\n          this.#cachedDescription = String(this.valueInternal);\n          break;\n        case 'null':\n          this.#cachedDescription = 'null';\n          break;\n        default:\n          this.#cachedDescription = this.concatenate('{', '}', formatObjectItem.bind(this));\n      }\n    } else {\n      this.#cachedDescription = String(this.valueInternal);\n    }\n\n    return this.#cachedDescription;\n  }\n\n  private formatValue(value: RemoteObject|null): string {\n    if (!value) {\n      return 'undefined';\n    }\n    const description = value.description || '';\n    if (value.type === 'string') {\n      return '\"' + description.replace(/\\n/g, '\\u21B5') + '\"';\n    }\n    return description;\n  }\n\n  private concatenate(prefix: string, suffix: string, formatProperty: (arg0: RemoteObjectProperty) => string): string {\n    const previewChars = 100;\n\n    let buffer = prefix;\n    const children = this.children();\n    for (let i = 0; i < children.length; ++i) {\n      const itemDescription = formatProperty(children[i]);\n      if (buffer.length + itemDescription.length > previewChars) {\n        buffer += ',\u2026';\n        break;\n      }\n      if (i) {\n        buffer += ', ';\n      }\n      buffer += itemDescription;\n    }\n    buffer += suffix;\n    return buffer;\n  }\n\n  override get type(): string {\n    return typeof this.valueInternal;\n  }\n\n  override get subtype(): string|undefined {\n    if (this.valueInternal === null) {\n      return 'null';\n    }\n\n    if (Array.isArray(this.valueInternal)) {\n      return 'array';\n    }\n\n    if (this.valueInternal instanceof Date) {\n      return 'date';\n    }\n\n    return undefined;\n  }\n\n  override get hasChildren(): boolean {\n    if ((typeof this.valueInternal !== 'object') || (this.valueInternal === null)) {\n      return false;\n    }\n    return Boolean(Object.keys((this.valueInternal as Object)).length);\n  }\n\n  override async getOwnProperties(_generatePreview: boolean, nonIndexedPropertiesOnly: boolean = false):\n      Promise<GetPropertiesResult> {\n    function isArrayIndex(name: string): boolean {\n      const index = Number(name) >>> 0;\n      return String(index) === name;\n    }\n\n    let properties = this.children();\n    if (nonIndexedPropertiesOnly) {\n      properties = properties.filter(property => !isArrayIndex(property.name));\n    }\n    return {properties, internalProperties: null};\n  }\n\n  override async getAllProperties(\n      accessorPropertiesOnly: boolean, generatePreview: boolean,\n      nonIndexedPropertiesOnly: boolean = false): Promise<GetPropertiesResult> {\n    if (accessorPropertiesOnly) {\n      return {properties: [], internalProperties: null};\n    }\n    return await this.getOwnProperties(generatePreview, nonIndexedPropertiesOnly);\n  }\n\n  private children(): RemoteObjectProperty[] {\n    if (!this.hasChildren) {\n      return [];\n    }\n    if (!this.#cachedChildren) {\n      this.#cachedChildren = Object.entries(this.valueInternal).map(([name, value]) => {\n        return new RemoteObjectProperty(\n            name, value instanceof RemoteObject ? value : RemoteObject.fromLocalObject(value));\n      });\n    }\n    return this.#cachedChildren;\n  }\n\n  override arrayLength(): number {\n    return Array.isArray(this.valueInternal) ? this.valueInternal.length : 0;\n  }\n\n  override async callFunction<T, U>(\n      functionDeclaration: (this: U, ...args: any[]) => T,\n      args?: Protocol.Runtime.CallArgument[]): Promise<CallFunctionResult> {\n    const target = this.valueInternal as U;\n    const rawArgs = args ? args.map(arg => arg.value) : [];\n\n    let result;\n    let wasThrown = false;\n    try {\n      result = functionDeclaration.apply(target, rawArgs);\n    } catch (e) {\n      wasThrown = true;\n    }\n\n    const object = RemoteObject.fromLocalObject(result);\n\n    return {object, wasThrown} as CallFunctionResult;\n  }\n\n  override async callFunctionJSON<T, U>(\n      functionDeclaration: (this: U, ...args: any[]) => T,\n      args: Protocol.Runtime.CallArgument[]|undefined): Promise<T> {\n    const target = this.valueInternal as U;\n    const rawArgs = args ? args.map(arg => arg.value) : [];\n\n    let result;\n    try {\n      result = functionDeclaration.apply(target, rawArgs);\n    } catch (e) {\n      result = null;\n    }\n\n    return result as T;\n  }\n}\n\nexport class RemoteArrayBuffer {\n  readonly #objectInternal: RemoteObject;\n  constructor(object: RemoteObject) {\n    if (object.type !== 'object' || object.subtype !== 'arraybuffer') {\n      throw new Error('Object is not an arraybuffer');\n    }\n    this.#objectInternal = object;\n  }\n\n  byteLength(): number {\n    return this.#objectInternal.arrayBufferByteLength();\n  }\n\n  async bytes(start = 0, end = this.byteLength()): Promise<number[]> {\n    if (start < 0 || start >= this.byteLength()) {\n      throw new RangeError('start is out of range');\n    }\n    if (end < start || end > this.byteLength()) {\n      throw new RangeError('end is out of range');\n    }\n    return await this.#objectInternal.callFunctionJSON(bytes, [{value: start}, {value: end - start}]);\n\n    function bytes(this: ArrayBuffer, offset: number, length: number): number[] {\n      return [...new Uint8Array(this, offset, length)];\n    }\n  }\n\n  object(): RemoteObject {\n    return this.#objectInternal;\n  }\n}\n\nexport class RemoteArray {\n  readonly #objectInternal: RemoteObject;\n  constructor(object: RemoteObject) {\n    this.#objectInternal = object;\n  }\n\n  static objectAsArray(object: RemoteObject|null): RemoteArray {\n    if (!object || object.type !== 'object' || (object.subtype !== 'array' && object.subtype !== 'typedarray')) {\n      throw new Error('Object is empty or not an array');\n    }\n    return new RemoteArray(object);\n  }\n\n  static async createFromRemoteObjects(objects: RemoteObject[]): Promise<RemoteArray> {\n    if (!objects.length) {\n      throw new Error('Input array is empty');\n    }\n    const result = await objects[0].callFunction(createArray, objects.map(RemoteObject.toCallArgument));\n    if (result.wasThrown || !result.object) {\n      throw new Error('Call function throws exceptions or returns empty value');\n    }\n    return RemoteArray.objectAsArray(result.object);\n\n    function createArray<T>(...args: T[]): T[] {\n      return args;\n    }\n  }\n\n  async at(index: number): Promise<RemoteObject> {\n    if (index < 0 || index > this.#objectInternal.arrayLength()) {\n      throw new Error('Out of range');\n    }\n    const result =\n        await this.#objectInternal.callFunction<unknown, Array<unknown>>(at, [RemoteObject.toCallArgument(index)]);\n    if (result.wasThrown || !result.object) {\n      throw new Error('Exception in callFunction or result value is empty');\n    }\n    return result.object;\n\n    function at<T>(this: T[], index: number): T {\n      return this[index];\n    }\n  }\n\n  length(): number {\n    return this.#objectInternal.arrayLength();\n  }\n\n  map<T>(func: (arg0: RemoteObject) => Promise<T>): Promise<T[]> {\n    const promises = [];\n    for (let i = 0; i < this.length(); ++i) {\n      promises.push(this.at(i).then(func));\n    }\n    return Promise.all(promises);\n  }\n\n  object(): RemoteObject {\n    return this.#objectInternal;\n  }\n}\n\nexport class RemoteFunction {\n  readonly #object: RemoteObject;\n\n  constructor(object: RemoteObject) {\n    this.#object = object;\n  }\n\n  static objectAsFunction(object: RemoteObject): RemoteFunction {\n    if (object.type !== 'function') {\n      throw new Error('Object is empty or not a function');\n    }\n    return new RemoteFunction(object);\n  }\n\n  async targetFunction(): Promise<RemoteObject> {\n    const ownProperties = await this.#object.getOwnProperties(false /* generatePreview */);\n    const targetFunction = ownProperties.internalProperties?.find(({name}) => name === '[[TargetFunction]]');\n    return targetFunction?.value ?? this.#object;\n  }\n\n  async targetFunctionDetails(): Promise<FunctionDetails|null> {\n    const targetFunction = await this.targetFunction();\n    const functionDetails = await targetFunction.debuggerModel().functionDetailsPromise(targetFunction);\n    if (this.#object !== targetFunction) {\n      targetFunction.release();\n    }\n    return functionDetails;\n  }\n}\n\nexport class RemoteError {\n  readonly #object: RemoteObject;\n\n  #exceptionDetails?: Promise<Protocol.Runtime.ExceptionDetails|undefined>;\n  #cause?: Promise<RemoteObject|undefined>;\n\n  private constructor(object: RemoteObject) {\n    this.#object = object;\n  }\n\n  static objectAsError(object: RemoteObject): RemoteError {\n    if (object.subtype !== 'error') {\n      throw new Error(`Object of type ${object.subtype} is not an error`);\n    }\n    return new RemoteError(object);\n  }\n\n  get errorStack(): string {\n    return this.#object.description ?? '';\n  }\n\n  exceptionDetails(): Promise<Protocol.Runtime.ExceptionDetails|undefined> {\n    if (!this.#exceptionDetails) {\n      this.#exceptionDetails = this.#lookupExceptionDetails();\n    }\n    return this.#exceptionDetails;\n  }\n\n  #lookupExceptionDetails(): Promise<Protocol.Runtime.ExceptionDetails|undefined> {\n    if (this.#object.objectId) {\n      return this.#object.runtimeModel().getExceptionDetails(this.#object.objectId);\n    }\n    return Promise.resolve(undefined);\n  }\n\n  cause(): Promise<RemoteObject|undefined> {\n    if (!this.#cause) {\n      this.#cause = this.#lookupCause();\n    }\n    return this.#cause;\n  }\n\n  async #lookupCause(): Promise<RemoteObject|undefined> {\n    const allProperties =\n        await this.#object.getAllProperties(false /* accessorPropertiesOnly */, false /* generatePreview */);\n    const cause = allProperties.properties?.find(prop => prop.name === 'cause');\n\n    return cause?.value;\n  }\n}\n\nconst descriptionLengthParenRegex = /\\(([0-9]+)\\)/;\nconst descriptionLengthSquareRegex = /\\[([0-9]+)\\]/;\n\nconst enum UnserializableNumber {\n  NEGATIVE_ZERO = ('-0'),\n  NAN = ('NaN'),\n  INFINITY = ('Infinity'),\n  NEGATIVE_INFINITY = ('-Infinity'),\n}\n\nexport interface CallFunctionResult {\n  object: RemoteObject|null;\n  wasThrown?: boolean;\n}\n\nexport interface GetPropertiesResult {\n  properties: RemoteObjectProperty[]|null;\n  internalProperties: RemoteObjectProperty[]|null;\n}\n\nexport interface RemoteObjectWebIdlTypeMetadata {\n  info: DOMPinnedWebIDLType;\n  state: Map<string, string>;\n}\n\nexport interface RemoteObjectWebIdlPropertyMetadata {\n  info: DOMPinnedWebIDLProp;\n  applicable?: boolean;\n}\n\n/**\n * Pair of a linear memory inspectable {@link RemoteObject} and an optional\n * expression, which identifies the variable holding the object in the\n * current scope or the name of the field holding the object.\n *\n * This data structure is used to reveal an object in the Linear Memory\n * Inspector panel.\n */\nexport class LinearMemoryInspectable {\n  /** The linear memory inspectable {@link RemoteObject}. */\n  readonly object: RemoteObject;\n  /** The name of the variable or the field holding the `object`. */\n  readonly expression: string|undefined;\n\n  /**\n   * Wrap `object` and `expression` into a reveable structure.\n   *\n   * @param object A linear memory inspectable {@link RemoteObject}.\n   * @param expression An optional name of the field or variable holding the `object`.\n   */\n  constructor(object: RemoteObject, expression?: string) {\n    if (!object.isLinearMemoryInspectable()) {\n      throw new Error('object must be linear memory inspectable');\n    }\n    this.object = object;\n    this.expression = expression;\n  }\n}\n"],
  "mappings": "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",
  "names": ["index", "UnserializableNumber"]
}
