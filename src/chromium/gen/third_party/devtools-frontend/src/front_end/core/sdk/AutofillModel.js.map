{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/core/sdk/AutofillModel.ts"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Host from '../host/host.js';\n\nimport {SDKModel} from './SDKModel.js';\nimport {Capability, type Target} from './Target.js';\n\nexport class AutofillModel extends SDKModel<EventTypes> implements ProtocolProxyApi.AutofillDispatcher {\n  readonly agent: ProtocolProxyApi.AutofillApi;\n  #enabled?: boolean;\n  #showTestAddressesInAutofillMenu: Common.Settings.Setting<boolean>;\n\n  constructor(target: Target) {\n    super(target);\n\n    this.agent = target.autofillAgent();\n    this.#showTestAddressesInAutofillMenu =\n        Common.Settings.Settings.instance().createSetting('show-test-addresses-in-autofill-menu-on-event', false);\n    target.registerAutofillDispatcher(this);\n    this.enable();\n  }\n\n  setTestAddresses(): void {\n    void this.agent.invoke_setAddresses(\n        {\n          addresses: this.#showTestAddressesInAutofillMenu.get() ?\n              [\n                {\n                  fields: [\n                    {name: 'ADDRESS_HOME_COUNTRY', value: 'US'},\n                    {name: 'NAME_FULL', value: 'Jon Stewart Doe'},\n                    {name: 'NAME_FIRST', value: 'Jon'},\n                    {name: 'NAME_MIDDLE', value: 'Stewart'},\n                    {name: 'NAME_LAST', value: 'Doe'},\n                    {name: 'COMPANY_NAME', value: 'Fake Company'},\n                    {name: 'ADDRESS_HOME_LINE1', value: '1600 Fake Street'},\n                    {name: 'ADDRESS_HOME_LINE2', value: 'Apartment 1'},\n                    {name: 'ADDRESS_HOME_ZIP', value: '94043'},\n                    {name: 'ADDRESS_HOME_CITY', value: 'Mountain View'},\n                    {name: 'ADDRESS_HOME_STATE', value: 'CA'},\n                    {name: 'EMAIL_ADDRESS', value: 'test@example.us'},\n                    {name: 'PHONE_HOME_WHOLE_NUMBER', value: '+16019521325'},\n                  ],\n                },\n                {\n                  fields: [\n                    {name: 'ADDRESS_HOME_COUNTRY', value: 'BR'},\n                    {name: 'NAME_FULL', value: 'Jo\u00E3o Souza Silva'},\n                    {name: 'NAME_FIRST', value: 'Jo\u00E3o'},\n                    {name: 'NAME_LAST', value: 'Souza Silva'},\n                    {name: 'NAME_LAST_FIRST', value: 'Souza'},\n                    {name: 'NAME_LAST_SECOND', value: 'Silva'},\n                    {name: 'COMPANY_NAME', value: 'Empresa Falsa'},\n                    {name: 'ADDRESS_HOME_STREET_ADDRESS', value: 'Rua Inexistente, 2000\\nAndar 2, Apartamento 1'},\n                    {name: 'ADDRESS_HOME_STREET_LOCATION', value: 'Rua Inexistente, 2000'},\n                    {name: 'ADDRESS_HOME_STREET_NAME', value: 'Rua Inexistente'},\n                    {name: 'ADDRESS_HOME_HOUSE_NUMBER', value: '2000'},\n                    {name: 'ADDRESS_HOME_SUBPREMISE', value: 'Andar 2, Apartamento 1'},\n                    {name: 'ADDRESS_HOME_APT_NUM', value: '1'},\n                    {name: 'ADDRESS_HOME_FLOOR', value: '2'},\n                    {name: 'ADDRESS_HOME_APT', value: 'Apartamento 1'},\n                    {name: 'ADDRESS_HOME_APT_TYPE', value: 'Apartamento'},\n                    {name: 'ADDRESS_HOME_APT_NUM', value: '1'},\n                    {name: 'ADDRESS_HOME_DEPENDENT_LOCALITY', value: 'Santa Efig\u00EAnia'},\n                    {name: 'ADDRESS_HOME_LANDMARK', value: 'Pr\u00F3ximo \u00E0 esta\u00E7\u00E3o Santa Efig\u00EAnia'},\n                    {name: 'ADDRESS_HOME_OVERFLOW', value: 'Andar 2, Apartamento 1'},\n                    {name: 'ADDRESS_HOME_ZIP', value: '30260-080'},\n                    {name: 'ADDRESS_HOME_CITY', value: 'Belo Horizonte'},\n                    {name: 'ADDRESS_HOME_STATE', value: 'MG'},\n                    {name: 'EMAIL_ADDRESS', value: 'teste@exemplo.us'},\n                    {name: 'PHONE_HOME_WHOLE_NUMBER', value: '+553121286800'},\n                  ],\n                },\n                {\n                  fields: [\n                    {name: 'ADDRESS_HOME_COUNTRY', value: 'MX'},\n                    {name: 'NAME_FULL', value: 'Juan Francisco Garc\u00EDa Flores'},\n                    {name: 'NAME_FIRST', value: 'Juan Francisco'},\n                    {name: 'NAME_LAST', value: 'Garc\u00EDa Flores'},\n                    {name: 'NAME_LAST_FIRST', value: 'Garc\u00EDa'},\n                    {name: 'NAME_LAST_SECOND', value: 'Flores'},\n                    {name: 'COMPANY_NAME', value: 'Empresa Falsa'},\n                    {\n                      name: 'ADDRESS_HOME_STREET_ADDRESS',\n                      value:\n                          'C. Falsa 445\\nPiso 2, Apartamento 1\\nEntre calle Volc\u00E1n y calle Montes Blancos, cerca de la estaci\u00F3n de metro',\n                    },\n                    {name: 'ADDRESS_HOME_STREET_LOCATION', value: 'C. Falsa 445'},\n                    {name: 'ADDRESS_HOME_STREET_NAME', value: 'C. Falsa'},\n                    {name: 'ADDRESS_HOME_HOUSE_NUMBER', value: '445'},\n                    {name: 'ADDRESS_HOME_SUBPREMISE', value: 'Piso 2, Apartamento 1'},\n                    {name: 'ADDRESS_HOME_FLOOR', value: '2'},\n                    {name: 'ADDRESS_HOME_APT', value: 'Apartamento 1'},\n                    {name: 'ADDRESS_HOME_APT_TYPE', value: 'Apartamento'},\n                    {name: 'ADDRESS_HOME_APT_NUM', value: '1'},\n                    {name: 'ADDRESS_HOME_DEPENDENT_LOCALITY', value: 'Lomas de Chapultepec'},\n                    {\n                      name: 'ADDRESS_HOME_OVERFLOW',\n                      value: 'Entre calle Volc\u00E1n y calle Montes Celestes, cerca de la estaci\u00F3n de metro',\n                    },\n                    {\n                      name: 'ADDRESS_HOME_BETWEEN_STREETS_OR_LANDMARK',\n                      value: 'Entre calle Volc\u00E1n y calle Montes Blancos, cerca de la estaci\u00F3n de metro',\n                    },\n                    {name: 'ADDRESS_HOME_LANDMARK', value: 'Cerca de la estaci\u00F3n de metro'},\n                    {name: 'ADDRESS_HOME_BETWEEN_STREETS', value: 'Entre calle Volc\u00E1n y calle Montes Blancos'},\n                    {name: 'ADDRESS_HOME_BETWEEN_STREETS_1', value: 'calle Volc\u00E1n'},\n                    {name: 'ADDRESS_HOME_BETWEEN_STREETS_2', value: 'calle Montes Blancos'},\n                    {name: 'ADDRESS_HOME_ADMIN_LEVEL2', value: 'Miguel Hidalgo'},\n                    {name: 'ADDRESS_HOME_ZIP', value: '11001'},\n                    {name: 'ADDRESS_HOME_CITY', value: 'Ciudad de M\u00E9xico'},\n                    {name: 'ADDRESS_HOME_STATE', value: 'Distrito Federal'},\n                    {name: 'EMAIL_ADDRESS', value: 'ejemplo@ejemplo.mx'},\n                    {name: 'PHONE_HOME_WHOLE_NUMBER', value: '+525553428400'},\n                  ],\n                },\n                {\n                  fields: [\n                    {name: 'ADDRESS_HOME_COUNTRY', value: 'DE'},\n                    {name: 'NAME_FULL', value: 'Gottfried Wilhelm Leibniz'},\n                    {name: 'NAME_FIRST', value: 'Gottfried'},\n                    {name: 'NAME_MIDDLE', value: 'Wilhelm'},\n                    {name: 'NAME_LAST', value: 'Leibniz'},\n                    {name: 'COMPANY_NAME', value: 'Erfundenes Unternehmen'},\n                    {name: 'ADDRESS_HOME_LINE1', value: 'Erfundene Stra\u00DFe 33'},\n                    {name: 'ADDRESS_HOME_LINE2', value: 'Wohnung 1'},\n                    {name: 'ADDRESS_HOME_ZIP', value: '80732'},\n                    {name: 'ADDRESS_HOME_CITY', value: 'M\u00FCnchen'},\n                    {name: 'EMAIL_ADDRESS', value: 'test@beispiel.de'},\n                    {name: 'PHONE_HOME_WHOLE_NUMBER', value: '+4930303986300'},\n                  ],\n                },\n              ] :\n              [],\n        });\n  }\n\n  enable(): void {\n    if (!Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.AUTOFILL_VIEW) || this.#enabled ||\n        Host.InspectorFrontendHost.isUnderTest()) {\n      return;\n    }\n    void this.agent.invoke_enable();\n    this.setTestAddresses();\n    this.#enabled = true;\n  }\n\n  disable(): void {\n    if (!this.#enabled || Host.InspectorFrontendHost.isUnderTest()) {\n      return;\n    }\n    this.#enabled = false;\n    void this.agent.invoke_disable();\n  }\n\n  addressFormFilled(addressFormFilledEvent: Protocol.Autofill.AddressFormFilledEvent): void {\n    this.dispatchEventToListeners(Events.ADDRESS_FORM_FILLED, {autofillModel: this, event: addressFormFilledEvent});\n  }\n}\n\nSDKModel.register(AutofillModel, {capabilities: Capability.DOM, autostart: true});\n\nexport const enum Events {\n  ADDRESS_FORM_FILLED = 'AddressFormFilled',\n}\n\nexport interface AddressFormFilledEvent {\n  autofillModel: AutofillModel;\n  event: Protocol.Autofill.AddressFormFilledEvent;\n}\n\nexport type EventTypes = {\n  [Events.ADDRESS_FORM_FILLED]: AddressFormFilledEvent,\n};\n"],
  "mappings": "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",
  "names": ["Events"]
}
