{
  "version": 3,
  "sources": ["../../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/components/utils/JSPresentationUtils.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2011 Google Inc.  All rights reserved.\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport * as Bindings from '../../../../models/bindings/bindings.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\n\nimport jsUtilsStyles from './jsUtils.css.js';\nimport {Events as LinkifierEvents, Linkifier} from './Linkifier.js';\n\nconst UIStrings = {\n  /**\n   *@description Text to stop preventing the debugger from stepping into library code\n   */\n  removeFromIgnore: 'Remove from ignore list',\n  /**\n   *@description Text for scripts that should not be stepped into when debugging\n   */\n  addToIgnore: 'Add script to ignore list',\n  /**\n   * @description A link to show more frames when they are available.\n   */\n  showMoreFrames: 'Show ignore-listed frames',\n  /**\n   * @description A link to rehide frames that are by default hidden.\n   */\n  showLess: 'Show less',\n  /**\n   *@description Text indicating that source url of a link is currently unknown\n   */\n  unknownSource: 'unknown',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/utils/JSPresentationUtils.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nfunction populateContextMenu(link: Element, event: Event): void {\n  const contextMenu = new UI.ContextMenu.ContextMenu(event);\n  event.consume(true);\n  const uiLocation = Linkifier.uiLocation(link);\n  if (uiLocation &&\n      Bindings.IgnoreListManager.IgnoreListManager.instance().canIgnoreListUISourceCode(uiLocation.uiSourceCode)) {\n    if (Bindings.IgnoreListManager.IgnoreListManager.instance().isUserIgnoreListedURL(uiLocation.uiSourceCode.url())) {\n      contextMenu.debugSection().appendItem(\n          i18nString(UIStrings.removeFromIgnore),\n          () =>\n              Bindings.IgnoreListManager.IgnoreListManager.instance().unIgnoreListUISourceCode(uiLocation.uiSourceCode),\n          {jslogContext: 'remove-from-ignore-list'});\n    } else {\n      contextMenu.debugSection().appendItem(\n          i18nString(UIStrings.addToIgnore),\n          () => Bindings.IgnoreListManager.IgnoreListManager.instance().ignoreListUISourceCode(uiLocation.uiSourceCode),\n          {jslogContext: 'add-to-ignore-list'});\n    }\n  }\n  contextMenu.appendApplicableItems(event);\n  void contextMenu.show();\n}\n\nexport function buildStackTraceRows(\n    stackTrace: Protocol.Runtime.StackTrace,\n    target: SDK.Target.Target|null,\n    linkifier: Linkifier,\n    tabStops: boolean|undefined,\n    updateCallback?: (arg0: (StackTraceRegularRow|StackTraceAsyncRow)[]) => void,\n    showColumnNumber?: boolean,\n    ): (StackTraceRegularRow|StackTraceAsyncRow)[] {\n  const stackTraceRows: (StackTraceRegularRow|StackTraceAsyncRow)[] = [];\n\n  if (updateCallback) {\n    const throttler = new Common.Throttler.Throttler(100);\n    linkifier.addEventListener(LinkifierEvents.LIVE_LOCATION_UPDATED, () => {\n      void throttler.schedule(async () => updateCallback(stackTraceRows));\n    });\n  }\n\n  function buildStackTraceRowsHelper(\n      stackTrace: Protocol.Runtime.StackTrace,\n      previousCallFrames: Protocol.Runtime.CallFrame[]|undefined = undefined): void {\n    let asyncRow: StackTraceAsyncRow|null = null;\n    if (previousCallFrames) {\n      asyncRow = {\n        asyncDescription: UI.UIUtils.asyncStackTraceLabel(stackTrace.description, previousCallFrames),\n      };\n      stackTraceRows.push(asyncRow);\n    }\n    let previousStackFrameWasBreakpointCondition = false;\n    for (const stackFrame of stackTrace.callFrames) {\n      const functionName = UI.UIUtils.beautifyFunctionName(stackFrame.functionName);\n      const link = linkifier.maybeLinkifyConsoleCallFrame(target, stackFrame, {\n        showColumnNumber,\n        tabStop: Boolean(tabStops),\n        inlineFrameIndex: 0,\n        revealBreakpoint: previousStackFrameWasBreakpointCondition,\n      });\n      if (link) {\n        link.setAttribute('jslog', `${VisualLogging.link('stack-trace').track({click: true})}`);\n        link.addEventListener('contextmenu', populateContextMenu.bind(null, link));\n\n        if (!link.textContent) {\n          link.textContent = i18nString(UIStrings.unknownSource);\n        }\n      }\n      stackTraceRows.push({functionName, link});\n      previousStackFrameWasBreakpointCondition = [\n        SDK.DebuggerModel.COND_BREAKPOINT_SOURCE_URL,\n        SDK.DebuggerModel.LOGPOINT_SOURCE_URL,\n      ].includes(stackFrame.url);\n    }\n  }\n\n  buildStackTraceRowsHelper(stackTrace);\n  let previousCallFrames = stackTrace.callFrames;\n  for (let asyncStackTrace = stackTrace.parent; asyncStackTrace; asyncStackTrace = asyncStackTrace.parent) {\n    if (asyncStackTrace.callFrames.length) {\n      buildStackTraceRowsHelper(asyncStackTrace, previousCallFrames);\n    }\n    previousCallFrames = asyncStackTrace.callFrames;\n  }\n  return stackTraceRows;\n}\n\nexport function buildStackTracePreviewContents(\n    target: SDK.Target.Target|null, linkifier: Linkifier, options: Options = {\n      widthConstrained: false,\n      stackTrace: undefined,\n      tabStops: undefined,\n    }): {element: HTMLElement, links: HTMLElement[]} {\n  const {stackTrace, tabStops} = options;\n  const element = document.createElement('span');\n  element.classList.add('monospace');\n  element.classList.add('stack-preview-container');\n  element.classList.toggle('width-constrained', options.widthConstrained);\n  element.style.display = 'inline-block';\n  const shadowRoot =\n      UI.UIUtils.createShadowRootWithCoreStyles(element, {cssFile: [jsUtilsStyles], delegatesFocus: undefined});\n  const contentElement = shadowRoot.createChild('table', 'stack-preview-container');\n  contentElement.classList.toggle('width-constrained', options.widthConstrained);\n\n  const updateCallback = renderStackTraceTable.bind(null, contentElement, element);\n  const stackTraceRows = buildStackTraceRows(\n      stackTrace ?? {callFrames: []}, target, linkifier, tabStops, updateCallback, options.showColumnNumber);\n  const links = renderStackTraceTable(contentElement, element, stackTraceRows);\n  return {element, links};\n}\n\nfunction renderStackTraceTable(\n    container: Element, parent: Element, stackTraceRows: (StackTraceRegularRow|StackTraceAsyncRow)[]): HTMLElement[] {\n  container.removeChildren();\n  const links: HTMLElement[] = [];\n\n  // The tableSection groups one or more synchronous call frames together.\n  // Wherever there is an asynchronous call, a new section is created.\n  let tableSection: Element|null = null;\n  for (const item of stackTraceRows) {\n    if (!tableSection || 'asyncDescription' in item) {\n      tableSection = container.createChild('tbody');\n    }\n\n    const row = tableSection.createChild('tr');\n    if ('asyncDescription' in item) {\n      row.createChild('td').textContent = '\\n';\n      row.createChild('td', 'stack-preview-async-description').textContent = item.asyncDescription;\n      row.createChild('td');\n      row.createChild('td');\n      row.classList.add('stack-preview-async-row');\n    } else {\n      row.createChild('td').textContent = '\\n';\n      row.createChild('td', 'function-name').textContent = item.functionName;\n      row.createChild('td').textContent = ' @ ';\n      if (item.link) {\n        row.createChild('td', 'link').appendChild(item.link);\n        links.push(item.link);\n      }\n    }\n  }\n\n  tableSection = container.createChild('tfoot');\n  const showAllRow = tableSection.createChild('tr', 'show-all-link');\n  showAllRow.createChild('td');\n  const cell = showAllRow.createChild('td') as HTMLTableCellElement;\n  cell.colSpan = 4;\n  const showAllLink = cell.createChild('span', 'link');\n  // Don't directly put the text of the link in the DOM, as it will likely be\n  // invisible and it may be confusing if it is copied to the clipboard.\n  showAllLink.createChild('span', 'css-inserted-text')\n      .setAttribute('data-inserted-text', i18nString(UIStrings.showMoreFrames));\n  showAllLink.addEventListener('click', () => {\n    container.classList.add('show-hidden-rows');\n    parent.classList.add('show-hidden-rows');\n    // If we are in a popup, this will trigger a re-layout\n    UI.GlassPane.GlassPane.containerMoved(container);\n  }, false);\n  const showLessRow = tableSection.createChild('tr', 'show-less-link');\n  showLessRow.createChild('td');\n  const showLesscell = showLessRow.createChild('td') as HTMLTableCellElement;\n  showLesscell.colSpan = 4;\n  const showLessLink = showLesscell.createChild('span', 'link');\n  showLessLink.createChild('span', 'css-inserted-text')\n      .setAttribute('data-inserted-text', i18nString(UIStrings.showLess));\n  showLessLink.addEventListener('click', () => {\n    container.classList.remove('show-hidden-rows');\n    parent.classList.remove('show-hidden-rows');\n    // If we are in a popup, this will trigger a re-layout\n    UI.GlassPane.GlassPane.containerMoved(container);\n  }, false);\n\n  return links;\n}\n\nexport interface Options {\n  stackTrace: Protocol.Runtime.StackTrace|undefined;\n  tabStops: boolean|undefined;\n  // Whether the width of stack trace preview\n  // is constrained to its container or whether\n  // it can grow the container.\n  widthConstrained?: boolean;\n  showColumnNumber?: boolean;\n}\n\nexport interface StackTraceRegularRow {\n  functionName: string;\n  link: HTMLElement|null;\n}\n\nexport interface StackTraceAsyncRow {\n  asyncDescription: string;\n}\n"],
  "mappings": ";AAmCA,YAAY,YAAY;AACxB,YAAY,UAAU;AACtB,YAAY,SAAS;AAErB,YAAY,cAAc;AAC1B,YAAY,mBAAmB;AAC/B,YAAY,QAAQ;AAEpB,OAAO,mBAAmB;AAC1B,SAAQ,UAAU,iBAAiB,iBAAgB;AAEnD,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA,EAIhB,kBAAkB;AAAA;AAAA;AAAA;AAAA,EAIlB,aAAa;AAAA;AAAA;AAAA;AAAA,EAIb,gBAAgB;AAAA;AAAA;AAAA;AAAA,EAIhB,UAAU;AAAA;AAAA;AAAA;AAAA,EAIV,eAAe;AACjB;AACA,MAAM,OAAO,KAAK,KAAK,kBAAkB,qDAAqD,SAAS;AACvG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW,IAAI;AAEpE,SAAS,oBAAoB,MAAe,OAAoB;AAC9D,QAAM,cAAc,IAAI,GAAG,YAAY,YAAY,KAAK;AACxD,QAAM,QAAQ,IAAI;AAClB,QAAM,aAAa,UAAU,WAAW,IAAI;AAC5C,MAAI,cACA,SAAS,kBAAkB,kBAAkB,SAAS,EAAE,0BAA0B,WAAW,YAAY,GAAG;AAC9G,QAAI,SAAS,kBAAkB,kBAAkB,SAAS,EAAE,sBAAsB,WAAW,aAAa,IAAI,CAAC,GAAG;AAChH,kBAAY,aAAa,EAAE;AAAA,QACvB,WAAW,UAAU,gBAAgB;AAAA,QACrC,MACI,SAAS,kBAAkB,kBAAkB,SAAS,EAAE,yBAAyB,WAAW,YAAY;AAAA,QAC5G,EAAC,cAAc,0BAAyB;AAAA,MAAC;AAAA,IAC/C,OAAO;AACL,kBAAY,aAAa,EAAE;AAAA,QACvB,WAAW,UAAU,WAAW;AAAA,QAChC,MAAM,SAAS,kBAAkB,kBAAkB,SAAS,EAAE,uBAAuB,WAAW,YAAY;AAAA,QAC5G,EAAC,cAAc,qBAAoB;AAAA,MAAC;AAAA,IAC1C;AAAA,EACF;AACA,cAAY,sBAAsB,KAAK;AACvC,OAAK,YAAY,KAAK;AACxB;AAEO,gBAAS,oBACZ,YACA,QACA,WACA,UACA,gBACA,kBAC+C;AACjD,QAAM,iBAA8D,CAAC;AAErE,MAAI,gBAAgB;AAClB,UAAM,YAAY,IAAI,OAAO,UAAU,UAAU,GAAG;AACpD,cAAU,iBAAiB,gBAAgB,uBAAuB,MAAM;AACtE,WAAK,UAAU,SAAS,YAAY,eAAe,cAAc,CAAC;AAAA,IACpE,CAAC;AAAA,EACH;AAEA,WAAS,0BACLA,aACAC,sBAA6D,QAAiB;AAChF,QAAI,WAAoC;AACxC,QAAIA,qBAAoB;AACtB,iBAAW;AAAA,QACT,kBAAkB,GAAG,QAAQ,qBAAqBD,YAAW,aAAaC,mBAAkB;AAAA,MAC9F;AACA,qBAAe,KAAK,QAAQ;AAAA,IAC9B;AACA,QAAI,2CAA2C;AAC/C,eAAW,cAAcD,YAAW,YAAY;AAC9C,YAAM,eAAe,GAAG,QAAQ,qBAAqB,WAAW,YAAY;AAC5E,YAAM,OAAO,UAAU,6BAA6B,QAAQ,YAAY;AAAA,QACtE;AAAA,QACA,SAAS,QAAQ,QAAQ;AAAA,QACzB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,MACpB,CAAC;AACD,UAAI,MAAM;AACR,aAAK,aAAa,SAAS,GAAG,cAAc,KAAK,aAAa,EAAE,MAAM,EAAC,OAAO,KAAI,CAAC,CAAC,EAAE;AACtF,aAAK,iBAAiB,eAAe,oBAAoB,KAAK,MAAM,IAAI,CAAC;AAEzE,YAAI,CAAC,KAAK,aAAa;AACrB,eAAK,cAAc,WAAW,UAAU,aAAa;AAAA,QACvD;AAAA,MACF;AACA,qBAAe,KAAK,EAAC,cAAc,KAAI,CAAC;AACxC,iDAA2C;AAAA,QACzC,IAAI,cAAc;AAAA,QAClB,IAAI,cAAc;AAAA,MACpB,EAAE,SAAS,WAAW,GAAG;AAAA,IAC3B;AAAA,EACF;AAEA,4BAA0B,UAAU;AACpC,MAAI,qBAAqB,WAAW;AACpC,WAAS,kBAAkB,WAAW,QAAQ,iBAAiB,kBAAkB,gBAAgB,QAAQ;AACvG,QAAI,gBAAgB,WAAW,QAAQ;AACrC,gCAA0B,iBAAiB,kBAAkB;AAAA,IAC/D;AACA,yBAAqB,gBAAgB;AAAA,EACvC;AACA,SAAO;AACT;AAEO,gBAAS,+BACZ,QAAgC,WAAsB,UAAmB;AAAA,EACvE,kBAAkB;AAAA,EAClB,YAAY;AAAA,EACZ,UAAU;AACZ,GAAiD;AACnD,QAAM,EAAC,YAAY,SAAQ,IAAI;AAC/B,QAAM,UAAU,SAAS,cAAc,MAAM;AAC7C,UAAQ,UAAU,IAAI,WAAW;AACjC,UAAQ,UAAU,IAAI,yBAAyB;AAC/C,UAAQ,UAAU,OAAO,qBAAqB,QAAQ,gBAAgB;AACtE,UAAQ,MAAM,UAAU;AACxB,QAAM,aACF,GAAG,QAAQ,+BAA+B,SAAS,EAAC,SAAS,CAAC,aAAa,GAAG,gBAAgB,OAAS,CAAC;AAC5G,QAAM,iBAAiB,WAAW,YAAY,SAAS,yBAAyB;AAChF,iBAAe,UAAU,OAAO,qBAAqB,QAAQ,gBAAgB;AAE7E,QAAM,iBAAiB,sBAAsB,KAAK,MAAM,gBAAgB,OAAO;AAC/E,QAAM,iBAAiB;AAAA,IACnB,cAAc,EAAC,YAAY,CAAC,EAAC;AAAA,IAAG;AAAA,IAAQ;AAAA,IAAW;AAAA,IAAU;AAAA,IAAgB,QAAQ;AAAA,EAAgB;AACzG,QAAM,QAAQ,sBAAsB,gBAAgB,SAAS,cAAc;AAC3E,SAAO,EAAC,SAAS,MAAK;AACxB;AAEA,SAAS,sBACL,WAAoB,QAAiB,gBAA4E;AACnH,YAAU,eAAe;AACzB,QAAM,QAAuB,CAAC;AAI9B,MAAI,eAA6B;AACjC,aAAW,QAAQ,gBAAgB;AACjC,QAAI,CAAC,gBAAgB,sBAAsB,MAAM;AAC/C,qBAAe,UAAU,YAAY,OAAO;AAAA,IAC9C;AAEA,UAAM,MAAM,aAAa,YAAY,IAAI;AACzC,QAAI,sBAAsB,MAAM;AAC9B,UAAI,YAAY,IAAI,EAAE,cAAc;AACpC,UAAI,YAAY,MAAM,iCAAiC,EAAE,cAAc,KAAK;AAC5E,UAAI,YAAY,IAAI;AACpB,UAAI,YAAY,IAAI;AACpB,UAAI,UAAU,IAAI,yBAAyB;AAAA,IAC7C,OAAO;AACL,UAAI,YAAY,IAAI,EAAE,cAAc;AACpC,UAAI,YAAY,MAAM,eAAe,EAAE,cAAc,KAAK;AAC1D,UAAI,YAAY,IAAI,EAAE,cAAc;AACpC,UAAI,KAAK,MAAM;AACb,YAAI,YAAY,MAAM,MAAM,EAAE,YAAY,KAAK,IAAI;AACnD,cAAM,KAAK,KAAK,IAAI;AAAA,MACtB;AAAA,IACF;AAAA,EACF;AAEA,iBAAe,UAAU,YAAY,OAAO;AAC5C,QAAM,aAAa,aAAa,YAAY,MAAM,eAAe;AACjE,aAAW,YAAY,IAAI;AAC3B,QAAM,OAAO,WAAW,YAAY,IAAI;AACxC,OAAK,UAAU;AACf,QAAM,cAAc,KAAK,YAAY,QAAQ,MAAM;AAGnD,cAAY,YAAY,QAAQ,mBAAmB,EAC9C,aAAa,sBAAsB,WAAW,UAAU,cAAc,CAAC;AAC5E,cAAY,iBAAiB,SAAS,MAAM;AAC1C,cAAU,UAAU,IAAI,kBAAkB;AAC1C,WAAO,UAAU,IAAI,kBAAkB;AAEvC,OAAG,UAAU,UAAU,eAAe,SAAS;AAAA,EACjD,GAAG,KAAK;AACR,QAAM,cAAc,aAAa,YAAY,MAAM,gBAAgB;AACnE,cAAY,YAAY,IAAI;AAC5B,QAAM,eAAe,YAAY,YAAY,IAAI;AACjD,eAAa,UAAU;AACvB,QAAM,eAAe,aAAa,YAAY,QAAQ,MAAM;AAC5D,eAAa,YAAY,QAAQ,mBAAmB,EAC/C,aAAa,sBAAsB,WAAW,UAAU,QAAQ,CAAC;AACtE,eAAa,iBAAiB,SAAS,MAAM;AAC3C,cAAU,UAAU,OAAO,kBAAkB;AAC7C,WAAO,UAAU,OAAO,kBAAkB;AAE1C,OAAG,UAAU,UAAU,eAAe,SAAS;AAAA,EACjD,GAAG,KAAK;AAER,SAAO;AACT;",
  "names": ["stackTrace", "previousCallFrames"]
}
