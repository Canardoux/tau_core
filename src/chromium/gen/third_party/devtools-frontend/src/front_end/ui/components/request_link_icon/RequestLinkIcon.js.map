{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/components/request_link_icon/RequestLinkIcon.ts"],
  "sourcesContent": ["// Copyright (c) 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/components/icon_button/icon_button.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport type * as Logs from '../../../models/logs/logs.js';\nimport * as NetworkForward from '../../../panels/network/forward/forward.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport requestLinkIconStyles from './requestLinkIcon.css.js';\n\nconst {html} = LitHtml;\n\nconst UIStrings = {\n  /**\n   * @description Title for a link to show a request in the network panel\n   * @example {https://example.org/index.html} url\n   */\n  clickToShowRequestInTheNetwork: 'Click to open the network panel and show request for URL: {url}',\n  /**\n   * @description Title for an link to show a request that is unavailable because the request couldn't be resolved\n   */\n  requestUnavailableInTheNetwork: 'Request unavailable in the network panel, try reloading the inspected page',\n  /**\n   * @description Label for the shortened URL displayed in a link to show a request in the network panel\n   */\n  shortenedURL: 'Shortened URL',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/components/request_link_icon/RequestLinkIcon.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nexport interface RequestLinkIconData {\n  linkToPreflight?: boolean;\n  request?: SDK.NetworkRequest.NetworkRequest|null;\n  affectedRequest?: {requestId: Protocol.Network.RequestId, url?: string};\n  highlightHeader?: {section: NetworkForward.UIRequestLocation.UIHeaderSection, name: string};\n  networkTab?: NetworkForward.UIRequestLocation.UIRequestTabs;\n  requestResolver?: Logs.RequestResolver.RequestResolver;\n  displayURL?: boolean;\n  // If displayURL && urlToDisplay !== undefined, uses urlToDisplay for the text of the link.\n  // If displayURL only, uses filename of the URL.\n  urlToDisplay?: string;\n  additionalOnClickAction?: () => void;\n  revealOverride?: (revealable: unknown, omitFocus?: boolean) => Promise<void>;\n}\n\nexport const extractShortPath = (path: Platform.DevToolsPath.UrlString): string => {\n  // 1st regex matches everything after last '/'\n  // if path ends with '/', 2nd regex returns everything between the last two '/'\n  return (/[^/]+$/.exec(path) || /[^/]+\\/$/.exec(path) || [''])[0];\n};\n\nexport class RequestLinkIcon extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #linkToPreflight?: boolean;\n  // The value `null` indicates that the request is not available,\n  // `undefined` that it is still being resolved.\n  #request?: SDK.NetworkRequest.NetworkRequest|null;\n  #highlightHeader?: {section: NetworkForward.UIRequestLocation.UIHeaderSection, name: string};\n  #requestResolver?: Logs.RequestResolver.RequestResolver;\n  #displayURL: boolean = false;\n  #urlToDisplay?: string;\n  #networkTab?: NetworkForward.UIRequestLocation.UIRequestTabs;\n  #affectedRequest?: {requestId: Protocol.Network.RequestId, url?: string};\n  #additionalOnClickAction?: () => void;\n  #reveal = Common.Revealer.reveal;\n\n  set data(data: RequestLinkIconData) {\n    this.#linkToPreflight = data.linkToPreflight;\n    this.#request = data.request;\n    if (data.affectedRequest) {\n      this.#affectedRequest = {...data.affectedRequest};\n    }\n    this.#highlightHeader = data.highlightHeader;\n    this.#networkTab = data.networkTab;\n    this.#requestResolver = data.requestResolver;\n    this.#displayURL = data.displayURL ?? false;\n    this.#urlToDisplay = data.urlToDisplay;\n    this.#additionalOnClickAction = data.additionalOnClickAction;\n    if (data.revealOverride) {\n      this.#reveal = data.revealOverride;\n    }\n    if (!this.#request && data.affectedRequest) {\n      if (!this.#requestResolver) {\n        throw new Error('A `RequestResolver` must be provided if an `affectedRequest` is provided.');\n      }\n      this.#requestResolver.waitFor(data.affectedRequest.requestId)\n          .then(request => {\n            this.#request = request;\n            return this.#render();\n          })\n          .catch(() => {\n            this.#request = null;\n          });\n    }\n    void this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [requestLinkIconStyles];\n  }\n\n  get data(): RequestLinkIconData {\n    return {\n      linkToPreflight: this.#linkToPreflight,\n      request: this.#request,\n      affectedRequest: this.#affectedRequest,\n      highlightHeader: this.#highlightHeader,\n      networkTab: this.#networkTab,\n      requestResolver: this.#requestResolver,\n      displayURL: this.#displayURL,\n      urlToDisplay: this.#urlToDisplay,\n      additionalOnClickAction: this.#additionalOnClickAction,\n      revealOverride: this.#reveal !== Common.Revealer.reveal ? this.#reveal : undefined,\n    };\n  }\n\n  handleClick(event: MouseEvent): void {\n    if (event.button !== 0) {\n      return;  // Only handle left-click for now.\n    }\n    const linkedRequest = this.#linkToPreflight ? this.#request?.preflightRequest() : this.#request;\n    if (!linkedRequest) {\n      return;\n    }\n    if (this.#highlightHeader) {\n      const requestLocation = NetworkForward.UIRequestLocation.UIRequestLocation.header(\n          linkedRequest, this.#highlightHeader.section, this.#highlightHeader.name);\n      void this.#reveal(requestLocation);\n    } else {\n      const requestLocation = NetworkForward.UIRequestLocation.UIRequestLocation.tab(\n          linkedRequest, this.#networkTab ?? NetworkForward.UIRequestLocation.UIRequestTabs.HEADERS_COMPONENT);\n      void this.#reveal(requestLocation);\n    }\n    this.#additionalOnClickAction?.();\n    event.consume();\n  }\n\n  #getTooltip(): Platform.UIString.LocalizedString {\n    if (this.#request) {\n      return i18nString(UIStrings.clickToShowRequestInTheNetwork, {url: this.#request.url()});\n    }\n    return i18nString(UIStrings.requestUnavailableInTheNetwork);\n  }\n\n  #getUrlForDisplaying(): Platform.DevToolsPath.UrlString|undefined {\n    if (!this.#request) {\n      return this.#affectedRequest?.url as Platform.DevToolsPath.UrlString;\n    }\n    return this.#request.url();\n  }\n\n  #maybeRenderURL(): LitHtml.LitTemplate {\n    if (!this.#displayURL) {\n      return LitHtml.nothing;\n    }\n\n    const url = this.#getUrlForDisplaying();\n    if (!url) {\n      return LitHtml.nothing;\n    }\n\n    if (this.#urlToDisplay) {\n      return html`<span title=${url}>${this.#urlToDisplay}</span>`;\n    }\n\n    const filename = extractShortPath(url);\n    return html`<span aria-label=${i18nString(UIStrings.shortenedURL)} title=${url}>${filename}</span>`;\n  }\n\n  async #render(): Promise<void> {\n    return coordinator.write(() => {\n      // clang-format off\n      LitHtml.render(html`\n      <button class=${LitHtml.Directives.classMap({link: Boolean(this.#request)})}\n              title=${this.#getTooltip()}\n              jslog=${VisualLogging.link('request').track({click: true})}\n              @click=${this.handleClick}>\n        <devtools-icon name=\"arrow-up-down-circle\"></devtools-icon>\n        ${this.#maybeRenderURL()}\n      </button>`,\n      this.#shadow, {host: this});\n      // clang-format on\n    });\n  }\n}\n\ncustomElements.define('devtools-request-link-icon', RequestLinkIcon);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-request-link-icon': RequestLinkIcon;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
