{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/ContextMenu.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2009 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as VisualLogging from '../visual_logging/visual_logging.js';\n\nimport {ActionRegistry} from './ActionRegistry.js';\nimport type {Key, Modifier} from './KeyboardShortcut.js';\nimport {ShortcutRegistry} from './ShortcutRegistry.js';\nimport {SoftContextMenu, type SoftContextMenuDescriptor} from './SoftContextMenu.js';\nimport {deepElementFromEvent} from './UIUtils.js';\n\nexport class Item {\n  private readonly typeInternal: string;\n  protected readonly label: string|undefined;\n  protected accelerator?: Host.InspectorFrontendHostAPI.AcceleratorDescriptor;\n  protected readonly previewFeature: boolean;\n  protected disabled: boolean|undefined;\n  private readonly checked: boolean|undefined;\n  protected isDevToolsPerformanceMenuItem: boolean;\n  protected contextMenu: ContextMenu|null;\n  protected idInternal: number|undefined;\n  customElement?: Element;\n  private shortcut?: string;\n  #tooltip: Common.UIString.LocalizedString|undefined;\n  protected jslogContext: string|undefined;\n\n  constructor(\n      contextMenu: ContextMenu|null, type: 'checkbox'|'item'|'separator'|'subMenu', label?: string,\n      isPreviewFeature?: boolean, disabled?: boolean, checked?: boolean,\n      accelerator?: Host.InspectorFrontendHostAPI.AcceleratorDescriptor, tooltip?: Platform.UIString.LocalizedString,\n      jslogContext?: string) {\n    this.typeInternal = type;\n    this.label = label;\n    this.previewFeature = Boolean(isPreviewFeature);\n    this.accelerator = accelerator;\n    this.disabled = disabled;\n    this.checked = checked;\n    this.isDevToolsPerformanceMenuItem = false;\n    this.contextMenu = contextMenu;\n    this.idInternal = undefined;\n    this.#tooltip = tooltip;\n    if (type === 'item' || type === 'checkbox') {\n      this.idInternal = contextMenu ? contextMenu.nextId() : 0;\n    }\n    this.jslogContext = jslogContext;\n  }\n\n  id(): number {\n    if (this.idInternal === undefined) {\n      throw new Error('Tried to access a ContextMenu Item ID but none was set.');\n    }\n    return this.idInternal;\n  }\n\n  type(): string {\n    return this.typeInternal;\n  }\n\n  isPreviewFeature(): boolean {\n    return this.previewFeature;\n  }\n\n  isEnabled(): boolean {\n    return !this.disabled;\n  }\n\n  setEnabled(enabled: boolean): void {\n    this.disabled = !enabled;\n  }\n\n  buildDescriptor(): SoftContextMenuDescriptor|Host.InspectorFrontendHostAPI.ContextMenuDescriptor {\n    switch (this.typeInternal) {\n      case 'item': {\n        const result: SoftContextMenuDescriptor = {\n          type: 'item',\n          id: this.idInternal,\n          label: this.label,\n          isExperimentalFeature: this.previewFeature,\n          enabled: !this.disabled,\n          checked: undefined,\n          subItems: undefined,\n          tooltip: this.#tooltip,\n          jslogContext: this.jslogContext,\n        };\n        if (this.customElement) {\n          result.element = this.customElement;\n        }\n        if (this.shortcut) {\n          result.shortcut = this.shortcut;\n        }\n        if (this.accelerator) {\n          result.accelerator = this.accelerator;\n          if (this.isDevToolsPerformanceMenuItem) {\n            result.isDevToolsPerformanceMenuItem = true;\n          }\n        }\n        return result;\n      }\n      case 'separator': {\n        return {\n          type: 'separator',\n          id: undefined,\n          label: undefined,\n          enabled: undefined,\n          checked: undefined,\n          subItems: undefined,\n        };\n      }\n      case 'checkbox': {\n        const result: SoftContextMenuDescriptor = {\n          type: 'checkbox',\n          id: this.idInternal,\n          label: this.label,\n          checked: Boolean(this.checked),\n          enabled: !this.disabled,\n          subItems: undefined,\n          tooltip: this.#tooltip,\n          jslogContext: this.jslogContext,\n        };\n        if (this.customElement) {\n          result.element = this.customElement;\n        }\n        return result;\n      }\n    }\n    throw new Error('Invalid item type:' + this.typeInternal);\n  }\n\n  setAccelerator(key: Key, modifiers: Modifier[]): void {\n    const modifierSum = modifiers.reduce((result, modifier) => result + modifier.value, 0);\n    this.accelerator = {keyCode: key.code, modifiers: modifierSum};\n  }\n\n  // This influences whether accelerators will be shown for native menus on Mac.\n  // Use this ONLY for performance menus and ONLY where accelerators are critical\n  // for a smooth user journey and heavily context dependent.\n  setIsDevToolsPerformanceMenuItem(isDevToolsPerformanceMenuItem: boolean): void {\n    this.isDevToolsPerformanceMenuItem = isDevToolsPerformanceMenuItem;\n  }\n\n  setShortcut(shortcut: string): void {\n    this.shortcut = shortcut;\n  }\n}\n\nexport class Section {\n  readonly contextMenu: ContextMenu|null;\n  readonly items: Item[];\n  constructor(contextMenu: ContextMenu|null) {\n    this.contextMenu = contextMenu;\n    this.items = [];\n  }\n\n  appendItem(label: string, handler: () => void, options?: {\n    accelerator?: Host.InspectorFrontendHostAPI.AcceleratorDescriptor,\n    isPreviewFeature?: boolean,\n    disabled?: boolean,\n    additionalElement?: Element,\n    tooltip?: Platform.UIString.LocalizedString,\n    jslogContext?: string,\n  }): Item {\n    const item = new Item(\n        this.contextMenu, 'item', label, options?.isPreviewFeature, options?.disabled, undefined, options?.accelerator,\n        options?.tooltip, options?.jslogContext);\n    if (options?.additionalElement) {\n      item.customElement = options?.additionalElement;\n    }\n    this.items.push(item);\n    if (this.contextMenu) {\n      this.contextMenu.setHandler(item.id(), handler);\n    }\n    return item;\n  }\n\n  appendCustomItem(element: Element, jslogContext?: string): Item {\n    const item = new Item(\n        this.contextMenu, 'item', undefined, undefined, undefined, undefined, undefined, undefined, jslogContext);\n    item.customElement = element;\n    this.items.push(item);\n    return item;\n  }\n\n  appendSeparator(): Item {\n    const item = new Item(this.contextMenu, 'separator');\n    this.items.push(item);\n    return item;\n  }\n\n  appendAction(actionId: string, label?: string, optional?: boolean): void {\n    if (optional && !ActionRegistry.instance().hasAction(actionId)) {\n      return;\n    }\n    const action = ActionRegistry.instance().getAction(actionId);\n    if (!label) {\n      label = action.title();\n    }\n    const result = this.appendItem(label, action.execute.bind(action), {\n      disabled: !action.enabled(),\n      jslogContext: actionId,\n    });\n    const shortcut = ShortcutRegistry.instance().shortcutTitleForAction(actionId);\n    if (shortcut) {\n      result.setShortcut(shortcut);\n    }\n  }\n\n  appendSubMenuItem(label: string, disabled?: boolean, jslogContext?: string): SubMenu {\n    const item = new SubMenu(this.contextMenu, label, disabled, jslogContext);\n    item.init();\n    this.items.push(item);\n    return item;\n  }\n\n  appendCheckboxItem(label: string, handler: () => void, options?: {\n    checked?: boolean,\n    disabled?: boolean,\n    additionalElement?: Element,\n    tooltip?: Platform.UIString.LocalizedString,\n    jslogContext?: string,\n  }): Item {\n    const item = new Item(\n        this.contextMenu, 'checkbox', label, undefined, options?.disabled, options?.checked, undefined,\n        options?.tooltip, options?.jslogContext);\n    this.items.push(item);\n    if (this.contextMenu) {\n      this.contextMenu.setHandler(item.id(), handler);\n    }\n    if (options?.additionalElement) {\n      item.customElement = options.additionalElement;\n    }\n    return item;\n  }\n}\n\nexport class SubMenu extends Item {\n  readonly sections: Map<string, Section>;\n  private readonly sectionList: Section[];\n\n  constructor(contextMenu: ContextMenu|null, label?: string, disabled?: boolean, jslogContext?: string) {\n    super(contextMenu, 'subMenu', label, undefined, disabled, undefined, undefined, undefined, jslogContext);\n    this.sections = new Map();\n    this.sectionList = [];\n  }\n\n  init(): void {\n    ContextMenu.groupWeights.forEach(name => this.section(name));\n  }\n\n  section(name?: string): Section {\n    if (!name) {\n      name = 'default';\n    }\n    let section: Section|(Section | null | undefined) = name ? this.sections.get(name) : null;\n    if (!section) {\n      section = new Section(this.contextMenu);\n      if (name) {\n        this.sections.set(name, section);\n        this.sectionList.push(section);\n      } else {\n        this.sectionList.splice(ContextMenu.groupWeights.indexOf('default'), 0, section);\n      }\n    }\n    return section;\n  }\n\n  headerSection(): Section {\n    return this.section('header');\n  }\n\n  newSection(): Section {\n    return this.section('new');\n  }\n\n  revealSection(): Section {\n    return this.section('reveal');\n  }\n\n  clipboardSection(): Section {\n    return this.section('clipboard');\n  }\n\n  editSection(): Section {\n    return this.section('edit');\n  }\n\n  debugSection(): Section {\n    return this.section('debug');\n  }\n\n  viewSection(): Section {\n    return this.section('view');\n  }\n\n  defaultSection(): Section {\n    return this.section('default');\n  }\n\n  overrideSection(): Section {\n    return this.section('override');\n  }\n\n  saveSection(): Section {\n    return this.section('save');\n  }\n\n  footerSection(): Section {\n    return this.section('footer');\n  }\n\n  override buildDescriptor(): SoftContextMenuDescriptor|Host.InspectorFrontendHostAPI.ContextMenuDescriptor {\n    const result: Host.InspectorFrontendHostAPI.ContextMenuDescriptor|SoftContextMenuDescriptor = {\n      type: 'subMenu',\n      label: this.label,\n      accelerator: this.accelerator,\n      isDevToolsPerformanceMenuItem: this.accelerator ? this.isDevToolsPerformanceMenuItem : undefined,\n      isExperimentalFeature: this.previewFeature,\n      enabled: !this.disabled,\n      subItems: [],\n      id: undefined,\n      checked: undefined,\n      jslogContext: this.jslogContext,\n    };\n\n    const nonEmptySections = this.sectionList.filter(section => Boolean(section.items.length));\n    for (const section of nonEmptySections) {\n      for (const item of section.items) {\n        if (!result.subItems) {\n          result.subItems = [];\n        }\n        result.subItems.push(item.buildDescriptor());\n      }\n      if (section !== nonEmptySections[nonEmptySections.length - 1]) {\n        if (!result.subItems) {\n          result.subItems = [];\n        }\n        result.subItems.push({\n          type: 'separator',\n          id: undefined,\n          subItems: undefined,\n          checked: undefined,\n          enabled: undefined,\n          label: undefined,\n        });\n      }\n    }\n    return result;\n  }\n\n  appendItemsAtLocation(location: string): void {\n    const items: ContextMenuItemRegistration[] = getRegisteredItems();\n    items.sort((firstItem, secondItem) => {\n      const order1 = firstItem.order || 0;\n      const order2 = secondItem.order || 0;\n      return order1 - order2;\n    });\n    for (const item of items) {\n      if (item.experiment && !Root.Runtime.experiments.isEnabled(item.experiment)) {\n        continue;\n      }\n\n      const itemLocation = item.location;\n      const actionId = item.actionId;\n      if (!itemLocation || !itemLocation.startsWith(location + '/')) {\n        continue;\n      }\n\n      const section = itemLocation.substr(location.length + 1);\n      if (!section || section.includes('/')) {\n        continue;\n      }\n\n      if (actionId) {\n        this.section(section).appendAction(actionId);\n      }\n    }\n  }\n\n  private static uniqueSectionName: number = 0;\n}\n\nexport interface ContextMenuOptions {\n  useSoftMenu?: boolean;\n  keepOpen?: boolean;\n  onSoftMenuClosed?: () => void;\n  x?: number;\n  y?: number;\n}\n\nexport class ContextMenu extends SubMenu {\n  protected override contextMenu: this;\n  private pendingTargets: unknown[];\n  private readonly event: MouseEvent;\n  private readonly useSoftMenu: boolean;\n  private readonly keepOpen: boolean;\n  private x: number;\n  private y: number;\n  private onSoftMenuClosed?: () => void;\n  private jsLogContext?: string;\n  private readonly handlers: Map<number, () => void>;\n  override idInternal: number;\n  private softMenu?: SoftContextMenu;\n  private contextMenuLabel?: string;\n  private openHostedMenu: Host.InspectorFrontendHostAPI.ContextMenuDescriptor[]|null;\n  private eventTarget: EventTarget|null;\n  private loggableParent: Element|null = null;\n\n  constructor(event: Event, options: ContextMenuOptions = {}) {\n    super(null);\n    const mouseEvent = (event as MouseEvent);\n    this.contextMenu = this;\n    super.init();\n    this.pendingTargets = [];\n    this.event = mouseEvent;\n    this.eventTarget = this.event.target;\n    this.useSoftMenu = Boolean(options.useSoftMenu);\n    this.keepOpen = Boolean(options.keepOpen);\n    this.x = options.x === undefined ? mouseEvent.x : options.x;\n    this.y = options.y === undefined ? mouseEvent.y : options.y;\n    this.onSoftMenuClosed = options.onSoftMenuClosed;\n    this.handlers = new Map();\n    this.idInternal = 0;\n    this.openHostedMenu = null;\n\n    let target = (deepElementFromEvent(event) || event.target) as Element | null;\n    if (target) {\n      this.appendApplicableItems((target as Object));\n      while (target instanceof Element && !target.hasAttribute('jslog')) {\n        target = target.parentElementOrShadowHost() ?? null;\n      }\n      if (target instanceof Element) {\n        this.loggableParent = target;\n      }\n    }\n  }\n\n  static initialize(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.SetUseSoftMenu, setUseSoftMenu);\n    function setUseSoftMenu(event: Common.EventTarget.EventTargetEvent<boolean>): void {\n      ContextMenu.useSoftMenu = event.data;\n    }\n  }\n\n  static installHandler(doc: Document): void {\n    doc.body.addEventListener('contextmenu', handler, false);\n\n    function handler(event: Event): void {\n      const contextMenu = new ContextMenu(event);\n      void contextMenu.show();\n    }\n  }\n\n  nextId(): number {\n    return this.idInternal++;\n  }\n\n  isHostedMenuOpen(): boolean {\n    return Boolean(this.openHostedMenu);\n  }\n\n  getItems(): SoftContextMenuDescriptor[] {\n    return this.softMenu?.getItems() || [];\n  }\n\n  setChecked(item: SoftContextMenuDescriptor, checked: boolean): void {\n    this.softMenu?.setChecked(item, checked);\n  }\n\n  async show(): Promise<void> {\n    ContextMenu.pendingMenu = this;\n    this.event.consume(true);\n    const loadedProviders = await Promise.all(this.pendingTargets.map(async target => {\n      const providers = await loadApplicableRegisteredProviders(target);\n      return {target, providers};\n    }));\n\n    // After loading all providers, the contextmenu might be hidden again, so bail out.\n    if (ContextMenu.pendingMenu !== this) {\n      return;\n    }\n    ContextMenu.pendingMenu = null;\n\n    for (const {target, providers} of loadedProviders) {\n      for (const provider of providers) {\n        provider.appendApplicableItems(this.event, this, target);\n      }\n    }\n\n    this.pendingTargets = [];\n\n    this.innerShow();\n  }\n\n  discard(): void {\n    if (this.softMenu) {\n      this.softMenu.discard();\n    }\n  }\n\n  private registerLoggablesWithin(\n      descriptors: Host.InspectorFrontendHostAPI.ContextMenuDescriptor[],\n      parent?: Host.InspectorFrontendHostAPI.ContextMenuDescriptor): void {\n    for (const descriptor of descriptors) {\n      if (descriptor.jslogContext) {\n        if (descriptor.type === 'checkbox') {\n          VisualLogging.registerLoggable(\n              descriptor, `${VisualLogging.toggle().track({click: true}).context(descriptor.jslogContext)}`,\n              parent || descriptors);\n        } else if (descriptor.type === 'item') {\n          VisualLogging.registerLoggable(\n              descriptor, `${VisualLogging.action().track({click: true}).context(descriptor.jslogContext)}`,\n              parent || descriptors);\n        } else if (descriptor.type === 'subMenu') {\n          VisualLogging.registerLoggable(\n              descriptor, `${VisualLogging.item().context(descriptor.jslogContext)}`, parent || descriptors);\n        }\n        if (descriptor.subItems) {\n          this.registerLoggablesWithin(descriptor.subItems, descriptor);\n        }\n      }\n    }\n  }\n\n  private innerShow(): void {\n    if (!this.eventTarget) {\n      return;\n    }\n\n    const menuObject = this.buildMenuDescriptors();\n    const ownerDocument = (this.eventTarget as HTMLElement).ownerDocument;\n    if (this.useSoftMenu || ContextMenu.useSoftMenu ||\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.isHostedMode()) {\n      this.softMenu = new SoftContextMenu(\n          (menuObject as SoftContextMenuDescriptor[]), this.itemSelected.bind(this), this.keepOpen, undefined,\n          this.onSoftMenuClosed, this.loggableParent);\n      // let soft context menu focus on the first item when the event is triggered by a non-mouse event\n      // add another check of button value to differentiate mouse event with 'shift + f10' keyboard event\n      const isMouseEvent =\n          (this.event as PointerEvent).pointerType === 'mouse' && (this.event as PointerEvent).button >= 0;\n      this.softMenu.setFocusOnTheFirstItem(!isMouseEvent);\n      this.softMenu.show((ownerDocument as Document), new AnchorBox(this.x, this.y, 0, 0));\n      if (this.contextMenuLabel) {\n        this.softMenu.setContextMenuElementLabel(this.contextMenuLabel);\n      }\n    } else {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.showContextMenuAtPoint(\n          this.x, this.y, menuObject, (ownerDocument as Document));\n\n      function listenToEvents(this: ContextMenu): void {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n            Host.InspectorFrontendHostAPI.Events.ContextMenuCleared, this.menuCleared, this);\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n            Host.InspectorFrontendHostAPI.Events.ContextMenuItemSelected, this.onItemSelected, this);\n      }\n      VisualLogging.registerLoggable(menuObject, `${VisualLogging.menu()}`, this.loggableParent);\n      this.registerLoggablesWithin(menuObject);\n      this.openHostedMenu = menuObject;\n      // showContextMenuAtPoint call above synchronously issues a clear event for previous context menu (if any),\n      // so we skip it before subscribing to the clear event.\n      queueMicrotask(listenToEvents.bind(this));\n    }\n  }\n\n  setContextMenuLabel(label: string): void {\n    this.contextMenuLabel = label;\n  }\n\n  setX(x: number): void {\n    this.x = x;\n  }\n\n  setY(y: number): void {\n    this.y = y;\n  }\n\n  setHandler(id: number, handler: () => void): void {\n    if (handler) {\n      this.handlers.set(id, handler);\n    }\n  }\n\n  invokeHandler(id: number): void {\n    const handler = this.handlers.get(id);\n    if (handler) {\n      handler.call(this);\n    }\n  }\n\n  private buildMenuDescriptors(): (SoftContextMenuDescriptor|Host.InspectorFrontendHostAPI.ContextMenuDescriptor)[] {\n    return super.buildDescriptor().subItems as (\n               SoftContextMenuDescriptor | Host.InspectorFrontendHostAPI.ContextMenuDescriptor)[];\n  }\n\n  private onItemSelected(event: Common.EventTarget.EventTargetEvent<number>): void {\n    this.itemSelected(event.data);\n  }\n\n  private itemSelected(id: number): void {\n    this.invokeHandler(id);\n    if (this.openHostedMenu) {\n      const itemWithId = (items: Host.InspectorFrontendHostAPI.ContextMenuDescriptor[],\n                          id: number): Host.InspectorFrontendHostAPI.ContextMenuDescriptor|null => {\n        for (const item of items) {\n          if (item.id === id) {\n            return item;\n          }\n          const subitem = item.subItems && itemWithId(item.subItems, id);\n          if (subitem) {\n            return subitem;\n          }\n        }\n        return null;\n      };\n      const item = itemWithId(this.openHostedMenu, id);\n      if (item && item.jslogContext) {\n        void VisualLogging.logClick(item, new MouseEvent('click'));\n      }\n    }\n\n    this.menuCleared();\n  }\n\n  private menuCleared(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.removeEventListener(\n        Host.InspectorFrontendHostAPI.Events.ContextMenuCleared, this.menuCleared, this);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.removeEventListener(\n        Host.InspectorFrontendHostAPI.Events.ContextMenuItemSelected, this.onItemSelected, this);\n    if (this.openHostedMenu) {\n      void VisualLogging.logResize(this.openHostedMenu, new DOMRect(0, 0, 0, 0));\n    }\n    this.openHostedMenu = null;\n    if (!this.keepOpen) {\n      this.onSoftMenuClosed?.();\n    }\n  }\n\n  /**\n   * Appends the `target` to the list of pending targets for which context menu providers\n   * will be loaded when showing the context menu. If the `target` was already appended\n   * before, it just ignores this call.\n   *\n   * @param target an object for which we can have registered menu item providers.\n   */\n  appendApplicableItems(target: unknown): void {\n    if (this.pendingTargets.includes(target)) {\n      return;\n    }\n    this.pendingTargets.push(target);\n  }\n\n  markAsMenuItemCheckBox(): void {\n    if (this.softMenu) {\n      this.softMenu.markAsMenuItemCheckBox();\n    }\n  }\n\n  private static pendingMenu: ContextMenu|null = null;\n  private static useSoftMenu = false;\n  static readonly groupWeights =\n      ['header', 'new', 'reveal', 'edit', 'clipboard', 'debug', 'view', 'default', 'override', 'save', 'footer'];\n}\n\nexport interface Provider<T> {\n  appendApplicableItems(event: Event, contextMenu: ContextMenu, target: T): void;\n}\n\nconst registeredProviders: ProviderRegistration<unknown>[] = [];\n\nexport function registerProvider<T>(registration: ProviderRegistration<T>): void {\n  registeredProviders.push(registration);\n}\n\nasync function loadApplicableRegisteredProviders(target: unknown): Promise<Array<Provider<unknown>>> {\n  const providers: Array<Provider<unknown>> = [];\n  for (const providerRegistration of registeredProviders) {\n    if (!Root.Runtime.Runtime.isDescriptorEnabled(\n            {experiment: providerRegistration.experiment, condition: undefined})) {\n      continue;\n    }\n    if (providerRegistration.contextTypes) {\n      for (const contextType of providerRegistration.contextTypes()) {\n        if (target instanceof contextType) {\n          providers.push(await providerRegistration.loadProvider());\n        }\n      }\n    }\n  }\n  return providers;\n}\n\nconst registeredItemsProviders: ContextMenuItemRegistration[] = [];\n\nexport function registerItem(registration: ContextMenuItemRegistration): void {\n  registeredItemsProviders.push(registration);\n}\n\nexport function maybeRemoveItem(registration: ContextMenuItemRegistration): boolean {\n  const itemIndex = registeredItemsProviders.findIndex(\n      item => item.actionId === registration.actionId && item.location === registration.location);\n  if (itemIndex < 0) {\n    return false;\n  }\n  registeredItemsProviders.splice(itemIndex, 1);\n  return true;\n}\n\nfunction getRegisteredItems(): ContextMenuItemRegistration[] {\n  return registeredItemsProviders;\n}\n\nexport const enum ItemLocation {\n  DEVICE_MODE_MENU_SAVE = 'deviceModeMenu/save',\n  MAIN_MENU = 'mainMenu',\n  MAIN_MENU_DEFAULT = 'mainMenu/default',\n  MAIN_MENU_FOOTER = 'mainMenu/footer',\n  MAIN_MENU_HELP_DEFAULT = 'mainMenuHelp/default',\n  NAVIGATOR_MENU_DEFAULT = 'navigatorMenu/default',\n  PROFILER_MENU_DEFAULT = 'profilerMenu/default',\n  TIMELINE_MENU_OPEN = 'timelineMenu/open',\n}\n\nexport interface ProviderRegistration<T> {\n  contextTypes: () => Array<abstract new(...any: any[]) => T>;\n  loadProvider: () => Promise<Provider<T>>;\n  experiment?: Root.Runtime.ExperimentName;\n}\n\nexport interface ContextMenuItemRegistration {\n  location: ItemLocation;\n  actionId: string;\n  order?: number;\n  experiment?: Root.Runtime.ExperimentName;\n}\n"],
  "mappings": "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",
  "names": ["listenToEvents", "id", "item", "ItemLocation"]
}
