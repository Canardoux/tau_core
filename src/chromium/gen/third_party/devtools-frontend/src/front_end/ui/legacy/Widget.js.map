{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/Widget.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n * Copyright (C) 2011 Google Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport '../../core/dom_extension/dom_extension.js';\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as LitHtml from '../../ui/lit-html/lit-html.js';\nimport * as Helpers from '../components/helpers/helpers.js';\nimport * as RenderCoordinator from '../components/render_coordinator/render_coordinator.js';\n\nimport {Constraints, Size} from './Geometry.js';\nimport * as ThemeSupport from './theme_support/theme_support.js';\nimport {createShadowRootWithCoreStyles} from './UIUtils.js';\nimport {XWidget} from './XWidget.js';\n\n// Remember the original DOM mutation methods here, since we\n// will override them below to sanity check the Widget system.\nconst originalAppendChild = Element.prototype.appendChild;\nconst originalInsertBefore = Element.prototype.insertBefore;\nconst originalRemoveChild = Element.prototype.removeChild;\nconst originalRemoveChildren = Element.prototype.removeChildren;\n\nfunction assert(condition: unknown, message: string): void {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nexport class WidgetElement<WidgetT extends Widget> extends HTMLElement {\n  widgetClass?: new(...args: any[]) => WidgetT;\n  widgetParams: unknown[] = [];\n\n  createWidget(): WidgetT {\n    if (!this.widgetClass) {\n      throw new Error('No widgetClass defined');\n    }\n\n    return new this.widgetClass(...this.widgetParams, this);\n  }\n\n  connectedCallback(): void {\n    Widget.getOrCreateWidget(this).show(this.parentElement as HTMLElement);\n  }\n}\n\ncustomElements.define('devtools-widget', WidgetElement);\n\ntype Constructor<T, Args extends unknown[]> = {\n  new (...args: Args): T,\n};\n\nexport function widgetRef<T extends Widget, Args extends unknown[]>(\n    type: Constructor<T, Args>, callback: (_: T) => void): ReturnType<typeof LitHtml.Directives.ref> {\n  return LitHtml.Directives.ref((e?: Element) => {\n    if (!(e instanceof HTMLElement)) {\n      return;\n    }\n    const widget = Widget.getOrCreateWidget(e);\n    if (!(widget instanceof type)) {\n      throw new Error(`Expected an element with a widget of type ${type.name} but got ${e?.constructor?.name}`);\n    }\n    callback(widget);\n  });\n}\n\nconst widgetCounterMap = new WeakMap<Node, number>();\nconst widgetMap = new WeakMap<Node, Widget>();\n\nfunction incrementWidgetCounter(parentElement: Element, childElement: Element): void {\n  const count = (widgetCounterMap.get(childElement) || 0) + (widgetMap.get(childElement) ? 1 : 0);\n  for (let el: Element|null = parentElement; el; el = el.parentElementOrShadowHost()) {\n    widgetCounterMap.set(el, (widgetCounterMap.get(el) || 0) + count);\n  }\n}\n\nfunction decrementWidgetCounter(parentElement: Element, childElement: Element): void {\n  const count = (widgetCounterMap.get(childElement) || 0) + (widgetMap.get(childElement) ? 1 : 0);\n  for (let el: Element|null = parentElement; el; el = el.parentElementOrShadowHost()) {\n    const elCounter = widgetCounterMap.get(el);\n    if (elCounter) {\n      widgetCounterMap.set(el, elCounter - count);\n    }\n  }\n}\n\nlet id = 0;\n\nexport class Widget {\n  readonly element: HTMLElement;\n  contentElement: HTMLElement;\n  private shadowRoot: ShadowRoot|undefined;\n  protected visibleInternal: boolean;\n  private isRoot: boolean;\n  private isShowingInternal: boolean;\n  private readonly childrenInternal: Widget[];\n  private hideOnDetach: boolean;\n  private notificationDepth: number;\n  private invalidationsSuspended: number;\n  defaultFocusedChild: Widget|null;\n  private parentWidgetInternal: Widget|null;\n  private defaultFocusedElement?: Element|null;\n  private cachedConstraints?: Constraints;\n  private constraintsInternal?: Constraints;\n  private invalidationsRequested?: boolean;\n  private externallyManaged?: boolean;\n  #id = `${this.constructor.name}_${id++}`;\n  constructor(useShadowDom?: boolean, delegatesFocus?: boolean, element?: HTMLElement) {\n    this.element = element || document.createElement('div');\n    this.shadowRoot = this.element.shadowRoot || undefined;\n    if (useShadowDom && !this.shadowRoot) {\n      this.element.classList.add('vbox');\n      this.element.classList.add('flex-auto');\n      this.shadowRoot = createShadowRootWithCoreStyles(this.element, {\n        cssFile: undefined,\n        delegatesFocus,\n      });\n      this.contentElement = document.createElement('div');\n      this.shadowRoot.appendChild(this.contentElement);\n    } else {\n      this.contentElement = this.element;\n    }\n    this.contentElement.classList.add('widget');\n    widgetMap.set(this.element, this);\n    this.visibleInternal = false;\n    this.isRoot = false;\n    this.isShowingInternal = false;\n    this.childrenInternal = [];\n    this.hideOnDetach = false;\n    this.notificationDepth = 0;\n    this.invalidationsSuspended = 0;\n    this.defaultFocusedChild = null;\n    this.parentWidgetInternal = null;\n  }\n\n  /**\n   * Returns the {@link Widget} whose element is the given `node`, or `undefined`\n   * if the `node` is not an element for a widget.\n   *\n   * @param node a DOM node.\n   * @returns the {@link Widget} that is attached to the `node` or `undefined`.\n   */\n  static get(node: Node): Widget|undefined {\n    return widgetMap.get(node);\n  }\n\n  static getOrCreateWidget(element: HTMLElement): Widget {\n    const widget = Widget.get(element);\n    if (widget) {\n      return widget;\n    }\n    if (element instanceof WidgetElement) {\n      return element.createWidget();\n    }\n    return new Widget(undefined, undefined, element);\n  }\n\n  markAsRoot(): void {\n    assert(!this.element.parentElement, 'Attempt to mark as root attached node');\n    this.isRoot = true;\n  }\n\n  parentWidget(): Widget|null {\n    return this.parentWidgetInternal;\n  }\n\n  children(): Widget[] {\n    return this.childrenInternal;\n  }\n\n  childWasDetached(_widget: Widget): void {\n  }\n\n  isShowing(): boolean {\n    return this.isShowingInternal;\n  }\n\n  shouldHideOnDetach(): boolean {\n    if (!this.element.parentElement) {\n      return false;\n    }\n    if (this.hideOnDetach) {\n      return true;\n    }\n    for (const child of this.childrenInternal) {\n      if (child.shouldHideOnDetach()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  setHideOnDetach(): void {\n    this.hideOnDetach = true;\n  }\n\n  private inNotification(): boolean {\n    return Boolean(this.notificationDepth) ||\n        Boolean(this.parentWidgetInternal && this.parentWidgetInternal.inNotification());\n  }\n\n  private parentIsShowing(): boolean {\n    if (this.isRoot) {\n      return true;\n    }\n    return this.parentWidgetInternal !== null && this.parentWidgetInternal.isShowing();\n  }\n\n  protected callOnVisibleChildren(method: (this: Widget) => void): void {\n    const copy = this.childrenInternal.slice();\n    for (let i = 0; i < copy.length; ++i) {\n      if (copy[i].parentWidgetInternal === this && copy[i].visibleInternal) {\n        method.call(copy[i]);\n      }\n    }\n  }\n\n  private processWillShow(): void {\n    this.callOnVisibleChildren(this.processWillShow);\n    this.isShowingInternal = true;\n  }\n\n  private processWasShown(): void {\n    if (this.inNotification()) {\n      return;\n    }\n    this.restoreScrollPositions();\n    this.notify(this.wasShown);\n    this.callOnVisibleChildren(this.processWasShown);\n  }\n\n  private processWillHide(): void {\n    if (this.inNotification()) {\n      return;\n    }\n    this.storeScrollPositions();\n\n    this.callOnVisibleChildren(this.processWillHide);\n    this.notify(this.willHide);\n    this.isShowingInternal = false;\n  }\n\n  private processWasHidden(): void {\n    this.callOnVisibleChildren(this.processWasHidden);\n  }\n\n  private processOnResize(): void {\n    if (this.inNotification()) {\n      return;\n    }\n    if (!this.isShowing()) {\n      return;\n    }\n    this.notify(this.onResize);\n    this.callOnVisibleChildren(this.processOnResize);\n  }\n\n  private notify(notification: (this: Widget) => void): void {\n    ++this.notificationDepth;\n    try {\n      notification.call(this);\n    } finally {\n      --this.notificationDepth;\n    }\n  }\n\n  wasShown(): void {\n  }\n\n  willHide(): void {\n  }\n\n  onResize(): void {\n  }\n\n  onLayout(): void {\n  }\n\n  onDetach(): void {\n  }\n\n  async ownerViewDisposed(): Promise<void> {\n  }\n\n  show(parentElement: Element, insertBefore?: Node|null): void {\n    assert(parentElement, 'Attempt to attach widget with no parent element');\n\n    if (!this.isRoot) {\n      // Update widget hierarchy.\n      let currentParent: Element|null = parentElement;\n      let currentWidget = undefined;\n      while (!currentWidget) {\n        if (!currentParent) {\n          throw new Error('Attempt to attach widget to orphan node');\n        }\n        currentWidget = widgetMap.get(currentParent);\n        currentParent = currentParent.parentElementOrShadowHost();\n      }\n      this.attach(currentWidget);\n    }\n    this.showWidgetInternal(parentElement, insertBefore);\n  }\n\n  private attach(parentWidget: Widget): void {\n    if (parentWidget === this.parentWidgetInternal) {\n      return;\n    }\n    if (this.parentWidgetInternal) {\n      this.detach();\n    }\n    this.parentWidgetInternal = parentWidget;\n    this.parentWidgetInternal.childrenInternal.push(this);\n    this.isRoot = false;\n  }\n\n  showWidget(): void {\n    if (this.visibleInternal) {\n      return;\n    }\n    if (!this.element.parentElement) {\n      throw new Error('Attempt to show widget that is not hidden using hideWidget().');\n    }\n    this.showWidgetInternal(this.element.parentElement, this.element.nextSibling);\n  }\n\n  private showWidgetInternal(parentElement: Element, insertBefore?: Node|null): void {\n    let currentParent: Element|null = parentElement;\n    while (currentParent && !widgetMap.get(currentParent)) {\n      currentParent = currentParent.parentElementOrShadowHost();\n    }\n\n    if (this.isRoot) {\n      assert(!currentParent, 'Attempt to show root widget under another widget');\n    } else {\n      assert(\n          currentParent && widgetMap.get(currentParent) === this.parentWidgetInternal,\n          'Attempt to show under node belonging to alien widget');\n    }\n\n    const wasVisible = this.visibleInternal;\n    if (wasVisible && this.element.parentElement === parentElement) {\n      return;\n    }\n\n    this.visibleInternal = true;\n\n    if (!wasVisible && this.parentIsShowing()) {\n      this.processWillShow();\n    }\n\n    this.element.classList.remove('hidden');\n\n    // Reparent\n    if (this.element.parentElement !== parentElement) {\n      if (!this.externallyManaged) {\n        incrementWidgetCounter(parentElement, this.element);\n      }\n      if (insertBefore) {\n        originalInsertBefore.call(parentElement, this.element, insertBefore);\n      } else {\n        originalAppendChild.call(parentElement, this.element);\n      }\n    }\n\n    if (!wasVisible && this.parentIsShowing()) {\n      this.processWasShown();\n    }\n\n    if (this.parentWidgetInternal && this.hasNonZeroConstraints()) {\n      this.parentWidgetInternal.invalidateConstraints();\n    } else {\n      this.processOnResize();\n    }\n  }\n\n  hideWidget(): void {\n    if (!this.visibleInternal) {\n      return;\n    }\n    this.hideWidgetInternal(false);\n  }\n\n  private hideWidgetInternal(removeFromDOM: boolean): void {\n    this.visibleInternal = false;\n    const {parentElement} = this.element;\n\n    if (this.parentIsShowing()) {\n      this.processWillHide();\n    }\n\n    if (removeFromDOM) {\n      if (parentElement) {\n        // Force legal removal\n        decrementWidgetCounter(parentElement, this.element);\n        originalRemoveChild.call(parentElement, this.element);\n      }\n      this.onDetach();\n    } else {\n      this.element.classList.add('hidden');\n    }\n\n    if (this.parentIsShowing()) {\n      this.processWasHidden();\n    }\n    if (this.parentWidgetInternal && this.hasNonZeroConstraints()) {\n      this.parentWidgetInternal.invalidateConstraints();\n    }\n  }\n\n  detach(overrideHideOnDetach?: boolean): void {\n    if (!this.parentWidgetInternal && !this.isRoot) {\n      return;\n    }\n\n    // hideOnDetach means that we should never remove element from dom - content\n    // has iframes and detaching it will hurt.\n    //\n    // overrideHideOnDetach will override hideOnDetach and the client takes\n    // responsibility for the consequences.\n    const removeFromDOM = overrideHideOnDetach || !this.shouldHideOnDetach();\n    if (this.visibleInternal) {\n      this.hideWidgetInternal(removeFromDOM);\n    } else if (removeFromDOM) {\n      const {parentElement} = this.element;\n      if (parentElement) {\n        // Force kick out from DOM.\n        decrementWidgetCounter(parentElement, this.element);\n        originalRemoveChild.call(parentElement, this.element);\n      }\n    }\n\n    // Update widget hierarchy.\n    if (this.parentWidgetInternal) {\n      const childIndex = this.parentWidgetInternal.childrenInternal.indexOf(this);\n      assert(childIndex >= 0, 'Attempt to remove non-child widget');\n      this.parentWidgetInternal.childrenInternal.splice(childIndex, 1);\n      if (this.parentWidgetInternal.defaultFocusedChild === this) {\n        this.parentWidgetInternal.defaultFocusedChild = null;\n      }\n      this.parentWidgetInternal.childWasDetached(this);\n      this.parentWidgetInternal = null;\n    } else {\n      assert(this.isRoot, 'Removing non-root widget from DOM');\n    }\n  }\n\n  detachChildWidgets(): void {\n    const children = this.childrenInternal.slice();\n    for (let i = 0; i < children.length; ++i) {\n      children[i].detach();\n    }\n  }\n\n  elementsToRestoreScrollPositionsFor(): Element[] {\n    return [this.element];\n  }\n\n  storeScrollPositions(): void {\n    const elements = this.elementsToRestoreScrollPositionsFor();\n    for (const container of elements) {\n      storedScrollPositions.set(container, {scrollLeft: container.scrollLeft, scrollTop: container.scrollTop});\n    }\n  }\n\n  restoreScrollPositions(): void {\n    const elements = this.elementsToRestoreScrollPositionsFor();\n    for (const container of elements) {\n      const storedPositions = storedScrollPositions.get(container);\n      if (storedPositions) {\n        container.scrollLeft = storedPositions.scrollLeft;\n        container.scrollTop = storedPositions.scrollTop;\n      }\n    }\n  }\n\n  doResize(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n    // No matter what notification we are in, dispatching onResize is not needed.\n    if (!this.inNotification()) {\n      this.callOnVisibleChildren(this.processOnResize);\n    }\n  }\n\n  doLayout(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n    this.notify(this.onLayout);\n    this.doResize();\n  }\n\n  registerRequiredCSS(cssFile: {cssContent: string}): void {\n    if (this.shadowRoot) {\n      ThemeSupport.ThemeSupport.instance().appendStyle((this.shadowRoot as DocumentFragment), cssFile);\n    } else {\n      ThemeSupport.ThemeSupport.instance().appendStyle(this.element, cssFile);\n    }\n  }\n\n  registerCSSFiles(cssFiles: CSSStyleSheet[]): void {\n    let root: ShadowRoot|Document;\n    if (this.shadowRoot) {\n      root = this.shadowRoot;\n    } else {\n      root = Helpers.GetRootNode.getRootNode(this.contentElement);\n    }\n    root.adoptedStyleSheets = root.adoptedStyleSheets.concat(cssFiles);\n  }\n\n  printWidgetHierarchy(): void {\n    const lines: string[] = [];\n    this.collectWidgetHierarchy('', lines);\n    console.log(lines.join('\\n'));  // eslint-disable-line no-console\n  }\n\n  private collectWidgetHierarchy(prefix: string, lines: string[]): void {\n    lines.push(prefix + '[' + this.element.className + ']' + (this.childrenInternal.length ? ' {' : ''));\n\n    for (let i = 0; i < this.childrenInternal.length; ++i) {\n      this.childrenInternal[i].collectWidgetHierarchy(prefix + '    ', lines);\n    }\n\n    if (this.childrenInternal.length) {\n      lines.push(prefix + '}');\n    }\n  }\n\n  setDefaultFocusedElement(element: Element|null): void {\n    this.defaultFocusedElement = element;\n  }\n\n  setDefaultFocusedChild(child: Widget): void {\n    assert(child.parentWidgetInternal === this, 'Attempt to set non-child widget as default focused.');\n    this.defaultFocusedChild = child;\n  }\n\n  focus(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n\n    const element = (this.defaultFocusedElement as HTMLElement | null);\n    if (element) {\n      if (!element.hasFocus()) {\n        element.focus();\n      }\n      return;\n    }\n\n    if (this.defaultFocusedChild && this.defaultFocusedChild.visibleInternal) {\n      this.defaultFocusedChild.focus();\n    } else {\n      for (const child of this.childrenInternal) {\n        if (child.visibleInternal) {\n          child.focus();\n          return;\n        }\n      }\n      let child = this.contentElement.traverseNextNode(this.contentElement);\n      while (child) {\n        if (child instanceof XWidget) {\n          child.focus();\n          return;\n        }\n        child = child.traverseNextNode(this.contentElement);\n      }\n    }\n  }\n\n  hasFocus(): boolean {\n    return this.element.hasFocus();\n  }\n\n  calculateConstraints(): Constraints {\n    return new Constraints();\n  }\n\n  constraints(): Constraints {\n    if (typeof this.constraintsInternal !== 'undefined') {\n      return this.constraintsInternal;\n    }\n    if (typeof this.cachedConstraints === 'undefined') {\n      this.cachedConstraints = this.calculateConstraints();\n    }\n    return this.cachedConstraints;\n  }\n\n  setMinimumAndPreferredSizes(width: number, height: number, preferredWidth: number, preferredHeight: number): void {\n    this.constraintsInternal = new Constraints(new Size(width, height), new Size(preferredWidth, preferredHeight));\n    this.invalidateConstraints();\n  }\n\n  setMinimumSize(width: number, height: number): void {\n    this.constraintsInternal = new Constraints(new Size(width, height));\n    this.invalidateConstraints();\n  }\n\n  private hasNonZeroConstraints(): boolean {\n    const constraints = this.constraints();\n    return Boolean(\n        constraints.minimum.width || constraints.minimum.height || constraints.preferred.width ||\n        constraints.preferred.height);\n  }\n\n  suspendInvalidations(): void {\n    ++this.invalidationsSuspended;\n  }\n\n  resumeInvalidations(): void {\n    --this.invalidationsSuspended;\n    if (!this.invalidationsSuspended && this.invalidationsRequested) {\n      this.invalidateConstraints();\n    }\n  }\n\n  invalidateConstraints(): void {\n    if (this.invalidationsSuspended) {\n      this.invalidationsRequested = true;\n      return;\n    }\n    this.invalidationsRequested = false;\n    const cached = this.cachedConstraints;\n    delete this.cachedConstraints;\n    const actual = this.constraints();\n    if (!actual.isEqual(cached || null) && this.parentWidgetInternal) {\n      this.parentWidgetInternal.invalidateConstraints();\n    } else {\n      this.doLayout();\n    }\n  }\n\n  // Excludes the widget from being tracked by its parents/ancestors via\n  // widgetCounter because the widget is being handled by external code.\n  // Widgets marked as being externally managed are responsible for\n  // finishing out their own lifecycle (i.e. calling detach() before being\n  // removed from the DOM). This is e.g. used for CodeMirror.\n  //\n  // Also note that this must be called before the widget is shown so that\n  // so that its ancestor's widgetCounter is not incremented.\n  markAsExternallyManaged(): void {\n    assert(!this.parentWidgetInternal, 'Attempt to mark widget as externally managed after insertion to the DOM');\n    this.externallyManaged = true;\n  }\n\n  /**\n   * Called by the RenderCoordinator to perform an update.\n   * This is not meant to be called directly. Instead, use update() to schedule an asynchronous update.\n   *\n   * @returns A promise that resolves when the update is complete.\n   */\n  protected doUpdate(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  /**\n   * Schedules an asynchronous update. The update will be deduplicated and executed with the animation frame.\n   */\n  update(): void {\n    void RenderCoordinator.RenderCoordinator.RenderCoordinator.instance().write(this.#id, () => this.doUpdate());\n  }\n\n  /**\n   * Returns a promise that resolves when the pending update is complete.\n   * Returns a resolved promise if there is no pending update.\n`  *\n   * @returns A probleme that resolves when the pending update is complete.\n   */\n  pendingUpdate(): Promise<void> {\n    return RenderCoordinator.RenderCoordinator.RenderCoordinator.instance().findPendingWrite(this.#id) ||\n        Promise.resolve();\n  }\n}\n\nconst storedScrollPositions = new WeakMap<Element, {\n  scrollLeft: number,\n  scrollTop: number,\n}>();\n\nexport class VBox extends Widget {\n  constructor(useShadowDom?: boolean, delegatesFocus?: boolean, element?: HTMLElement) {\n    super(useShadowDom, delegatesFocus, element);\n    this.contentElement.classList.add('vbox');\n  }\n\n  override calculateConstraints(): Constraints {\n    let constraints: Constraints = new Constraints();\n\n    function updateForChild(this: Widget): void {\n      const child = this.constraints();\n      constraints = constraints.widthToMax(child);\n      constraints = constraints.addHeight(child);\n    }\n\n    this.callOnVisibleChildren(updateForChild);\n    return constraints;\n  }\n}\n\nexport class HBox extends Widget {\n  constructor(useShadowDom?: boolean) {\n    super(useShadowDom);\n    this.contentElement.classList.add('hbox');\n  }\n\n  override calculateConstraints(): Constraints {\n    let constraints: Constraints = new Constraints();\n\n    function updateForChild(this: Widget): void {\n      const child = this.constraints();\n      constraints = constraints.addWidth(child);\n      constraints = constraints.heightToMax(child);\n    }\n\n    this.callOnVisibleChildren(updateForChild);\n    return constraints;\n  }\n}\n\nexport class VBoxWithResizeCallback extends VBox {\n  private readonly resizeCallback: () => void;\n  constructor(resizeCallback: () => void) {\n    super();\n    this.resizeCallback = resizeCallback;\n  }\n\n  override onResize(): void {\n    this.resizeCallback();\n  }\n}\n\nexport class WidgetFocusRestorer {\n  private widget: Widget|null;\n  private previous: HTMLElement|null;\n  constructor(widget: Widget) {\n    this.widget = widget;\n    this.previous = (Platform.DOMUtilities.deepActiveElement(widget.element.ownerDocument) as HTMLElement | null);\n    widget.focus();\n  }\n\n  restore(): void {\n    if (!this.widget) {\n      return;\n    }\n    if (this.widget.hasFocus() && this.previous) {\n      this.previous.focus();\n    }\n    this.previous = null;\n    this.widget = null;\n  }\n}\n\nElement.prototype.appendChild = function<T extends Node>(node: T): T {\n  if (widgetMap.get(node) && node.parentElement !== this) {\n    throw new Error('Attempt to add widget via regular DOM operation.');\n  }\n  return originalAppendChild.call(this, node) as T;\n};\n\nElement.prototype.insertBefore = function<T extends Node>(node: T, child: Node|null): T {\n  if (widgetMap.get(node) && node.parentElement !== this) {\n    throw new Error('Attempt to add widget via regular DOM operation.');\n  }\n  return originalInsertBefore.call(this, node, child) as T;\n};\n\nElement.prototype.removeChild = function<T extends Node>(child: T): T {\n  if (widgetCounterMap.get(child) || widgetMap.get(child)) {\n    throw new Error('Attempt to remove element containing widget via regular DOM operation');\n  }\n  return originalRemoveChild.call(this, child) as T;\n};\n\nElement.prototype.removeChildren = function(): void {\n  if (widgetCounterMap.get(this)) {\n    throw new Error('Attempt to remove element containing widget via regular DOM operation');\n  }\n  return originalRemoveChildren.call(this);\n};\n"],
  "mappings": "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",
  "names": ["child"]
}
