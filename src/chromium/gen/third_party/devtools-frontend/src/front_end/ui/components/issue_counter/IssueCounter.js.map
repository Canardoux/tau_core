{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/components/issue_counter/IssueCounter.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../icon_button/icon_button.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as IssuesManager from '../../../models/issues_manager/issues_manager.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport type * as IconButton from '../icon_button/icon_button.js';\n\nimport issueCounterStyles from './issueCounter.css.js';\n\nconst {html} = LitHtml;\n\nconst UIStrings = {\n  /**\n   *@description Label for link to Issues tab, specifying how many issues there are.\n   */\n  pageErrors: '{issueCount, plural, =1 {# page error} other {# page errors}}',\n  /**\n   *@description Label for link to Issues tab, specifying how many issues there are.\n   */\n  breakingChanges: '{issueCount, plural, =1 {# breaking change} other {# breaking changes}}',\n  /**\n   *@description Label for link to Issues tab, specifying how many issues there are.\n   */\n  possibleImprovements: '{issueCount, plural, =1 {# possible improvement} other {# possible improvements}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/components/issue_counter/IssueCounter.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport function getIssueKindIconData(issueKind: IssuesManager.Issue.IssueKind): IconButton.Icon.IconWithName {\n  switch (issueKind) {\n    case IssuesManager.Issue.IssueKind.PAGE_ERROR:\n      return {iconName: 'issue-cross-filled', color: 'var(--icon-error)', width: '20px', height: '20px'};\n    case IssuesManager.Issue.IssueKind.BREAKING_CHANGE:\n      return {iconName: 'issue-exclamation-filled', color: 'var(--icon-warning)', width: '20px', height: '20px'};\n    case IssuesManager.Issue.IssueKind.IMPROVEMENT:\n      return {iconName: 'issue-text-filled', color: 'var(--icon-info)', width: '20px', height: '20px'};\n  }\n}\n\nfunction toIconGroup({iconName, color, width, height}: IconButton.Icon.IconWithName, sizeOverride?: string):\n    IconButton.IconButton.IconWithTextData {\n  if (sizeOverride) {\n    return {iconName, iconColor: color, iconWidth: sizeOverride, iconHeight: sizeOverride};\n  }\n  return {iconName, iconColor: color, iconWidth: width, iconHeight: height};\n}\n\nexport const enum DisplayMode {\n  OMIT_EMPTY = 'OmitEmpty',\n  SHOW_ALWAYS = 'ShowAlways',\n  ONLY_MOST_IMPORTANT = 'OnlyMostImportant',\n}\n\nexport interface IssueCounterData {\n  clickHandler?: () => void;\n  tooltipCallback?: () => void;\n  leadingText?: string;\n  displayMode?: DisplayMode;\n  issuesManager: IssuesManager.IssuesManager.IssuesManager;\n  throttlerTimeout?: number;\n  accessibleName?: string;\n  compact?: boolean;\n}\n\n// Lazily instantiate the formatter as the constructor takes 50ms+\n// TODO: move me and others like me to i18n module\nconst listFormatter = (function defineFormatter() {\n  let intlListFormat: Intl.ListFormat;\n  return {\n    format(...args: Parameters<Intl.ListFormat['format']>): ReturnType<Intl.ListFormat['format']> {\n      if (!intlListFormat) {\n        const opts: Intl.ListFormatOptions = {type: 'unit', style: 'short'};\n        intlListFormat = new Intl.ListFormat(i18n.DevToolsLocale.DevToolsLocale.instance().locale, opts);\n      }\n      return intlListFormat.format(...args);\n    },\n  };\n})();\n\nexport function getIssueCountsEnumeration(\n    issuesManager: IssuesManager.IssuesManager.IssuesManager, omitEmpty: boolean = true): string {\n  const counts: [number, number, number] = [\n    issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.PAGE_ERROR),\n    issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.BREAKING_CHANGE),\n    issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.IMPROVEMENT),\n  ];\n  const phrases = [\n    i18nString(UIStrings.pageErrors, {issueCount: counts[0]}),\n    i18nString(UIStrings.breakingChanges, {issueCount: counts[1]}),\n    i18nString(UIStrings.possibleImprovements, {issueCount: counts[2]}),\n  ];\n  return listFormatter.format(phrases.filter((_, i) => omitEmpty ? counts[i] > 0 : true));\n}\n\nexport class IssueCounter extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #clickHandler: undefined|(() => void) = undefined;\n  #tooltipCallback: undefined|(() => void) = undefined;\n  #leadingText: string = '';\n  #throttler: undefined|Common.Throttler.Throttler;\n  #counts: [number, number, number] = [0, 0, 0];\n  #displayMode: DisplayMode = DisplayMode.OMIT_EMPTY;\n  #issuesManager: IssuesManager.IssuesManager.IssuesManager|undefined = undefined;\n  #accessibleName: string|undefined = undefined;\n  #throttlerTimeout: number|undefined;\n  #compact = false;\n\n  scheduleUpdate(): void {\n    if (this.#throttler) {\n      void this.#throttler.schedule(async () => this.#render());\n    } else {\n      this.#render();\n    }\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [issueCounterStyles];\n  }\n\n  set data(data: IssueCounterData) {\n    this.#clickHandler = data.clickHandler;\n    this.#leadingText = data.leadingText ?? '';\n    this.#tooltipCallback = data.tooltipCallback;\n    this.#displayMode = data.displayMode ?? DisplayMode.OMIT_EMPTY;\n    this.#accessibleName = data.accessibleName;\n    this.#throttlerTimeout = data.throttlerTimeout;\n    this.#compact = Boolean(data.compact);\n    if (this.#issuesManager !== data.issuesManager) {\n      this.#issuesManager?.removeEventListener(\n          IssuesManager.IssuesManager.Events.ISSUES_COUNT_UPDATED, this.scheduleUpdate, this);\n      this.#issuesManager = data.issuesManager;\n      this.#issuesManager.addEventListener(\n          IssuesManager.IssuesManager.Events.ISSUES_COUNT_UPDATED, this.scheduleUpdate, this);\n    }\n    if (data.throttlerTimeout !== 0) {\n      this.#throttler = new Common.Throttler.Throttler(data.throttlerTimeout ?? 100);\n    } else {\n      this.#throttler = undefined;\n    }\n    this.scheduleUpdate();\n  }\n\n  get data(): IssueCounterData {\n    return {\n      clickHandler: this.#clickHandler,\n      leadingText: this.#leadingText,\n      tooltipCallback: this.#tooltipCallback,\n      displayMode: this.#displayMode,\n      accessibleName: this.#accessibleName,\n      throttlerTimeout: this.#throttlerTimeout,\n      compact: this.#compact,\n      issuesManager: this.#issuesManager as IssuesManager.IssuesManager.IssuesManager,\n    };\n  }\n\n  #render(): void {\n    if (!this.#issuesManager) {\n      return;\n    }\n    this.#counts = [\n      this.#issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.PAGE_ERROR),\n      this.#issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.BREAKING_CHANGE),\n      this.#issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.IMPROVEMENT),\n    ];\n    const importance = [\n      IssuesManager.Issue.IssueKind.PAGE_ERROR,\n      IssuesManager.Issue.IssueKind.BREAKING_CHANGE,\n      IssuesManager.Issue.IssueKind.IMPROVEMENT,\n    ];\n    const mostImportant = importance[this.#counts.findIndex(x => x > 0) ?? 2];\n\n    const countToString = (kind: IssuesManager.Issue.IssueKind, count: number): string|undefined => {\n      switch (this.#displayMode) {\n        case DisplayMode.OMIT_EMPTY:\n          return count > 0 ? `${count}` : undefined;\n        case DisplayMode.SHOW_ALWAYS:\n          return `${count}`;\n        case DisplayMode.ONLY_MOST_IMPORTANT:\n          return kind === mostImportant ? `${count}` : undefined;\n      }\n    };\n    const iconSize = '2ex';\n    const data: IconButton.IconButton.IconButtonData = {\n      groups: [\n        {\n          ...toIconGroup(getIssueKindIconData(IssuesManager.Issue.IssueKind.PAGE_ERROR), iconSize),\n          text: countToString(IssuesManager.Issue.IssueKind.PAGE_ERROR, this.#counts[0]),\n        },\n        {\n          ...toIconGroup(getIssueKindIconData(IssuesManager.Issue.IssueKind.BREAKING_CHANGE), iconSize),\n          text: countToString(IssuesManager.Issue.IssueKind.BREAKING_CHANGE, this.#counts[1]),\n        },\n        {\n          ...toIconGroup(getIssueKindIconData(IssuesManager.Issue.IssueKind.IMPROVEMENT), iconSize),\n          text: countToString(IssuesManager.Issue.IssueKind.IMPROVEMENT, this.#counts[2]),\n        },\n      ],\n      clickHandler: this.#clickHandler,\n      leadingText: this.#leadingText,\n      accessibleName: this.#accessibleName,\n      compact: this.#compact,\n    };\n    LitHtml.render(\n        html`\n        <icon-button .data=${data} .accessibleName=${this.#accessibleName}></icon-button>\n        `,\n        this.#shadow, {host: this});\n    this.#tooltipCallback?.();\n  }\n}\n\ncustomElements.define('devtools-issue-counter', IssueCounter);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-issue-counter': IssueCounter;\n  }\n}\n"],
  "mappings": "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",
  "names": ["DisplayMode"]
}
