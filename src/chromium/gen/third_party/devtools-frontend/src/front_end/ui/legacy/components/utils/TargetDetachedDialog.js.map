{
  "version": 3,
  "sources": ["../../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/components/utils/TargetDetachedDialog.ts"],
  "sourcesContent": ["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport * as UI from '../../legacy.js';\n\nconst UIStrings = {\n  /**\n   *@description Text on the remote debugging window to indicate the connection is lost\n   */\n  websocketDisconnected: 'WebSocket disconnected',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/utils/TargetDetachedDialog.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TargetDetachedDialog extends SDK.SDKModel.SDKModel<void> implements ProtocolProxyApi.InspectorDispatcher {\n  private static hideCrashedDialog: (() => void)|null;\n  constructor(target: SDK.Target.Target) {\n    super(target);\n    target.registerInspectorDispatcher(this);\n    void target.inspectorAgent().invoke_enable();\n    // Hide all dialogs if a new top-level target is created.\n    if (target.parentTarget()?.type() === SDK.Target.Type.BROWSER && TargetDetachedDialog.hideCrashedDialog) {\n      TargetDetachedDialog.hideCrashedDialog.call(null);\n      TargetDetachedDialog.hideCrashedDialog = null;\n    }\n  }\n\n  detached({reason}: Protocol.Inspector.DetachedEvent): void {\n    UI.RemoteDebuggingTerminatedScreen.RemoteDebuggingTerminatedScreen.show(reason);\n  }\n\n  static webSocketConnectionLost(): void {\n    UI.RemoteDebuggingTerminatedScreen.RemoteDebuggingTerminatedScreen.show(\n        i18nString(UIStrings.websocketDisconnected));\n  }\n\n  targetCrashed(): void {\n    // In case of service workers targetCrashed usually signals that the worker is stopped\n    // and in any case it is restarted automatically (in which case front-end will receive\n    // targetReloadedAfterCrash event).\n    if (TargetDetachedDialog.hideCrashedDialog) {\n      return;\n    }\n    // Ignore child targets altogether.\n    const parentTarget = this.target().parentTarget();\n    if (parentTarget && parentTarget.type() !== SDK.Target.Type.BROWSER) {\n      return;\n    }\n    const dialog = new UI.Dialog.Dialog('target-crashed');\n    dialog.setSizeBehavior(UI.GlassPane.SizeBehavior.MEASURE_CONTENT);\n    dialog.addCloseButton();\n    dialog.setDimmed(true);\n    TargetDetachedDialog.hideCrashedDialog = dialog.hide.bind(dialog);\n    new UI.TargetCrashedScreen\n        .TargetCrashedScreen(() => {\n          TargetDetachedDialog.hideCrashedDialog = null;\n        })\n        .show(dialog.contentElement);\n\n    // UI.Dialog extends GlassPane and overrides the `show` method with a wider\n    // accepted type. However, TypeScript uses the supertype declaration to\n    // determine the full type, which requires a `!Document`.\n    // @ts-ignore\n    dialog.show();\n  }\n\n  /** ;\n   */\n  targetReloadedAfterCrash(): void {\n    void this.target().runtimeAgent().invoke_runIfWaitingForDebugger();\n    if (TargetDetachedDialog.hideCrashedDialog) {\n      TargetDetachedDialog.hideCrashedDialog.call(null);\n      TargetDetachedDialog.hideCrashedDialog = null;\n    }\n  }\n}\n\nSDK.SDKModel.SDKModel.register(TargetDetachedDialog, {capabilities: SDK.Target.Capability.INSPECTOR, autostart: true});\n"],
  "mappings": ";AAIA,YAAY,UAAU;AACtB,YAAY,SAAS;AAGrB,YAAY,QAAQ;AAEpB,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA,EAIhB,uBAAuB;AACzB;AACA,MAAM,OAAO,KAAK,KAAK,kBAAkB,sDAAsD,SAAS;AACxG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW,IAAI;AAC7D,aAAM,6BAA6B,IAAI,SAAS,SAA+D;AAAA,EACpH,OAAe;AAAA,EACf,YAAY,QAA2B;AACrC,UAAM,MAAM;AACZ,WAAO,4BAA4B,IAAI;AACvC,SAAK,OAAO,eAAe,EAAE,cAAc;AAE3C,QAAI,OAAO,aAAa,GAAG,KAAK,MAAM,IAAI,OAAO,KAAK,WAAW,qBAAqB,mBAAmB;AACvG,2BAAqB,kBAAkB,KAAK,IAAI;AAChD,2BAAqB,oBAAoB;AAAA,IAC3C;AAAA,EACF;AAAA,EAEA,SAAS,EAAC,OAAM,GAA2C;AACzD,OAAG,gCAAgC,gCAAgC,KAAK,MAAM;AAAA,EAChF;AAAA,EAEA,OAAO,0BAAgC;AACrC,OAAG,gCAAgC,gCAAgC;AAAA,MAC/D,WAAW,UAAU,qBAAqB;AAAA,IAAC;AAAA,EACjD;AAAA,EAEA,gBAAsB;AAIpB,QAAI,qBAAqB,mBAAmB;AAC1C;AAAA,IACF;AAEA,UAAM,eAAe,KAAK,OAAO,EAAE,aAAa;AAChD,QAAI,gBAAgB,aAAa,KAAK,MAAM,IAAI,OAAO,KAAK,SAAS;AACnE;AAAA,IACF;AACA,UAAM,SAAS,IAAI,GAAG,OAAO,OAAO,gBAAgB;AACpD,WAAO,gBAAgB,GAAG,UAAU,aAAa,eAAe;AAChE,WAAO,eAAe;AACtB,WAAO,UAAU,IAAI;AACrB,yBAAqB,oBAAoB,OAAO,KAAK,KAAK,MAAM;AAChE,QAAI,GAAG,oBACF,oBAAoB,MAAM;AACzB,2BAAqB,oBAAoB;AAAA,IAC3C,CAAC,EACA,KAAK,OAAO,cAAc;AAM/B,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA,EAIA,2BAAiC;AAC/B,SAAK,KAAK,OAAO,EAAE,aAAa,EAAE,+BAA+B;AACjE,QAAI,qBAAqB,mBAAmB;AAC1C,2BAAqB,kBAAkB,KAAK,IAAI;AAChD,2BAAqB,oBAAoB;AAAA,IAC3C;AAAA,EACF;AACF;AAEA,IAAI,SAAS,SAAS,SAAS,sBAAsB,EAAC,cAAc,IAAI,OAAO,WAAW,WAAW,WAAW,KAAI,CAAC;",
  "names": []
}
