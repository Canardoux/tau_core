{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/components/buttons/Button.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../icon_button/icon_button.js';\n\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\n\nimport buttonStyles from './button.css.legacy.js';\n\nconst {html, Directives: {ifDefined, ref, classMap}} = LitHtml;\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-button': Button;\n  }\n}\n\nexport const enum Variant {\n  PRIMARY = 'primary',\n  TONAL = 'tonal',\n  OUTLINED = 'outlined',\n  TEXT = 'text',\n  TOOLBAR = 'toolbar',\n  // Just like toolbar but has a style similar to a primary button.\n  PRIMARY_TOOLBAR = 'primary_toolbar',\n  ICON = 'icon',\n  ICON_TOGGLE = 'icon_toggle',\n  ADORNER_ICON = 'adorner_icon',\n}\n\nexport const enum Size {\n  MICRO = 'MICRO',\n  SMALL = 'SMALL',\n  REGULAR = 'REGULAR',\n}\n\nexport const enum ToggleType {\n  PRIMARY = 'primary-toggle',\n  RED = 'red-toggle',\n}\n\ntype ButtonType = 'button'|'submit'|'reset';\n\ninterface ButtonState {\n  iconUrl?: string;\n  variant: Variant;\n  size?: Size;\n  reducedFocusRing?: boolean;\n  disabled: boolean;\n  toggled?: boolean;\n  toggleOnClick?: boolean;\n  checked?: boolean;\n  active: boolean;\n  spinner?: boolean;\n  type: ButtonType;\n  value?: string;\n  title?: string;\n  iconName?: string;\n  toggledIconName?: string;\n  toggleType?: ToggleType;\n  jslogContext?: string;\n  longClickable?: boolean;\n}\n\ninterface CommonButtonData {\n  variant: Variant;\n  iconUrl?: string;\n  iconName?: string;\n  toggledIconName?: string;\n  toggleType?: ToggleType;\n  toggleOnClick?: boolean;\n  size?: Size;\n  reducedFocusRing?: boolean;\n  disabled?: boolean;\n  toggled?: boolean;\n  checked?: boolean;\n  active?: boolean;\n  spinner?: boolean;\n  type?: ButtonType;\n  value?: string;\n  title?: string;\n  jslogContext?: string;\n  longClickable?: boolean;\n}\n\nexport type ButtonData = CommonButtonData&(|{\n  variant: Variant.PRIMARY_TOOLBAR | Variant.TOOLBAR | Variant.ICON,\n  iconUrl: string,\n}|{\n  variant: Variant.PRIMARY_TOOLBAR | Variant.TOOLBAR | Variant.ICON,\n  iconName: string,\n}|{\n  variant: Variant.PRIMARY | Variant.OUTLINED | Variant.TONAL | Variant.TEXT | Variant.ADORNER_ICON,\n}|{\n  variant: Variant.ICON_TOGGLE,\n  iconName: string,\n  toggledIconName: string,\n  toggleType: ToggleType,\n  toggled: boolean,\n});\n\nexport class Button extends HTMLElement {\n  static formAssociated = true;\n  readonly #shadow = this.attachShadow({mode: 'open', delegatesFocus: true});\n  readonly #boundOnClick = this.#onClick.bind(this);\n  readonly #props: ButtonState = {\n    size: Size.REGULAR,\n    variant: Variant.PRIMARY,\n    toggleOnClick: true,\n    disabled: false,\n    active: false,\n    spinner: false,\n    type: 'button',\n    longClickable: false,\n  };\n  #internals = this.attachInternals();\n  #slotRef = LitHtml.Directives.createRef();\n\n  constructor() {\n    super();\n    this.setAttribute('role', 'presentation');\n    this.addEventListener('click', this.#boundOnClick, true);\n\n    // TODO(crbug.com/359141904): Ideally we would be using\n    // adopted style sheets for installing css styles, but this\n    // currently throws an error when sharing the styles across\n    // multiple documents. This is a workaround.\n    const styleElement = document.createElement('style');\n    styleElement.textContent = buttonStyles.cssContent;\n    this.#shadow.appendChild(styleElement);\n  }\n\n  /**\n   * Perfer using the .data= setter instead of setting the individual properties\n   * for increased type-safety.\n   */\n  set data(data: ButtonData) {\n    this.#props.variant = data.variant;\n    this.#props.iconUrl = data.iconUrl;\n    this.#props.iconName = data.iconName;\n    this.#props.toggledIconName = data.toggledIconName;\n    this.#props.toggleOnClick = data.toggleOnClick !== undefined ? data.toggleOnClick : true;\n    this.#props.size = Size.REGULAR;\n\n    if ('size' in data && data.size) {\n      this.#props.size = data.size;\n    }\n\n    this.#props.active = Boolean(data.active);\n    this.#props.spinner = Boolean('spinner' in data ? data.spinner : false);\n\n    this.#props.type = 'button';\n    if ('type' in data && data.type) {\n      this.#props.type = data.type;\n    }\n    this.#props.toggled = data.toggled;\n    this.#props.toggleType = data.toggleType;\n    this.#props.checked = data.checked;\n    this.#props.disabled = Boolean(data.disabled);\n    this.#props.title = data.title;\n    this.#props.jslogContext = data.jslogContext;\n    this.#props.longClickable = data.longClickable;\n    this.#render();\n  }\n\n  set iconUrl(iconUrl: string|undefined) {\n    this.#props.iconUrl = iconUrl;\n    this.#render();\n  }\n\n  set iconName(iconName: string|undefined) {\n    this.#props.iconName = iconName;\n    this.#render();\n  }\n\n  set toggledIconName(toggledIconName: string) {\n    this.#props.toggledIconName = toggledIconName;\n    this.#render();\n  }\n\n  set toggleType(toggleType: ToggleType) {\n    this.#props.toggleType = toggleType;\n    this.#render();\n  }\n\n  set variant(variant: Variant) {\n    this.#props.variant = variant;\n    this.#render();\n  }\n\n  set size(size: Size) {\n    this.#props.size = size;\n    this.#render();\n  }\n\n  set reducedFocusRing(reducedFocusRing: boolean) {\n    this.#props.reducedFocusRing = reducedFocusRing;\n    this.#render();\n  }\n\n  set type(type: ButtonType) {\n    this.#props.type = type;\n    this.#render();\n  }\n\n  override set title(title: string) {\n    this.#props.title = title;\n    this.#render();\n  }\n\n  get disabled(): boolean {\n    return this.#props.disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this.#setDisabledProperty(disabled);\n    this.#render();\n  }\n\n  set toggleOnClick(toggleOnClick: boolean) {\n    this.#props.toggleOnClick = toggleOnClick;\n    this.#render();\n  }\n\n  set toggled(toggled: boolean) {\n    this.#props.toggled = toggled;\n    this.#render();\n  }\n\n  get toggled(): boolean {\n    return Boolean(this.#props.toggled);\n  }\n\n  set checked(checked: boolean) {\n    this.#props.checked = checked;\n    this.#render();\n  }\n\n  set active(active: boolean) {\n    this.#props.active = active;\n    this.#render();\n  }\n\n  get active(): boolean {\n    return this.#props.active;\n  }\n\n  set spinner(spinner: boolean) {\n    this.#props.spinner = spinner;\n    this.#render();\n  }\n\n  get jslogContext(): string|undefined {\n    return this.#props.jslogContext;\n  }\n\n  set jslogContext(jslogContext: string|undefined) {\n    this.#props.jslogContext = jslogContext;\n    this.#render();\n  }\n\n  set longClickable(longClickable: boolean) {\n    this.#props.longClickable = longClickable;\n    this.#render();\n  }\n\n  #setDisabledProperty(disabled: boolean): void {\n    this.#props.disabled = disabled;\n    this.#render();\n  }\n\n  override focus(): void {\n    this.#shadow.querySelector('button')?.focus();\n  }\n\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  #onClick(event: Event): void {\n    if (this.#props.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      return;\n    }\n    if (this.form && this.#props.type === 'submit') {\n      event.preventDefault();\n      this.form.dispatchEvent(new SubmitEvent('submit', {\n        submitter: this,\n      }));\n    }\n    if (this.form && this.#props.type === 'reset') {\n      event.preventDefault();\n      this.form.reset();\n    }\n    if (this.#props.toggleOnClick && this.#props.variant === Variant.ICON_TOGGLE && this.#props.iconName) {\n      this.toggled = !this.#props.toggled;\n    }\n  }\n\n  /**\n   * Handles \"keydown\" events on the internal `<button>` element.\n   *\n   * This callback stops propagation of \"keydown\" events for Enter and Space\n   * originating from the `<button>` element, to ensure that this custom element\n   * can safely be used within parent elements (such as the `TreeOutline`) that\n   * do have \"keydown\" handlers as well.\n   *\n   * Without this special logic, the Enter and Space events would be\n   * consumed by parent elements, and no \"click\" event would be generated from\n   * this button.\n   *\n   * @param event the \"keydown\" event.\n   * @see https://crbug.com/373168872\n   */\n  #onKeydown(event: KeyboardEvent): void {\n    if (event.key !== 'Enter' && event.key !== ' ') {\n      return;\n    }\n    event.stopPropagation();\n  }\n\n  #isToolbarVariant(): boolean {\n    return this.#props.variant === Variant.TOOLBAR || this.#props.variant === Variant.PRIMARY_TOOLBAR;\n  }\n\n  #render(): void {\n    const nodes = (this.#slotRef.value as HTMLSlotElement | undefined)?.assignedNodes();\n    const isEmpty = !Boolean(nodes?.length);\n    if (!this.#props.variant) {\n      throw new Error('Button requires a variant to be defined');\n    }\n    if (this.#isToolbarVariant()) {\n      if (!this.#props.iconUrl && !this.#props.iconName) {\n        throw new Error('Toolbar button requires an icon');\n      }\n      if (!isEmpty) {\n        throw new Error('Toolbar button does not accept children');\n      }\n    }\n    if (this.#props.variant === Variant.ICON) {\n      if (!this.#props.iconUrl && !this.#props.iconName) {\n        throw new Error('Icon button requires an icon');\n      }\n      if (!isEmpty) {\n        throw new Error('Icon button does not accept children');\n      }\n    }\n    if (this.#props.iconName && this.#props.iconUrl) {\n      throw new Error('Both iconName and iconUrl are provided.');\n    }\n    const hasIcon = Boolean(this.#props.iconUrl) || Boolean(this.#props.iconName);\n    const classes = {\n      primary: this.#props.variant === Variant.PRIMARY,\n      tonal: this.#props.variant === Variant.TONAL,\n      outlined: this.#props.variant === Variant.OUTLINED,\n      text: this.#props.variant === Variant.TEXT,\n      toolbar: this.#isToolbarVariant(),\n      'primary-toolbar': this.#props.variant === Variant.PRIMARY_TOOLBAR,\n      icon: this.#props.variant === Variant.ICON || this.#props.variant === Variant.ICON_TOGGLE ||\n          this.#props.variant === Variant.ADORNER_ICON,\n      'primary-toggle': this.#props.toggleType === ToggleType.PRIMARY,\n      'red-toggle': this.#props.toggleType === ToggleType.RED,\n      toggled: Boolean(this.#props.toggled),\n      checked: Boolean(this.#props.checked),\n      'text-with-icon': hasIcon && !isEmpty,\n      'only-icon': hasIcon && isEmpty,\n      micro: this.#props.size === Size.MICRO,\n      small: this.#props.size === Size.SMALL,\n      'reduced-focus-ring': Boolean(this.#props.reducedFocusRing),\n      active: this.#props.active,\n    };\n    const spinnerClasses = {\n      primary: this.#props.variant === Variant.PRIMARY,\n      outlined: this.#props.variant === Variant.OUTLINED,\n      disabled: this.#props.disabled,\n      spinner: true,\n    };\n    const jslog =\n        this.#props.jslogContext && VisualLogging.action().track({click: true}).context(this.#props.jslogContext);\n    // clang-format off\n    LitHtml.render(\n      html`\n        <button title=${ifDefined(this.#props.title)}\n                .disabled=${this.#props.disabled}\n                class=${classMap(classes)}\n                aria-pressed=${ifDefined(this.#props.toggled)}\n                jslog=${ifDefined(jslog)}\n                @keydown=${this.#onKeydown}\n        >${hasIcon\n            ? html`\n                <devtools-icon name=${ifDefined(this.#props.toggled ? this.#props.toggledIconName : this.#props.iconName || this.#props.iconUrl)}>\n                </devtools-icon>`\n            : ''}\n          ${this.#props.longClickable ? html`<devtools-icon name=${'triangle-bottom-right'} class=\"long-click\"\n            ></devtools-icon>`\n      : ''}\n          ${this.#props.spinner ? html`<span class=${classMap(spinnerClasses)}></span>` : ''}\n          <slot @slotchange=${this.#render} ${ref(this.#slotRef)}></slot>\n        </button>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  // Based on https://web.dev/more-capable-form-controls/ to make custom elements form-friendly.\n  // Form controls usually expose a \"value\" property.\n  get value(): string {\n    return this.#props.value || '';\n  }\n  set value(value: string) {\n    this.#props.value = value;\n  }\n\n  // The following properties and methods aren't strictly required,\n  // but browser-level form controls provide them. Providing them helps\n  // ensure consistency with browser-provided controls.\n  get form(): HTMLFormElement|null {\n    return this.#internals.form;\n  }\n  get name(): string|null {\n    return this.getAttribute('name');\n  }\n  get type(): ButtonType {\n    return this.#props.type;\n  }\n  get validity(): ValidityState {\n    return this.#internals.validity;\n  }\n  get validationMessage(): string {\n    return this.#internals.validationMessage;\n  }\n  get willValidate(): boolean {\n    return this.#internals.willValidate;\n  }\n  checkValidity(): boolean {\n    return this.#internals.checkValidity();\n  }\n  reportValidity(): boolean {\n    return this.#internals.reportValidity();\n  }\n}\n\ncustomElements.define('devtools-button', Button);\n"],
  "mappings": "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",
  "names": ["Variant", "Size", "ToggleType"]
}
