{
  "version": 3,
  "sources": ["../../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/components/quick_open/FilteredListWidget.ts"],
  "sourcesContent": ["// Copyright 2012 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as Diff from '../../../../third_party/diff/diff.js';\nimport * as TextPrompt from '../../../../ui/components/text_prompt/text_prompt.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\n\nimport filteredListWidgetStyles from './filteredListWidget.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Aria label for quick open dialog prompt\n   */\n  quickOpenPrompt: 'Quick open prompt',\n  /**\n   * @description Title of quick open dialog\n   */\n  quickOpen: 'Quick open',\n  /**\n   * @description Text to show no results have been found\n   */\n  noResultsFound: 'No results found',\n  /**\n   * @description Aria alert to read the item in list when navigating with screen readers\n   * @example {name} PH1\n   * @example {2} PH2\n   * @example {5} PH3\n   */\n  sItemSOfS: '{PH1}, item {PH2} of {PH3}',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/quick_open/FilteredListWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class FilteredListWidget extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.VBox>(\n    UI.Widget.VBox) implements UI.ListControl.ListDelegate<number> {\n  private promptHistory: string[];\n  private scoringTimer: number;\n  private filterTimer: number;\n  private loadTimeout: number;\n  private refreshListWithCurrentResult!: (() => void)|undefined;\n  private dialog!: UI.Dialog.Dialog|undefined;\n  private query = '';\n  private readonly inputBoxElement: TextPrompt.TextPrompt.TextPrompt;\n  private readonly hintElement: HTMLElement;\n  private readonly bottomElementsContainer: HTMLElement;\n  private readonly progressElement: HTMLElement;\n  private progressBarElement: HTMLElement;\n  private readonly items: UI.ListModel.ListModel<number>;\n  private list: UI.ListControl.ListControl<number>;\n  private readonly itemElementsContainer: HTMLDivElement;\n  private notFoundElement: HTMLElement;\n  private prefix = '';\n  private provider: Provider|null;\n  private readonly queryChangedCallback?: (arg0: string) => void;\n\n  constructor(provider: Provider|null, promptHistory?: string[], queryChangedCallback?: ((arg0: string) => void)) {\n    super(true);\n    this.promptHistory = promptHistory || [];\n\n    this.scoringTimer = 0;\n    this.filterTimer = 0;\n    this.loadTimeout = 0;\n\n    this.contentElement.classList.add('filtered-list-widget');\n    const listener = (this.onKeyDown.bind(this) as (arg0: Event) => void);\n    this.contentElement.addEventListener('keydown', listener);\n    UI.ARIAUtils.markAsCombobox(this.contentElement);\n\n    const hbox = this.contentElement.createChild('div', 'hbox');\n\n    this.inputBoxElement = new TextPrompt.TextPrompt.TextPrompt();\n    this.inputBoxElement.data = {ariaLabel: i18nString(UIStrings.quickOpenPrompt), prefix: '', suggestion: ''};\n    this.inputBoxElement.addEventListener(\n        TextPrompt.TextPrompt.PromptInputEvent.eventName, this.onInput.bind(this), false);\n    this.inputBoxElement.setAttribute('jslog', `${VisualLogging.textField().track({\n                                        change: true,\n                                        keydown: 'ArrowUp|ArrowDown|PageUp|PageDown|Enter|Tab|>|@|:|?|!',\n                                      })}`);\n    hbox.appendChild(this.inputBoxElement);\n\n    this.hintElement = hbox.createChild('span', 'filtered-list-widget-hint');\n\n    this.bottomElementsContainer = this.contentElement.createChild('div', 'vbox');\n    this.progressElement = this.bottomElementsContainer.createChild('div', 'filtered-list-widget-progress');\n    this.progressBarElement = this.progressElement.createChild('div', 'filtered-list-widget-progress-bar');\n\n    this.items = new UI.ListModel.ListModel();\n    this.list = new UI.ListControl.ListControl(this.items, this, UI.ListControl.ListMode.EqualHeightItems);\n    this.itemElementsContainer = this.list.element;\n    this.itemElementsContainer.classList.add('container');\n    this.bottomElementsContainer.appendChild(this.itemElementsContainer);\n    this.itemElementsContainer.addEventListener('click', this.onClick.bind(this), false);\n    this.itemElementsContainer.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n    UI.ARIAUtils.markAsListBox(this.itemElementsContainer);\n    UI.ARIAUtils.setControls(this.inputBoxElement, this.itemElementsContainer);\n    UI.ARIAUtils.setAutocomplete(this.inputBoxElement, UI.ARIAUtils.AutocompleteInteractionModel.LIST);\n\n    this.notFoundElement = this.bottomElementsContainer.createChild('div', 'not-found-text');\n    this.notFoundElement.classList.add('hidden');\n\n    this.setDefaultFocusedElement(this.inputBoxElement);\n\n    this.provider = provider;\n    this.queryChangedCallback = queryChangedCallback;\n  }\n\n  static highlightRanges(element: Element, query: string, caseInsensitive?: boolean): boolean {\n    if (!query) {\n      return false;\n    }\n\n    function rangesForMatch(text: string, query: string): TextUtils.TextRange.SourceRange[]|null {\n      const opcodes = Diff.Diff.DiffWrapper.charDiff(query, text);\n      let offset = 0;\n      const ranges = [];\n      for (let i = 0; i < opcodes.length; ++i) {\n        const opcode = opcodes[i];\n        if (opcode[0] === Diff.Diff.Operation.Equal) {\n          ranges.push(new TextUtils.TextRange.SourceRange(offset, opcode[1].length));\n        } else if (opcode[0] !== Diff.Diff.Operation.Insert) {\n          return null;\n        }\n        offset += opcode[1].length;\n      }\n      return ranges;\n    }\n\n    if (element.textContent === null) {\n      return false;\n    }\n    const text = element.textContent;\n    let ranges = rangesForMatch(text, query);\n    if (!ranges || caseInsensitive) {\n      ranges = rangesForMatch(text.toUpperCase(), query.toUpperCase());\n    }\n    if (ranges) {\n      UI.UIUtils.highlightRangesWithStyleClass(element, ranges, 'highlight');\n      return true;\n    }\n    return false;\n  }\n\n  setCommandPrefix(commandPrefix: string): void {\n    this.inputBoxElement.setPrefix(commandPrefix);\n  }\n\n  setCommandSuggestion(suggestion: string): void {\n    this.inputBoxElement.setSuggestion(suggestion);\n  }\n\n  setHintElement(hint: string): void {\n    this.hintElement.textContent = hint;\n  }\n\n  /**\n   * Sets the text prompt's accessible title. By default, it is \"Quick open prompt\".\n   */\n  setPromptTitle(title: string): void {\n    UI.ARIAUtils.setLabel(this.inputBoxElement, title);\n  }\n\n  showAsDialog(dialogTitle?: string): void {\n    if (!dialogTitle) {\n      dialogTitle = i18nString(UIStrings.quickOpen);\n    }\n\n    this.dialog = new UI.Dialog.Dialog('quick-open');\n    UI.ARIAUtils.setLabel(this.dialog.contentElement, dialogTitle);\n    this.dialog.setMaxContentSize(new UI.Geometry.Size(504, 340));\n    this.dialog.setSizeBehavior(UI.GlassPane.SizeBehavior.SET_EXACT_WIDTH_MAX_HEIGHT);\n    this.dialog.setContentPosition(null, 22);\n    this.dialog.contentElement.style.setProperty('border-radius', '4px');\n    this.show(this.dialog.contentElement);\n    UI.ARIAUtils.setExpanded(this.contentElement, true);\n    void this.dialog.once(UI.Dialog.Events.HIDDEN).then(() => {\n      this.dispatchEventToListeners(Events.HIDDEN);\n    });\n    // @ts-ignore\n    this.dialog.show();\n  }\n\n  setPrefix(prefix: string): void {\n    this.prefix = prefix;\n  }\n\n  setProvider(provider: Provider|null): void {\n    if (provider === this.provider) {\n      return;\n    }\n\n    if (this.provider) {\n      this.provider.detach();\n    }\n    this.clearTimers();\n\n    this.provider = provider;\n    if (this.isShowing()) {\n      this.attachProvider();\n    }\n  }\n\n  setQuerySelectedRange(startIndex: number, endIndex: number): void {\n    this.inputBoxElement.setSelectedRange(startIndex, endIndex);\n  }\n\n  private attachProvider(): void {\n    this.items.replaceAll([]);\n    this.list.invalidateItemHeight();\n    if (this.provider) {\n      this.provider.setRefreshCallback(this.itemsLoaded.bind(this, this.provider));\n      this.provider.attach();\n    }\n    this.itemsLoaded(this.provider);\n  }\n\n  private cleanValue(): string {\n    return this.query.substring(this.prefix.length).trim();\n  }\n\n  override wasShown(): void {\n    this.registerCSSFiles([filteredListWidgetStyles]);\n    this.attachProvider();\n  }\n\n  override willHide(): void {\n    if (this.provider) {\n      this.provider.detach();\n    }\n    this.clearTimers();\n    UI.ARIAUtils.setExpanded(this.contentElement, false);\n  }\n\n  private clearTimers(): void {\n    clearTimeout(this.filterTimer);\n    clearTimeout(this.scoringTimer);\n    clearTimeout(this.loadTimeout);\n    this.filterTimer = 0;\n    this.scoringTimer = 0;\n    this.loadTimeout = 0;\n    this.refreshListWithCurrentResult = undefined;\n  }\n\n  private onEnter(event: Event): void {\n    if (!this.provider) {\n      return;\n    }\n    event.preventDefault();\n    const index = this.list.selectedIndex();\n    if (index < 0) {\n      return;\n    }\n    const element = this.list.elementAtIndex(index);\n    if (element) {\n      void VisualLogging.logClick(element, event);\n    }\n\n    const selectedIndexInProvider = this.provider.itemCount() ? this.list.selectedItem() : null;\n    this.selectItem(selectedIndexInProvider);\n    if (this.dialog) {\n      this.dialog.hide();\n    }\n  }\n\n  private itemsLoaded(provider: Provider|null): void {\n    if (this.loadTimeout || provider !== this.provider) {\n      return;\n    }\n    this.loadTimeout = window.setTimeout(this.updateAfterItemsLoaded.bind(this), 0);\n  }\n\n  private updateAfterItemsLoaded(): void {\n    this.loadTimeout = 0;\n    this.filterItems();\n  }\n\n  createElementForItem(item: number): Element {\n    const wrapperElement = document.createElement('div');\n    wrapperElement.className = 'filtered-list-widget-item-wrapper';\n\n    const itemElement = wrapperElement.createChild('div');\n    const renderAsTwoRows = this.provider && this.provider.renderAsTwoRows();\n    itemElement.className = 'filtered-list-widget-item ' + (renderAsTwoRows ? 'two-rows' : 'one-row');\n    const titleElement = itemElement.createChild('div', 'filtered-list-widget-title');\n    const subtitleElement = itemElement.createChild('div', 'filtered-list-widget-subtitle');\n    subtitleElement.textContent = '\\u200B';\n    if (this.provider) {\n      this.provider.renderItem(item, this.cleanValue(), titleElement, subtitleElement);\n      wrapperElement.setAttribute(\n          'jslog', `${VisualLogging.item(this.provider.jslogContextAt(item)).track({click: true})}`);\n    }\n    UI.ARIAUtils.markAsOption(itemElement);\n    return wrapperElement;\n  }\n\n  heightForItem(_item: number): number {\n    // Let the list measure items for us.\n    return 0;\n  }\n\n  isItemSelectable(_item: number): boolean {\n    return true;\n  }\n\n  selectedItemChanged(_from: number|null, _to: number|null, fromElement: Element|null, toElement: Element|null): void {\n    if (fromElement) {\n      fromElement.classList.remove('selected');\n    }\n    if (toElement) {\n      toElement.classList.add('selected');\n    }\n    UI.ARIAUtils.setActiveDescendant(this.inputBoxElement, toElement);\n  }\n\n  private onClick(event: Event): void {\n    const item = this.list.itemForNode((event.target as Node | null));\n    if (item === null) {\n      return;\n    }\n\n    event.consume(true);\n    this.selectItem(item);\n    if (this.dialog) {\n      this.dialog.hide();\n    }\n  }\n\n  private onMouseMove(event: Event): void {\n    const item = this.list.itemForNode((event.target as Node | null));\n    if (item === null) {\n      return;\n    }\n    this.list.selectItem(item);\n    const text = this.list.elementAtIndex(this.list.selectedIndex())?.textContent;\n    if (text) {\n      UI.ARIAUtils.alert(\n          i18nString(UIStrings.sItemSOfS, {PH1: text, PH2: this.list.selectedIndex() + 1, PH3: this.items.length}));\n    }\n  }\n\n  setQuery(query: string): void {\n    this.query = query;\n    this.inputBoxElement.focus();\n    this.inputBoxElement.setText(query);\n    void this.queryChanged();\n    this.scheduleFilter();\n  }\n\n  private tabKeyPressed(): boolean {\n    const userEnteredText = this.query;\n    let completion;\n    for (let i = this.promptHistory.length - 1; i >= 0; i--) {\n      if (this.promptHistory[i] !== userEnteredText && this.promptHistory[i].startsWith(userEnteredText)) {\n        completion = this.promptHistory[i];\n        break;\n      }\n    }\n    // If there is an auto-completion, press 'tab' first time will show the auto-completion, second time will rewrite\n    // the query. Otherwise it will select the next item.\n    if (completion) {\n      const selection = this.inputBoxElement.getComponentSelection();\n      if (selection && selection.toString().trim() !== '') {\n        this.setQuery(completion);\n        return true;\n      }\n      this.inputBoxElement.focus();\n      this.inputBoxElement.setText(completion);\n      this.setQuerySelectedRange(userEnteredText.length, completion.length);\n      return true;\n    }\n    return this.list.selectNextItem(true, false);\n  }\n\n  private itemsFilteredForTest(): void {\n    // Sniffed in tests.\n  }\n\n  private filterItems(): void {\n    this.filterTimer = 0;\n    if (this.scoringTimer) {\n      clearTimeout(this.scoringTimer);\n      this.scoringTimer = 0;\n\n      if (this.refreshListWithCurrentResult) {\n        this.refreshListWithCurrentResult();\n      }\n    }\n\n    if (!this.provider) {\n      this.bottomElementsContainer.classList.toggle('hidden', true);\n      this.itemsFilteredForTest();\n      return;\n    }\n\n    this.bottomElementsContainer.classList.toggle('hidden', false);\n\n    this.progressBarElement.style.transform = 'scaleX(0)';\n    this.progressBarElement.classList.remove('filtered-widget-progress-fade', 'hidden');\n\n    const query = this.provider.rewriteQuery(this.cleanValue());\n\n    const filterRegex = query ? Platform.StringUtilities.filterRegex(query) : null;\n\n    const filteredItems: number[] = [];\n\n    const bestScores: number[] = [];\n    const bestItems: number[] = [];\n    const bestItemsToCollect = 100;\n    let minBestScore = 0;\n    const overflowItems: number[] = [];\n    const scoreStartTime = window.performance.now();\n\n    const maxWorkItems = Platform.NumberUtilities.clamp(10, 500, (this.provider.itemCount() / 10) | 0);\n\n    scoreItems.call(this, 0);\n\n    function compareIntegers(a: number, b: number): number {\n      return b - a;\n    }\n\n    function scoreItems(this: FilteredListWidget, fromIndex: number): void {\n      if (!this.provider) {\n        return;\n      }\n      this.scoringTimer = 0;\n      let workDone = 0;\n      let i;\n\n      for (i = fromIndex; i < this.provider.itemCount() && workDone < maxWorkItems; ++i) {\n        // Filter out non-matching items quickly.\n        if (filterRegex && !filterRegex.test(this.provider.itemKeyAt(i))) {\n          continue;\n        }\n\n        // Score item.\n        const score = this.provider.itemScoreAt(i, query);\n        if (query) {\n          workDone++;\n        }\n\n        // Find its index in the scores array (earlier elements have bigger scores).\n        if (score > minBestScore || bestScores.length < bestItemsToCollect) {\n          const index = Platform.ArrayUtilities.upperBound(bestScores, score, compareIntegers);\n          bestScores.splice(index, 0, score);\n          bestItems.splice(index, 0, i);\n          if (bestScores.length > bestItemsToCollect) {\n            // Best list is too large -> drop last elements.\n            const bestItemLast = bestItems[bestItems.length - 1];\n            if (bestItemLast) {\n              overflowItems.push(bestItemLast);\n            }\n            bestScores.length = bestItemsToCollect;\n            bestItems.length = bestItemsToCollect;\n          }\n          const bestScoreLast = bestScores[bestScores.length - 1];\n          if (bestScoreLast) {\n            minBestScore = bestScoreLast;\n          }\n        } else {\n          filteredItems.push(i);\n        }\n      }\n\n      this.refreshListWithCurrentResult = this.refreshList.bind(this, bestItems, overflowItems, filteredItems);\n\n      // Process everything in chunks.\n      if (i < this.provider.itemCount()) {\n        this.scoringTimer = window.setTimeout(scoreItems.bind(this, i), 0);\n        if (window.performance.now() - scoreStartTime > 50) {\n          this.progressBarElement.style.transform = 'scaleX(' + i / this.provider.itemCount() + ')';\n        }\n        return;\n      }\n      if (window.performance.now() - scoreStartTime > 100) {\n        this.progressBarElement.style.transform = 'scaleX(1)';\n        this.progressBarElement.classList.add('filtered-widget-progress-fade');\n      } else {\n        this.progressBarElement.classList.add('hidden');\n      }\n      this.refreshListWithCurrentResult();\n    }\n  }\n\n  private refreshList(bestItems: number[], overflowItems: number[], filteredItems: number[]): void {\n    this.refreshListWithCurrentResult = undefined;\n    filteredItems = [...bestItems, ...overflowItems, ...filteredItems];\n    this.updateNotFoundMessage(Boolean(filteredItems.length));\n    const oldHeight = this.list.element.offsetHeight;\n    this.items.replaceAll(filteredItems);\n    if (filteredItems.length) {\n      this.list.selectItem(filteredItems[0]);\n    }\n    if (this.list.element.offsetHeight !== oldHeight) {\n      this.list.viewportResized();\n    }\n    this.itemsFilteredForTest();\n  }\n\n  private updateNotFoundMessage(hasItems: boolean): void {\n    this.list.element.classList.toggle('hidden', !hasItems);\n    this.notFoundElement.classList.toggle('hidden', hasItems);\n    if (!hasItems && this.provider) {\n      this.notFoundElement.textContent = this.provider.notFoundText(this.cleanValue());\n      UI.ARIAUtils.alert(this.notFoundElement.textContent);\n    }\n  }\n\n  private onInput(event: TextPrompt.TextPrompt.PromptInputEvent): void {\n    this.query = event.data;\n    void this.queryChanged();\n    this.scheduleFilter();\n  }\n\n  private async queryChanged(): Promise<void> {\n    this.hintElement.classList.toggle('hidden', Boolean(this.query));\n    if (this.queryChangedCallback) {\n      await this.queryChangedCallback(this.query);\n    }\n    if (this.provider) {\n      this.provider.queryChanged(this.cleanValue());\n    }\n  }\n\n  updateSelectedItemARIA(_fromElement: Element|null, _toElement: Element|null): boolean {\n    return false;\n  }\n\n  private onKeyDown(keyboardEvent: KeyboardEvent): void {\n    let handled = false;\n    switch (keyboardEvent.key) {\n      case Platform.KeyboardUtilities.ENTER_KEY:\n        if (!keyboardEvent.isComposing) {  // Ignore ENTER to confirm selection in an IME\n          this.onEnter(keyboardEvent);\n        }\n        return;\n      case Platform.KeyboardUtilities.TAB_KEY:\n        if (keyboardEvent.shiftKey) {\n          handled = this.list.selectPreviousItem(true, false);\n          break;\n        }\n        handled = this.tabKeyPressed();\n        break;\n      case Platform.KeyboardUtilities.ArrowKey.UP:\n        handled = this.list.selectPreviousItem(true, false);\n        break;\n      case Platform.KeyboardUtilities.ArrowKey.DOWN:\n        handled = this.list.selectNextItem(true, false);\n        break;\n      case Platform.KeyboardUtilities.PageKey.UP:\n        handled = this.list.selectItemPreviousPage(false);\n        break;\n      case Platform.KeyboardUtilities.PageKey.DOWN:\n        handled = this.list.selectItemNextPage(false);\n        break;\n    }\n    if (handled) {\n      keyboardEvent.consume(true);\n      const text = this.list.elementAtIndex(this.list.selectedIndex())?.textContent;\n      if (text) {\n        UI.ARIAUtils.alert(\n            i18nString(UIStrings.sItemSOfS, {PH1: text, PH2: this.list.selectedIndex() + 1, PH3: this.items.length}));\n      }\n    }\n  }\n\n  private scheduleFilter(): void {\n    if (this.filterTimer) {\n      return;\n    }\n    this.filterTimer = window.setTimeout(this.filterItems.bind(this), 0);\n  }\n\n  private selectItem(itemIndex: number|null): void {\n    this.promptHistory.push(this.query);\n    if (this.promptHistory.length > 100) {\n      this.promptHistory.shift();\n    }\n    if (this.provider) {\n      this.provider.selectItem(itemIndex, this.cleanValue());\n    }\n  }\n}\n\nexport const enum Events {\n  HIDDEN = 'hidden',\n}\n\nexport type EventTypes = {\n  [Events.HIDDEN]: void,\n};\n\nexport class Provider {\n  private refreshCallback!: () => void;\n  jslogContext: string;\n  constructor(jslogContext: string) {\n    this.jslogContext = jslogContext;\n  }\n\n  setRefreshCallback(refreshCallback: () => void): void {\n    this.refreshCallback = refreshCallback;\n  }\n\n  attach(): void {\n  }\n\n  itemCount(): number {\n    return 0;\n  }\n\n  itemKeyAt(_itemIndex: number): string {\n    return '';\n  }\n\n  itemScoreAt(_itemIndex: number, _query: string): number {\n    return 1;\n  }\n\n  renderItem(_itemIndex: number, _query: string, _titleElement: Element, _subtitleElement: Element): void {\n  }\n\n  jslogContextAt(_itemIndex: number): string {\n    return this.jslogContext;\n  }\n\n  renderAsTwoRows(): boolean {\n    return false;\n  }\n\n  selectItem(_itemIndex: number|null, _promptValue: string): void {\n  }\n\n  refresh(): void {\n    if (this.refreshCallback) {\n      this.refreshCallback();\n    }\n  }\n\n  rewriteQuery(query: string): string {\n    return query;\n  }\n\n  queryChanged(_query: string): void {\n  }\n\n  notFoundText(_query: string): string {\n    return i18nString(UIStrings.noResultsFound);\n  }\n\n  detach(): void {\n  }\n}\n\nconst registeredProviders: ProviderRegistration[] = [];\n\nexport function registerProvider(registration: ProviderRegistration): void {\n  registeredProviders.push(registration);\n}\nexport function getRegisteredProviders(): ProviderRegistration[] {\n  return registeredProviders;\n}\nexport interface ProviderRegistration {\n  prefix: string;\n  iconName: string;\n  iconWidth: string;\n  provider: () => Promise<Provider>;\n  titlePrefix: (() => string);\n  titleSuggestion?: (() => string);\n}\n"],
  "mappings": ";AAIA,YAAY,YAAY;AACxB,YAAY,UAAU;AACtB,YAAY,cAAc;AAC1B,YAAY,eAAe;AAC3B,YAAY,UAAU;AACtB,YAAY,gBAAgB;AAC5B,YAAY,mBAAmB;AAC/B,YAAY,QAAQ;AAEpB,OAAO,8BAA8B;AAErC,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA,EAIhB,iBAAiB;AAAA;AAAA;AAAA;AAAA,EAIjB,WAAW;AAAA;AAAA;AAAA;AAAA,EAIX,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOhB,WAAW;AACb;AACA,MAAM,OAAO,KAAK,KAAK,kBAAkB,yDAAyD,SAAS;AAC3G,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW,IAAI;AAE7D,aAAM,2BAA2B,OAAO,cAAc;AAAA,EACzD,GAAG,OAAO;AAAI,EAAiD;AAAA,EACzD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAQ;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACT;AAAA,EACS;AAAA,EACT;AAAA,EACS;AAAA,EACT;AAAA,EACA,SAAS;AAAA,EACT;AAAA,EACS;AAAA,EAEjB,YAAY,UAAyB,eAA0B,sBAAiD;AAC9G,UAAM,IAAI;AACV,SAAK,gBAAgB,iBAAiB,CAAC;AAEvC,SAAK,eAAe;AACpB,SAAK,cAAc;AACnB,SAAK,cAAc;AAEnB,SAAK,eAAe,UAAU,IAAI,sBAAsB;AACxD,UAAM,WAAY,KAAK,UAAU,KAAK,IAAI;AAC1C,SAAK,eAAe,iBAAiB,WAAW,QAAQ;AACxD,OAAG,UAAU,eAAe,KAAK,cAAc;AAE/C,UAAM,OAAO,KAAK,eAAe,YAAY,OAAO,MAAM;AAE1D,SAAK,kBAAkB,IAAI,WAAW,WAAW,WAAW;AAC5D,SAAK,gBAAgB,OAAO,EAAC,WAAW,WAAW,UAAU,eAAe,GAAG,QAAQ,IAAI,YAAY,GAAE;AACzG,SAAK,gBAAgB;AAAA,MACjB,WAAW,WAAW,iBAAiB;AAAA,MAAW,KAAK,QAAQ,KAAK,IAAI;AAAA,MAAG;AAAA,IAAK;AACpF,SAAK,gBAAgB,aAAa,SAAS,GAAG,cAAc,UAAU,EAAE,MAAM;AAAA,MAC1C,QAAQ;AAAA,MACR,SAAS;AAAA,IACX,CAAC,CAAC,EAAE;AACtC,SAAK,YAAY,KAAK,eAAe;AAErC,SAAK,cAAc,KAAK,YAAY,QAAQ,2BAA2B;AAEvE,SAAK,0BAA0B,KAAK,eAAe,YAAY,OAAO,MAAM;AAC5E,SAAK,kBAAkB,KAAK,wBAAwB,YAAY,OAAO,+BAA+B;AACtG,SAAK,qBAAqB,KAAK,gBAAgB,YAAY,OAAO,mCAAmC;AAErG,SAAK,QAAQ,IAAI,GAAG,UAAU,UAAU;AACxC,SAAK,OAAO,IAAI,GAAG,YAAY,YAAY,KAAK,OAAO,MAAM,GAAG,YAAY,SAAS,gBAAgB;AACrG,SAAK,wBAAwB,KAAK,KAAK;AACvC,SAAK,sBAAsB,UAAU,IAAI,WAAW;AACpD,SAAK,wBAAwB,YAAY,KAAK,qBAAqB;AACnE,SAAK,sBAAsB,iBAAiB,SAAS,KAAK,QAAQ,KAAK,IAAI,GAAG,KAAK;AACnF,SAAK,sBAAsB,iBAAiB,aAAa,KAAK,YAAY,KAAK,IAAI,GAAG,KAAK;AAC3F,OAAG,UAAU,cAAc,KAAK,qBAAqB;AACrD,OAAG,UAAU,YAAY,KAAK,iBAAiB,KAAK,qBAAqB;AACzE,OAAG,UAAU,gBAAgB,KAAK,iBAAiB,GAAG,UAAU,6BAA6B,IAAI;AAEjG,SAAK,kBAAkB,KAAK,wBAAwB,YAAY,OAAO,gBAAgB;AACvF,SAAK,gBAAgB,UAAU,IAAI,QAAQ;AAE3C,SAAK,yBAAyB,KAAK,eAAe;AAElD,SAAK,WAAW;AAChB,SAAK,uBAAuB;AAAA,EAC9B;AAAA,EAEA,OAAO,gBAAgB,SAAkB,OAAe,iBAAoC;AAC1F,QAAI,CAAC,OAAO;AACV,aAAO;AAAA,IACT;AAEA,aAAS,eAAeA,OAAcC,QAAuD;AAC3F,YAAM,UAAU,KAAK,KAAK,YAAY,SAASA,QAAOD,KAAI;AAC1D,UAAI,SAAS;AACb,YAAME,UAAS,CAAC;AAChB,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,EAAE,GAAG;AACvC,cAAM,SAAS,QAAQ,CAAC;AACxB,YAAI,OAAO,CAAC,MAAM,KAAK,KAAK,UAAU,OAAO;AAC3C,UAAAA,QAAO,KAAK,IAAI,UAAU,UAAU,YAAY,QAAQ,OAAO,CAAC,EAAE,MAAM,CAAC;AAAA,QAC3E,WAAW,OAAO,CAAC,MAAM,KAAK,KAAK,UAAU,QAAQ;AACnD,iBAAO;AAAA,QACT;AACA,kBAAU,OAAO,CAAC,EAAE;AAAA,MACtB;AACA,aAAOA;AAAA,IACT;AAEA,QAAI,QAAQ,gBAAgB,MAAM;AAChC,aAAO;AAAA,IACT;AACA,UAAM,OAAO,QAAQ;AACrB,QAAI,SAAS,eAAe,MAAM,KAAK;AACvC,QAAI,CAAC,UAAU,iBAAiB;AAC9B,eAAS,eAAe,KAAK,YAAY,GAAG,MAAM,YAAY,CAAC;AAAA,IACjE;AACA,QAAI,QAAQ;AACV,SAAG,QAAQ,8BAA8B,SAAS,QAAQ,WAAW;AACrE,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA,EAEA,iBAAiB,eAA6B;AAC5C,SAAK,gBAAgB,UAAU,aAAa;AAAA,EAC9C;AAAA,EAEA,qBAAqB,YAA0B;AAC7C,SAAK,gBAAgB,cAAc,UAAU;AAAA,EAC/C;AAAA,EAEA,eAAe,MAAoB;AACjC,SAAK,YAAY,cAAc;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe,OAAqB;AAClC,OAAG,UAAU,SAAS,KAAK,iBAAiB,KAAK;AAAA,EACnD;AAAA,EAEA,aAAa,aAA4B;AACvC,QAAI,CAAC,aAAa;AAChB,oBAAc,WAAW,UAAU,SAAS;AAAA,IAC9C;AAEA,SAAK,SAAS,IAAI,GAAG,OAAO,OAAO,YAAY;AAC/C,OAAG,UAAU,SAAS,KAAK,OAAO,gBAAgB,WAAW;AAC7D,SAAK,OAAO,kBAAkB,IAAI,GAAG,SAAS,KAAK,KAAK,GAAG,CAAC;AAC5D,SAAK,OAAO,gBAAgB,GAAG,UAAU,aAAa,0BAA0B;AAChF,SAAK,OAAO,mBAAmB,MAAM,EAAE;AACvC,SAAK,OAAO,eAAe,MAAM,YAAY,iBAAiB,KAAK;AACnE,SAAK,KAAK,KAAK,OAAO,cAAc;AACpC,OAAG,UAAU,YAAY,KAAK,gBAAgB,IAAI;AAClD,SAAK,KAAK,OAAO,KAAK,GAAG,OAAO,OAAO,MAAM,EAAE,KAAK,MAAM;AACxD,WAAK,yBAAyB,qBAAa;AAAA,IAC7C,CAAC;AAED,SAAK,OAAO,KAAK;AAAA,EACnB;AAAA,EAEA,UAAU,QAAsB;AAC9B,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,YAAY,UAA+B;AACzC,QAAI,aAAa,KAAK,UAAU;AAC9B;AAAA,IACF;AAEA,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,OAAO;AAAA,IACvB;AACA,SAAK,YAAY;AAEjB,SAAK,WAAW;AAChB,QAAI,KAAK,UAAU,GAAG;AACpB,WAAK,eAAe;AAAA,IACtB;AAAA,EACF;AAAA,EAEA,sBAAsB,YAAoB,UAAwB;AAChE,SAAK,gBAAgB,iBAAiB,YAAY,QAAQ;AAAA,EAC5D;AAAA,EAEQ,iBAAuB;AAC7B,SAAK,MAAM,WAAW,CAAC,CAAC;AACxB,SAAK,KAAK,qBAAqB;AAC/B,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,mBAAmB,KAAK,YAAY,KAAK,MAAM,KAAK,QAAQ,CAAC;AAC3E,WAAK,SAAS,OAAO;AAAA,IACvB;AACA,SAAK,YAAY,KAAK,QAAQ;AAAA,EAChC;AAAA,EAEQ,aAAqB;AAC3B,WAAO,KAAK,MAAM,UAAU,KAAK,OAAO,MAAM,EAAE,KAAK;AAAA,EACvD;AAAA,EAES,WAAiB;AACxB,SAAK,iBAAiB,CAAC,wBAAwB,CAAC;AAChD,SAAK,eAAe;AAAA,EACtB;AAAA,EAES,WAAiB;AACxB,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,OAAO;AAAA,IACvB;AACA,SAAK,YAAY;AACjB,OAAG,UAAU,YAAY,KAAK,gBAAgB,KAAK;AAAA,EACrD;AAAA,EAEQ,cAAoB;AAC1B,iBAAa,KAAK,WAAW;AAC7B,iBAAa,KAAK,YAAY;AAC9B,iBAAa,KAAK,WAAW;AAC7B,SAAK,cAAc;AACnB,SAAK,eAAe;AACpB,SAAK,cAAc;AACnB,SAAK,+BAA+B;AAAA,EACtC;AAAA,EAEQ,QAAQ,OAAoB;AAClC,QAAI,CAAC,KAAK,UAAU;AAClB;AAAA,IACF;AACA,UAAM,eAAe;AACrB,UAAM,QAAQ,KAAK,KAAK,cAAc;AACtC,QAAI,QAAQ,GAAG;AACb;AAAA,IACF;AACA,UAAM,UAAU,KAAK,KAAK,eAAe,KAAK;AAC9C,QAAI,SAAS;AACX,WAAK,cAAc,SAAS,SAAS,KAAK;AAAA,IAC5C;AAEA,UAAM,0BAA0B,KAAK,SAAS,UAAU,IAAI,KAAK,KAAK,aAAa,IAAI;AACvF,SAAK,WAAW,uBAAuB;AACvC,QAAI,KAAK,QAAQ;AACf,WAAK,OAAO,KAAK;AAAA,IACnB;AAAA,EACF;AAAA,EAEQ,YAAY,UAA+B;AACjD,QAAI,KAAK,eAAe,aAAa,KAAK,UAAU;AAClD;AAAA,IACF;AACA,SAAK,cAAc,OAAO,WAAW,KAAK,uBAAuB,KAAK,IAAI,GAAG,CAAC;AAAA,EAChF;AAAA,EAEQ,yBAA+B;AACrC,SAAK,cAAc;AACnB,SAAK,YAAY;AAAA,EACnB;AAAA,EAEA,qBAAqB,MAAuB;AAC1C,UAAM,iBAAiB,SAAS,cAAc,KAAK;AACnD,mBAAe,YAAY;AAE3B,UAAM,cAAc,eAAe,YAAY,KAAK;AACpD,UAAM,kBAAkB,KAAK,YAAY,KAAK,SAAS,gBAAgB;AACvE,gBAAY,YAAY,gCAAgC,kBAAkB,aAAa;AACvF,UAAM,eAAe,YAAY,YAAY,OAAO,4BAA4B;AAChF,UAAM,kBAAkB,YAAY,YAAY,OAAO,+BAA+B;AACtF,oBAAgB,cAAc;AAC9B,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,WAAW,MAAM,KAAK,WAAW,GAAG,cAAc,eAAe;AAC/E,qBAAe;AAAA,QACX;AAAA,QAAS,GAAG,cAAc,KAAK,KAAK,SAAS,eAAe,IAAI,CAAC,EAAE,MAAM,EAAC,OAAO,KAAI,CAAC,CAAC;AAAA,MAAE;AAAA,IAC/F;AACA,OAAG,UAAU,aAAa,WAAW;AACrC,WAAO;AAAA,EACT;AAAA,EAEA,cAAc,OAAuB;AAEnC,WAAO;AAAA,EACT;AAAA,EAEA,iBAAiB,OAAwB;AACvC,WAAO;AAAA,EACT;AAAA,EAEA,oBAAoB,OAAoB,KAAkB,aAA2B,WAA+B;AAClH,QAAI,aAAa;AACf,kBAAY,UAAU,OAAO,UAAU;AAAA,IACzC;AACA,QAAI,WAAW;AACb,gBAAU,UAAU,IAAI,UAAU;AAAA,IACpC;AACA,OAAG,UAAU,oBAAoB,KAAK,iBAAiB,SAAS;AAAA,EAClE;AAAA,EAEQ,QAAQ,OAAoB;AAClC,UAAM,OAAO,KAAK,KAAK,YAAa,MAAM,MAAsB;AAChE,QAAI,SAAS,MAAM;AACjB;AAAA,IACF;AAEA,UAAM,QAAQ,IAAI;AAClB,SAAK,WAAW,IAAI;AACpB,QAAI,KAAK,QAAQ;AACf,WAAK,OAAO,KAAK;AAAA,IACnB;AAAA,EACF;AAAA,EAEQ,YAAY,OAAoB;AACtC,UAAM,OAAO,KAAK,KAAK,YAAa,MAAM,MAAsB;AAChE,QAAI,SAAS,MAAM;AACjB;AAAA,IACF;AACA,SAAK,KAAK,WAAW,IAAI;AACzB,UAAM,OAAO,KAAK,KAAK,eAAe,KAAK,KAAK,cAAc,CAAC,GAAG;AAClE,QAAI,MAAM;AACR,SAAG,UAAU;AAAA,QACT,WAAW,UAAU,WAAW,EAAC,KAAK,MAAM,KAAK,KAAK,KAAK,cAAc,IAAI,GAAG,KAAK,KAAK,MAAM,OAAM,CAAC;AAAA,MAAC;AAAA,IAC9G;AAAA,EACF;AAAA,EAEA,SAAS,OAAqB;AAC5B,SAAK,QAAQ;AACb,SAAK,gBAAgB,MAAM;AAC3B,SAAK,gBAAgB,QAAQ,KAAK;AAClC,SAAK,KAAK,aAAa;AACvB,SAAK,eAAe;AAAA,EACtB;AAAA,EAEQ,gBAAyB;AAC/B,UAAM,kBAAkB,KAAK;AAC7B,QAAI;AACJ,aAAS,IAAI,KAAK,cAAc,SAAS,GAAG,KAAK,GAAG,KAAK;AACvD,UAAI,KAAK,cAAc,CAAC,MAAM,mBAAmB,KAAK,cAAc,CAAC,EAAE,WAAW,eAAe,GAAG;AAClG,qBAAa,KAAK,cAAc,CAAC;AACjC;AAAA,MACF;AAAA,IACF;AAGA,QAAI,YAAY;AACd,YAAM,YAAY,KAAK,gBAAgB,sBAAsB;AAC7D,UAAI,aAAa,UAAU,SAAS,EAAE,KAAK,MAAM,IAAI;AACnD,aAAK,SAAS,UAAU;AACxB,eAAO;AAAA,MACT;AACA,WAAK,gBAAgB,MAAM;AAC3B,WAAK,gBAAgB,QAAQ,UAAU;AACvC,WAAK,sBAAsB,gBAAgB,QAAQ,WAAW,MAAM;AACpE,aAAO;AAAA,IACT;AACA,WAAO,KAAK,KAAK,eAAe,MAAM,KAAK;AAAA,EAC7C;AAAA,EAEQ,uBAA6B;AAAA,EAErC;AAAA,EAEQ,cAAoB;AAC1B,SAAK,cAAc;AACnB,QAAI,KAAK,cAAc;AACrB,mBAAa,KAAK,YAAY;AAC9B,WAAK,eAAe;AAEpB,UAAI,KAAK,8BAA8B;AACrC,aAAK,6BAA6B;AAAA,MACpC;AAAA,IACF;AAEA,QAAI,CAAC,KAAK,UAAU;AAClB,WAAK,wBAAwB,UAAU,OAAO,UAAU,IAAI;AAC5D,WAAK,qBAAqB;AAC1B;AAAA,IACF;AAEA,SAAK,wBAAwB,UAAU,OAAO,UAAU,KAAK;AAE7D,SAAK,mBAAmB,MAAM,YAAY;AAC1C,SAAK,mBAAmB,UAAU,OAAO,iCAAiC,QAAQ;AAElF,UAAM,QAAQ,KAAK,SAAS,aAAa,KAAK,WAAW,CAAC;AAE1D,UAAM,cAAc,QAAQ,SAAS,gBAAgB,YAAY,KAAK,IAAI;AAE1E,UAAM,gBAA0B,CAAC;AAEjC,UAAM,aAAuB,CAAC;AAC9B,UAAM,YAAsB,CAAC;AAC7B,UAAM,qBAAqB;AAC3B,QAAI,eAAe;AACnB,UAAM,gBAA0B,CAAC;AACjC,UAAM,iBAAiB,OAAO,YAAY,IAAI;AAE9C,UAAM,eAAe,SAAS,gBAAgB,MAAM,IAAI,KAAM,KAAK,SAAS,UAAU,IAAI,KAAM,CAAC;AAEjG,eAAW,KAAK,MAAM,CAAC;AAEvB,aAAS,gBAAgB,GAAW,GAAmB;AACrD,aAAO,IAAI;AAAA,IACb;AAEA,aAAS,WAAqC,WAAyB;AACrE,UAAI,CAAC,KAAK,UAAU;AAClB;AAAA,MACF;AACA,WAAK,eAAe;AACpB,UAAI,WAAW;AACf,UAAI;AAEJ,WAAK,IAAI,WAAW,IAAI,KAAK,SAAS,UAAU,KAAK,WAAW,cAAc,EAAE,GAAG;AAEjF,YAAI,eAAe,CAAC,YAAY,KAAK,KAAK,SAAS,UAAU,CAAC,CAAC,GAAG;AAChE;AAAA,QACF;AAGA,cAAM,QAAQ,KAAK,SAAS,YAAY,GAAG,KAAK;AAChD,YAAI,OAAO;AACT;AAAA,QACF;AAGA,YAAI,QAAQ,gBAAgB,WAAW,SAAS,oBAAoB;AAClE,gBAAM,QAAQ,SAAS,eAAe,WAAW,YAAY,OAAO,eAAe;AACnF,qBAAW,OAAO,OAAO,GAAG,KAAK;AACjC,oBAAU,OAAO,OAAO,GAAG,CAAC;AAC5B,cAAI,WAAW,SAAS,oBAAoB;AAE1C,kBAAM,eAAe,UAAU,UAAU,SAAS,CAAC;AACnD,gBAAI,cAAc;AAChB,4BAAc,KAAK,YAAY;AAAA,YACjC;AACA,uBAAW,SAAS;AACpB,sBAAU,SAAS;AAAA,UACrB;AACA,gBAAM,gBAAgB,WAAW,WAAW,SAAS,CAAC;AACtD,cAAI,eAAe;AACjB,2BAAe;AAAA,UACjB;AAAA,QACF,OAAO;AACL,wBAAc,KAAK,CAAC;AAAA,QACtB;AAAA,MACF;AAEA,WAAK,+BAA+B,KAAK,YAAY,KAAK,MAAM,WAAW,eAAe,aAAa;AAGvG,UAAI,IAAI,KAAK,SAAS,UAAU,GAAG;AACjC,aAAK,eAAe,OAAO,WAAW,WAAW,KAAK,MAAM,CAAC,GAAG,CAAC;AACjE,YAAI,OAAO,YAAY,IAAI,IAAI,iBAAiB,IAAI;AAClD,eAAK,mBAAmB,MAAM,YAAY,YAAY,IAAI,KAAK,SAAS,UAAU,IAAI;AAAA,QACxF;AACA;AAAA,MACF;AACA,UAAI,OAAO,YAAY,IAAI,IAAI,iBAAiB,KAAK;AACnD,aAAK,mBAAmB,MAAM,YAAY;AAC1C,aAAK,mBAAmB,UAAU,IAAI,+BAA+B;AAAA,MACvE,OAAO;AACL,aAAK,mBAAmB,UAAU,IAAI,QAAQ;AAAA,MAChD;AACA,WAAK,6BAA6B;AAAA,IACpC;AAAA,EACF;AAAA,EAEQ,YAAY,WAAqB,eAAyB,eAA+B;AAC/F,SAAK,+BAA+B;AACpC,oBAAgB,CAAC,GAAG,WAAW,GAAG,eAAe,GAAG,aAAa;AACjE,SAAK,sBAAsB,QAAQ,cAAc,MAAM,CAAC;AACxD,UAAM,YAAY,KAAK,KAAK,QAAQ;AACpC,SAAK,MAAM,WAAW,aAAa;AACnC,QAAI,cAAc,QAAQ;AACxB,WAAK,KAAK,WAAW,cAAc,CAAC,CAAC;AAAA,IACvC;AACA,QAAI,KAAK,KAAK,QAAQ,iBAAiB,WAAW;AAChD,WAAK,KAAK,gBAAgB;AAAA,IAC5B;AACA,SAAK,qBAAqB;AAAA,EAC5B;AAAA,EAEQ,sBAAsB,UAAyB;AACrD,SAAK,KAAK,QAAQ,UAAU,OAAO,UAAU,CAAC,QAAQ;AACtD,SAAK,gBAAgB,UAAU,OAAO,UAAU,QAAQ;AACxD,QAAI,CAAC,YAAY,KAAK,UAAU;AAC9B,WAAK,gBAAgB,cAAc,KAAK,SAAS,aAAa,KAAK,WAAW,CAAC;AAC/E,SAAG,UAAU,MAAM,KAAK,gBAAgB,WAAW;AAAA,IACrD;AAAA,EACF;AAAA,EAEQ,QAAQ,OAAqD;AACnE,SAAK,QAAQ,MAAM;AACnB,SAAK,KAAK,aAAa;AACvB,SAAK,eAAe;AAAA,EACtB;AAAA,EAEA,MAAc,eAA8B;AAC1C,SAAK,YAAY,UAAU,OAAO,UAAU,QAAQ,KAAK,KAAK,CAAC;AAC/D,QAAI,KAAK,sBAAsB;AAC7B,YAAM,KAAK,qBAAqB,KAAK,KAAK;AAAA,IAC5C;AACA,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,aAAa,KAAK,WAAW,CAAC;AAAA,IAC9C;AAAA,EACF;AAAA,EAEA,uBAAuB,cAA4B,YAAmC;AACpF,WAAO;AAAA,EACT;AAAA,EAEQ,UAAU,eAAoC;AACpD,QAAI,UAAU;AACd,YAAQ,cAAc,KAAK;AAAA,MACzB,KAAK,SAAS,kBAAkB;AAC9B,YAAI,CAAC,cAAc,aAAa;AAC9B,eAAK,QAAQ,aAAa;AAAA,QAC5B;AACA;AAAA,MACF,KAAK,SAAS,kBAAkB;AAC9B,YAAI,cAAc,UAAU;AAC1B,oBAAU,KAAK,KAAK,mBAAmB,MAAM,KAAK;AAClD;AAAA,QACF;AACA,kBAAU,KAAK,cAAc;AAC7B;AAAA,MACF,KAAK,SAAS,kBAAkB,SAAS;AACvC,kBAAU,KAAK,KAAK,mBAAmB,MAAM,KAAK;AAClD;AAAA,MACF,KAAK,SAAS,kBAAkB,SAAS;AACvC,kBAAU,KAAK,KAAK,eAAe,MAAM,KAAK;AAC9C;AAAA,MACF,KAAK,SAAS,kBAAkB,QAAQ;AACtC,kBAAU,KAAK,KAAK,uBAAuB,KAAK;AAChD;AAAA,MACF,KAAK,SAAS,kBAAkB,QAAQ;AACtC,kBAAU,KAAK,KAAK,mBAAmB,KAAK;AAC5C;AAAA,IACJ;AACA,QAAI,SAAS;AACX,oBAAc,QAAQ,IAAI;AAC1B,YAAM,OAAO,KAAK,KAAK,eAAe,KAAK,KAAK,cAAc,CAAC,GAAG;AAClE,UAAI,MAAM;AACR,WAAG,UAAU;AAAA,UACT,WAAW,UAAU,WAAW,EAAC,KAAK,MAAM,KAAK,KAAK,KAAK,cAAc,IAAI,GAAG,KAAK,KAAK,MAAM,OAAM,CAAC;AAAA,QAAC;AAAA,MAC9G;AAAA,IACF;AAAA,EACF;AAAA,EAEQ,iBAAuB;AAC7B,QAAI,KAAK,aAAa;AACpB;AAAA,IACF;AACA,SAAK,cAAc,OAAO,WAAW,KAAK,YAAY,KAAK,IAAI,GAAG,CAAC;AAAA,EACrE;AAAA,EAEQ,WAAW,WAA8B;AAC/C,SAAK,cAAc,KAAK,KAAK,KAAK;AAClC,QAAI,KAAK,cAAc,SAAS,KAAK;AACnC,WAAK,cAAc,MAAM;AAAA,IAC3B;AACA,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,WAAW,WAAW,KAAK,WAAW,CAAC;AAAA,IACvD;AAAA,EACF;AACF;AAEO,WAAW,SAAX,kBAAWC,YAAX;AACL,EAAAA,QAAA,YAAS;AADO,SAAAA;AAAA,GAAA;AAQX,aAAM,SAAS;AAAA,EACZ;AAAA,EACR;AAAA,EACA,YAAY,cAAsB;AAChC,SAAK,eAAe;AAAA,EACtB;AAAA,EAEA,mBAAmB,iBAAmC;AACpD,SAAK,kBAAkB;AAAA,EACzB;AAAA,EAEA,SAAe;AAAA,EACf;AAAA,EAEA,YAAoB;AAClB,WAAO;AAAA,EACT;AAAA,EAEA,UAAU,YAA4B;AACpC,WAAO;AAAA,EACT;AAAA,EAEA,YAAY,YAAoB,QAAwB;AACtD,WAAO;AAAA,EACT;AAAA,EAEA,WAAW,YAAoB,QAAgB,eAAwB,kBAAiC;AAAA,EACxG;AAAA,EAEA,eAAe,YAA4B;AACzC,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,kBAA2B;AACzB,WAAO;AAAA,EACT;AAAA,EAEA,WAAW,YAAyB,cAA4B;AAAA,EAChE;AAAA,EAEA,UAAgB;AACd,QAAI,KAAK,iBAAiB;AACxB,WAAK,gBAAgB;AAAA,IACvB;AAAA,EACF;AAAA,EAEA,aAAa,OAAuB;AAClC,WAAO;AAAA,EACT;AAAA,EAEA,aAAa,QAAsB;AAAA,EACnC;AAAA,EAEA,aAAa,QAAwB;AACnC,WAAO,WAAW,UAAU,cAAc;AAAA,EAC5C;AAAA,EAEA,SAAe;AAAA,EACf;AACF;AAEA,MAAM,sBAA8C,CAAC;AAE9C,gBAAS,iBAAiB,cAA0C;AACzE,sBAAoB,KAAK,YAAY;AACvC;AACO,gBAAS,yBAAiD;AAC/D,SAAO;AACT;",
  "names": ["text", "query", "ranges", "Events"]
}
