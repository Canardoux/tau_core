{
  "version": 3,
  "sources": ["../../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/components/inline_editor/ColorMixSwatch.ts"],
  "sourcesContent": ["// Copyright (c) 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as LitHtml from '../../../lit-html/lit-html.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\n\nimport colorMixSwatchStyles from './colorMixSwatch.css.js';\n\nconst {html} = LitHtml;\n\nexport const enum Events {\n  COLOR_CHANGED = 'colorChanged',\n}\n\nexport interface EventTypes {\n  [Events.COLOR_CHANGED]: {text: string};\n}\n\nexport class ColorMixSwatch extends Common.ObjectWrapper.eventMixin<EventTypes, typeof HTMLElement>(HTMLElement) {\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private colorMixText: string = '';     // color-mix(in srgb, hotpink, white)\n  private firstColorText: string = '';   // hotpink\n  private secondColorText: string = '';  // white\n  #registerPopoverCallback: undefined|((swatch: ColorMixSwatch) => void);\n\n  constructor() {\n    super();\n    this.shadow.adoptedStyleSheets = [\n      colorMixSwatchStyles,\n    ];\n  }\n\n  get icon(): Element|null {\n    return this.shadow.firstElementChild;\n  }\n\n  mixedColor(): Common.Color.Color|null {\n    const colorText = this.icon?.computedStyleMap().get('color')?.toString() ?? null;\n    return colorText ? Common.Color.parse(colorText) : null;\n  }\n\n  setFirstColor(text: string): void {\n    // We need to replace `colorMixText` because it is the CSS for the\n    // the middle section where we actually show the mixed colors.\n    // So, when a color changed, we need to update colorMixText to\n    // reflect the new color (not the old one).\n    if (this.firstColorText) {\n      this.colorMixText = this.colorMixText.replace(this.firstColorText, text);\n    }\n    this.firstColorText = text;\n    this.dispatchEventToListeners(Events.COLOR_CHANGED, {text: this.colorMixText});\n    this.#render();\n  }\n\n  setSecondColor(text: string): void {\n    // We need to replace from the last to handle the same colors case\n    // i.e. replacing the second color of `color-mix(in srgb, red 50%, red 10%)`\n    // to `blue` should result in `color-mix(in srgb, red 50%, blue 10%)`.\n    if (this.secondColorText) {\n      this.colorMixText = Platform.StringUtilities.replaceLast(this.colorMixText, this.secondColorText, text);\n    }\n    this.secondColorText = text;\n    this.dispatchEventToListeners(Events.COLOR_CHANGED, {text: this.colorMixText});\n    this.#render();\n  }\n\n  setColorMixText(text: string): void {\n    this.colorMixText = text;\n    this.dispatchEventToListeners(Events.COLOR_CHANGED, {text: this.colorMixText});\n    this.#render();\n  }\n\n  setRegisterPopoverCallback(callback: (swatch: ColorMixSwatch) => void): void {\n    this.#registerPopoverCallback = callback;\n    callback(this);\n  }\n\n  getText(): string {\n    return this.colorMixText;\n  }\n\n  #render(): void {\n    if (!this.colorMixText || !this.firstColorText || !this.secondColorText) {\n      LitHtml.render(this.colorMixText, this.shadow, {host: this});\n      return;\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n\n    // Note that we use a <slot> with a default value here to display the color text. Consumers of this component are\n    // free to append any content to replace what is being shown here.\n    // Note also that whitespace between nodes is removed on purpose to avoid pushing these elements apart. Do not\n    // re-format the HTML code.\n    LitHtml.render(\n      html`<div class=\"swatch-icon\" jslog=${VisualLogging.cssColorMix()} style=\"--color: ${this.colorMixText}\">\n        <span class=\"swatch swatch-left\" id=\"swatch-1\" style=\"--color: ${this.firstColorText}\"></span>\n        <span class=\"swatch swatch-right\" id=\"swatch-2\" style=\"--color: ${this.secondColorText}\"></span>\n        <span class=\"swatch swatch-mix\" id=\"mix-result\" style=\"--color: ${this.colorMixText}\"></span>\n      </div><slot>${this.colorMixText}</slot>`,\n      this.shadow, {host: this});\n    // clang-format on\n\n    this.#registerPopoverCallback && this.#registerPopoverCallback(this);\n  }\n}\n\ncustomElements.define('devtools-color-mix-swatch', ColorMixSwatch);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-color-mix-swatch': ColorMixSwatch;\n  }\n}\n"],
  "mappings": ";AAIA,YAAY,YAAY;AACxB,YAAY,cAAc;AAC1B,YAAY,aAAa;AACzB,YAAY,mBAAmB;AAE/B,OAAO,0BAA0B;AAEjC,MAAM,EAAC,KAAI,IAAI;AAER,WAAW,SAAX,kBAAWA,YAAX;AACL,EAAAA,QAAA,mBAAgB;AADA,SAAAA;AAAA,GAAA;AAQX,aAAM,uBAAuB,OAAO,cAAc,WAA2C,WAAW,EAAE;AAAA,EAC9F,SAAS,KAAK,aAAa,EAAC,MAAM,OAAM,CAAC;AAAA,EAClD,eAAuB;AAAA;AAAA,EACvB,iBAAyB;AAAA;AAAA,EACzB,kBAA0B;AAAA;AAAA,EAClC;AAAA,EAEA,cAAc;AACZ,UAAM;AACN,SAAK,OAAO,qBAAqB;AAAA,MAC/B;AAAA,IACF;AAAA,EACF;AAAA,EAEA,IAAI,OAAqB;AACvB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EAEA,aAAsC;AACpC,UAAM,YAAY,KAAK,MAAM,iBAAiB,EAAE,IAAI,OAAO,GAAG,SAAS,KAAK;AAC5E,WAAO,YAAY,OAAO,MAAM,MAAM,SAAS,IAAI;AAAA,EACrD;AAAA,EAEA,cAAc,MAAoB;AAKhC,QAAI,KAAK,gBAAgB;AACvB,WAAK,eAAe,KAAK,aAAa,QAAQ,KAAK,gBAAgB,IAAI;AAAA,IACzE;AACA,SAAK,iBAAiB;AACtB,SAAK,yBAAyB,oCAAsB,EAAC,MAAM,KAAK,aAAY,CAAC;AAC7E,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,eAAe,MAAoB;AAIjC,QAAI,KAAK,iBAAiB;AACxB,WAAK,eAAe,SAAS,gBAAgB,YAAY,KAAK,cAAc,KAAK,iBAAiB,IAAI;AAAA,IACxG;AACA,SAAK,kBAAkB;AACvB,SAAK,yBAAyB,oCAAsB,EAAC,MAAM,KAAK,aAAY,CAAC;AAC7E,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,gBAAgB,MAAoB;AAClC,SAAK,eAAe;AACpB,SAAK,yBAAyB,oCAAsB,EAAC,MAAM,KAAK,aAAY,CAAC;AAC7E,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,2BAA2B,UAAkD;AAC3E,SAAK,2BAA2B;AAChC,aAAS,IAAI;AAAA,EACf;AAAA,EAEA,UAAkB;AAChB,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,UAAgB;AACd,QAAI,CAAC,KAAK,gBAAgB,CAAC,KAAK,kBAAkB,CAAC,KAAK,iBAAiB;AACvE,cAAQ,OAAO,KAAK,cAAc,KAAK,QAAQ,EAAC,MAAM,KAAI,CAAC;AAC3D;AAAA,IACF;AASA,YAAQ;AAAA,MACN,sCAAsC,cAAc,YAAY,CAAC,oBAAoB,KAAK,YAAY;AAAA,yEACnC,KAAK,cAAc;AAAA,0EAClB,KAAK,eAAe;AAAA,0EACpB,KAAK,YAAY;AAAA,oBACvE,KAAK,YAAY;AAAA,MAC/B,KAAK;AAAA,MAAQ,EAAC,MAAM,KAAI;AAAA,IAAC;AAG3B,SAAK,4BAA4B,KAAK,yBAAyB,IAAI;AAAA,EACrE;AACF;AAEA,eAAe,OAAO,6BAA6B,cAAc;",
  "names": ["Events"]
}
