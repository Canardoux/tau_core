{
  "version": 3,
  "sources": ["../../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/components/perf_ui/CanvasHelper.ts"],
  "sourcesContent": ["// Copyright (c) 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as ThemeSupport from '../../theme_support/theme_support.js';\n\nimport {ARROW_SIDE} from './FlameChart.js';\n\nexport function horizontalLine(context: CanvasRenderingContext2D, width: number, y: number): void {\n  context.moveTo(0, y);\n  context.lineTo(width, y);\n}\n\nexport function drawExpansionArrow(context: CanvasRenderingContext2D, x: number, y: number, expanded: boolean): void {\n  // We will draw a equilateral triangle, so first calculate the height of the triangle.\n  const arrowHeight = ARROW_SIDE * Math.sqrt(3) / 2;\n  const arrowCenterOffset = Math.round(arrowHeight / 2);\n  context.save();\n  context.beginPath();\n  context.translate(x, y);\n  context.rotate(expanded ? Math.PI / 2 : 0);\n  // The final triangle will be this shape: (the rotation will be handled by `context.rotate`)\n  // |\\\n  // | \\\n  // | /\n  // |/\n\n  // Move to the top vertex\n  context.moveTo(-arrowCenterOffset, -ARROW_SIDE / 2);\n  // Line to the bottom vertex\n  context.lineTo(-arrowCenterOffset, ARROW_SIDE / 2);\n  // Line to the right vertex\n  context.lineTo(arrowHeight - arrowCenterOffset, 0);\n  context.fill();\n  context.restore();\n}\n\nexport function drawIcon(\n    context: CanvasRenderingContext2D, x: number, y: number, width: number, pathData: string,\n    iconColor: string = '--sys-color-on-surface'): void {\n  const p = new Path2D(pathData);\n\n  context.save();\n  context.translate(x, y);\n  // This color is same as the background of the whole flame chart.\n  context.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-cdt-base-container');\n  context.fillRect(0, 0, width, width);\n\n  context.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue(iconColor);\n  // The pathData from front_end/images folder is for a 20 pixel icon.\n  // So we add a scale to draw the icon in a correct size.\n  const scale = width / 20;\n  context.scale(scale, scale);\n  context.fill(p);\n  context.restore();\n}\n"],
  "mappings": ";AAGA,YAAY,kBAAkB;AAE9B,SAAQ,kBAAiB;AAElB,gBAAS,eAAe,SAAmC,OAAe,GAAiB;AAChG,UAAQ,OAAO,GAAG,CAAC;AACnB,UAAQ,OAAO,OAAO,CAAC;AACzB;AAEO,gBAAS,mBAAmB,SAAmC,GAAW,GAAW,UAAyB;AAEnH,QAAM,cAAc,aAAa,KAAK,KAAK,CAAC,IAAI;AAChD,QAAM,oBAAoB,KAAK,MAAM,cAAc,CAAC;AACpD,UAAQ,KAAK;AACb,UAAQ,UAAU;AAClB,UAAQ,UAAU,GAAG,CAAC;AACtB,UAAQ,OAAO,WAAW,KAAK,KAAK,IAAI,CAAC;AAQzC,UAAQ,OAAO,CAAC,mBAAmB,CAAC,aAAa,CAAC;AAElD,UAAQ,OAAO,CAAC,mBAAmB,aAAa,CAAC;AAEjD,UAAQ,OAAO,cAAc,mBAAmB,CAAC;AACjD,UAAQ,KAAK;AACb,UAAQ,QAAQ;AAClB;AAEO,gBAAS,SACZ,SAAmC,GAAW,GAAW,OAAe,UACxE,YAAoB,0BAAgC;AACtD,QAAM,IAAI,IAAI,OAAO,QAAQ;AAE7B,UAAQ,KAAK;AACb,UAAQ,UAAU,GAAG,CAAC;AAEtB,UAAQ,YAAY,aAAa,aAAa,SAAS,EAAE,iBAAiB,gCAAgC;AAC1G,UAAQ,SAAS,GAAG,GAAG,OAAO,KAAK;AAEnC,UAAQ,YAAY,aAAa,aAAa,SAAS,EAAE,iBAAiB,SAAS;AAGnF,QAAM,QAAQ,QAAQ;AACtB,UAAQ,MAAM,OAAO,KAAK;AAC1B,UAAQ,KAAK,CAAC;AACd,UAAQ,QAAQ;AAClB;",
  "names": []
}
