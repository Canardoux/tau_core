{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/Toolbar.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2009 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as Adorners from '../components/adorners/adorners.js';\nimport * as IconButton from '../components/icon_button/icon_button.js';\n\nimport {type Action, Events as ActionEvents} from './ActionRegistration.js';\nimport {ActionRegistry} from './ActionRegistry.js';\nimport * as ARIAUtils from './ARIAUtils.js';\nimport {ContextMenu} from './ContextMenu.js';\nimport {GlassPane, PointerEventsBehavior} from './GlassPane.js';\nimport {bindCheckbox} from './SettingsUI.js';\nimport type {Suggestion} from './SuggestBox.js';\nimport {Events as TextPromptEvents, TextPrompt} from './TextPrompt.js';\nimport toolbarStyles from './toolbar.css.legacy.js';\nimport {Tooltip} from './Tooltip.js';\nimport {CheckboxLabel, createShadowRootWithCoreStyles, LongClickController} from './UIUtils.js';\n\nconst UIStrings = {\n  /**\n   *@description Announced screen reader message for ToolbarSettingToggle when the setting is toggled on.\n   */\n  pressed: 'pressed',\n  /**\n   *@description Announced screen reader message for ToolbarSettingToggle when the setting is toggled off.\n   */\n  notPressed: 'not pressed',\n  /**\n   *@description Tooltip shown when the user hovers over the clear icon to empty the text input.\n   */\n  clearInput: 'Clear',\n  /**\n   *@description Placeholder for filter bars that shows before the user types in a filter keyword.\n   */\n  filter: 'Filter',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/Toolbar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class Toolbar {\n  private items: ToolbarItem[];\n  element: HTMLElement;\n  enabled: boolean;\n  private readonly shadowRoot: ShadowRoot;\n  private contentElement: Element;\n  private compactLayout = false;\n\n  constructor(className: string, parentElement?: Element) {\n    this.items = [];\n    this.element = (parentElement ? parentElement.createChild('div') : document.createElement('div')) as HTMLElement;\n    this.element.className = className;\n    this.element.classList.add('toolbar');\n    this.enabled = true;\n    this.shadowRoot = createShadowRootWithCoreStyles(this.element, {cssFile: toolbarStyles, delegatesFocus: undefined});\n    this.contentElement = this.shadowRoot.createChild('div', 'toolbar-shadow');\n  }\n\n  hasCompactLayout(): boolean {\n    return this.compactLayout;\n  }\n\n  registerCSSFiles(cssFiles: CSSStyleSheet[]): void {\n    this.shadowRoot.adoptedStyleSheets = this.shadowRoot.adoptedStyleSheets.concat(cssFiles);\n  }\n\n  setCompactLayout(enable: boolean): void {\n    if (this.compactLayout === enable) {\n      return;\n    }\n    this.compactLayout = enable;\n    for (const item of this.items) {\n      item.setCompactLayout(enable);\n    }\n  }\n\n  static createLongPressActionButton(\n      action: Action, toggledOptions: ToolbarButton[], untoggledOptions: ToolbarButton[]): ToolbarButton {\n    const button = Toolbar.createActionButton(action);\n    const mainButtonClone = Toolbar.createActionButton(action);\n\n    let longClickController: LongClickController|null = null;\n    let longClickButtons: ToolbarButton[]|null = null;\n\n    action.addEventListener(ActionEvents.TOGGLED, updateOptions);\n    updateOptions();\n    return button;\n\n    function updateOptions(): void {\n      const buttons = action.toggled() ? (toggledOptions || null) : (untoggledOptions || null);\n\n      if (buttons && buttons.length) {\n        if (!longClickController) {\n          longClickController = new LongClickController(button.element, showOptions);\n          button.setLongClickable(true);\n          longClickButtons = buttons;\n        }\n      } else {\n        if (longClickController) {\n          longClickController.dispose();\n          longClickController = null;\n          button.setLongClickable(false);\n          longClickButtons = null;\n        }\n      }\n    }\n\n    function showOptions(): void {\n      let buttons: ToolbarButton[] = longClickButtons ? longClickButtons.slice() : [];\n      buttons.push(mainButtonClone);\n\n      const document = button.element.ownerDocument;\n      document.documentElement.addEventListener('mouseup', mouseUp, false);\n\n      const optionsGlassPane = new GlassPane();\n      optionsGlassPane.setPointerEventsBehavior(PointerEventsBehavior.BLOCKED_BY_GLASS_PANE);\n      optionsGlassPane.show(document);\n      const optionsBar = new Toolbar('fill', optionsGlassPane.contentElement);\n      optionsBar.contentElement.classList.add('floating');\n      const buttonHeight = 26;\n\n      const hostButtonPosition = button.element.boxInWindow().relativeToElement(GlassPane.container(document));\n\n      const topNotBottom = hostButtonPosition.y + buttonHeight * buttons.length < document.documentElement.offsetHeight;\n\n      if (topNotBottom) {\n        buttons = buttons.reverse();\n      }\n\n      optionsBar.element.style.height = (buttonHeight * buttons.length) + 'px';\n      if (topNotBottom) {\n        optionsBar.element.style.top = (hostButtonPosition.y - 5) + 'px';\n      } else {\n        optionsBar.element.style.top = (hostButtonPosition.y - (buttonHeight * (buttons.length - 1)) - 6) + 'px';\n      }\n      optionsBar.element.style.left = (hostButtonPosition.x - 5) + 'px';\n\n      for (let i = 0; i < buttons.length; ++i) {\n        buttons[i].element.addEventListener('mousemove', mouseOver, false);\n        buttons[i].element.addEventListener('mouseout', mouseOut, false);\n        optionsBar.appendToolbarItem(buttons[i]);\n      }\n      const hostButtonIndex = topNotBottom ? 0 : buttons.length - 1;\n      buttons[hostButtonIndex].element.classList.add('emulate-active');\n\n      function mouseOver(e: Event): void {\n        if ((e as MouseEvent).which !== 1) {\n          return;\n        }\n        if (e.target instanceof HTMLElement) {\n          const buttonElement = e.target.enclosingNodeOrSelfWithClass('toolbar-item');\n          buttonElement.classList.add('emulate-active');\n        }\n      }\n\n      function mouseOut(e: Event): void {\n        if ((e as MouseEvent).which !== 1) {\n          return;\n        }\n        if (e.target instanceof HTMLElement) {\n          const buttonElement = e.target.enclosingNodeOrSelfWithClass('toolbar-item');\n          buttonElement.classList.remove('emulate-active');\n        }\n      }\n\n      function mouseUp(e: Event): void {\n        if ((e as MouseEvent).which !== 1) {\n          return;\n        }\n        optionsGlassPane.hide();\n        document.documentElement.removeEventListener('mouseup', mouseUp, false);\n\n        for (let i = 0; i < buttons.length; ++i) {\n          if (buttons[i].element.classList.contains('emulate-active')) {\n            buttons[i].element.classList.remove('emulate-active');\n            buttons[i].clicked(e);\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  static createActionButton(action: Action, options: ToolbarButtonOptions|undefined = TOOLBAR_BUTTON_DEFAULT_OPTIONS):\n      ToolbarButton {\n    const button = (action.toggleable() && !options?.ignoreToggleable) ? makeToggle() : makeButton();\n\n    if (options.showLabel) {\n      button.setText(options.label?.() || action.title());\n    }\n\n    let handler = (): void => {\n      void action.execute();\n    };\n    if (options.userActionCode) {\n      const actionCode = options.userActionCode;\n      handler = () => {\n        Host.userMetrics.actionTaken(actionCode);\n        void action.execute();\n      };\n    }\n    button.addEventListener(ToolbarButton.Events.CLICK, handler, action);\n    action.addEventListener(ActionEvents.ENABLED, enabledChanged);\n    button.setEnabled(action.enabled());\n    return button;\n\n    function makeButton(): ToolbarButton {\n      const button = new ToolbarButton(action.title(), action.icon(), undefined, action.id());\n      if (action.title()) {\n        Tooltip.installWithActionBinding(button.element, action.title(), action.id());\n      }\n      return button;\n    }\n\n    function makeToggle(): ToolbarToggle {\n      const toggleButton = new ToolbarToggle(action.title(), action.icon(), action.toggledIcon(), action.id());\n      if (action.toggleWithRedColor()) {\n        toggleButton.enableToggleWithRedColor();\n      }\n      action.addEventListener(ActionEvents.TOGGLED, toggled);\n      toggled();\n      return toggleButton;\n\n      function toggled(): void {\n        toggleButton.setToggled(action.toggled());\n        if (action.title()) {\n          toggleButton.setTitle(action.title());\n          Tooltip.installWithActionBinding(toggleButton.element, action.title(), action.id());\n        }\n      }\n    }\n\n    function enabledChanged(event: Common.EventTarget.EventTargetEvent<boolean>): void {\n      button.setEnabled(event.data);\n    }\n  }\n\n  static createActionButtonForId(actionId: string, options?: ToolbarButtonOptions): ToolbarButton {\n    const action = ActionRegistry.instance().getAction(actionId);\n    return Toolbar.createActionButton(action, options);\n  }\n\n  gripElementForResize(): Element {\n    return this.contentElement;\n  }\n\n  makeWrappable(growVertically?: boolean): void {\n    this.contentElement.classList.add('wrappable');\n    if (growVertically) {\n      this.contentElement.classList.add('toolbar-grow-vertical');\n    }\n  }\n\n  makeVertical(): void {\n    this.contentElement.classList.add('vertical');\n  }\n\n  renderAsLinks(): void {\n    this.contentElement.classList.add('toolbar-render-as-links');\n  }\n\n  empty(): boolean {\n    return !this.items.length;\n  }\n\n  setEnabled(enabled: boolean): void {\n    this.enabled = enabled;\n    for (const item of this.items) {\n      item.applyEnabledState(this.enabled && item.enabled);\n    }\n  }\n\n  appendToolbarItem(item: ToolbarItem): void {\n    this.items.push(item);\n    item.toolbar = this;\n    item.setCompactLayout(this.hasCompactLayout());\n    if (!this.enabled) {\n      item.applyEnabledState(false);\n    }\n    this.contentElement.appendChild(item.element);\n    this.hideSeparatorDupes();\n  }\n\n  hasItem(item: ToolbarItem): boolean {\n    return this.items.includes(item);\n  }\n\n  prependToolbarItem(item: ToolbarItem): void {\n    this.items.unshift(item);\n    item.toolbar = this;\n    item.setCompactLayout(this.hasCompactLayout());\n    if (!this.enabled) {\n      item.applyEnabledState(false);\n    }\n    this.contentElement.prepend(item.element);\n    this.hideSeparatorDupes();\n  }\n\n  appendSeparator(): void {\n    this.appendToolbarItem(new ToolbarSeparator());\n  }\n\n  appendSpacer(): void {\n    this.appendToolbarItem(new ToolbarSeparator(true));\n  }\n\n  appendText(text: string): void {\n    this.appendToolbarItem(new ToolbarText(text));\n  }\n\n  removeToolbarItem(itemToRemove: ToolbarItem): void {\n    const updatedItems = [];\n    for (const item of this.items) {\n      if (item === itemToRemove) {\n        item.element.remove();\n      } else {\n        updatedItems.push(item);\n      }\n    }\n    this.items = updatedItems;\n  }\n\n  removeToolbarItems(): void {\n    for (const item of this.items) {\n      item.toolbar = null;\n    }\n    this.items = [];\n    this.contentElement.removeChildren();\n  }\n\n  setColor(color: string): void {\n    const style = document.createElement('style');\n    style.textContent = '.toolbar-glyph { background-color: ' + color + ' !important }';\n    this.shadowRoot.appendChild(style);\n  }\n\n  setToggledColor(color: string): void {\n    const style = document.createElement('style');\n    style.textContent =\n        '.toolbar-button.toolbar-state-on .toolbar-glyph { background-color: ' + color + ' !important }';\n    this.shadowRoot.appendChild(style);\n  }\n\n  hideSeparatorDupes(): void {\n    if (!this.items.length) {\n      return;\n    }\n    // Don't hide first and last separators if they were added explicitly.\n    let previousIsSeparator = false;\n    let lastSeparator;\n    let nonSeparatorVisible = false;\n    for (let i = 0; i < this.items.length; ++i) {\n      if (this.items[i] instanceof ToolbarSeparator) {\n        this.items[i].setVisible(!previousIsSeparator);\n        previousIsSeparator = true;\n        lastSeparator = this.items[i];\n        continue;\n      }\n      if (this.items[i].visible()) {\n        previousIsSeparator = false;\n        lastSeparator = null;\n        nonSeparatorVisible = true;\n      }\n    }\n    if (lastSeparator && lastSeparator !== this.items[this.items.length - 1]) {\n      lastSeparator.setVisible(false);\n    }\n\n    this.element.classList.toggle(\n        'hidden',\n        lastSeparator !== null && lastSeparator !== undefined && lastSeparator.visible() && !nonSeparatorVisible);\n  }\n\n  async appendItemsAtLocation(location: string): Promise<void> {\n    const extensions: ToolbarItemRegistration[] = getRegisteredToolbarItems();\n\n    extensions.sort((extension1, extension2) => {\n      const order1 = extension1.order || 0;\n      const order2 = extension2.order || 0;\n      return order1 - order2;\n    });\n\n    const filtered = extensions.filter(e => e.location === location);\n    const items = await Promise.all(filtered.map(extension => {\n      const {separator, actionId, showLabel, label, loadItem} = extension;\n      if (separator) {\n        return new ToolbarSeparator();\n      }\n      if (actionId) {\n        return Toolbar.createActionButtonForId(\n            actionId, {label, showLabel: Boolean(showLabel), userActionCode: undefined});\n      }\n      // TODO(crbug.com/1134103) constratint the case checked with this if using TS type definitions once UI is TS-authored.\n      if (!loadItem) {\n        throw new Error('Could not load a toolbar item registration with no loadItem function');\n      }\n      return loadItem().then(p => (p as Provider).item());\n    }));\n\n    for (const item of items) {\n      if (item) {\n        this.appendToolbarItem(item);\n      }\n    }\n  }\n}\nexport interface ToolbarButtonOptions {\n  label?: () => Platform.UIString.LocalizedString;\n  showLabel: boolean;\n  userActionCode?: Host.UserMetrics.Action;\n  ignoreToggleable?: boolean;\n}\n\nconst TOOLBAR_BUTTON_DEFAULT_OPTIONS: ToolbarButtonOptions = {\n  showLabel: false,\n  userActionCode: undefined,\n};\n\n// We need any here because Common.ObjectWrapper.ObjectWrapper is invariant in T.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class ToolbarItem<T = any> extends Common.ObjectWrapper.ObjectWrapper<T> {\n  element: HTMLElement;\n  private visibleInternal: boolean;\n  enabled: boolean;\n  toolbar: Toolbar|null;\n  protected title?: string;\n\n  constructor(element: Element) {\n    super();\n    this.element = (element as HTMLElement);\n    this.element.classList.add('toolbar-item');\n    this.visibleInternal = true;\n    this.enabled = true;\n\n    /**\n     * Set by the parent toolbar during appending.\n     */\n    this.toolbar = null;\n  }\n\n  setTitle(title: string, actionId: string|undefined = undefined): void {\n    if (this.title === title) {\n      return;\n    }\n    this.title = title;\n    ARIAUtils.setLabel(this.element, title);\n    if (actionId === undefined) {\n      Tooltip.install(this.element, title);\n    } else {\n      Tooltip.installWithActionBinding(this.element, title, actionId);\n    }\n  }\n\n  setEnabled(value: boolean): void {\n    if (this.enabled === value) {\n      return;\n    }\n    this.enabled = value;\n    this.applyEnabledState(this.enabled && (!this.toolbar || this.toolbar.enabled));\n  }\n\n  applyEnabledState(enabled: boolean): void {\n    // @ts-ignore: Ignoring in favor of an `instanceof` check for all the different\n    //             kind of HTMLElement classes that have a disabled attribute.\n    this.element.disabled = !enabled;\n  }\n\n  visible(): boolean {\n    return this.visibleInternal;\n  }\n\n  setVisible(x: boolean): void {\n    if (this.visibleInternal === x) {\n      return;\n    }\n    this.element.classList.toggle('hidden', !x);\n    this.visibleInternal = x;\n    if (this.toolbar && !(this instanceof ToolbarSeparator)) {\n      this.toolbar.hideSeparatorDupes();\n    }\n  }\n\n  setRightAligned(alignRight: boolean): void {\n    this.element.classList.toggle('toolbar-item-right-aligned', alignRight);\n  }\n\n  setCompactLayout(_enable: boolean): void {\n  }\n}\n\nexport const enum ToolbarItemWithCompactLayoutEvents {\n  COMPACT_LAYOUT_UPDATED = 'CompactLayoutUpdated',\n}\n\ntype ToolbarItemWithCompactLayoutEventTypes = {\n  [ToolbarItemWithCompactLayoutEvents.COMPACT_LAYOUT_UPDATED]: boolean,\n};\n\nexport class ToolbarItemWithCompactLayout extends ToolbarItem<ToolbarItemWithCompactLayoutEventTypes> {\n  constructor(element: Element) {\n    super(element);\n  }\n\n  override setCompactLayout(enable: boolean): void {\n    this.dispatchEventToListeners(ToolbarItemWithCompactLayoutEvents.COMPACT_LAYOUT_UPDATED, enable);\n  }\n}\n\nexport class ToolbarText extends ToolbarItem<void> {\n  constructor(text?: string) {\n    const element = document.createElement('div');\n    element.classList.add('toolbar-text');\n    super(element);\n    this.element.classList.add('toolbar-text');\n    this.setText(text || '');\n  }\n\n  text(): string {\n    return this.element.textContent || '';\n  }\n\n  setText(text: string): void {\n    this.element.textContent = text;\n  }\n}\n\nexport class ToolbarButton extends ToolbarItem<ToolbarButton.EventTypes> {\n  private button: Buttons.Button.Button;\n  private text?: string;\n  private adorner?: HTMLElement;\n\n  constructor(title: string, glyphOrAdorner?: string|Adorners.Adorner.Adorner, text?: string, jslogContext?: string) {\n    const button = new Buttons.Button.Button();\n    super(button);\n    this.button = button;\n    if (glyphOrAdorner instanceof Adorners.Adorner.Adorner) {\n      this.button.variant = Buttons.Button.Variant.ADORNER_ICON;\n      this.setAdorner(glyphOrAdorner);\n      this.button.prepend(glyphOrAdorner);\n    } else if (typeof glyphOrAdorner === 'string' && !text) {\n      this.button.data = {variant: Buttons.Button.Variant.ICON, iconName: glyphOrAdorner};\n    } else {\n      this.button.variant = Buttons.Button.Variant.TEXT;\n      this.button.reducedFocusRing = true;\n      if (glyphOrAdorner) {\n        this.button.iconName = glyphOrAdorner;\n      }\n    }\n    button.classList.add('toolbar-button');\n    this.element.addEventListener('click', this.clicked.bind(this), false);\n    this.element.addEventListener('mousedown', this.mouseDown.bind(this), false);\n    button.textContent = text || '';\n    this.setTitle(title);\n    if (jslogContext) {\n      button.jslogContext = jslogContext;\n    }\n  }\n\n  focus(): void {\n    this.element.focus();\n  }\n\n  checked(checked: boolean): void {\n    this.button.checked = checked;\n  }\n\n  toggleOnClick(toggleOnClick: boolean): void {\n    this.button.toggleOnClick = toggleOnClick;\n  }\n\n  isToggled(): boolean {\n    return this.button.toggled;\n  }\n\n  toggled(toggled: boolean): void {\n    this.button.toggled = toggled;\n  }\n\n  setToggleType(type: Buttons.Button.ToggleType): void {\n    this.button.toggleType = type;\n  }\n\n  setLongClickable(longClickable: boolean): void {\n    this.button.longClickable = longClickable;\n  }\n\n  setSize(size: Buttons.Button.Size): void {\n    this.button.size = size;\n  }\n\n  setReducedFocusRing(): void {\n    this.button.reducedFocusRing = true;\n  }\n\n  setText(text: string): void {\n    if (this.text === text) {\n      return;\n    }\n    this.button.textContent = text;\n    this.button.variant = Buttons.Button.Variant.TEXT;\n    this.button.reducedFocusRing = true;\n    this.text = text;\n  }\n\n  setAdorner(adorner: Adorners.Adorner.Adorner): void {\n    if (this.adorner) {\n      this.adorner.replaceWith(adorner);\n    } else {\n      this.element.prepend(adorner);\n    }\n    this.adorner = adorner;\n  }\n\n  setGlyph(iconName: string): void {\n    this.button.iconName = iconName;\n  }\n\n  setToggledIcon(toggledIconName: string): void {\n    this.button.variant = Buttons.Button.Variant.ICON_TOGGLE;\n    this.button.toggledIconName = toggledIconName;\n  }\n\n  setBackgroundImage(iconURL: string): void {\n    this.element.style.backgroundImage = 'url(' + iconURL + ')';\n  }\n\n  setSecondary(): void {\n    this.element.classList.add('toolbar-button-secondary');\n  }\n\n  setDarkText(): void {\n    this.element.classList.add('dark-text');\n  }\n\n  turnIntoSelect(shrinkable: boolean|undefined = false): void {\n    this.element.classList.add('toolbar-has-dropdown');\n    if (shrinkable) {\n      this.element.classList.add('toolbar-has-dropdown-shrinkable');\n    }\n    const dropdownArrowIcon = IconButton.Icon.create('triangle-down', 'toolbar-dropdown-arrow');\n    this.element.appendChild(dropdownArrowIcon);\n  }\n\n  clicked(event: Event): void {\n    if (!this.enabled) {\n      return;\n    }\n    this.dispatchEventToListeners(ToolbarButton.Events.CLICK, event);\n    event.consume();\n  }\n\n  protected mouseDown(event: MouseEvent): void {\n    if (!this.enabled) {\n      return;\n    }\n    this.dispatchEventToListeners(ToolbarButton.Events.MOUSE_DOWN, event);\n  }\n}\n\nexport class ToolbarCombobox extends ToolbarItem<ToolbarButton.EventTypes> {\n  private textElement?: HTMLElement;\n  private text?: string;\n  private iconName?: string;\n  private adorner?: Adorners.Adorner.Adorner;\n\n  constructor(title: string, isIconDropdown?: boolean, jslogContext?: string, iconName?: string) {\n    let element;\n    if (iconName) {\n      element = new Buttons.Button.Button();\n      element.data = {variant: Buttons.Button.Variant.ICON, iconName};\n    } else {\n      element = document.createElement('button');\n    }\n    element.classList.add('toolbar-button');\n    super(element);\n    this.element.addEventListener('click', this.clicked.bind(this), false);\n    this.element.addEventListener('mousedown', this.mouseDown.bind(this), false);\n\n    this.iconName = iconName;\n\n    this.setTitle(title);\n    if (jslogContext) {\n      this.element.setAttribute('jslog', `${VisualLogging.action().track({click: true}).context(jslogContext)}`);\n    }\n    this.title = '';\n    if (!isIconDropdown) {\n      this.element.classList.add('toolbar-has-dropdown');\n      const dropdownArrowIcon = IconButton.Icon.create('triangle-down', 'toolbar-dropdown-arrow');\n      this.element.appendChild(dropdownArrowIcon);\n    }\n  }\n\n  setText(text: string): void {\n    if (this.text === text || this.iconName) {\n      return;\n    }\n    if (!this.textElement) {\n      this.textElement = document.createElement('div');\n      this.textElement.classList.add('toolbar-text', 'hidden');\n      const dropDownArrow = this.element.querySelector('.toolbar-dropdown-arrow');\n      this.element.insertBefore(this.textElement, dropDownArrow);\n    }\n    this.textElement.textContent = text;\n    this.textElement.classList.toggle('hidden', !text);\n    this.text = text;\n  }\n\n  setAdorner(adorner: Adorners.Adorner.Adorner): void {\n    if (this.iconName) {\n      return;\n    }\n    if (!this.adorner) {\n      this.adorner = adorner;\n    } else {\n      adorner.replaceWith(adorner);\n      if (this.element.firstChild) {\n        this.element.removeChild(this.element.firstChild);\n      }\n    }\n    this.element.prepend(adorner);\n  }\n\n  setDarkText(): void {\n    this.element.classList.add('dark-text');\n  }\n\n  turnShrinkable(): void {\n    this.element.classList.add('toolbar-has-dropdown-shrinkable');\n  }\n\n  clicked(event: Event): void {\n    if (!this.enabled) {\n      return;\n    }\n    this.dispatchEventToListeners(ToolbarButton.Events.CLICK, event);\n    event.consume();\n  }\n\n  protected mouseDown(event: MouseEvent): void {\n    if (!this.enabled) {\n      return;\n    }\n    this.dispatchEventToListeners(ToolbarButton.Events.MOUSE_DOWN, event);\n  }\n}\n\nexport namespace ToolbarButton {\n  export const enum Events {\n    CLICK = 'Click',\n    MOUSE_DOWN = 'MouseDown',\n  }\n\n  export type EventTypes = {\n    [Events.CLICK]: Event,\n    [Events.MOUSE_DOWN]: MouseEvent,\n  };\n}\n\nexport class ToolbarInput extends ToolbarItem<ToolbarInput.EventTypes> {\n  private prompt: TextPrompt;\n  private readonly proxyElement: Element;\n\n  constructor(\n      placeholder: string, accessiblePlaceholder?: string, growFactor?: number, shrinkFactor?: number, tooltip?: string,\n      completions?: ((arg0: string, arg1: string, arg2?: boolean|undefined) => Promise<Suggestion[]>),\n      dynamicCompletions?: boolean, jslogContext?: string) {\n    const element = document.createElement('div');\n    element.classList.add('toolbar-input');\n    super(element);\n\n    const internalPromptElement = this.element.createChild('div', 'toolbar-input-prompt');\n    ARIAUtils.setLabel(internalPromptElement, accessiblePlaceholder || placeholder);\n    internalPromptElement.addEventListener('focus', () => this.element.classList.add('focused'));\n    internalPromptElement.addEventListener('blur', () => this.element.classList.remove('focused'));\n\n    this.prompt = new TextPrompt();\n    this.prompt.jslogContext = jslogContext;\n    this.proxyElement = this.prompt.attach(internalPromptElement);\n    this.proxyElement.classList.add('toolbar-prompt-proxy');\n    this.proxyElement.addEventListener('keydown', (event: Event) => this.onKeydownCallback(event as KeyboardEvent));\n    this.prompt.initialize(\n        completions || (() => Promise.resolve([])),\n        ' ',\n        dynamicCompletions,\n    );\n    if (tooltip) {\n      this.prompt.setTitle(tooltip);\n    }\n    this.prompt.setPlaceholder(placeholder, accessiblePlaceholder);\n    this.prompt.addEventListener(TextPromptEvents.TEXT_CHANGED, this.onChangeCallback.bind(this));\n\n    if (growFactor) {\n      this.element.style.flexGrow = String(growFactor);\n    }\n    if (shrinkFactor) {\n      this.element.style.flexShrink = String(shrinkFactor);\n    }\n\n    const clearButtonText = i18nString(UIStrings.clearInput);\n    const clearButton = new Buttons.Button.Button();\n    clearButton.data = {\n      variant: Buttons.Button.Variant.ICON,\n      iconName: 'cross-circle-filled',\n      size: Buttons.Button.Size.SMALL,\n      title: clearButtonText,\n    };\n    clearButton.className = 'toolbar-input-clear-button';\n    clearButton.setAttribute('jslog', `${VisualLogging.action('clear').track({click: true}).parent('mapped')}`);\n    VisualLogging.setMappedParent(clearButton, internalPromptElement);\n    clearButton.variant = Buttons.Button.Variant.ICON;\n    clearButton.size = Buttons.Button.Size.SMALL;\n    clearButton.iconName = 'cross-circle-filled';\n    clearButton.title = clearButtonText;\n    clearButton.ariaLabel = clearButtonText;\n    clearButton.tabIndex = -1;\n\n    clearButton.addEventListener('click', () => {\n      this.setValue('', true);\n      this.prompt.focus();\n    });\n\n    this.element.appendChild(clearButton);\n    this.updateEmptyStyles();\n  }\n\n  override applyEnabledState(enabled: boolean): void {\n    if (enabled) {\n      this.element.classList.remove('disabled');\n    } else {\n      this.element.classList.add('disabled');\n    }\n\n    this.prompt.setEnabled(enabled);\n  }\n\n  setValue(value: string, notify?: boolean): void {\n    this.prompt.setText(value);\n    if (notify) {\n      this.onChangeCallback();\n    }\n    this.updateEmptyStyles();\n  }\n\n  value(): string {\n    return this.prompt.textWithCurrentSuggestion();\n  }\n\n  valueWithoutSuggestion(): string {\n    return this.prompt.text();\n  }\n\n  clearAutocomplete(): void {\n    this.prompt.clearAutocomplete();\n  }\n\n  focus(): void {\n    this.prompt.focus();\n  }\n\n  private onKeydownCallback(event: KeyboardEvent): void {\n    if (event.key === 'Enter' && this.prompt.text()) {\n      this.dispatchEventToListeners(ToolbarInput.Event.ENTER_PRESSED, this.prompt.text());\n    }\n    if (!Platform.KeyboardUtilities.isEscKey(event) || !this.prompt.text()) {\n      return;\n    }\n    this.setValue('', true);\n    event.consume(true);\n  }\n\n  private onChangeCallback(): void {\n    this.updateEmptyStyles();\n    this.dispatchEventToListeners(ToolbarInput.Event.TEXT_CHANGED, this.prompt.text());\n  }\n\n  private updateEmptyStyles(): void {\n    this.element.classList.toggle('toolbar-input-empty', !this.prompt.text());\n  }\n}\n\nexport class ToolbarFilter extends ToolbarInput {\n  constructor(\n      filterBy?: Common.UIString.LocalizedString, growFactor?: number, shrinkFactor?: number, tooltip?: string,\n      completions?: ((arg0: string, arg1: string, arg2?: boolean|undefined) => Promise<Suggestion[]>),\n      dynamicCompletions?: boolean, jslogContext?: string) {\n    const filterPlaceholder = filterBy ? filterBy : i18nString(UIStrings.filter);\n    super(\n        filterPlaceholder, filterPlaceholder, growFactor, shrinkFactor, tooltip, completions, dynamicCompletions,\n        jslogContext || 'filter');\n\n    const filterIcon = IconButton.Icon.create('filter');\n    this.element.prepend(filterIcon);\n    this.element.classList.add('toolbar-filter');\n  }\n}\n\nexport namespace ToolbarInput {\n  export const enum Event {\n    TEXT_CHANGED = 'TextChanged',\n    ENTER_PRESSED = 'EnterPressed',\n  }\n\n  export interface EventTypes {\n    [Event.TEXT_CHANGED]: string;\n    [Event.ENTER_PRESSED]: string;\n  }\n}\n\nexport class ToolbarToggle extends ToolbarButton {\n  private readonly untoggledGlyph: string|undefined;\n  private readonly toggledGlyph: string|undefined;\n\n  constructor(title: string, glyph?: string, toggledGlyph?: string, jslogContext?: string, toggleOnClick?: boolean) {\n    super(title, glyph, '');\n    this.untoggledGlyph = glyph;\n    this.toggledGlyph = toggledGlyph ? toggledGlyph : glyph;\n    this.setToggledIcon(this.toggledGlyph || '');\n    this.setToggleType(Buttons.Button.ToggleType.PRIMARY);\n    this.toggled(false);\n\n    if (jslogContext) {\n      this.element.setAttribute('jslog', `${VisualLogging.toggle().track({click: true}).context(jslogContext)}`);\n    }\n    if (toggleOnClick !== undefined) {\n      this.setToggleOnClick(toggleOnClick);\n    }\n  }\n\n  setToggleOnClick(toggleOnClick: boolean): void {\n    this.toggleOnClick(toggleOnClick);\n  }\n\n  setToggled(toggled: boolean): void {\n    this.toggled(toggled);\n  }\n\n  setChecked(checked: boolean): void {\n    this.checked(checked);\n  }\n\n  setDefaultWithRedColor(withRedColor: boolean): void {\n    if (withRedColor) {\n      this.setToggleType(Buttons.Button.ToggleType.RED);\n      this.setGlyph(this.toggledGlyph || '');\n      this.setToggledIcon(this.untoggledGlyph || '');\n      this.toggled(true);\n    }\n  }\n\n  enableToggleWithRedColor(): void {\n    this.setToggleType(Buttons.Button.ToggleType.RED);\n  }\n}\n\nexport class ToolbarMenuButton extends ToolbarCombobox {\n  private readonly contextMenuHandler: (arg0: ContextMenu) => void;\n  private readonly useSoftMenu: boolean;\n  private triggerTimeoutId?: number;\n  #triggerDelay: number = 200;\n\n  constructor(\n      contextMenuHandler: (arg0: ContextMenu) => void, isIconDropdown?: boolean, useSoftMenu?: boolean,\n      jslogContext?: string, iconName?: string) {\n    super('', isIconDropdown, jslogContext, iconName);\n    if (jslogContext) {\n      this.element.setAttribute('jslog', `${VisualLogging.dropDown().track({click: true}).context(jslogContext)}`);\n    }\n    this.contextMenuHandler = contextMenuHandler;\n    this.useSoftMenu = Boolean(useSoftMenu);\n    ARIAUtils.markAsMenuButton(this.element);\n  }\n\n  setTriggerDelay(x: number): void {\n    this.#triggerDelay = x;\n  }\n\n  override mouseDown(event: MouseEvent): void {\n    if (!this.enabled) {\n      return;\n    }\n    if (event.buttons !== 1) {\n      super.mouseDown(event);\n      return;\n    }\n\n    if (!this.triggerTimeoutId) {\n      this.triggerTimeoutId = window.setTimeout(this.trigger.bind(this, event), this.#triggerDelay);\n    }\n  }\n\n  private trigger(event: Event): void {\n    delete this.triggerTimeoutId;\n\n    const contextMenu = new ContextMenu(event, {\n      useSoftMenu: this.useSoftMenu,\n      x: this.element.getBoundingClientRect().left,\n      y: this.element.getBoundingClientRect().top + this.element.offsetHeight,\n      // Without adding a delay, pointer events will be un-ignored too early, and a single click causes\n      // the context menu to be closed and immediately re-opened on Windows (https://crbug.com/339560549).\n      onSoftMenuClosed: () => setTimeout(() => this.element.removeAttribute('aria-expanded'), 50),\n    });\n    this.contextMenuHandler(contextMenu);\n    this.element.setAttribute('aria-expanded', 'true');\n    void contextMenu.show();\n  }\n\n  override clicked(event: Event): void {\n    if (this.triggerTimeoutId) {\n      clearTimeout(this.triggerTimeoutId);\n    }\n    this.trigger(event);\n  }\n}\n\nexport class ToolbarSettingToggle extends ToolbarToggle {\n  private readonly defaultTitle: string;\n  private readonly setting: Common.Settings.Setting<boolean>;\n  private willAnnounceState: boolean;\n\n  constructor(\n      setting: Common.Settings.Setting<boolean>, glyph: string, title: string, toggledGlyph?: string,\n      jslogContext?: string) {\n    super(title, glyph, toggledGlyph, jslogContext);\n    this.defaultTitle = title;\n    this.setting = setting;\n    this.settingChanged();\n    this.setting.addChangeListener(this.settingChanged, this);\n\n    // Determines whether the toggle state will be announced to a screen reader\n    this.willAnnounceState = false;\n  }\n\n  private settingChanged(): void {\n    const toggled = this.setting.get();\n    this.setToggled(toggled);\n    const toggleAnnouncement = toggled ? i18nString(UIStrings.pressed) : i18nString(UIStrings.notPressed);\n    if (this.willAnnounceState) {\n      ARIAUtils.alert(toggleAnnouncement);\n    }\n    this.willAnnounceState = false;\n    this.setTitle(this.defaultTitle);\n  }\n\n  override clicked(event: Event): void {\n    this.willAnnounceState = true;\n    this.setting.set(this.isToggled());\n    super.clicked(event);\n  }\n}\n\nexport class ToolbarSeparator extends ToolbarItem<void> {\n  constructor(spacer?: boolean) {\n    const element = document.createElement('div');\n    element.classList.add(spacer ? 'toolbar-spacer' : 'toolbar-divider');\n    super(element);\n  }\n}\n\nexport interface Provider {\n  item(): ToolbarItem|null;\n}\n\nexport interface ItemsProvider {\n  toolbarItems(): ToolbarItem[];\n}\n\nexport class ToolbarComboBox extends ToolbarItem<void> {\n  protected selectElementInternal: HTMLSelectElement;\n\n  constructor(changeHandler: ((arg0: Event) => void)|null, title: string, className?: string, jslogContext?: string) {\n    const element = document.createElement('span');\n    element.classList.add('toolbar-select-container');\n    super(element);\n    this.selectElementInternal = (this.element.createChild('select', 'toolbar-item') as HTMLSelectElement);\n    const dropdownArrowIcon = IconButton.Icon.create('triangle-down', 'toolbar-dropdown-arrow');\n    this.element.appendChild(dropdownArrowIcon);\n    if (changeHandler) {\n      this.selectElementInternal.addEventListener('change', changeHandler, false);\n    }\n    ARIAUtils.setLabel(this.selectElementInternal, title);\n    super.setTitle(title);\n    if (className) {\n      this.selectElementInternal.classList.add(className);\n    }\n    if (jslogContext) {\n      this.selectElementInternal.setAttribute(\n          'jslog', `${VisualLogging.dropDown().track({change: true}).context(jslogContext)}`);\n    }\n  }\n\n  selectElement(): HTMLSelectElement {\n    return this.selectElementInternal;\n  }\n\n  size(): number {\n    return this.selectElementInternal.childElementCount;\n  }\n\n  options(): HTMLOptionElement[] {\n    return Array.prototype.slice.call(this.selectElementInternal.children, 0);\n  }\n\n  addOption(option: Element): void {\n    this.selectElementInternal.appendChild(option);\n  }\n\n  createOption(label: string, value?: string): HTMLOptionElement {\n    const option = (this.selectElementInternal.createChild('option') as HTMLOptionElement);\n    option.text = label;\n    if (typeof value !== 'undefined') {\n      option.value = value;\n    }\n    const jslogContext = value ? Platform.StringUtilities.toKebabCase(value) : undefined;\n    option.setAttribute('jslog', `${VisualLogging.item(jslogContext).track({click: true})}`);\n    return option;\n  }\n\n  override applyEnabledState(enabled: boolean): void {\n    super.applyEnabledState(enabled);\n    this.selectElementInternal.disabled = !enabled;\n  }\n\n  removeOption(option: Element): void {\n    this.selectElementInternal.removeChild(option);\n  }\n\n  removeOptions(): void {\n    this.selectElementInternal.removeChildren();\n  }\n\n  selectedOption(): HTMLOptionElement|null {\n    if (this.selectElementInternal.selectedIndex >= 0) {\n      return this.selectElementInternal[this.selectElementInternal.selectedIndex] as HTMLOptionElement;\n    }\n    return null;\n  }\n\n  select(option: Element): void {\n    this.selectElementInternal.selectedIndex = Array.prototype.indexOf.call(this.selectElementInternal, option);\n  }\n\n  setSelectedIndex(index: number): void {\n    this.selectElementInternal.selectedIndex = index;\n  }\n\n  selectedIndex(): number {\n    return this.selectElementInternal.selectedIndex;\n  }\n\n  setMaxWidth(width: number): void {\n    this.selectElementInternal.style.maxWidth = width + 'px';\n  }\n\n  setMinWidth(width: number): void {\n    this.selectElementInternal.style.minWidth = width + 'px';\n  }\n}\n\nexport interface Option {\n  value: string;\n  label: string;\n}\n\nexport class ToolbarSettingComboBox extends ToolbarComboBox {\n  private optionsInternal: Option[];\n  private readonly setting: Common.Settings.Setting<string>;\n  private muteSettingListener?: boolean;\n  constructor(options: Option[], setting: Common.Settings.Setting<string>, accessibleName: string) {\n    super(null, accessibleName, undefined, setting.name);\n    this.optionsInternal = options;\n    this.setting = setting;\n    this.selectElementInternal.addEventListener('change', this.valueChanged.bind(this), false);\n    this.setOptions(options);\n    setting.addChangeListener(this.settingChanged, this);\n  }\n\n  setOptions(options: Option[]): void {\n    this.optionsInternal = options;\n    this.selectElementInternal.removeChildren();\n    for (let i = 0; i < options.length; ++i) {\n      const dataOption = options[i];\n      const option = this.createOption(dataOption.label, dataOption.value);\n      this.selectElementInternal.appendChild(option);\n      if (this.setting.get() === dataOption.value) {\n        this.setSelectedIndex(i);\n      }\n    }\n  }\n\n  value(): string {\n    return this.optionsInternal[this.selectedIndex()].value;\n  }\n\n  private settingChanged(): void {\n    if (this.muteSettingListener) {\n      return;\n    }\n\n    const value = this.setting.get();\n    for (let i = 0; i < this.optionsInternal.length; ++i) {\n      if (value === this.optionsInternal[i].value) {\n        this.setSelectedIndex(i);\n        break;\n      }\n    }\n  }\n\n  private valueChanged(_event: Event): void {\n    const option = this.optionsInternal[this.selectedIndex()];\n    this.muteSettingListener = true;\n    this.setting.set(option.value);\n    this.muteSettingListener = false;\n  }\n}\n\nexport class ToolbarCheckbox extends ToolbarItem<void> {\n  inputElement: HTMLInputElement;\n\n  constructor(\n      text: string, tooltip?: string, listener?: ((arg0: MouseEvent) => void), jslogContext?: string, small?: boolean) {\n    super(CheckboxLabel.create(text));\n    this.element.classList.add('checkbox');\n    this.inputElement = (this.element as CheckboxLabel).checkboxElement;\n    this.inputElement.classList.toggle('small', small);\n    if (tooltip) {\n      // install on the checkbox\n      Tooltip.install(this.inputElement, tooltip);\n      Tooltip.install((this.element as CheckboxLabel).textElement, tooltip);\n    }\n    if (listener) {\n      this.inputElement.addEventListener('click', listener, false);\n    }\n    if (jslogContext) {\n      this.inputElement.setAttribute('jslog', `${VisualLogging.toggle().track({change: true}).context(jslogContext)}`);\n    }\n  }\n\n  checked(): boolean {\n    return this.inputElement.checked;\n  }\n\n  setChecked(value: boolean): void {\n    this.inputElement.checked = value;\n  }\n\n  override applyEnabledState(enabled: boolean): void {\n    super.applyEnabledState(enabled);\n    this.inputElement.disabled = !enabled;\n  }\n\n  setIndeterminate(indeterminate: boolean): void {\n    this.inputElement.indeterminate = indeterminate;\n  }\n}\n\nexport class ToolbarSettingCheckbox extends ToolbarCheckbox {\n  constructor(setting: Common.Settings.Setting<boolean>, tooltip?: string, alternateTitle?: string) {\n    super(alternateTitle || setting.title() || '', tooltip, undefined, setting.name);\n    bindCheckbox(this.inputElement, setting);\n  }\n}\n\nconst registeredToolbarItems: ToolbarItemRegistration[] = [];\n\nexport function registerToolbarItem(registration: ToolbarItemRegistration): void {\n  registeredToolbarItems.push(registration);\n}\n\nfunction getRegisteredToolbarItems(): ToolbarItemRegistration[] {\n  return registeredToolbarItems.filter(\n      item => Root.Runtime.Runtime.isDescriptorEnabled({experiment: item.experiment, condition: item.condition}));\n}\n\nexport interface ToolbarItemRegistration {\n  order?: number;\n  location: ToolbarItemLocation;\n  separator?: boolean;\n  label?: () => Platform.UIString.LocalizedString;\n  showLabel?: boolean;\n  actionId?: string;\n  condition?: Root.Runtime.Condition;\n  loadItem?: (() => Promise<Provider>);\n  experiment?: string;\n  jslog?: string;\n}\n\nexport const enum ToolbarItemLocation {\n  FILES_NAVIGATION_TOOLBAR = 'files-navigator-toolbar',\n  MAIN_TOOLBAR_RIGHT = 'main-toolbar-right',\n  MAIN_TOOLBAR_LEFT = 'main-toolbar-left',\n  STYLES_SIDEBARPANE_TOOLBAR = 'styles-sidebarpane-toolbar',\n}\n"],
  "mappings": "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",
  "names": ["document", "button", "ToolbarItemWithCompactLayoutEvents", "ToolbarButton", "Events", "ToolbarInput", "Event", "ToolbarItemLocation"]
}
