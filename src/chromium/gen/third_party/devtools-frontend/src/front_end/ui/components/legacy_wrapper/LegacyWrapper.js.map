{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/components/legacy_wrapper/LegacyWrapper.ts"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as UI from '../../legacy/legacy.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\n\nexport abstract class WrappableComponent<T extends UI.Widget.Widget = UI.Widget.Widget> extends HTMLElement {\n  wrapper: T|null = null;\n  async render(): Promise<void> {\n  }\n  wasShown(): void {\n  }\n  willHide(): void {\n  }\n}\n\ntype Constructor<T extends UI.Widget.Widget> = new (...args: any[]) => T;\n\nexport type LegacyWrapper<T extends UI.Widget.Widget, Component extends WrappableComponent<T>> = {\n  getComponent(): Component,\n}&T;\n\nexport function\nlegacyWrapper<T extends Constructor<UI.Widget.Widget>, Component extends WrappableComponent<InstanceType<T>>>(\n    base: T, component: Component, jsLogContext?: string): LegacyWrapper<InstanceType<T>, Component> {\n  return new class extends base {\n    #component: Component;\n\n    constructor(..._args: any[]) {\n      super(/* useShadowDom=*/ true);\n      this.#component = component;\n      this.#component.wrapper = this as InstanceType<T>;\n      void this.#component.render();\n      this.contentElement.appendChild(this.#component);\n      if (jsLogContext) {\n        this.element.setAttribute('jslog', `${VisualLogging.pane().context(jsLogContext)}`);\n      }\n    }\n\n    override wasShown(): void {\n      this.#component.wasShown();\n      void this.#component.render();\n    }\n\n    override willHide(): void {\n      this.#component.willHide();\n    }\n\n    override async doUpdate(): Promise<void> {\n      await this.#component.render();\n    }\n\n    getComponent(): Component {\n      return this.#component;\n    }\n    // clang-format off\n  }() as unknown as LegacyWrapper<InstanceType<T>, Component>;\n  // clang-format on\n}\n"],
  "mappings": ";AAKA,YAAY,mBAAmB;AAExB,aAAe,2BAA0E,YAAY;AAAA,EAC1G,UAAkB;AAAA,EAClB,MAAM,SAAwB;AAAA,EAC9B;AAAA,EACA,WAAiB;AAAA,EACjB;AAAA,EACA,WAAiB;AAAA,EACjB;AACF;AAQO,gBACP,cACI,MAAS,WAAsB,cAAkE;AACnG,SAAO,IAAI,cAAc,KAAK;AAAA,IAC5B;AAAA,IAEA,eAAe,OAAc;AAC3B;AAAA;AAAA,QAAyB;AAAA,MAAI;AAC7B,WAAK,aAAa;AAClB,WAAK,WAAW,UAAU;AAC1B,WAAK,KAAK,WAAW,OAAO;AAC5B,WAAK,eAAe,YAAY,KAAK,UAAU;AAC/C,UAAI,cAAc;AAChB,aAAK,QAAQ,aAAa,SAAS,GAAG,cAAc,KAAK,EAAE,QAAQ,YAAY,CAAC,EAAE;AAAA,MACpF;AAAA,IACF;AAAA,IAES,WAAiB;AACxB,WAAK,WAAW,SAAS;AACzB,WAAK,KAAK,WAAW,OAAO;AAAA,IAC9B;AAAA,IAES,WAAiB;AACxB,WAAK,WAAW,SAAS;AAAA,IAC3B;AAAA,IAEA,MAAe,WAA0B;AACvC,YAAM,KAAK,WAAW,OAAO;AAAA,IAC/B;AAAA,IAEA,eAA0B;AACxB,aAAO,KAAK;AAAA,IACd;AAAA;AAAA,EAEF,EAAE;AAEJ;",
  "names": []
}
