{
  "version": 3,
  "sources": ["../../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/components/inline_editor/CSSAngle.ts"],
  "sourcesContent": ["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport './CSSAngleEditor.js';\nimport './CSSAngleSwatch.js';\n\nimport * as LitHtml from '../../../lit-html/lit-html.js';\n\nimport cssAngleStyles from './cssAngle.css.js';\nimport {\n  type Angle,\n  AngleUnit,\n  convertAngleUnit,\n  getNewAngleFromEvent,\n  getNextUnit,\n  parseText,\n  roundAngleByUnit,\n} from './CSSAngleUtils.js';\nimport {ValueChangedEvent} from './InlineEditorUtils.js';\n\nconst {render, html} = LitHtml;\nconst styleMap = LitHtml.Directives.styleMap;\n\nexport class PopoverToggledEvent extends Event {\n  static readonly eventName = 'popovertoggled';\n  data: {open: boolean};\n\n  constructor(open: boolean) {\n    super(PopoverToggledEvent.eventName, {});\n    this.data = {open};\n  }\n}\n\nexport class UnitChangedEvent extends Event {\n  static readonly eventName = 'unitchanged';\n  data: {value: string};\n\n  constructor(value: string) {\n    super(UnitChangedEvent.eventName, {});\n    this.data = {value};\n  }\n}\n\ninterface EventTypes {\n  [PopoverToggledEvent.eventName]: PopoverToggledEvent;\n  [UnitChangedEvent.eventName]: UnitChangedEvent;\n  [ValueChangedEvent.eventName]: ValueChangedEvent;\n}\n\nexport interface CSSAngleData {\n  angleText: string;\n  containingPane: HTMLElement;\n}\n\nconst DefaultAngle = {\n  value: 0,\n  unit: AngleUnit.RAD,\n};\n\nexport class CSSAngle extends HTMLElement {\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private angle: Angle = DefaultAngle;\n  private displayedAngle: Angle = DefaultAngle;\n  private propertyValue = '';\n  private containingPane?: HTMLElement;\n  private angleElement: HTMLElement|null = null;\n  private swatchElement: HTMLElement|null = null;\n  private popoverOpen = false;\n  private popoverStyleTop = '';\n  private popoverStyleLeft = '';\n  private onMinifyingAction = this.minify.bind(this);\n\n  connectedCallback(): void {\n    this.shadow.adoptedStyleSheets = [cssAngleStyles];\n  }\n\n  set data(data: CSSAngleData) {\n    const parsedResult = parseText(data.angleText);\n    if (!parsedResult) {\n      return;\n    }\n    this.angle = parsedResult;\n    this.displayedAngle = {...parsedResult};\n    this.containingPane = data.containingPane;\n    this.render();\n  }\n\n  disconnectedCallback(): void {\n    this.unbindMinifyingAction();\n  }\n\n  // We bind and unbind mouse event listeners upon popping over and minifying,\n  // because we anticipate most of the time this widget is minified even when\n  // it's attached to the DOM tree.\n  popOver(): void {\n    if (!this.containingPane) {\n      return;\n    }\n\n    if (!this.angleElement) {\n      this.angleElement = this.shadow.querySelector<HTMLElement>('.css-angle');\n    }\n    if (!this.swatchElement) {\n      this.swatchElement = this.shadow.querySelector<HTMLElement>('devtools-css-angle-swatch');\n    }\n    if (!this.angleElement || !this.swatchElement) {\n      return;\n    }\n\n    this.dispatchEvent(new PopoverToggledEvent(true));\n    this.bindMinifyingAction();\n\n    const miniIconBottom = this.swatchElement.getBoundingClientRect().bottom;\n    const miniIconLeft = this.swatchElement.getBoundingClientRect().left;\n    if (miniIconBottom && miniIconLeft) {\n      // We offset mini icon's X and Y positions with the containing styles\n      // pane's positions because DevTools' root SplitWidget's\n      // sidebar slot, where most of the DevTools content lives,\n      // has an offset of positions, which makes all of its children's DOMRect\n      // positions to have this offset.\n      const offsetTop = this.containingPane.getBoundingClientRect().top;\n      const offsetLeft = this.containingPane.getBoundingClientRect().left;\n      this.popoverStyleTop = `${miniIconBottom - offsetTop}px`;\n      this.popoverStyleLeft = `${miniIconLeft - offsetLeft}px`;\n    }\n\n    this.popoverOpen = true;\n    this.render();\n    this.angleElement.focus();\n  }\n\n  override addEventListener<K extends keyof EventTypes>(\n      type: K, listener: (this: CSSAngle, ev: EventTypes[K]) => void,\n      options?: boolean|AddEventListenerOptions|undefined): void;\n  override addEventListener<K extends keyof HTMLElementEventMap>(\n      type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => void,\n      options?: boolean|AddEventListenerOptions|undefined): void;\n  override addEventListener(\n      type: string, listener: EventListenerOrEventListenerObject,\n      options?: boolean|AddEventListenerOptions|undefined): void {\n    super.addEventListener(type, listener, options);\n  }\n\n  minify(): void {\n    if (this.popoverOpen === false) {\n      return;\n    }\n\n    this.popoverOpen = false;\n    this.dispatchEvent(new PopoverToggledEvent(false));\n    this.unbindMinifyingAction();\n    this.render();\n  }\n\n  updateProperty(value: string): void {\n    this.propertyValue = value;\n    this.render();\n  }\n\n  updateAngle(angle: Angle): void {\n    this.displayedAngle = roundAngleByUnit(convertAngleUnit(angle, this.displayedAngle.unit));\n    this.angle = this.displayedAngle;\n    this.dispatchEvent(new ValueChangedEvent(`${this.angle.value}${this.angle.unit}`));\n  }\n\n  private displayNextUnit(): void {\n    const nextUnit = getNextUnit(this.displayedAngle.unit);\n    this.displayedAngle = roundAngleByUnit(convertAngleUnit(this.angle, nextUnit));\n    this.dispatchEvent(new UnitChangedEvent(`${this.displayedAngle.value}${this.displayedAngle.unit}`));\n  }\n\n  private bindMinifyingAction(): void {\n    document.addEventListener('mousedown', this.onMinifyingAction);\n    if (this.containingPane) {\n      this.containingPane.addEventListener('scroll', this.onMinifyingAction);\n    }\n  }\n\n  private unbindMinifyingAction(): void {\n    document.removeEventListener('mousedown', this.onMinifyingAction);\n    if (this.containingPane) {\n      this.containingPane.removeEventListener('scroll', this.onMinifyingAction);\n    }\n  }\n\n  private onMiniIconClick(event: MouseEvent): void {\n    event.stopPropagation();\n    if (event.shiftKey && !this.popoverOpen) {\n      this.displayNextUnit();\n      return;\n    }\n    this.popoverOpen ? this.minify() : this.popOver();\n  }\n\n  // Fix that the previous text will be selected when double-clicking the angle icon\n  private consume(event: MouseEvent): void {\n    event.stopPropagation();\n  }\n\n  private onKeydown(event: KeyboardEvent): void {\n    if (!this.popoverOpen) {\n      return;\n    }\n\n    switch (event.key) {\n      case 'Escape':\n        event.stopPropagation();\n        this.minify();\n        this.blur();\n        break;\n      case 'ArrowUp':\n      case 'ArrowDown': {\n        const newAngle = getNewAngleFromEvent(this.angle, event);\n        if (newAngle) {\n          this.updateAngle(newAngle);\n        }\n        event.preventDefault();\n        break;\n      }\n    }\n  }\n\n  private render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <div class=\"css-angle\" @focusout=${this.minify} @keydown=${this.onKeydown} tabindex=\"-1\">\n        <div class=\"preview\">\n          <devtools-css-angle-swatch\n            @click=${this.onMiniIconClick}\n            @mousedown=${this.consume}\n            @dblclick=${this.consume}\n            .data=${{\n              angle: this.angle,\n            }}>\n          </devtools-css-angle-swatch><slot></slot></div>\n        ${this.popoverOpen ? this.renderPopover() : null}\n      </div>\n    `, this.shadow, {\n      host: this,\n    });\n    // clang-format on\n  }\n\n  private renderPopover(): LitHtml.TemplateResult {\n    let contextualBackground = '';\n    if (this.propertyValue && !this.propertyValue.match(/url\\(.*\\)/i)) {\n      contextualBackground = this.propertyValue;\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n    <devtools-css-angle-editor\n      class=\"popover popover-css-angle\"\n      style=${styleMap({top: this.popoverStyleTop, left: this.popoverStyleLeft})}\n      .data=${{\n        angle: this.angle,\n        onAngleUpdate: (angle: Angle):void => {\n          this.updateAngle(angle);\n        },\n        background: contextualBackground,\n      }}\n    ></devtools-css-angle-editor>\n    `;\n        // clang-format on\n  }\n}\n\ncustomElements.define('devtools-css-angle', CSSAngle);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-css-angle': CSSAngle;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
