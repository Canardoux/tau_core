{
  "version": 3,
  "sources": ["../../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/components/inline_editor/AnimationTimingUI.ts"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\n\nimport type {AnimationTimingModel} from './AnimationTimingModel.js';\nimport {BezierUI} from './BezierUI.js';\nimport {CSSLinearEasingModel, type Point} from './CSSLinearEasingModel.js';\n\nconst DOUBLE_CLICK_DELAY = 500;\n\ntype Params = {\n  container: Element,\n  bezier: UI.Geometry.CubicBezier,\n  onBezierChange: (bezier: UI.Geometry.CubicBezier) => void,\n};\n\nclass BezierCurveUI {\n  #curveUI: BezierUI;\n  #bezier: UI.Geometry.CubicBezier;\n  #curve: Element;\n  #mouseDownPosition?: UI.Geometry.Point;\n  #controlPosition?: UI.Geometry.Point;\n  #selectedPoint?: number;\n  #onBezierChange: (bezier: UI.Geometry.CubicBezier) => void;\n\n  constructor({bezier, container, onBezierChange}: Params) {\n    this.#bezier = bezier;\n    this.#curveUI = new BezierUI({\n      width: 150,\n      height: 250,\n      marginTop: 50,\n      controlPointRadius: 7,\n      shouldDrawLine: true,\n    });\n\n    this.#curve = UI.UIUtils.createSVGChild(container, 'svg', 'bezier-curve');\n    this.#onBezierChange = onBezierChange;\n\n    UI.UIUtils.installDragHandle(\n        this.#curve, this.dragStart.bind(this), this.dragMove.bind(this), this.dragEnd.bind(this), 'default');\n  }\n\n  private dragStart(event: MouseEvent): boolean {\n    this.#mouseDownPosition = new UI.Geometry.Point(event.x, event.y);\n    const ui = this.#curveUI;\n    this.#controlPosition = new UI.Geometry.Point(\n        Platform.NumberUtilities.clamp((event.offsetX - ui.radius) / ui.curveWidth(), 0, 1),\n        (ui.curveHeight() + ui.marginTop + ui.radius - event.offsetY) / ui.curveHeight());\n\n    const firstControlPointIsCloser = this.#controlPosition.distanceTo(this.#bezier.controlPoints[0]) <\n        this.#controlPosition.distanceTo(this.#bezier.controlPoints[1]);\n    this.#selectedPoint = firstControlPointIsCloser ? 0 : 1;\n\n    this.#bezier.controlPoints[this.#selectedPoint] = this.#controlPosition;\n    this.#onBezierChange(this.#bezier);\n\n    event.consume(true);\n    return true;\n  }\n\n  private updateControlPosition(mouseX: number, mouseY: number): void {\n    if (this.#mouseDownPosition === undefined || this.#controlPosition === undefined ||\n        this.#selectedPoint === undefined) {\n      return;\n    }\n    const deltaX = (mouseX - this.#mouseDownPosition.x) / this.#curveUI.curveWidth();\n    const deltaY = (mouseY - this.#mouseDownPosition.y) / this.#curveUI.curveHeight();\n    const newPosition = new UI.Geometry.Point(\n        Platform.NumberUtilities.clamp(this.#controlPosition.x + deltaX, 0, 1), this.#controlPosition.y - deltaY);\n    this.#bezier.controlPoints[this.#selectedPoint] = newPosition;\n  }\n\n  private dragMove(event: MouseEvent): void {\n    this.updateControlPosition(event.x, event.y);\n    this.#onBezierChange(this.#bezier);\n  }\n\n  private dragEnd(event: MouseEvent): void {\n    this.updateControlPosition(event.x, event.y);\n    this.#onBezierChange(this.#bezier);\n  }\n\n  setBezier(bezier: UI.Geometry.CubicBezier): void {\n    this.#bezier = bezier;\n    this.draw();\n  }\n\n  draw(): void {\n    this.#curveUI.drawCurve(this.#bezier, this.#curve);\n  }\n}\n\ntype LinearEasingPresentationParams = {\n  width: number,\n  height: number,\n  marginTop: number,\n  pointRadius: number,\n};\ntype Position = {\n  x: number,\n  y: number,\n};\nclass LinearEasingPresentation {\n  params: LinearEasingPresentationParams;\n  renderedPositions?: Position[];\n\n  constructor(params: LinearEasingPresentationParams) {\n    this.params = params;\n  }\n\n  #curveWidth(): number {\n    return this.params.width - this.params.pointRadius * 2;\n  }\n\n  #curveHeight(): number {\n    return this.params.height - this.params.pointRadius * 2 - this.params.marginTop * 2;\n  }\n\n  #drawControlPoint(parentElement: Element, controlX: number, controlY: number, index: number): void {\n    const circle = UI.UIUtils.createSVGChild(parentElement, 'circle', 'bezier-control-circle');\n    circle.setAttribute(\n        'jslog', `${VisualLogging.controlPoint('bezier.linear-control-circle').track({drag: true, dblclick: true})}`);\n    circle.setAttribute('data-point-index', String(index));\n    circle.setAttribute('cx', String(controlX));\n    circle.setAttribute('cy', String(controlY));\n    circle.setAttribute('r', String(this.params.pointRadius));\n  }\n\n  timingPointToPosition(point: Point): Position {\n    return {\n      x: (point.input / 100) * this.#curveWidth() + this.params.pointRadius,\n      y: (1 - point.output) * this.#curveHeight() + this.params.pointRadius,\n    };\n  }\n\n  positionToTimingPoint(position: Position): Point {\n    return {\n      input: ((position.x - this.params.pointRadius) / this.#curveWidth()) * 100,\n      output: 1 - (position.y - this.params.pointRadius) / this.#curveHeight(),\n    };\n  }\n\n  draw(linearEasingModel: CSSLinearEasingModel, svg: Element): void {\n    svg.setAttribute('width', String(this.#curveWidth()));\n    svg.setAttribute('height', String(this.#curveHeight()));\n    svg.removeChildren();\n    const group = UI.UIUtils.createSVGChild(svg, 'g');\n\n    const positions = linearEasingModel.points().map(point => this.timingPointToPosition(point));\n    this.renderedPositions = positions;\n    let startingPoint = positions[0];\n    for (let i = 1; i < positions.length; i++) {\n      const position = positions[i];\n      const line = UI.UIUtils.createSVGChild(group, 'path', 'bezier-path linear-path');\n      line.setAttribute('d', `M ${startingPoint.x} ${startingPoint.y} L ${position.x} ${position.y}`);\n      line.setAttribute('data-line-index', String(i));\n      startingPoint = position;\n    }\n\n    for (let i = 0; i < positions.length; i++) {\n      const point = positions[i];\n      this.#drawControlPoint(group, point.x, point.y, i);\n    }\n  }\n}\n\nclass LinearEasingUI {\n  #model: CSSLinearEasingModel;\n  #onChange: (model: CSSLinearEasingModel) => void;\n  #presentation: LinearEasingPresentation;\n  #selectedPointIndex?: number;\n  #doubleClickTimer?: number;\n  #pointIndexForDoubleClick?: number;\n  #mouseDownPosition?: {x: number, y: number};\n\n  #svg: Element;\n\n  constructor({\n    model,\n    container,\n    onChange,\n  }: {\n    model: CSSLinearEasingModel,\n    container: HTMLElement,\n    onChange: (model: CSSLinearEasingModel) => void,\n  }) {\n    this.#model = model;\n    this.#onChange = onChange;\n    this.#presentation = new LinearEasingPresentation({\n      width: 150,\n      height: 250,\n      pointRadius: 7,\n      marginTop: 50,\n    });\n    this.#svg = UI.UIUtils.createSVGChild(container, 'svg', 'bezier-curve linear');\n\n    UI.UIUtils.installDragHandle(\n        this.#svg, this.#dragStart.bind(this), this.#dragMove.bind(this), this.#dragEnd.bind(this), 'default');\n  }\n\n  #handleLineClick(event: MouseEvent, lineIndex: number): void {\n    const newPoint = this.#presentation.positionToTimingPoint({x: event.offsetX, y: event.offsetY});\n    this.#model.addPoint(newPoint, lineIndex);\n    this.#selectedPointIndex = undefined;\n    this.#mouseDownPosition = undefined;\n  }\n\n  #handleControlPointClick(event: MouseEvent, pointIndex: number): void {\n    this.#selectedPointIndex = pointIndex;\n    this.#mouseDownPosition = {x: event.x, y: event.y};\n\n    // This is a workaround to understand whether the user double clicked\n    // a point or not. The reason is, we also want to handle drag interactions\n    // for the point and the way we install drag handlers (starting with mousedown event)\n    // doesn't allow us to register a `dblclick` handler. So, we're checking\n    // whether user double clicked (or mouse downed) a point with a timer.\n    // `#pointIndexForDoubleClick` holds the point clicked in a double click\n    // delay time frame. We reset that point after\n    // the DOUBLE_CLICK_DELAY time has passed.\n    clearTimeout(this.#doubleClickTimer);\n    if (this.#pointIndexForDoubleClick === this.#selectedPointIndex) {\n      this.#model.removePoint(this.#selectedPointIndex);\n      this.#pointIndexForDoubleClick = undefined;\n      this.#selectedPointIndex = undefined;\n      this.#mouseDownPosition = undefined;\n      return;\n    }\n\n    this.#pointIndexForDoubleClick = this.#selectedPointIndex;\n    this.#doubleClickTimer = window.setTimeout(() => {\n      this.#pointIndexForDoubleClick = undefined;\n    }, DOUBLE_CLICK_DELAY);\n  }\n\n  #dragStart(event: MouseEvent): boolean {\n    if (!(event.target instanceof SVGElement)) {\n      return false;\n    }\n\n    if (event.target.dataset.lineIndex !== undefined) {\n      this.#handleLineClick(event, Number(event.target.dataset.lineIndex));\n      event.consume(true);\n      return true;\n    }\n\n    if (event.target.dataset.pointIndex !== undefined) {\n      this.#handleControlPointClick(event, Number(event.target.dataset.pointIndex));\n      event.consume(true);\n      return true;\n    }\n\n    return false;\n  }\n\n  #updatePointPosition(mouseX: number, mouseY: number): void {\n    if (this.#selectedPointIndex === undefined || this.#mouseDownPosition === undefined) {\n      return;\n    }\n\n    const controlPosition = this.#presentation.renderedPositions?.[this.#selectedPointIndex];\n    if (!controlPosition) {\n      return;\n    }\n\n    const deltaX = mouseX - this.#mouseDownPosition.x;\n    const deltaY = mouseY - this.#mouseDownPosition.y;\n\n    this.#mouseDownPosition = {\n      x: mouseX,\n      y: mouseY,\n    };\n\n    const newPoint = {\n      x: controlPosition.x + deltaX,\n      y: controlPosition.y + deltaY,\n    };\n\n    this.#model.setPoint(this.#selectedPointIndex, this.#presentation.positionToTimingPoint(newPoint));\n  }\n\n  #dragMove(event: MouseEvent): void {\n    this.#updatePointPosition(event.x, event.y);\n    this.#onChange(this.#model);\n  }\n\n  #dragEnd(event: MouseEvent): void {\n    this.#updatePointPosition(event.x, event.y);\n    this.#onChange(this.#model);\n  }\n\n  setCSSLinearEasingModel(model: CSSLinearEasingModel): void {\n    this.#model = model;\n    this.draw();\n  }\n\n  draw(): void {\n    this.#presentation.draw(this.#model, this.#svg);\n  }\n}\n\nexport class PresetUI {\n  #linearEasingPresentation: LinearEasingPresentation;\n  #bezierPresentation: BezierUI;\n\n  constructor() {\n    this.#linearEasingPresentation = new LinearEasingPresentation({\n      width: 40,\n      height: 40,\n      marginTop: 0,\n      pointRadius: 2,\n    });\n\n    this.#bezierPresentation = new BezierUI({\n      width: 40,\n      height: 40,\n      marginTop: 0,\n      controlPointRadius: 2,\n      shouldDrawLine: false,\n    });\n  }\n\n  draw(model: AnimationTimingModel, svg: Element): void {\n    if (model instanceof CSSLinearEasingModel) {\n      this.#linearEasingPresentation.draw(model, svg);\n    } else if (model instanceof UI.Geometry.CubicBezier) {\n      this.#bezierPresentation.drawCurve(model, svg);\n    }\n  }\n}\n\ninterface AnimationTimingUIParams {\n  model: AnimationTimingModel;\n  onChange: (model: AnimationTimingModel) => void;\n}\nexport class AnimationTimingUI {\n  #container: HTMLElement;\n  #bezierContainer: HTMLElement;\n  #linearEasingContainer: HTMLElement;\n  #model: AnimationTimingModel;\n  #onChange: (model: AnimationTimingModel) => void;\n  #bezierCurveUI?: BezierCurveUI;\n  #linearEasingUI?: LinearEasingUI;\n\n  constructor({model, onChange}: AnimationTimingUIParams) {\n    this.#container = document.createElement('div');\n    this.#container.className = 'animation-timing-ui';\n    this.#container.style.width = '150px';\n    this.#container.style.height = '250px';\n\n    this.#bezierContainer = document.createElement('div');\n    this.#bezierContainer.classList.add('bezier-ui-container');\n    this.#linearEasingContainer = document.createElement('div');\n    this.#linearEasingContainer.classList.add('linear-easing-ui-container');\n\n    this.#container.appendChild(this.#bezierContainer);\n    this.#container.appendChild(this.#linearEasingContainer);\n\n    this.#model = model;\n    this.#onChange = onChange;\n\n    if (this.#model instanceof UI.Geometry.CubicBezier) {\n      this.#bezierCurveUI =\n          new BezierCurveUI({bezier: this.#model, container: this.#bezierContainer, onBezierChange: this.#onChange});\n    } else if (this.#model instanceof CSSLinearEasingModel) {\n      this.#linearEasingUI = new LinearEasingUI({\n        model: this.#model,\n        container: this.#linearEasingContainer,\n        onChange: this.#onChange,\n      });\n    }\n  }\n\n  element(): Element {\n    return this.#container;\n  }\n\n  setModel(model: AnimationTimingModel): void {\n    this.#model = model;\n    if (this.#model instanceof UI.Geometry.CubicBezier) {\n      if (this.#bezierCurveUI) {\n        this.#bezierCurveUI.setBezier(this.#model);\n      } else {\n        this.#bezierCurveUI =\n            new BezierCurveUI({bezier: this.#model, container: this.#bezierContainer, onBezierChange: this.#onChange});\n      }\n    } else if (this.#model instanceof CSSLinearEasingModel) {\n      if (this.#linearEasingUI) {\n        this.#linearEasingUI.setCSSLinearEasingModel(this.#model);\n      } else {\n        this.#linearEasingUI =\n            new LinearEasingUI({model: this.#model, container: this.#linearEasingContainer, onChange: this.#onChange});\n      }\n    }\n\n    this.draw();\n  }\n\n  draw(): void {\n    this.#linearEasingContainer.classList.toggle('hidden', !(this.#model instanceof CSSLinearEasingModel));\n    this.#bezierContainer.classList.toggle('hidden', !(this.#model instanceof UI.Geometry.CubicBezier));\n\n    if (this.#bezierCurveUI) {\n      this.#bezierCurveUI.draw();\n    }\n\n    if (this.#linearEasingUI) {\n      this.#linearEasingUI.draw();\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
