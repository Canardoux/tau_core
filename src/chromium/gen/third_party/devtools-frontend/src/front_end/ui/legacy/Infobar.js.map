{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/Infobar.ts"],
  "sourcesContent": ["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as ARIAUtils from './ARIAUtils.js';\nimport infobarStyles from './infobar.css.legacy.js';\nimport {Keys} from './KeyboardShortcut.js';\nimport {createShadowRootWithCoreStyles, createTextButton} from './UIUtils.js';\nimport type {Widget} from './Widget.js';\n\nconst UIStrings = {\n  /**\n   *@description Text on a button to close the infobar and never show the infobar in the future\n   */\n  dontShowAgain: 'Don\\'t show again',\n  /**\n   *@description Text that indicates that a short message can be expanded to a detailed message\n   */\n  showMore: 'Show more',\n  /**\n   *@description Text to close something\n   */\n  close: 'Close',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/Infobar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class Infobar {\n  element: HTMLElement;\n  private readonly shadowRoot: ShadowRoot;\n  private readonly contentElement: HTMLDivElement;\n  private readonly mainRow: HTMLElement;\n  private readonly detailsRows: HTMLElement;\n  private hasDetails: boolean;\n  private detailsMessage: string|Element;\n  private readonly infoContainer: HTMLElement;\n  private readonly infoMessage: HTMLElement;\n  private infoText: HTMLElement;\n  private readonly actionContainer: HTMLElement;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private readonly disableSetting: Common.Settings.Setting<any>|null;\n  private readonly closeContainer: HTMLElement;\n  private readonly toggleElement: Buttons.Button.Button;\n  private readonly closeButton: HTMLElement;\n  private closeCallback: (() => void)|null;\n  #firstFocusableElement: HTMLElement|null = null;\n  private parentView?: Widget;\n\n  constructor(\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      type: Type, text: string, actions?: InfobarAction[], disableSetting?: Common.Settings.Setting<any>,\n      /* TODO(crbug.com/1354548) Remove with JS Profiler deprecation */ isCloseable: boolean = true,\n      jslogContext?: string) {\n    this.element = document.createElement('div');\n    if (jslogContext) {\n      this.element.setAttribute(\n          'jslog', `${VisualLogging.dialog(jslogContext).track({resize: true, keydown: 'Enter|Escape'})}`);\n    }\n    this.element.classList.add('flex-none');\n    this.shadowRoot = createShadowRootWithCoreStyles(this.element, {cssFile: infobarStyles, delegatesFocus: undefined});\n\n    this.contentElement = this.shadowRoot.createChild('div', 'infobar infobar-' + type) as HTMLDivElement;\n\n    this.mainRow = this.contentElement.createChild('div', 'infobar-main-row');\n    this.detailsRows = this.contentElement.createChild('div', 'infobar-details-rows hidden');\n    this.hasDetails = false;\n    this.detailsMessage = '';\n\n    this.infoContainer = this.mainRow.createChild('div', 'infobar-info-container');\n\n    this.infoMessage = this.infoContainer.createChild('div', 'infobar-info-message');\n\n    // Icon is in separate file and included via CSS.\n    this.infoMessage.createChild('div', type + '-icon icon');\n\n    this.infoText = this.infoMessage.createChild('div', 'infobar-info-text');\n    this.infoText.textContent = text;\n    ARIAUtils.markAsAlert(this.infoText);\n\n    this.actionContainer = this.infoContainer.createChild('div', 'infobar-info-actions');\n    if (actions) {\n      this.contentElement.setAttribute('role', 'group');\n\n      for (const action of actions) {\n        const actionCallback = this.actionCallbackFactory(action);\n        let buttonClass = 'infobar-button';\n        if (action.highlight) {\n          buttonClass += ' primary-button';\n        }\n\n        const buttonVariant = action.buttonVariant ?? Buttons.Button.Variant.OUTLINED;\n\n        const button = createTextButton(action.text, actionCallback, {\n          className: buttonClass,\n          jslogContext: action.jslogContext,\n          variant: buttonVariant,\n          icon: action.icon,\n        });\n        if (action.highlight && !this.#firstFocusableElement) {\n          this.#firstFocusableElement = button;\n        }\n        this.actionContainer.appendChild(button);\n      }\n    }\n\n    this.disableSetting = disableSetting || null;\n    if (disableSetting) {\n      const disableButton = createTextButton(\n          i18nString(UIStrings.dontShowAgain), this.onDisable.bind(this), {className: 'infobar-button'});\n      this.actionContainer.appendChild(disableButton);\n    }\n\n    this.closeContainer = this.mainRow.createChild('div', 'infobar-close-container');\n    this.toggleElement = createTextButton(\n        i18nString(UIStrings.showMore), this.onToggleDetails.bind(this),\n        {className: 'hidden show-more', jslogContext: 'show-more', variant: Buttons.Button.Variant.TEXT});\n    this.toggleElement.setAttribute('role', 'link');\n    this.closeContainer.appendChild(this.toggleElement);\n    this.closeButton = this.closeContainer.createChild('div', 'close-button', 'dt-close-button');\n    this.closeButton.hidden = !isCloseable;\n    // @ts-ignore This is a custom element defined in UIUitls.js that has a `setTabbable` that TS doesn't\n    //            know about.\n    this.closeButton.setTabbable(true);\n    ARIAUtils.setDescription(this.closeButton, i18nString(UIStrings.close));\n    self.onInvokeElement(this.closeButton, this.dispose.bind(this));\n\n    if (type !== Type.ISSUE) {\n      this.contentElement.tabIndex = 0;\n    }\n    ARIAUtils.setLabel(this.contentElement, text);\n    this.contentElement.addEventListener('keydown', event => {\n      if (event.keyCode === Keys.Esc.code) {\n        this.dispose();\n        event.consume();\n        return;\n      }\n\n      if (event.target !== this.contentElement) {\n        return;\n      }\n\n      if (event.key === 'Enter' && this.hasDetails) {\n        this.onToggleDetails();\n        event.consume();\n        return;\n      }\n    });\n\n    this.closeCallback = null;\n  }\n\n  static create(\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      type: Type, text: string, actions?: InfobarAction[], disableSetting?: Common.Settings.Setting<any>,\n      jslogContext?: string): Infobar|null {\n    if (disableSetting && disableSetting.get()) {\n      return null;\n    }\n    return new Infobar(type, text, actions, disableSetting, undefined, jslogContext);\n  }\n\n  dispose(): void {\n    this.element.remove();\n    this.onResize();\n    if (this.closeCallback) {\n      this.closeCallback.call(null);\n    }\n  }\n\n  setText(text: string): void {\n    this.infoText.textContent = text;\n    this.onResize();\n  }\n\n  setCloseCallback(callback: (() => void)|null): void {\n    this.closeCallback = callback;\n  }\n\n  setParentView(parentView: Widget): void {\n    this.parentView = parentView;\n  }\n\n  private actionCallbackFactory(action: InfobarAction): () => void {\n    if (!action.delegate) {\n      return action.dismiss ? this.dispose.bind(this) : (): void => {};\n    }\n\n    if (!action.dismiss) {\n      return action.delegate;\n    }\n\n    return ((): void => {\n             if (action.delegate) {\n               action.delegate();\n             }\n             this.dispose();\n           }).bind(this);\n  }\n\n  private onResize(): void {\n    if (this.parentView) {\n      this.parentView.doResize();\n    }\n  }\n\n  private onDisable(): void {\n    if (this.disableSetting) {\n      this.disableSetting.set(true);\n    }\n    this.dispose();\n  }\n\n  private onToggleDetails(): void {\n    this.detailsRows.classList.remove('hidden');\n    this.toggleElement.remove();\n    this.onResize();\n    ARIAUtils.alert(\n        typeof this.detailsMessage === 'string' ? this.detailsMessage : this.detailsMessage.textContent || '');\n    if (this.#firstFocusableElement) {\n      this.#firstFocusableElement.focus();\n    } else {\n      this.closeButton.focus();\n    }\n  }\n\n  createDetailsRowMessage(message: Element|string): Element {\n    this.hasDetails = true;\n    this.detailsMessage = message;\n    this.toggleElement.classList.remove('hidden');\n    const infobarDetailsRow = this.detailsRows.createChild('div', 'infobar-details-row');\n    const detailsRowMessage = infobarDetailsRow.createChild('span', 'infobar-row-message');\n    if (typeof message === 'string') {\n      detailsRowMessage.textContent = message;\n    } else {\n      detailsRowMessage.appendChild(message);\n    }\n    return detailsRowMessage;\n  }\n}\nexport interface InfobarAction {\n  text: string;\n  highlight: boolean;\n  delegate: (() => void)|null;\n  dismiss: boolean;\n  buttonVariant?: Buttons.Button.Variant;\n  icon?: string;\n  jslogContext?: string;\n}\n\nexport const enum Type {\n  WARNING = 'warning',\n  INFO = 'info',\n  ISSUE = 'issue',\n  ERROR = 'error',\n}\n"],
  "mappings": "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",
  "names": ["Type"]
}
