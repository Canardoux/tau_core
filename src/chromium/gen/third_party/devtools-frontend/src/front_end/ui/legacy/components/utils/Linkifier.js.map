{
  "version": 3,
  "sources": ["../../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/components/utils/Linkifier.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Host from '../../../../core/host/host.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport * as Bindings from '../../../../models/bindings/bindings.js';\nimport * as Breakpoints from '../../../../models/breakpoints/breakpoints.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport type * as Trace from '../../../../models/trace/trace.js';\nimport * as Workspace from '../../../../models/workspace/workspace.js';\nimport type * as IconButton from '../../../components/icon_button/icon_button.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Linkifier\n   */\n  unknown: '(unknown)',\n  /**\n   *@description Text short for automatic\n   */\n  auto: 'auto',\n  /**\n   *@description Text in Linkifier\n   *@example {Sources panel} PH1\n   */\n  revealInS: 'Reveal in {PH1}',\n  /**\n   *@description Text for revealing an item in its destination\n   */\n  reveal: 'Reveal',\n  /**\n   *@description A context menu item in the Linkifier\n   *@example {Extension} PH1\n   */\n  openUsingS: 'Open using {PH1}',\n  /**\n   * @description The name of a setting which controls how links are handled in the UI. 'Handling'\n   * refers to the ability of extensions to DevTools to be able to intercept link clicks so that they\n   * can react to them.\n   */\n  linkHandling: 'Link handling:',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/utils/Linkifier.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst instances = new Set<Linkifier>();\n\nlet decorator: LinkDecorator|null = null;\n\nconst anchorsByUISourceCode = new WeakMap<Workspace.UISourceCode.UISourceCode, Set<Element>>();\n\nconst infoByAnchor = new WeakMap<Node, LinkInfo>();\n\nconst textByAnchor = new WeakMap<Node, string>();\n\nconst linkHandlers = new Map<string, LinkHandler>();\n\nlet linkHandlerSettingInstance: Common.Settings.Setting<string>;\n\nexport class Linkifier extends Common.ObjectWrapper.ObjectWrapper<EventTypes> implements SDK.TargetManager.Observer {\n  private readonly maxLength: number;\n  private readonly anchorsByTarget: Map<SDK.Target.Target, Element[]>;\n  private readonly locationPoolByTarget: Map<SDK.Target.Target, Bindings.LiveLocation.LiveLocationPool>;\n  private useLinkDecorator: boolean;\n\n  constructor(maxLengthForDisplayedURLs?: number, useLinkDecorator?: boolean) {\n    super();\n    this.maxLength = maxLengthForDisplayedURLs || UI.UIUtils.MaxLengthForDisplayedURLs;\n    this.anchorsByTarget = new Map();\n    this.locationPoolByTarget = new Map();\n    this.useLinkDecorator = Boolean(useLinkDecorator);\n    instances.add(this);\n    SDK.TargetManager.TargetManager.instance().observeTargets(this);\n  }\n\n  static setLinkDecorator(linkDecorator: LinkDecorator): void {\n    console.assert(!decorator, 'Cannot re-register link decorator.');\n    decorator = linkDecorator;\n    linkDecorator.addEventListener(LinkDecorator.Events.LINK_ICON_CHANGED, onLinkIconChanged);\n    for (const linkifier of instances) {\n      linkifier.updateAllAnchorDecorations();\n    }\n\n    function onLinkIconChanged(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n      const uiSourceCode = event.data;\n      const links = anchorsByUISourceCode.get(uiSourceCode) || [];\n      for (const link of links) {\n        Linkifier.updateLinkDecorations(link);\n      }\n    }\n  }\n\n  private updateAllAnchorDecorations(): void {\n    for (const anchors of this.anchorsByTarget.values()) {\n      for (const anchor of anchors) {\n        Linkifier.updateLinkDecorations(anchor);\n      }\n    }\n  }\n\n  private static bindUILocation(anchor: Element, uiLocation: Workspace.UISourceCode.UILocation): void {\n    const linkInfo = Linkifier.linkInfo(anchor);\n    if (!linkInfo) {\n      return;\n    }\n    linkInfo.uiLocation = uiLocation;\n    if (!uiLocation) {\n      return;\n    }\n    const uiSourceCode = uiLocation.uiSourceCode;\n    let sourceCodeAnchors = anchorsByUISourceCode.get(uiSourceCode);\n    if (!sourceCodeAnchors) {\n      sourceCodeAnchors = new Set();\n      anchorsByUISourceCode.set(uiSourceCode, sourceCodeAnchors);\n    }\n    sourceCodeAnchors.add(anchor);\n  }\n\n  static bindUILocationForTest(anchor: Element, uiLocation: Workspace.UISourceCode.UILocation): void {\n    Linkifier.bindUILocation(anchor, uiLocation);\n  }\n\n  private static unbindUILocation(anchor: Element): void {\n    const info = Linkifier.linkInfo(anchor);\n    if (!info || !info.uiLocation) {\n      return;\n    }\n\n    const uiSourceCode = info.uiLocation.uiSourceCode;\n    info.uiLocation = null;\n    const sourceCodeAnchors = anchorsByUISourceCode.get(uiSourceCode);\n    if (sourceCodeAnchors) {\n      sourceCodeAnchors.delete(anchor);\n    }\n  }\n\n  /**\n   * When we link to a breakpoint condition, we need to stash the BreakpointLocation as the revealable\n   * in the LinkInfo.\n   */\n  private static bindBreakpoint(anchor: Element, uiLocation: Workspace.UISourceCode.UILocation): void {\n    const info = Linkifier.linkInfo(anchor);\n    if (!info) {\n      return;\n    }\n\n    const breakpoint = Breakpoints.BreakpointManager.BreakpointManager.instance().findBreakpoint(uiLocation);\n    if (breakpoint) {\n      info.revealable = breakpoint;\n    }\n  }\n\n  /**\n   * When we link to a breakpoint condition, we store the BreakpointLocation in the revealable.\n   * Clear it when the LiveLocation updates.\n   */\n  private static unbindBreakpoint(anchor: Element): void {\n    const info = Linkifier.linkInfo(anchor);\n    if (info && info.revealable) {\n      info.revealable = null;\n    }\n  }\n\n  targetAdded(target: SDK.Target.Target): void {\n    this.anchorsByTarget.set(target, []);\n    this.locationPoolByTarget.set(target, new Bindings.LiveLocation.LiveLocationPool());\n  }\n\n  targetRemoved(target: SDK.Target.Target): void {\n    const locationPool = this.locationPoolByTarget.get(target);\n    this.locationPoolByTarget.delete(target);\n    if (!locationPool) {\n      return;\n    }\n    locationPool.disposeAll();\n    const anchors = (this.anchorsByTarget.get(target) as HTMLElement[] | null);\n    if (!anchors) {\n      return;\n    }\n    this.anchorsByTarget.delete(target);\n    for (const anchor of anchors) {\n      const info = Linkifier.linkInfo(anchor);\n      if (!info) {\n        continue;\n      }\n      info.liveLocation = null;\n      Linkifier.unbindUILocation(anchor);\n      const fallback = info.fallback;\n      if (fallback) {\n        anchor.replaceWith(fallback);\n      }\n    }\n  }\n\n  maybeLinkifyScriptLocation(\n      target: SDK.Target.Target|null, scriptId: Protocol.Runtime.ScriptId|null,\n      sourceURL: Platform.DevToolsPath.UrlString, lineNumber: number|undefined, options?: LinkifyOptions): HTMLElement\n      |null {\n    let fallbackAnchor: HTMLElement|null = null;\n    const linkifyURLOptions: LinkifyURLOptions = {\n      lineNumber,\n      maxLength: this.maxLength,\n      columnNumber: options?.columnNumber,\n      showColumnNumber: Boolean(options?.showColumnNumber),\n      className: options?.className,\n      tabStop: options?.tabStop,\n      inlineFrameIndex: options?.inlineFrameIndex ?? 0,\n      userMetric: options?.userMetric,\n      jslogContext: options?.jslogContext || 'script-location',\n    };\n    const {columnNumber, className = ''} = linkifyURLOptions;\n    if (sourceURL) {\n      fallbackAnchor = Linkifier.linkifyURL(sourceURL, linkifyURLOptions);\n    }\n    if (!target || target.isDisposed()) {\n      return fallbackAnchor;\n    }\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n    if (!debuggerModel) {\n      return fallbackAnchor;\n    }\n\n    // Prefer createRawLocationByScriptId() here, since it will always produce a correct\n    // link, since the script ID is unique. Only fall back to createRawLocationByURL()\n    // when all we have is an URL, which is not guaranteed to be unique.\n    const rawLocation = scriptId ? debuggerModel.createRawLocationByScriptId(\n                                       scriptId, lineNumber || 0, columnNumber, linkifyURLOptions.inlineFrameIndex) :\n                                   debuggerModel.createRawLocationByURL(\n                                       sourceURL, lineNumber || 0, columnNumber, linkifyURLOptions.inlineFrameIndex);\n    if (!rawLocation) {\n      return fallbackAnchor;\n    }\n\n    const createLinkOptions: CreateLinkOptions = {\n      tabStop: options?.tabStop,\n      jslogContext: 'script-location',\n    };\n    const {link, linkInfo} = Linkifier.createLink(\n        fallbackAnchor && fallbackAnchor.textContent ? fallbackAnchor.textContent : '', className, createLinkOptions);\n    linkInfo.enableDecorator = this.useLinkDecorator;\n    linkInfo.fallback = fallbackAnchor;\n    linkInfo.userMetric = options?.userMetric;\n\n    const pool = this.locationPoolByTarget.get(rawLocation.debuggerModel.target());\n    if (!pool) {\n      return fallbackAnchor;\n    }\n\n    const linkDisplayOptions: LinkDisplayOptions = {\n      showColumnNumber: linkifyURLOptions.showColumnNumber ?? false,\n      revealBreakpoint: options?.revealBreakpoint,\n    };\n\n    const updateDelegate = async(liveLocation: Bindings.LiveLocation.LiveLocation): Promise<void> => {\n      await this.updateAnchor(link, linkDisplayOptions, liveLocation);\n      this.dispatchEventToListeners(Events.LIVE_LOCATION_UPDATED, liveLocation);\n    };\n    void Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance()\n        .createLiveLocation(rawLocation, updateDelegate.bind(this), pool)\n        .then(liveLocation => {\n          if (liveLocation) {\n            linkInfo.liveLocation = liveLocation;\n          }\n        });\n\n    const anchors = (this.anchorsByTarget.get(rawLocation.debuggerModel.target()) as Element[]);\n    anchors.push(link);\n    return link;\n  }\n\n  linkifyScriptLocation(\n      target: SDK.Target.Target|null, scriptId: Protocol.Runtime.ScriptId|null,\n      sourceURL: Platform.DevToolsPath.UrlString, lineNumber: number|undefined, options?: LinkifyOptions): HTMLElement {\n    const scriptLink = this.maybeLinkifyScriptLocation(target, scriptId, sourceURL, lineNumber, options);\n    const linkifyURLOptions: LinkifyURLOptions = {\n      lineNumber,\n      maxLength: this.maxLength,\n      className: options?.className,\n      columnNumber: options?.columnNumber,\n      showColumnNumber: Boolean(options?.showColumnNumber),\n      inlineFrameIndex: options?.inlineFrameIndex ?? 0,\n      tabStop: options?.tabStop,\n      userMetric: options?.userMetric,\n      jslogContext: options?.jslogContext || 'script-source-url',\n    };\n\n    return scriptLink || Linkifier.linkifyURL(sourceURL, linkifyURLOptions);\n  }\n\n  linkifyRawLocation(\n      rawLocation: SDK.DebuggerModel.Location, fallbackUrl: Platform.DevToolsPath.UrlString,\n      className?: string): Element {\n    return this.linkifyScriptLocation(\n        rawLocation.debuggerModel.target(), rawLocation.scriptId, fallbackUrl, rawLocation.lineNumber, {\n          columnNumber: rawLocation.columnNumber,\n          className,\n          inlineFrameIndex: rawLocation.inlineFrameIndex,\n        });\n  }\n\n  maybeLinkifyConsoleCallFrame(\n      target: SDK.Target.Target|null, callFrame: Protocol.Runtime.CallFrame|Trace.Types.Events.CallFrame,\n      options?: LinkifyOptions): HTMLElement|null {\n    const linkifyOptions: LinkifyOptions = {\n      ...options,\n      columnNumber: callFrame.columnNumber,\n      inlineFrameIndex: options?.inlineFrameIndex ?? 0,\n    };\n    return this.maybeLinkifyScriptLocation(\n        target, String(callFrame.scriptId) as Protocol.Runtime.ScriptId,\n        callFrame.url as Platform.DevToolsPath.UrlString, callFrame.lineNumber, linkifyOptions);\n  }\n\n  linkifyStackTraceTopFrame(target: SDK.Target.Target|null, stackTrace: Protocol.Runtime.StackTrace): HTMLElement {\n    console.assert(stackTrace.callFrames.length > 0);\n\n    const {url, lineNumber, columnNumber} = stackTrace.callFrames[0];\n    const fallbackAnchor = Linkifier.linkifyURL(url as Platform.DevToolsPath.UrlString, {\n      lineNumber,\n      columnNumber,\n      showColumnNumber: false,\n      inlineFrameIndex: 0,\n      maxLength: this.maxLength,\n      preventClick: true,\n      jslogContext: 'script-source-url',\n    });\n\n    // HAR imported network logs have no associated NetworkManager.\n    if (!target) {\n      return fallbackAnchor;\n    }\n\n    // The contract is that disposed targets don't have a LiveLocationPool\n    // associated, whereas all active targets have one such pool. This ensures\n    // that the fallbackAnchor is only ever used when the target was disposed.\n    const pool = this.locationPoolByTarget.get(target);\n    if (!pool) {\n      console.assert(target.isDisposed());\n      return fallbackAnchor;\n    }\n    console.assert(!target.isDisposed());\n\n    // All targets that can report stack traces also have a debugger model.\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel) as SDK.DebuggerModel.DebuggerModel;\n\n    const {link, linkInfo} = Linkifier.createLink('', '', {jslogContext: 'script-location'});\n    linkInfo.enableDecorator = this.useLinkDecorator;\n    linkInfo.fallback = fallbackAnchor;\n\n    const linkDisplayOptions = {showColumnNumber: false};\n\n    const updateDelegate = async(liveLocation: Bindings.LiveLocation.LiveLocation): Promise<void> => {\n      await this.updateAnchor(link, linkDisplayOptions, liveLocation);\n      this.dispatchEventToListeners(Events.LIVE_LOCATION_UPDATED, liveLocation);\n    };\n    void Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance()\n        .createStackTraceTopFrameLiveLocation(\n            debuggerModel.createRawLocationsByStackTrace(stackTrace), updateDelegate.bind(this), pool)\n        .then(liveLocation => {\n          linkInfo.liveLocation = liveLocation;\n        });\n\n    const anchors = (this.anchorsByTarget.get(target) as Element[]);\n    anchors.push(link);\n    return link;\n  }\n\n  linkifyCSSLocation(rawLocation: SDK.CSSModel.CSSLocation, classes?: string): Element {\n    const createLinkOptions: CreateLinkOptions = {\n      tabStop: true,\n      jslogContext: 'css-location',\n    };\n    const {link, linkInfo} = Linkifier.createLink('', classes || '', createLinkOptions);\n    linkInfo.enableDecorator = this.useLinkDecorator;\n\n    const pool = this.locationPoolByTarget.get(rawLocation.cssModel().target());\n    if (!pool) {\n      return link;\n    }\n\n    const linkDisplayOptions = {showColumnNumber: false};\n\n    const updateDelegate = async(liveLocation: Bindings.LiveLocation.LiveLocation): Promise<void> => {\n      await this.updateAnchor(link, linkDisplayOptions, liveLocation);\n      this.dispatchEventToListeners(Events.LIVE_LOCATION_UPDATED, liveLocation);\n    };\n    void Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance()\n        .createLiveLocation(rawLocation, updateDelegate.bind(this), pool)\n        .then(liveLocation => {\n          linkInfo.liveLocation = liveLocation;\n        });\n\n    const anchors = (this.anchorsByTarget.get(rawLocation.cssModel().target()) as Element[]);\n    anchors.push(link);\n    return link;\n  }\n\n  reset(): void {\n    // Create a copy of {keys} so {targetRemoved} can safely modify the map.\n    for (const target of [...this.anchorsByTarget.keys()]) {\n      this.targetRemoved(target);\n      this.targetAdded(target);\n    }\n    this.listeners?.clear();\n  }\n\n  dispose(): void {\n    // Create a copy of {keys} so {targetRemoved} can safely modify the map.\n    for (const target of [...this.anchorsByTarget.keys()]) {\n      this.targetRemoved(target);\n    }\n    SDK.TargetManager.TargetManager.instance().unobserveTargets(this);\n    instances.delete(this);\n  }\n\n  private async updateAnchor(\n      anchor: HTMLElement, options: LinkDisplayOptions,\n      liveLocation: Bindings.LiveLocation.LiveLocation): Promise<void> {\n    Linkifier.unbindUILocation(anchor);\n    if (options.revealBreakpoint) {\n      Linkifier.unbindBreakpoint(anchor);\n    }\n    const uiLocation = await liveLocation.uiLocation();\n    if (!uiLocation) {\n      if (liveLocation instanceof Bindings.CSSWorkspaceBinding.LiveLocation) {\n        const header = (liveLocation as Bindings.CSSWorkspaceBinding.LiveLocation).header();\n        if (header && header.ownerNode) {\n          anchor.addEventListener('click', event => {\n            event.consume(true);\n            void Common.Revealer.reveal(header.ownerNode || null);\n          }, false);\n          Linkifier.setTrimmedText(anchor, '<style>');\n        }\n      }\n\n      anchor.classList.add('invalid-link');\n      anchor.removeAttribute('role');\n      return;\n    }\n\n    Linkifier.bindUILocation(anchor, uiLocation);\n    if (options.revealBreakpoint) {\n      Linkifier.bindBreakpoint(anchor, uiLocation);\n    }\n    const text = uiLocation.linkText(true /* skipTrim */, options.showColumnNumber);\n    Linkifier.setTrimmedText(anchor, text, this.maxLength);\n\n    let titleText: string = uiLocation.uiSourceCode.url();\n    if (uiLocation.uiSourceCode.mimeType() === 'application/wasm') {\n      // For WebAssembly locations, we follow the conventions described in\n      // github.com/WebAssembly/design/blob/master/Web.md#developer-facing-display-conventions\n      if (typeof uiLocation.columnNumber === 'number') {\n        titleText += `:0x${uiLocation.columnNumber.toString(16)}`;\n      }\n    } else {\n      titleText += ':' + (uiLocation.lineNumber + 1);\n      if (options.showColumnNumber && typeof uiLocation.columnNumber === 'number') {\n        titleText += ':' + (uiLocation.columnNumber + 1);\n      }\n    }\n    UI.Tooltip.Tooltip.install(anchor, titleText);\n    anchor.classList.toggle('ignore-list-link', await liveLocation.isIgnoreListed());\n    Linkifier.updateLinkDecorations(anchor);\n  }\n\n  private static updateLinkDecorations(anchor: Element): void {\n    const info = Linkifier.linkInfo(anchor);\n    if (!info || !info.enableDecorator) {\n      return;\n    }\n    if (!decorator || !info.uiLocation) {\n      return;\n    }\n    if (info.icon && info.icon.parentElement) {\n      anchor.removeChild(info.icon);\n    }\n    const icon = decorator.linkIcon(info.uiLocation.uiSourceCode);\n    if (icon) {\n      icon.style.setProperty('margin-right', '2px');\n      anchor.insertBefore(icon, anchor.firstChild);\n    }\n    info.icon = icon;\n  }\n\n  static linkifyURL(url: Platform.DevToolsPath.UrlString, options?: LinkifyURLOptions): HTMLElement {\n    options = options || {\n      showColumnNumber: false,\n      inlineFrameIndex: 0,\n    };\n\n    const text = options.text;\n    const className = options.className || '';\n    const lineNumber = options.lineNumber;\n    const columnNumber = options.columnNumber;\n    const showColumnNumber = options.showColumnNumber;\n    const preventClick = options.preventClick;\n    const maxLength = options.maxLength || UI.UIUtils.MaxLengthForDisplayedURLs;\n    const bypassURLTrimming = options.bypassURLTrimming;\n    if (!url || Common.ParsedURL.schemeIs(url, 'javascript:')) {\n      const element = document.createElement('span');\n      if (className) {\n        element.className = className;\n      }\n\n      element.textContent = text || url || i18nString(UIStrings.unknown);\n      return element;\n    }\n\n    let linkText = text || Bindings.ResourceUtils.displayNameForURL(url);\n    if (typeof lineNumber === 'number' && !text) {\n      linkText += ':' + (lineNumber + 1);\n      if (showColumnNumber && typeof columnNumber === 'number') {\n        linkText += ':' + (columnNumber + 1);\n      }\n    }\n    const title = linkText !== url ? url : '';\n    const linkOptions = {\n      maxLength,\n      title,\n      href: url,\n      preventClick,\n      tabStop: options.tabStop,\n      bypassURLTrimming,\n      jslogContext: options.jslogContext || 'url',\n    };\n    const {link, linkInfo} = Linkifier.createLink(linkText, className, linkOptions);\n    if (lineNumber) {\n      linkInfo.lineNumber = lineNumber;\n    }\n    if (columnNumber) {\n      linkInfo.columnNumber = columnNumber;\n    }\n    linkInfo.userMetric = options?.userMetric;\n    return link;\n  }\n\n  static linkifyRevealable(\n      revealable: Object, text: string|HTMLElement, fallbackHref?: Platform.DevToolsPath.UrlString, title?: string,\n      className?: string, jslogContext?: string): HTMLElement {\n    const createLinkOptions: CreateLinkOptions = {\n      maxLength: UI.UIUtils.MaxLengthForDisplayedURLs,\n      href: (fallbackHref),\n      title,\n      jslogContext,\n    };\n    const {link, linkInfo} = Linkifier.createLink(text, className || '', createLinkOptions);\n    linkInfo.revealable = revealable;\n    return link;\n  }\n\n  private static createLink(text: string|HTMLElement, className: string, options: CreateLinkOptions = {}):\n      {link: HTMLElement, linkInfo: LinkInfo} {\n    const {maxLength, title, href, preventClick, tabStop, bypassURLTrimming, jslogContext} = options;\n    const link = document.createElement(options.preventClick ? 'span' : 'button');\n    if (className) {\n      link.className = className;\n    }\n    link.classList.add('devtools-link');\n    if (!options.preventClick) {\n      link.classList.add('text-button', 'link-style');\n    }\n    if (title) {\n      UI.Tooltip.Tooltip.install(link, title);\n    }\n    if (href) {\n      // @ts-ignore\n      link.href = href;\n    }\n    link.setAttribute('jslog', `${VisualLogging.link(jslogContext).track({click: true})}`);\n\n    if (text instanceof HTMLElement) {\n      link.appendChild(text);\n    } else {\n      if (bypassURLTrimming) {\n        link.classList.add('devtools-link-styled-trim');\n        Linkifier.appendTextWithoutHashes(link, text);\n      } else {\n        Linkifier.setTrimmedText(link, text, maxLength);\n      }\n    }\n\n    const linkInfo = {\n      icon: null,\n      enableDecorator: false,\n      uiLocation: null,\n      liveLocation: null,\n      url: href || null,\n      lineNumber: null,\n      columnNumber: null,\n      inlineFrameIndex: 0,\n      revealable: null,\n      fallback: null,\n    };\n    infoByAnchor.set(link, linkInfo);\n    if (!preventClick) {\n      link.addEventListener('click', event => {\n        if (Linkifier.handleClick(event)) {\n          event.consume(true);\n        }\n      }, false);\n    } else {\n      link.classList.add('devtools-link-prevent-click');\n    }\n    UI.ARIAUtils.markAsLink(link);\n    link.tabIndex = tabStop ? 0 : -1;\n    return {link, linkInfo};\n  }\n\n  private static setTrimmedText(link: Element, text: string, maxLength?: number): void {\n    link.removeChildren();\n    if (maxLength && text.length > maxLength) {\n      const middleSplit = splitMiddle(text, maxLength);\n      Linkifier.appendTextWithoutHashes(link, middleSplit[0]);\n      Linkifier.appendHiddenText(link, middleSplit[1]);\n      Linkifier.appendTextWithoutHashes(link, middleSplit[2]);\n    } else {\n      Linkifier.appendTextWithoutHashes(link, text);\n    }\n\n    function splitMiddle(string: string, maxLength: number): string[] {\n      let leftIndex = Math.floor(maxLength / 2);\n      let rightIndex = string.length - Math.ceil(maxLength / 2) + 1;\n\n      const codePointAtRightIndex = string.codePointAt(rightIndex - 1);\n      // Do not truncate between characters that use multiple code points (emojis).\n      if (typeof codePointAtRightIndex !== 'undefined' && codePointAtRightIndex >= 0x10000) {\n        rightIndex++;\n        leftIndex++;\n      }\n      const codePointAtLeftIndex = string.codePointAt(leftIndex - 1);\n      if (typeof codePointAtLeftIndex !== 'undefined' && leftIndex > 0 && codePointAtLeftIndex >= 0x10000) {\n        leftIndex--;\n      }\n      return [string.substring(0, leftIndex), string.substring(leftIndex, rightIndex), string.substring(rightIndex)];\n    }\n  }\n\n  private static appendTextWithoutHashes(link: Element, string: string): void {\n    const hashSplit = TextUtils.TextUtils.Utils.splitStringByRegexes(string, [/[a-f0-9]{20,}/g]);\n    for (const match of hashSplit) {\n      if (match.regexIndex === -1) {\n        UI.UIUtils.createTextChild(link, match.value);\n      } else {\n        UI.UIUtils.createTextChild(link, match.value.substring(0, 7));\n        Linkifier.appendHiddenText(link, match.value.substring(7));\n      }\n    }\n  }\n\n  private static appendHiddenText(link: Element, string: string): void {\n    const ellipsisNode = UI.UIUtils.createTextChild(link.createChild('span', 'devtools-link-ellipsis'), '\u2026');\n    textByAnchor.set(ellipsisNode, string);\n  }\n\n  static untruncatedNodeText(node: Node): string {\n    return textByAnchor.get(node) || node.textContent || '';\n  }\n\n  static linkInfo(link: Element|null): LinkInfo|null {\n    return link ? infoByAnchor.get(link) || null : null as LinkInfo | null;\n  }\n\n  private static handleClick(event: Event): boolean {\n    const link = (event.currentTarget as Element);\n    if (UI.UIUtils.isBeingEdited((event.target as Node)) || link.hasSelection()) {\n      return false;\n    }\n    const linkInfo = Linkifier.linkInfo(link);\n    if (!linkInfo) {\n      return false;\n    }\n    return Linkifier.invokeFirstAction(linkInfo);\n  }\n\n  static handleClickFromNewComponentLand(linkInfo: LinkInfo): void {\n    Linkifier.invokeFirstAction(linkInfo);\n  }\n\n  static invokeFirstAction(linkInfo: LinkInfo): boolean {\n    const actions = Linkifier.linkActions(linkInfo);\n    if (actions.length) {\n      void actions[0].handler.call(null);\n      if (linkInfo.userMetric) {\n        Host.userMetrics.actionTaken(linkInfo.userMetric);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  static linkHandlerSetting(): Common.Settings.Setting<string> {\n    if (!linkHandlerSettingInstance) {\n      linkHandlerSettingInstance =\n          Common.Settings.Settings.instance().createSetting('open-link-handler', i18nString(UIStrings.auto));\n    }\n    return linkHandlerSettingInstance;\n  }\n\n  static registerLinkHandler(title: string, handler: LinkHandler): void {\n    linkHandlers.set(title, handler);\n    LinkHandlerSettingUI.instance().update();\n  }\n\n  static unregisterLinkHandler(title: string): void {\n    linkHandlers.delete(title);\n    LinkHandlerSettingUI.instance().update();\n  }\n\n  static uiLocation(link: Element): Workspace.UISourceCode.UILocation|null {\n    const info = Linkifier.linkInfo(link);\n    return info ? info.uiLocation : null;\n  }\n\n  static linkActions(info: LinkInfo): {\n    section: string,\n    title: string,\n    jslogContext: string,\n    handler: () => Promise<void>| void,\n  }[] {\n    const result: {\n      section: string,\n      title: string,\n      jslogContext: string,\n      handler: () => Promise<void>| void,\n    }[] = [];\n\n    if (!info) {\n      return result;\n    }\n\n    let url = Platform.DevToolsPath.EmptyUrlString;\n    let uiLocation: Workspace.UISourceCode.UILocation|(Workspace.UISourceCode.UILocation | null)|null = null;\n    if (info.uiLocation) {\n      uiLocation = info.uiLocation;\n      url = uiLocation.uiSourceCode.contentURL();\n    } else if (info.url) {\n      url = info.url;\n      const uiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(url) ||\n          Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(\n              Common.ParsedURL.ParsedURL.urlWithoutHash(url) as Platform.DevToolsPath.UrlString);\n      uiLocation = uiSourceCode ? uiSourceCode.uiLocation(info.lineNumber || 0, info.columnNumber || 0) : null;\n    }\n    const resource = url ? Bindings.ResourceUtils.resourceForURL(url) : null;\n    const contentProvider = uiLocation ? uiLocation.uiSourceCode : resource;\n\n    const revealable = info.revealable || uiLocation || resource;\n    if (revealable) {\n      const destination = Common.Revealer.revealDestination(revealable);\n      result.push({\n        section: 'reveal',\n        title: destination ? i18nString(UIStrings.revealInS, {PH1: destination}) : i18nString(UIStrings.reveal),\n        jslogContext: 'reveal',\n        handler: () => Common.Revealer.reveal(revealable),\n      });\n    }\n    if (contentProvider) {\n      const lineNumber = uiLocation ? uiLocation.lineNumber : info.lineNumber || 0;\n      for (const title of linkHandlers.keys()) {\n        const handler = linkHandlers.get(title);\n        if (!handler) {\n          continue;\n        }\n        const action = {\n          section: 'reveal',\n          title: i18nString(UIStrings.openUsingS, {PH1: title}),\n          jslogContext: 'open-using',\n          handler: handler.bind(null, contentProvider, lineNumber),\n        };\n        if (title === Linkifier.linkHandlerSetting().get()) {\n          result.unshift(action);\n        } else {\n          result.push(action);\n        }\n      }\n    }\n    if (resource || info.url) {\n      result.push({\n        section: 'reveal',\n        title: UI.UIUtils.openLinkExternallyLabel(),\n        jslogContext: 'open-in-new-tab',\n        handler: () => Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(url),\n      });\n      result.push({\n        section: 'clipboard',\n        title: UI.UIUtils.copyLinkAddressLabel(),\n        jslogContext: 'copy-link-address',\n        handler: () => Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(url),\n      });\n    }\n\n    if (uiLocation && uiLocation.uiSourceCode) {\n      const contentProvider = uiLocation.uiSourceCode;\n      result.push({\n        section: 'clipboard',\n        title: UI.UIUtils.copyFileNameLabel(),\n        jslogContext: 'copy-file-name',\n        handler: () => Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(contentProvider.displayName()),\n      });\n    }\n\n    return result;\n  }\n}\n\nexport interface LinkDecorator extends Common.EventTarget.EventTarget<LinkDecorator.EventTypes> {\n  linkIcon(uiSourceCode: Workspace.UISourceCode.UISourceCode): IconButton.Icon.Icon|null;\n}\n\nexport namespace LinkDecorator {\n  export const enum Events {\n    LINK_ICON_CHANGED = 'LinkIconChanged',\n  }\n\n  export type EventTypes = {\n    [Events.LINK_ICON_CHANGED]: Workspace.UISourceCode.UISourceCode,\n  };\n}\n\nexport class LinkContextMenuProvider implements UI.ContextMenu.Provider<Node> {\n  appendApplicableItems(_event: Event, contextMenu: UI.ContextMenu.ContextMenu, target: Node): void {\n    let targetNode: Node|null = target;\n    while (targetNode && !infoByAnchor.get(targetNode)) {\n      targetNode = targetNode.parentNodeOrShadowHost();\n    }\n    const link = (targetNode as Element | null);\n    const linkInfo = Linkifier.linkInfo(link);\n    if (!linkInfo) {\n      return;\n    }\n\n    const actions = Linkifier.linkActions(linkInfo);\n    for (const action of actions) {\n      contextMenu.section(action.section).appendItem(action.title, action.handler, {jslogContext: action.jslogContext});\n    }\n  }\n}\n\nlet linkHandlerSettingUIInstance: LinkHandlerSettingUI;\n\nexport class LinkHandlerSettingUI implements UI.SettingsUI.SettingUI {\n  private element: HTMLSelectElement;\n\n  private constructor() {\n    this.element = document.createElement('select');\n    this.element.classList.add('chrome-select');\n    this.element.addEventListener('change', this.onChange.bind(this), false);\n    this.update();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): LinkHandlerSettingUI {\n    const {forceNew} = opts;\n    if (!linkHandlerSettingUIInstance || forceNew) {\n      linkHandlerSettingUIInstance = new LinkHandlerSettingUI();\n    }\n\n    return linkHandlerSettingUIInstance;\n  }\n\n  update(): void {\n    this.element.removeChildren();\n    const names = [...linkHandlers.keys()];\n    names.unshift(i18nString(UIStrings.auto));\n    for (const name of names) {\n      const option = document.createElement('option');\n      option.textContent = name;\n      option.selected = name === Linkifier.linkHandlerSetting().get();\n      this.element.appendChild(option);\n    }\n    this.element.disabled = names.length <= 1;\n  }\n\n  private onChange(event: Event): void {\n    if (!event.target) {\n      return;\n    }\n    const value = (event.target as HTMLSelectElement).value;\n    Linkifier.linkHandlerSetting().set(value);\n  }\n\n  settingElement(): Element|null {\n    return UI.SettingsUI.createCustomSetting(i18nString(UIStrings.linkHandling), this.element);\n  }\n}\n\nlet listeningToNewEvents = false;\nfunction listenForNewComponentLinkifierEvents(): void {\n  if (listeningToNewEvents) {\n    return;\n  }\n\n  listeningToNewEvents = true;\n\n  window.addEventListener('linkifieractivated', function(event: Event) {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const unknownEvent = (event as any);\n    const eventWithData = (unknownEvent as {\n      data: LinkInfo,\n    });\n    Linkifier.handleClickFromNewComponentLand(eventWithData.data);\n  });\n}\n\nlistenForNewComponentLinkifierEvents();\n\nexport class ContentProviderContextMenuProvider implements\n    UI.ContextMenu\n        .Provider<Workspace.UISourceCode.UISourceCode|SDK.Resource.Resource|SDK.NetworkRequest.NetworkRequest> {\n  appendApplicableItems(\n      _event: Event, contextMenu: UI.ContextMenu.ContextMenu,\n      contentProvider: Workspace.UISourceCode.UISourceCode|SDK.Resource.Resource|\n      SDK.NetworkRequest.NetworkRequest): void {\n    const contentUrl = contentProvider.contentURL();\n    if (!contentUrl) {\n      return;\n    }\n\n    if (!Common.ParsedURL.schemeIs(contentUrl, 'file:')) {\n      contextMenu.revealSection().appendItem(\n          UI.UIUtils.openLinkExternallyLabel(),\n          () => Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(\n              contentUrl.endsWith(':formatted') ?\n                  Common.ParsedURL.ParsedURL.slice(contentUrl, 0, contentUrl.lastIndexOf(':')) :\n                  contentUrl),\n          {jslogContext: 'open-in-new-tab'});\n    }\n    for (const title of linkHandlers.keys()) {\n      const handler = linkHandlers.get(title);\n      if (!handler) {\n        continue;\n      }\n      contextMenu.revealSection().appendItem(\n          i18nString(UIStrings.openUsingS, {PH1: title}), handler.bind(null, contentProvider, 0),\n          {jslogContext: 'open-using'});\n    }\n    if (contentProvider instanceof SDK.NetworkRequest.NetworkRequest) {\n      return;\n    }\n\n    contextMenu.clipboardSection().appendItem(\n        UI.UIUtils.copyLinkAddressLabel(),\n        () => Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(contentUrl),\n        {jslogContext: 'copy-link-address'});\n\n    // TODO(bmeurer): `displayName` should be an accessor/data property consistently.\n    if (contentProvider instanceof Workspace.UISourceCode.UISourceCode) {\n      contextMenu.clipboardSection().appendItem(\n          UI.UIUtils.copyFileNameLabel(),\n          () => Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(contentProvider.displayName()),\n          {jslogContext: 'copy-file-name'});\n    } else {\n      contextMenu.clipboardSection().appendItem(\n          UI.UIUtils.copyFileNameLabel(),\n          () => Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(contentProvider.displayName),\n          {jslogContext: 'copy-file-name'});\n    }\n  }\n}\n\ninterface LinkInfo {\n  icon: IconButton.Icon.Icon|null;\n  enableDecorator: boolean;\n  uiLocation: Workspace.UISourceCode.UILocation|null;\n  liveLocation: Bindings.LiveLocation.LiveLocation|null;\n  url: Platform.DevToolsPath.UrlString|null;\n  lineNumber: number|null;\n  columnNumber: number|null;\n  inlineFrameIndex: number;\n  revealable: Object|null;\n  fallback: Element|null;\n  userMetric?: Host.UserMetrics.Action;\n  jslogContext?: string;\n}\n\nexport interface LinkifyURLOptions {\n  text?: string;\n  className?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n  showColumnNumber?: boolean;\n  inlineFrameIndex?: number;\n  preventClick?: boolean;\n  maxLength?: number;\n  tabStop?: boolean;\n  bypassURLTrimming?: boolean;\n  userMetric?: Host.UserMetrics.Action;\n  jslogContext?: string;\n}\n\nexport interface LinkifyOptions {\n  className?: string;\n  columnNumber?: number;\n  showColumnNumber?: boolean;\n  inlineFrameIndex: number;\n  tabStop?: boolean;\n  userMetric?: Host.UserMetrics.Action;\n  jslogContext?: string;\n\n  /**\n   * {@link LinkDisplayOptions.revealBreakpoint}\n   */\n  revealBreakpoint?: boolean;\n}\n\ninterface CreateLinkOptions {\n  maxLength?: number;\n  title?: string;\n  href?: Platform.DevToolsPath.UrlString;\n  preventClick?: boolean;\n  tabStop?: boolean;\n  bypassURLTrimming?: boolean;\n  jslogContext?: string;\n}\n\ninterface LinkDisplayOptions {\n  showColumnNumber: boolean;\n\n  /**\n   * If true, we'll check if there is a breakpoint at the UILocation we get\n   * from the LiveLocation. If we find a breakpoint, we'll reveal the corresponding\n   * {@link Breakpoints.BreakpointManager.BreakpointLocation}. Which opens the\n   * breakpoint edit dialog.\n   */\n  revealBreakpoint?: boolean;\n}\n\nexport type LinkHandler = (arg0: TextUtils.ContentProvider.ContentProvider, arg1: number) => void;\n\nexport const enum Events {\n  LIVE_LOCATION_UPDATED = 'liveLocationUpdated',\n}\n\nexport type EventTypes = {\n  [Events.LIVE_LOCATION_UPDATED]: Bindings.LiveLocation.LiveLocation,\n};\n"],
  "mappings": ";AA8BA,YAAY,YAAY;AACxB,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,cAAc;AAC1B,YAAY,SAAS;AAErB,YAAY,cAAc;AAC1B,YAAY,iBAAiB;AAC7B,YAAY,eAAe;AAE3B,YAAY,eAAe;AAE3B,YAAY,mBAAmB;AAC/B,YAAY,QAAQ;AAEpB,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA,EAIhB,SAAS;AAAA;AAAA;AAAA;AAAA,EAIT,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,EAKN,WAAW;AAAA;AAAA;AAAA;AAAA,EAIX,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,EAKR,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMZ,cAAc;AAChB;AACA,MAAM,OAAO,KAAK,KAAK,kBAAkB,2CAA2C,SAAS;AAC7F,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW,IAAI;AACpE,MAAM,YAAY,oBAAI,IAAe;AAErC,IAAI,YAAgC;AAEpC,MAAM,wBAAwB,oBAAI,QAA2D;AAE7F,MAAM,eAAe,oBAAI,QAAwB;AAEjD,MAAM,eAAe,oBAAI,QAAsB;AAE/C,MAAM,eAAe,oBAAI,IAAyB;AAElD,IAAI;AAEG,aAAM,kBAAkB,OAAO,cAAc,cAAgE;AAAA,EACjG;AAAA,EACA;AAAA,EACA;AAAA,EACT;AAAA,EAER,YAAY,2BAAoC,kBAA4B;AAC1E,UAAM;AACN,SAAK,YAAY,6BAA6B,GAAG,QAAQ;AACzD,SAAK,kBAAkB,oBAAI,IAAI;AAC/B,SAAK,uBAAuB,oBAAI,IAAI;AACpC,SAAK,mBAAmB,QAAQ,gBAAgB;AAChD,cAAU,IAAI,IAAI;AAClB,QAAI,cAAc,cAAc,SAAS,EAAE,eAAe,IAAI;AAAA,EAChE;AAAA,EAEA,OAAO,iBAAiB,eAAoC;AAC1D,YAAQ,OAAO,CAAC,WAAW,oCAAoC;AAC/D,gBAAY;AACZ,kBAAc,iBAAiB,cAAc,OAAO,mBAAmB,iBAAiB;AACxF,eAAW,aAAa,WAAW;AACjC,gBAAU,2BAA2B;AAAA,IACvC;AAEA,aAAS,kBAAkB,OAAuF;AAChH,YAAM,eAAe,MAAM;AAC3B,YAAM,QAAQ,sBAAsB,IAAI,YAAY,KAAK,CAAC;AAC1D,iBAAW,QAAQ,OAAO;AACxB,kBAAU,sBAAsB,IAAI;AAAA,MACtC;AAAA,IACF;AAAA,EACF;AAAA,EAEQ,6BAAmC;AACzC,eAAW,WAAW,KAAK,gBAAgB,OAAO,GAAG;AACnD,iBAAW,UAAU,SAAS;AAC5B,kBAAU,sBAAsB,MAAM;AAAA,MACxC;AAAA,IACF;AAAA,EACF;AAAA,EAEA,OAAe,eAAe,QAAiB,YAAqD;AAClG,UAAM,WAAW,UAAU,SAAS,MAAM;AAC1C,QAAI,CAAC,UAAU;AACb;AAAA,IACF;AACA,aAAS,aAAa;AACtB,QAAI,CAAC,YAAY;AACf;AAAA,IACF;AACA,UAAM,eAAe,WAAW;AAChC,QAAI,oBAAoB,sBAAsB,IAAI,YAAY;AAC9D,QAAI,CAAC,mBAAmB;AACtB,0BAAoB,oBAAI,IAAI;AAC5B,4BAAsB,IAAI,cAAc,iBAAiB;AAAA,IAC3D;AACA,sBAAkB,IAAI,MAAM;AAAA,EAC9B;AAAA,EAEA,OAAO,sBAAsB,QAAiB,YAAqD;AACjG,cAAU,eAAe,QAAQ,UAAU;AAAA,EAC7C;AAAA,EAEA,OAAe,iBAAiB,QAAuB;AACrD,UAAM,OAAO,UAAU,SAAS,MAAM;AACtC,QAAI,CAAC,QAAQ,CAAC,KAAK,YAAY;AAC7B;AAAA,IACF;AAEA,UAAM,eAAe,KAAK,WAAW;AACrC,SAAK,aAAa;AAClB,UAAM,oBAAoB,sBAAsB,IAAI,YAAY;AAChE,QAAI,mBAAmB;AACrB,wBAAkB,OAAO,MAAM;AAAA,IACjC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAe,eAAe,QAAiB,YAAqD;AAClG,UAAM,OAAO,UAAU,SAAS,MAAM;AACtC,QAAI,CAAC,MAAM;AACT;AAAA,IACF;AAEA,UAAM,aAAa,YAAY,kBAAkB,kBAAkB,SAAS,EAAE,eAAe,UAAU;AACvG,QAAI,YAAY;AACd,WAAK,aAAa;AAAA,IACpB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAe,iBAAiB,QAAuB;AACrD,UAAM,OAAO,UAAU,SAAS,MAAM;AACtC,QAAI,QAAQ,KAAK,YAAY;AAC3B,WAAK,aAAa;AAAA,IACpB;AAAA,EACF;AAAA,EAEA,YAAY,QAAiC;AAC3C,SAAK,gBAAgB,IAAI,QAAQ,CAAC,CAAC;AACnC,SAAK,qBAAqB,IAAI,QAAQ,IAAI,SAAS,aAAa,iBAAiB,CAAC;AAAA,EACpF;AAAA,EAEA,cAAc,QAAiC;AAC7C,UAAM,eAAe,KAAK,qBAAqB,IAAI,MAAM;AACzD,SAAK,qBAAqB,OAAO,MAAM;AACvC,QAAI,CAAC,cAAc;AACjB;AAAA,IACF;AACA,iBAAa,WAAW;AACxB,UAAM,UAAW,KAAK,gBAAgB,IAAI,MAAM;AAChD,QAAI,CAAC,SAAS;AACZ;AAAA,IACF;AACA,SAAK,gBAAgB,OAAO,MAAM;AAClC,eAAW,UAAU,SAAS;AAC5B,YAAM,OAAO,UAAU,SAAS,MAAM;AACtC,UAAI,CAAC,MAAM;AACT;AAAA,MACF;AACA,WAAK,eAAe;AACpB,gBAAU,iBAAiB,MAAM;AACjC,YAAM,WAAW,KAAK;AACtB,UAAI,UAAU;AACZ,eAAO,YAAY,QAAQ;AAAA,MAC7B;AAAA,IACF;AAAA,EACF;AAAA,EAEA,2BACI,QAAgC,UAChC,WAA4C,YAA8B,SACpE;AACR,QAAI,iBAAmC;AACvC,UAAM,oBAAuC;AAAA,MAC3C;AAAA,MACA,WAAW,KAAK;AAAA,MAChB,cAAc,SAAS;AAAA,MACvB,kBAAkB,QAAQ,SAAS,gBAAgB;AAAA,MACnD,WAAW,SAAS;AAAA,MACpB,SAAS,SAAS;AAAA,MAClB,kBAAkB,SAAS,oBAAoB;AAAA,MAC/C,YAAY,SAAS;AAAA,MACrB,cAAc,SAAS,gBAAgB;AAAA,IACzC;AACA,UAAM,EAAC,cAAc,YAAY,GAAE,IAAI;AACvC,QAAI,WAAW;AACb,uBAAiB,UAAU,WAAW,WAAW,iBAAiB;AAAA,IACpE;AACA,QAAI,CAAC,UAAU,OAAO,WAAW,GAAG;AAClC,aAAO;AAAA,IACT;AACA,UAAM,gBAAgB,OAAO,MAAM,IAAI,cAAc,aAAa;AAClE,QAAI,CAAC,eAAe;AAClB,aAAO;AAAA,IACT;AAKA,UAAM,cAAc,WAAW,cAAc;AAAA,MACV;AAAA,MAAU,cAAc;AAAA,MAAG;AAAA,MAAc,kBAAkB;AAAA,IAAgB,IAC/E,cAAc;AAAA,MACV;AAAA,MAAW,cAAc;AAAA,MAAG;AAAA,MAAc,kBAAkB;AAAA,IAAgB;AAC/G,QAAI,CAAC,aAAa;AAChB,aAAO;AAAA,IACT;AAEA,UAAM,oBAAuC;AAAA,MAC3C,SAAS,SAAS;AAAA,MAClB,cAAc;AAAA,IAChB;AACA,UAAM,EAAC,MAAM,SAAQ,IAAI,UAAU;AAAA,MAC/B,kBAAkB,eAAe,cAAc,eAAe,cAAc;AAAA,MAAI;AAAA,MAAW;AAAA,IAAiB;AAChH,aAAS,kBAAkB,KAAK;AAChC,aAAS,WAAW;AACpB,aAAS,aAAa,SAAS;AAE/B,UAAM,OAAO,KAAK,qBAAqB,IAAI,YAAY,cAAc,OAAO,CAAC;AAC7E,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,IACT;AAEA,UAAM,qBAAyC;AAAA,MAC7C,kBAAkB,kBAAkB,oBAAoB;AAAA,MACxD,kBAAkB,SAAS;AAAA,IAC7B;AAEA,UAAM,iBAAiB,OAAM,iBAAoE;AAC/F,YAAM,KAAK,aAAa,MAAM,oBAAoB,YAAY;AAC9D,WAAK,yBAAyB,mDAA8B,YAAY;AAAA,IAC1E;AACA,SAAK,SAAS,yBAAyB,yBAAyB,SAAS,EACpE,mBAAmB,aAAa,eAAe,KAAK,IAAI,GAAG,IAAI,EAC/D,KAAK,kBAAgB;AACpB,UAAI,cAAc;AAChB,iBAAS,eAAe;AAAA,MAC1B;AAAA,IACF,CAAC;AAEL,UAAM,UAAW,KAAK,gBAAgB,IAAI,YAAY,cAAc,OAAO,CAAC;AAC5E,YAAQ,KAAK,IAAI;AACjB,WAAO;AAAA,EACT;AAAA,EAEA,sBACI,QAAgC,UAChC,WAA4C,YAA8B,SAAuC;AACnH,UAAM,aAAa,KAAK,2BAA2B,QAAQ,UAAU,WAAW,YAAY,OAAO;AACnG,UAAM,oBAAuC;AAAA,MAC3C;AAAA,MACA,WAAW,KAAK;AAAA,MAChB,WAAW,SAAS;AAAA,MACpB,cAAc,SAAS;AAAA,MACvB,kBAAkB,QAAQ,SAAS,gBAAgB;AAAA,MACnD,kBAAkB,SAAS,oBAAoB;AAAA,MAC/C,SAAS,SAAS;AAAA,MAClB,YAAY,SAAS;AAAA,MACrB,cAAc,SAAS,gBAAgB;AAAA,IACzC;AAEA,WAAO,cAAc,UAAU,WAAW,WAAW,iBAAiB;AAAA,EACxE;AAAA,EAEA,mBACI,aAAyC,aACzC,WAA6B;AAC/B,WAAO,KAAK;AAAA,MACR,YAAY,cAAc,OAAO;AAAA,MAAG,YAAY;AAAA,MAAU;AAAA,MAAa,YAAY;AAAA,MAAY;AAAA,QAC7F,cAAc,YAAY;AAAA,QAC1B;AAAA,QACA,kBAAkB,YAAY;AAAA,MAChC;AAAA,IAAC;AAAA,EACP;AAAA,EAEA,6BACI,QAAgC,WAChC,SAA4C;AAC9C,UAAM,iBAAiC;AAAA,MACrC,GAAG;AAAA,MACH,cAAc,UAAU;AAAA,MACxB,kBAAkB,SAAS,oBAAoB;AAAA,IACjD;AACA,WAAO,KAAK;AAAA,MACR;AAAA,MAAQ,OAAO,UAAU,QAAQ;AAAA,MACjC,UAAU;AAAA,MAAwC,UAAU;AAAA,MAAY;AAAA,IAAc;AAAA,EAC5F;AAAA,EAEA,0BAA0B,QAAgC,YAAsD;AAC9G,YAAQ,OAAO,WAAW,WAAW,SAAS,CAAC;AAE/C,UAAM,EAAC,KAAK,YAAY,aAAY,IAAI,WAAW,WAAW,CAAC;AAC/D,UAAM,iBAAiB,UAAU,WAAW,KAAwC;AAAA,MAClF;AAAA,MACA;AAAA,MACA,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,WAAW,KAAK;AAAA,MAChB,cAAc;AAAA,MACd,cAAc;AAAA,IAChB,CAAC;AAGD,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA,IACT;AAKA,UAAM,OAAO,KAAK,qBAAqB,IAAI,MAAM;AACjD,QAAI,CAAC,MAAM;AACT,cAAQ,OAAO,OAAO,WAAW,CAAC;AAClC,aAAO;AAAA,IACT;AACA,YAAQ,OAAO,CAAC,OAAO,WAAW,CAAC;AAGnC,UAAM,gBAAgB,OAAO,MAAM,IAAI,cAAc,aAAa;AAElE,UAAM,EAAC,MAAM,SAAQ,IAAI,UAAU,WAAW,IAAI,IAAI,EAAC,cAAc,kBAAiB,CAAC;AACvF,aAAS,kBAAkB,KAAK;AAChC,aAAS,WAAW;AAEpB,UAAM,qBAAqB,EAAC,kBAAkB,MAAK;AAEnD,UAAM,iBAAiB,OAAM,iBAAoE;AAC/F,YAAM,KAAK,aAAa,MAAM,oBAAoB,YAAY;AAC9D,WAAK,yBAAyB,mDAA8B,YAAY;AAAA,IAC1E;AACA,SAAK,SAAS,yBAAyB,yBAAyB,SAAS,EACpE;AAAA,MACG,cAAc,+BAA+B,UAAU;AAAA,MAAG,eAAe,KAAK,IAAI;AAAA,MAAG;AAAA,IAAI,EAC5F,KAAK,kBAAgB;AACpB,eAAS,eAAe;AAAA,IAC1B,CAAC;AAEL,UAAM,UAAW,KAAK,gBAAgB,IAAI,MAAM;AAChD,YAAQ,KAAK,IAAI;AACjB,WAAO;AAAA,EACT;AAAA,EAEA,mBAAmB,aAAuC,SAA2B;AACnF,UAAM,oBAAuC;AAAA,MAC3C,SAAS;AAAA,MACT,cAAc;AAAA,IAChB;AACA,UAAM,EAAC,MAAM,SAAQ,IAAI,UAAU,WAAW,IAAI,WAAW,IAAI,iBAAiB;AAClF,aAAS,kBAAkB,KAAK;AAEhC,UAAM,OAAO,KAAK,qBAAqB,IAAI,YAAY,SAAS,EAAE,OAAO,CAAC;AAC1E,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,IACT;AAEA,UAAM,qBAAqB,EAAC,kBAAkB,MAAK;AAEnD,UAAM,iBAAiB,OAAM,iBAAoE;AAC/F,YAAM,KAAK,aAAa,MAAM,oBAAoB,YAAY;AAC9D,WAAK,yBAAyB,mDAA8B,YAAY;AAAA,IAC1E;AACA,SAAK,SAAS,oBAAoB,oBAAoB,SAAS,EAC1D,mBAAmB,aAAa,eAAe,KAAK,IAAI,GAAG,IAAI,EAC/D,KAAK,kBAAgB;AACpB,eAAS,eAAe;AAAA,IAC1B,CAAC;AAEL,UAAM,UAAW,KAAK,gBAAgB,IAAI,YAAY,SAAS,EAAE,OAAO,CAAC;AACzE,YAAQ,KAAK,IAAI;AACjB,WAAO;AAAA,EACT;AAAA,EAEA,QAAc;AAEZ,eAAW,UAAU,CAAC,GAAG,KAAK,gBAAgB,KAAK,CAAC,GAAG;AACrD,WAAK,cAAc,MAAM;AACzB,WAAK,YAAY,MAAM;AAAA,IACzB;AACA,SAAK,WAAW,MAAM;AAAA,EACxB;AAAA,EAEA,UAAgB;AAEd,eAAW,UAAU,CAAC,GAAG,KAAK,gBAAgB,KAAK,CAAC,GAAG;AACrD,WAAK,cAAc,MAAM;AAAA,IAC3B;AACA,QAAI,cAAc,cAAc,SAAS,EAAE,iBAAiB,IAAI;AAChE,cAAU,OAAO,IAAI;AAAA,EACvB;AAAA,EAEA,MAAc,aACV,QAAqB,SACrB,cAAiE;AACnE,cAAU,iBAAiB,MAAM;AACjC,QAAI,QAAQ,kBAAkB;AAC5B,gBAAU,iBAAiB,MAAM;AAAA,IACnC;AACA,UAAM,aAAa,MAAM,aAAa,WAAW;AACjD,QAAI,CAAC,YAAY;AACf,UAAI,wBAAwB,SAAS,oBAAoB,cAAc;AACrE,cAAM,SAAU,aAA2D,OAAO;AAClF,YAAI,UAAU,OAAO,WAAW;AAC9B,iBAAO,iBAAiB,SAAS,WAAS;AACxC,kBAAM,QAAQ,IAAI;AAClB,iBAAK,OAAO,SAAS,OAAO,OAAO,aAAa,IAAI;AAAA,UACtD,GAAG,KAAK;AACR,oBAAU,eAAe,QAAQ,SAAS;AAAA,QAC5C;AAAA,MACF;AAEA,aAAO,UAAU,IAAI,cAAc;AACnC,aAAO,gBAAgB,MAAM;AAC7B;AAAA,IACF;AAEA,cAAU,eAAe,QAAQ,UAAU;AAC3C,QAAI,QAAQ,kBAAkB;AAC5B,gBAAU,eAAe,QAAQ,UAAU;AAAA,IAC7C;AACA,UAAM,OAAO,WAAW,SAAS,MAAqB,QAAQ,gBAAgB;AAC9E,cAAU,eAAe,QAAQ,MAAM,KAAK,SAAS;AAErD,QAAI,YAAoB,WAAW,aAAa,IAAI;AACpD,QAAI,WAAW,aAAa,SAAS,MAAM,oBAAoB;AAG7D,UAAI,OAAO,WAAW,iBAAiB,UAAU;AAC/C,qBAAa,MAAM,WAAW,aAAa,SAAS,EAAE,CAAC;AAAA,MACzD;AAAA,IACF,OAAO;AACL,mBAAa,OAAO,WAAW,aAAa;AAC5C,UAAI,QAAQ,oBAAoB,OAAO,WAAW,iBAAiB,UAAU;AAC3E,qBAAa,OAAO,WAAW,eAAe;AAAA,MAChD;AAAA,IACF;AACA,OAAG,QAAQ,QAAQ,QAAQ,QAAQ,SAAS;AAC5C,WAAO,UAAU,OAAO,oBAAoB,MAAM,aAAa,eAAe,CAAC;AAC/E,cAAU,sBAAsB,MAAM;AAAA,EACxC;AAAA,EAEA,OAAe,sBAAsB,QAAuB;AAC1D,UAAM,OAAO,UAAU,SAAS,MAAM;AACtC,QAAI,CAAC,QAAQ,CAAC,KAAK,iBAAiB;AAClC;AAAA,IACF;AACA,QAAI,CAAC,aAAa,CAAC,KAAK,YAAY;AAClC;AAAA,IACF;AACA,QAAI,KAAK,QAAQ,KAAK,KAAK,eAAe;AACxC,aAAO,YAAY,KAAK,IAAI;AAAA,IAC9B;AACA,UAAM,OAAO,UAAU,SAAS,KAAK,WAAW,YAAY;AAC5D,QAAI,MAAM;AACR,WAAK,MAAM,YAAY,gBAAgB,KAAK;AAC5C,aAAO,aAAa,MAAM,OAAO,UAAU;AAAA,IAC7C;AACA,SAAK,OAAO;AAAA,EACd;AAAA,EAEA,OAAO,WAAW,KAAsC,SAA0C;AAChG,cAAU,WAAW;AAAA,MACnB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,IACpB;AAEA,UAAM,OAAO,QAAQ;AACrB,UAAM,YAAY,QAAQ,aAAa;AACvC,UAAM,aAAa,QAAQ;AAC3B,UAAM,eAAe,QAAQ;AAC7B,UAAM,mBAAmB,QAAQ;AACjC,UAAM,eAAe,QAAQ;AAC7B,UAAM,YAAY,QAAQ,aAAa,GAAG,QAAQ;AAClD,UAAM,oBAAoB,QAAQ;AAClC,QAAI,CAAC,OAAO,OAAO,UAAU,SAAS,KAAK,aAAa,GAAG;AACzD,YAAM,UAAU,SAAS,cAAc,MAAM;AAC7C,UAAI,WAAW;AACb,gBAAQ,YAAY;AAAA,MACtB;AAEA,cAAQ,cAAc,QAAQ,OAAO,WAAW,UAAU,OAAO;AACjE,aAAO;AAAA,IACT;AAEA,QAAI,WAAW,QAAQ,SAAS,cAAc,kBAAkB,GAAG;AACnE,QAAI,OAAO,eAAe,YAAY,CAAC,MAAM;AAC3C,kBAAY,OAAO,aAAa;AAChC,UAAI,oBAAoB,OAAO,iBAAiB,UAAU;AACxD,oBAAY,OAAO,eAAe;AAAA,MACpC;AAAA,IACF;AACA,UAAM,QAAQ,aAAa,MAAM,MAAM;AACvC,UAAM,cAAc;AAAA,MAClB;AAAA,MACA;AAAA,MACA,MAAM;AAAA,MACN;AAAA,MACA,SAAS,QAAQ;AAAA,MACjB;AAAA,MACA,cAAc,QAAQ,gBAAgB;AAAA,IACxC;AACA,UAAM,EAAC,MAAM,SAAQ,IAAI,UAAU,WAAW,UAAU,WAAW,WAAW;AAC9E,QAAI,YAAY;AACd,eAAS,aAAa;AAAA,IACxB;AACA,QAAI,cAAc;AAChB,eAAS,eAAe;AAAA,IAC1B;AACA,aAAS,aAAa,SAAS;AAC/B,WAAO;AAAA,EACT;AAAA,EAEA,OAAO,kBACH,YAAoB,MAA0B,cAAgD,OAC9F,WAAoB,cAAoC;AAC1D,UAAM,oBAAuC;AAAA,MAC3C,WAAW,GAAG,QAAQ;AAAA,MACtB,MAAO;AAAA,MACP;AAAA,MACA;AAAA,IACF;AACA,UAAM,EAAC,MAAM,SAAQ,IAAI,UAAU,WAAW,MAAM,aAAa,IAAI,iBAAiB;AACtF,aAAS,aAAa;AACtB,WAAO;AAAA,EACT;AAAA,EAEA,OAAe,WAAW,MAA0B,WAAmB,UAA6B,CAAC,GACzD;AAC1C,UAAM,EAAC,WAAW,OAAO,MAAM,cAAc,SAAS,mBAAmB,aAAY,IAAI;AACzF,UAAM,OAAO,SAAS,cAAc,QAAQ,eAAe,SAAS,QAAQ;AAC5E,QAAI,WAAW;AACb,WAAK,YAAY;AAAA,IACnB;AACA,SAAK,UAAU,IAAI,eAAe;AAClC,QAAI,CAAC,QAAQ,cAAc;AACzB,WAAK,UAAU,IAAI,eAAe,YAAY;AAAA,IAChD;AACA,QAAI,OAAO;AACT,SAAG,QAAQ,QAAQ,QAAQ,MAAM,KAAK;AAAA,IACxC;AACA,QAAI,MAAM;AAER,WAAK,OAAO;AAAA,IACd;AACA,SAAK,aAAa,SAAS,GAAG,cAAc,KAAK,YAAY,EAAE,MAAM,EAAC,OAAO,KAAI,CAAC,CAAC,EAAE;AAErF,QAAI,gBAAgB,aAAa;AAC/B,WAAK,YAAY,IAAI;AAAA,IACvB,OAAO;AACL,UAAI,mBAAmB;AACrB,aAAK,UAAU,IAAI,2BAA2B;AAC9C,kBAAU,wBAAwB,MAAM,IAAI;AAAA,MAC9C,OAAO;AACL,kBAAU,eAAe,MAAM,MAAM,SAAS;AAAA,MAChD;AAAA,IACF;AAEA,UAAM,WAAW;AAAA,MACf,MAAM;AAAA,MACN,iBAAiB;AAAA,MACjB,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,KAAK,QAAQ;AAAA,MACb,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,kBAAkB;AAAA,MAClB,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AACA,iBAAa,IAAI,MAAM,QAAQ;AAC/B,QAAI,CAAC,cAAc;AACjB,WAAK,iBAAiB,SAAS,WAAS;AACtC,YAAI,UAAU,YAAY,KAAK,GAAG;AAChC,gBAAM,QAAQ,IAAI;AAAA,QACpB;AAAA,MACF,GAAG,KAAK;AAAA,IACV,OAAO;AACL,WAAK,UAAU,IAAI,6BAA6B;AAAA,IAClD;AACA,OAAG,UAAU,WAAW,IAAI;AAC5B,SAAK,WAAW,UAAU,IAAI;AAC9B,WAAO,EAAC,MAAM,SAAQ;AAAA,EACxB;AAAA,EAEA,OAAe,eAAe,MAAe,MAAc,WAA0B;AACnF,SAAK,eAAe;AACpB,QAAI,aAAa,KAAK,SAAS,WAAW;AACxC,YAAM,cAAc,YAAY,MAAM,SAAS;AAC/C,gBAAU,wBAAwB,MAAM,YAAY,CAAC,CAAC;AACtD,gBAAU,iBAAiB,MAAM,YAAY,CAAC,CAAC;AAC/C,gBAAU,wBAAwB,MAAM,YAAY,CAAC,CAAC;AAAA,IACxD,OAAO;AACL,gBAAU,wBAAwB,MAAM,IAAI;AAAA,IAC9C;AAEA,aAAS,YAAY,QAAgBA,YAA6B;AAChE,UAAI,YAAY,KAAK,MAAMA,aAAY,CAAC;AACxC,UAAI,aAAa,OAAO,SAAS,KAAK,KAAKA,aAAY,CAAC,IAAI;AAE5D,YAAM,wBAAwB,OAAO,YAAY,aAAa,CAAC;AAE/D,UAAI,OAAO,0BAA0B,eAAe,yBAAyB,OAAS;AACpF;AACA;AAAA,MACF;AACA,YAAM,uBAAuB,OAAO,YAAY,YAAY,CAAC;AAC7D,UAAI,OAAO,yBAAyB,eAAe,YAAY,KAAK,wBAAwB,OAAS;AACnG;AAAA,MACF;AACA,aAAO,CAAC,OAAO,UAAU,GAAG,SAAS,GAAG,OAAO,UAAU,WAAW,UAAU,GAAG,OAAO,UAAU,UAAU,CAAC;AAAA,IAC/G;AAAA,EACF;AAAA,EAEA,OAAe,wBAAwB,MAAe,QAAsB;AAC1E,UAAM,YAAY,UAAU,UAAU,MAAM,qBAAqB,QAAQ,CAAC,gBAAgB,CAAC;AAC3F,eAAW,SAAS,WAAW;AAC7B,UAAI,MAAM,eAAe,IAAI;AAC3B,WAAG,QAAQ,gBAAgB,MAAM,MAAM,KAAK;AAAA,MAC9C,OAAO;AACL,WAAG,QAAQ,gBAAgB,MAAM,MAAM,MAAM,UAAU,GAAG,CAAC,CAAC;AAC5D,kBAAU,iBAAiB,MAAM,MAAM,MAAM,UAAU,CAAC,CAAC;AAAA,MAC3D;AAAA,IACF;AAAA,EACF;AAAA,EAEA,OAAe,iBAAiB,MAAe,QAAsB;AACnE,UAAM,eAAe,GAAG,QAAQ,gBAAgB,KAAK,YAAY,QAAQ,wBAAwB,GAAG,QAAG;AACvG,iBAAa,IAAI,cAAc,MAAM;AAAA,EACvC;AAAA,EAEA,OAAO,oBAAoB,MAAoB;AAC7C,WAAO,aAAa,IAAI,IAAI,KAAK,KAAK,eAAe;AAAA,EACvD;AAAA,EAEA,OAAO,SAAS,MAAmC;AACjD,WAAO,OAAO,aAAa,IAAI,IAAI,KAAK,OAAO;AAAA,EACjD;AAAA,EAEA,OAAe,YAAY,OAAuB;AAChD,UAAM,OAAQ,MAAM;AACpB,QAAI,GAAG,QAAQ,cAAe,MAAM,MAAe,KAAK,KAAK,aAAa,GAAG;AAC3E,aAAO;AAAA,IACT;AACA,UAAM,WAAW,UAAU,SAAS,IAAI;AACxC,QAAI,CAAC,UAAU;AACb,aAAO;AAAA,IACT;AACA,WAAO,UAAU,kBAAkB,QAAQ;AAAA,EAC7C;AAAA,EAEA,OAAO,gCAAgC,UAA0B;AAC/D,cAAU,kBAAkB,QAAQ;AAAA,EACtC;AAAA,EAEA,OAAO,kBAAkB,UAA6B;AACpD,UAAM,UAAU,UAAU,YAAY,QAAQ;AAC9C,QAAI,QAAQ,QAAQ;AAClB,WAAK,QAAQ,CAAC,EAAE,QAAQ,KAAK,IAAI;AACjC,UAAI,SAAS,YAAY;AACvB,aAAK,YAAY,YAAY,SAAS,UAAU;AAAA,MAClD;AACA,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA,EAEA,OAAO,qBAAsD;AAC3D,QAAI,CAAC,4BAA4B;AAC/B,mCACI,OAAO,SAAS,SAAS,SAAS,EAAE,cAAc,qBAAqB,WAAW,UAAU,IAAI,CAAC;AAAA,IACvG;AACA,WAAO;AAAA,EACT;AAAA,EAEA,OAAO,oBAAoB,OAAe,SAA4B;AACpE,iBAAa,IAAI,OAAO,OAAO;AAC/B,yBAAqB,SAAS,EAAE,OAAO;AAAA,EACzC;AAAA,EAEA,OAAO,sBAAsB,OAAqB;AAChD,iBAAa,OAAO,KAAK;AACzB,yBAAqB,SAAS,EAAE,OAAO;AAAA,EACzC;AAAA,EAEA,OAAO,WAAW,MAAuD;AACvE,UAAM,OAAO,UAAU,SAAS,IAAI;AACpC,WAAO,OAAO,KAAK,aAAa;AAAA,EAClC;AAAA,EAEA,OAAO,YAAY,MAKf;AACF,UAAM,SAKA,CAAC;AAEP,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,IACT;AAEA,QAAI,MAAM,SAAS,aAAa;AAChC,QAAI,aAAgG;AACpG,QAAI,KAAK,YAAY;AACnB,mBAAa,KAAK;AAClB,YAAM,WAAW,aAAa,WAAW;AAAA,IAC3C,WAAW,KAAK,KAAK;AACnB,YAAM,KAAK;AACX,YAAM,eAAe,UAAU,UAAU,cAAc,SAAS,EAAE,mBAAmB,GAAG,KACpF,UAAU,UAAU,cAAc,SAAS,EAAE;AAAA,QACzC,OAAO,UAAU,UAAU,eAAe,GAAG;AAAA,MAAoC;AACzF,mBAAa,eAAe,aAAa,WAAW,KAAK,cAAc,GAAG,KAAK,gBAAgB,CAAC,IAAI;AAAA,IACtG;AACA,UAAM,WAAW,MAAM,SAAS,cAAc,eAAe,GAAG,IAAI;AACpE,UAAM,kBAAkB,aAAa,WAAW,eAAe;AAE/D,UAAM,aAAa,KAAK,cAAc,cAAc;AACpD,QAAI,YAAY;AACd,YAAM,cAAc,OAAO,SAAS,kBAAkB,UAAU;AAChE,aAAO,KAAK;AAAA,QACV,SAAS;AAAA,QACT,OAAO,cAAc,WAAW,UAAU,WAAW,EAAC,KAAK,YAAW,CAAC,IAAI,WAAW,UAAU,MAAM;AAAA,QACtG,cAAc;AAAA,QACd,SAAS,MAAM,OAAO,SAAS,OAAO,UAAU;AAAA,MAClD,CAAC;AAAA,IACH;AACA,QAAI,iBAAiB;AACnB,YAAM,aAAa,aAAa,WAAW,aAAa,KAAK,cAAc;AAC3E,iBAAW,SAAS,aAAa,KAAK,GAAG;AACvC,cAAM,UAAU,aAAa,IAAI,KAAK;AACtC,YAAI,CAAC,SAAS;AACZ;AAAA,QACF;AACA,cAAM,SAAS;AAAA,UACb,SAAS;AAAA,UACT,OAAO,WAAW,UAAU,YAAY,EAAC,KAAK,MAAK,CAAC;AAAA,UACpD,cAAc;AAAA,UACd,SAAS,QAAQ,KAAK,MAAM,iBAAiB,UAAU;AAAA,QACzD;AACA,YAAI,UAAU,UAAU,mBAAmB,EAAE,IAAI,GAAG;AAClD,iBAAO,QAAQ,MAAM;AAAA,QACvB,OAAO;AACL,iBAAO,KAAK,MAAM;AAAA,QACpB;AAAA,MACF;AAAA,IACF;AACA,QAAI,YAAY,KAAK,KAAK;AACxB,aAAO,KAAK;AAAA,QACV,SAAS;AAAA,QACT,OAAO,GAAG,QAAQ,wBAAwB;AAAA,QAC1C,cAAc;AAAA,QACd,SAAS,MAAM,KAAK,sBAAsB,8BAA8B,aAAa,GAAG;AAAA,MAC1F,CAAC;AACD,aAAO,KAAK;AAAA,QACV,SAAS;AAAA,QACT,OAAO,GAAG,QAAQ,qBAAqB;AAAA,QACvC,cAAc;AAAA,QACd,SAAS,MAAM,KAAK,sBAAsB,8BAA8B,SAAS,GAAG;AAAA,MACtF,CAAC;AAAA,IACH;AAEA,QAAI,cAAc,WAAW,cAAc;AACzC,YAAMC,mBAAkB,WAAW;AACnC,aAAO,KAAK;AAAA,QACV,SAAS;AAAA,QACT,OAAO,GAAG,QAAQ,kBAAkB;AAAA,QACpC,cAAc;AAAA,QACd,SAAS,MAAM,KAAK,sBAAsB,8BAA8B,SAASA,iBAAgB,YAAY,CAAC;AAAA,MAChH,CAAC;AAAA,IACH;AAEA,WAAO;AAAA,EACT;AACF;AAMO,WAAU;AAAA,CAAV,CAAUC,mBAAV;AACE,MAAWC;AAAX,IAAWA,YAAX;AACL,IAAAA,QAAA,uBAAoB;AAAA,KADJA,UAAAD,eAAA,WAAAA,eAAA;AAAA,GADH;AAUV,aAAM,wBAAiE;AAAA,EAC5E,sBAAsB,QAAe,aAAyC,QAAoB;AAChG,QAAI,aAAwB;AAC5B,WAAO,cAAc,CAAC,aAAa,IAAI,UAAU,GAAG;AAClD,mBAAa,WAAW,uBAAuB;AAAA,IACjD;AACA,UAAM,OAAQ;AACd,UAAM,WAAW,UAAU,SAAS,IAAI;AACxC,QAAI,CAAC,UAAU;AACb;AAAA,IACF;AAEA,UAAM,UAAU,UAAU,YAAY,QAAQ;AAC9C,eAAW,UAAU,SAAS;AAC5B,kBAAY,QAAQ,OAAO,OAAO,EAAE,WAAW,OAAO,OAAO,OAAO,SAAS,EAAC,cAAc,OAAO,aAAY,CAAC;AAAA,IAClH;AAAA,EACF;AACF;AAEA,IAAI;AAEG,aAAM,qBAAwD;AAAA,EAC3D;AAAA,EAEA,cAAc;AACpB,SAAK,UAAU,SAAS,cAAc,QAAQ;AAC9C,SAAK,QAAQ,UAAU,IAAI,eAAe;AAC1C,SAAK,QAAQ,iBAAiB,UAAU,KAAK,SAAS,KAAK,IAAI,GAAG,KAAK;AACvE,SAAK,OAAO;AAAA,EACd;AAAA,EAEA,OAAO,SAAS,OAEZ,EAAC,UAAU,KAAI,GAAyB;AAC1C,UAAM,EAAC,SAAQ,IAAI;AACnB,QAAI,CAAC,gCAAgC,UAAU;AAC7C,qCAA+B,IAAI,qBAAqB;AAAA,IAC1D;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,SAAe;AACb,SAAK,QAAQ,eAAe;AAC5B,UAAM,QAAQ,CAAC,GAAG,aAAa,KAAK,CAAC;AACrC,UAAM,QAAQ,WAAW,UAAU,IAAI,CAAC;AACxC,eAAW,QAAQ,OAAO;AACxB,YAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,aAAO,cAAc;AACrB,aAAO,WAAW,SAAS,UAAU,mBAAmB,EAAE,IAAI;AAC9D,WAAK,QAAQ,YAAY,MAAM;AAAA,IACjC;AACA,SAAK,QAAQ,WAAW,MAAM,UAAU;AAAA,EAC1C;AAAA,EAEQ,SAAS,OAAoB;AACnC,QAAI,CAAC,MAAM,QAAQ;AACjB;AAAA,IACF;AACA,UAAM,QAAS,MAAM,OAA6B;AAClD,cAAU,mBAAmB,EAAE,IAAI,KAAK;AAAA,EAC1C;AAAA,EAEA,iBAA+B;AAC7B,WAAO,GAAG,WAAW,oBAAoB,WAAW,UAAU,YAAY,GAAG,KAAK,OAAO;AAAA,EAC3F;AACF;AAEA,IAAI,uBAAuB;AAC3B,SAAS,uCAA6C;AACpD,MAAI,sBAAsB;AACxB;AAAA,EACF;AAEA,yBAAuB;AAEvB,SAAO,iBAAiB,sBAAsB,SAAS,OAAc;AAGnE,UAAM,eAAgB;AACtB,UAAM,gBAAiB;AAGvB,cAAU,gCAAgC,cAAc,IAAI;AAAA,EAC9D,CAAC;AACH;AAEA,qCAAqC;AAE9B,aAAM,mCAEkG;AAAA,EAC7G,sBACI,QAAe,aACf,iBACyC;AAC3C,UAAM,aAAa,gBAAgB,WAAW;AAC9C,QAAI,CAAC,YAAY;AACf;AAAA,IACF;AAEA,QAAI,CAAC,OAAO,UAAU,SAAS,YAAY,OAAO,GAAG;AACnD,kBAAY,cAAc,EAAE;AAAA,QACxB,GAAG,QAAQ,wBAAwB;AAAA,QACnC,MAAM,KAAK,sBAAsB,8BAA8B;AAAA,UAC3D,WAAW,SAAS,YAAY,IAC5B,OAAO,UAAU,UAAU,MAAM,YAAY,GAAG,WAAW,YAAY,GAAG,CAAC,IAC3E;AAAA,QAAU;AAAA,QAClB,EAAC,cAAc,kBAAiB;AAAA,MAAC;AAAA,IACvC;AACA,eAAW,SAAS,aAAa,KAAK,GAAG;AACvC,YAAM,UAAU,aAAa,IAAI,KAAK;AACtC,UAAI,CAAC,SAAS;AACZ;AAAA,MACF;AACA,kBAAY,cAAc,EAAE;AAAA,QACxB,WAAW,UAAU,YAAY,EAAC,KAAK,MAAK,CAAC;AAAA,QAAG,QAAQ,KAAK,MAAM,iBAAiB,CAAC;AAAA,QACrF,EAAC,cAAc,aAAY;AAAA,MAAC;AAAA,IAClC;AACA,QAAI,2BAA2B,IAAI,eAAe,gBAAgB;AAChE;AAAA,IACF;AAEA,gBAAY,iBAAiB,EAAE;AAAA,MAC3B,GAAG,QAAQ,qBAAqB;AAAA,MAChC,MAAM,KAAK,sBAAsB,8BAA8B,SAAS,UAAU;AAAA,MAClF,EAAC,cAAc,oBAAmB;AAAA,IAAC;AAGvC,QAAI,2BAA2B,UAAU,aAAa,cAAc;AAClE,kBAAY,iBAAiB,EAAE;AAAA,QAC3B,GAAG,QAAQ,kBAAkB;AAAA,QAC7B,MAAM,KAAK,sBAAsB,8BAA8B,SAAS,gBAAgB,YAAY,CAAC;AAAA,QACrG,EAAC,cAAc,iBAAgB;AAAA,MAAC;AAAA,IACtC,OAAO;AACL,kBAAY,iBAAiB,EAAE;AAAA,QAC3B,GAAG,QAAQ,kBAAkB;AAAA,QAC7B,MAAM,KAAK,sBAAsB,8BAA8B,SAAS,gBAAgB,WAAW;AAAA,QACnG,EAAC,cAAc,iBAAgB;AAAA,MAAC;AAAA,IACtC;AAAA,EACF;AACF;AAuEO,WAAW,SAAX,kBAAWC,YAAX;AACL,EAAAA,QAAA,2BAAwB;AADR,SAAAA;AAAA,GAAA;",
  "names": ["maxLength", "contentProvider", "LinkDecorator", "Events"]
}
