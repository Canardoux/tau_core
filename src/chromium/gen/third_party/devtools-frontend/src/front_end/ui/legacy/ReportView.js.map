{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/ReportView.ts"],
  "sourcesContent": ["// Copyright (c) 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Buttons from '../components/buttons/buttons.js';\nimport * as VisualLogging from '../visual_logging/visual_logging.js';\n\nimport * as ARIAUtils from './ARIAUtils.js';\nimport reportViewStyles from './reportView.css.legacy.js';\nimport {Toolbar} from './Toolbar.js';\nimport {Tooltip} from './Tooltip.js';\nimport {VBox} from './Widget.js';\n\n/**\n * @deprecated Please consider using the web component version of this widget\n *             (`ui/components/report_view/ReportView.ts`) for new code.\n */\nexport class ReportView extends VBox {\n  private readonly contentBox: HTMLElement;\n  private headerElement: HTMLElement;\n  private titleElement: HTMLElement;\n  private readonly sectionList: HTMLElement;\n  private subtitleElement?: HTMLElement;\n  private urlElement?: HTMLElement;\n  constructor(title?: string) {\n    super(true);\n    this.registerRequiredCSS(reportViewStyles);\n\n    this.contentBox = this.contentElement.createChild('div', 'report-content-box');\n    this.headerElement = this.contentBox.createChild('div', 'report-header vbox');\n    this.titleElement = this.headerElement.createChild('div', 'report-title');\n    if (title) {\n      this.titleElement.textContent = title;\n    } else {\n      this.headerElement.classList.add('hidden');\n    }\n    ARIAUtils.markAsHeading(this.titleElement, 1);\n\n    this.sectionList = this.contentBox.createChild('div', 'vbox');\n  }\n\n  getHeaderElement(): Element {\n    return this.headerElement;\n  }\n\n  setTitle(title: string): void {\n    if (this.titleElement.textContent === title) {\n      return;\n    }\n    this.titleElement.textContent = title;\n    this.headerElement.classList.toggle('hidden', Boolean(title));\n  }\n\n  setSubtitle(subtitle: string): void {\n    if (this.subtitleElement && this.subtitleElement.textContent === subtitle) {\n      return;\n    }\n    if (!this.subtitleElement) {\n      this.subtitleElement = this.headerElement.createChild('div', 'report-subtitle');\n    }\n    this.subtitleElement.textContent = subtitle;\n  }\n\n  setURL(link: Element|null): void {\n    if (!this.urlElement) {\n      this.urlElement = this.headerElement.createChild('div', 'report-url link');\n    }\n    this.urlElement.removeChildren();\n    if (link) {\n      this.urlElement.appendChild(link);\n    }\n    this.urlElement.setAttribute('jslog', `${VisualLogging.link('source-location').track({click: true})}`);\n  }\n\n  createToolbar(): Toolbar {\n    const toolbar = new Toolbar('');\n    this.headerElement.appendChild(toolbar.element);\n    return toolbar;\n  }\n\n  appendSection(title: string, className?: string, jslogContext?: string): Section {\n    const section = new Section(title, className, jslogContext);\n    section.show(this.sectionList);\n    return section;\n  }\n\n  sortSections(comparator: (arg0: Section, arg1: Section) => number): void {\n    const sections = (this.children().slice() as Section[]);\n    const sorted = sections.every((e, i, a) => !i || comparator(a[i - 1], a[i]) <= 0);\n    if (sorted) {\n      return;\n    }\n\n    this.detachChildWidgets();\n    sections.sort(comparator);\n    for (const section of sections) {\n      section.show(this.sectionList);\n    }\n  }\n\n  setHeaderVisible(visible: boolean): void {\n    this.headerElement.classList.toggle('hidden', !visible);\n  }\n\n  setBodyScrollable(scrollable: boolean): void {\n    this.contentBox.classList.toggle('no-scroll', !scrollable);\n  }\n}\n\nexport class Section extends VBox {\n  private readonly headerElement: HTMLElement;\n  private headerButtons: Buttons.Button.Button[];\n  private titleElement: HTMLElement;\n  private fieldList: HTMLElement;\n  private readonly fieldMap: Map<string, Element>;\n  constructor(title: string, className?: string, public jslogContext?: string) {\n    super();\n    this.element.classList.add('report-section');\n    if (className) {\n      this.element.classList.add(className);\n    }\n    if (jslogContext) {\n      this.element.setAttribute('jslog', `${VisualLogging.section(jslogContext)}`);\n    }\n    this.jslogContext = jslogContext;\n    this.headerButtons = [];\n    this.headerElement = this.element.createChild('div', 'report-section-header');\n    this.titleElement = this.headerElement.createChild('div', 'report-section-title');\n    this.setTitle(title);\n    ARIAUtils.markAsHeading(this.titleElement, 2);\n    this.fieldList = this.element.createChild('div', 'vbox');\n    this.fieldMap = new Map();\n  }\n\n  title(): string {\n    return this.titleElement.textContent || '';\n  }\n\n  getTitleElement(): Element {\n    return this.titleElement;\n  }\n\n  getFieldElement(): HTMLElement {\n    return this.fieldList;\n  }\n  appendFieldWithCustomView(customElement: HTMLElement): void {\n    this.fieldList.append(customElement);\n  }\n\n  setTitle(title: string, tooltip?: string): void {\n    if (this.titleElement.textContent !== title) {\n      this.titleElement.textContent = title;\n    }\n    Tooltip.install(this.titleElement, tooltip || '');\n    this.titleElement.classList.toggle('hidden', !this.titleElement.textContent);\n  }\n\n  /**\n   * Declares the overall container to be a group and assigns a title.\n   */\n  setUiGroupTitle(groupTitle: string): void {\n    ARIAUtils.markAsGroup(this.element);\n    ARIAUtils.setLabel(this.element, groupTitle);\n  }\n\n  appendButtonToHeader(button: Buttons.Button.Button): void {\n    this.headerButtons.push(button);\n    this.headerElement.appendChild(button);\n  }\n\n  setHeaderButtonsState(disabled: boolean): void {\n    this.headerButtons.map(button => {\n      button.disabled = disabled;\n    });\n  }\n\n  appendField(title: string, textValue?: string): HTMLElement {\n    let row = this.fieldMap.get(title);\n    if (!row) {\n      row = this.fieldList.createChild('div', 'report-field');\n      row.createChild('div', 'report-field-name').textContent = title;\n      this.fieldMap.set(title, row);\n      row.createChild('div', 'report-field-value');\n    }\n    if (textValue && row.lastElementChild) {\n      row.lastElementChild.textContent = textValue;\n    }\n    return row.lastElementChild as HTMLElement;\n  }\n\n  appendFlexedField(title: string, textValue?: string): Element {\n    const field = this.appendField(title, textValue);\n    field.classList.add('report-field-value-is-flexed');\n    return field;\n  }\n\n  removeField(title: string): void {\n    const row = this.fieldMap.get(title);\n    if (row) {\n      row.remove();\n    }\n    this.fieldMap.delete(title);\n  }\n\n  setFieldVisible(title: string, visible: boolean): void {\n    const row = this.fieldMap.get(title);\n    if (row) {\n      row.classList.toggle('hidden', !visible);\n    }\n  }\n\n  fieldValue(title: string): Element|null {\n    const row = this.fieldMap.get(title);\n    return row ? row.lastElementChild : null;\n  }\n\n  appendRow(): HTMLElement {\n    return this.fieldList.createChild('div', 'report-row') as HTMLElement;\n  }\n\n  appendSelectableRow(): HTMLElement {\n    return this.fieldList.createChild('div', 'report-row report-row-selectable') as HTMLElement;\n  }\n\n  clearContent(): void {\n    this.fieldList.removeChildren();\n    this.fieldMap.clear();\n  }\n\n  markFieldListAsGroup(): void {\n    ARIAUtils.markAsGroup(this.fieldList);\n    ARIAUtils.setLabel(this.fieldList, this.title());\n  }\n\n  setIconMasked(masked: boolean): void {\n    this.element.classList.toggle('show-mask', masked);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
