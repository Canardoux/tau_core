{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/components/survey_link/SurveyLink.ts"],
  "sourcesContent": ["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../icon_button/icon_button.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport type * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\n\nimport surveyLinkStyles from './surveyLink.css.js';\n\nconst {html} = LitHtml;\n\nconst UIStrings = {\n  /**\n   *@description Text shown when the link to open a survey is clicked but the survey has not yet appeared\n   */\n  openingSurvey: 'Opening survey \u2026',\n  /**\n   *@description Text displayed instead of the survey link after the survey link is clicked, if the survey was shown successfully\n   */\n  thankYouForYourFeedback: 'Thank you for your feedback',\n  /**\n   *@description Text displayed instead of the survey link after the survey link is clicked, if the survey was not shown successfully\n   */\n  anErrorOccurredWithTheSurvey: 'An error occurred with the survey',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/components/survey_link/SurveyLink.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport type CanShowSurveyCallback = (result: Host.InspectorFrontendHostAPI.CanShowSurveyResult) => void;\nexport type ShowSurveyCallback = (result: Host.InspectorFrontendHostAPI.ShowSurveyResult) => void;\n\nexport interface SurveyLinkData {\n  trigger: string;\n  promptText: Common.UIString.LocalizedString;\n  canShowSurvey: (trigger: string, callback: CanShowSurveyCallback) => void;\n  showSurvey: (trigger: string, callback: ShowSurveyCallback) => void;\n}\n\nconst enum State {\n  CHECKING = 'Checking',   // (begin state) -> SHOW_LINK | DONT_SHOW_LINK\n  SHOW_LINK = 'ShowLink',  // -> SENDING\n  SENDING = 'Sending',     // -> SURVEY_SHOWN | FAILED\n  SURVEY_SHOWN = 'SurveyShown',\n  FAILED = 'Failed',\n  DONT_SHOW_LINK = 'DontShowLink',\n}\n\n// A link to a survey. The link is rendered aysnchronously because we need to first check if\n// canShowSurvey succeeds.\nexport class SurveyLink extends HTMLElement {\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #trigger = '';\n  #promptText = Common.UIString.LocalizedEmptyString;\n  #canShowSurvey: (trigger: string, callback: CanShowSurveyCallback) => void = () => {};\n  #showSurvey: (trigger: string, callback: ShowSurveyCallback) => void = () => {};\n  #state: State = State.CHECKING;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [surveyLinkStyles];\n  }\n\n  // Re-setting data will cause the state to go back to 'Checking' which hides the link.\n  set data(data: SurveyLinkData) {\n    this.#trigger = data.trigger;\n    this.#promptText = data.promptText;\n    this.#canShowSurvey = data.canShowSurvey;\n    this.#showSurvey = data.showSurvey;\n\n    this.#checkSurvey();\n  }\n\n  #checkSurvey(): void {\n    this.#state = State.CHECKING;\n    this.#canShowSurvey(this.#trigger, ({canShowSurvey}) => {\n      if (!canShowSurvey) {\n        this.#state = State.DONT_SHOW_LINK;\n      } else {\n        this.#state = State.SHOW_LINK;\n      }\n      this.#render();\n    });\n  }\n\n  #sendSurvey(): void {\n    this.#state = State.SENDING;\n    this.#render();\n    this.#showSurvey(this.#trigger, ({surveyShown}) => {\n      if (!surveyShown) {\n        this.#state = State.FAILED;\n      } else {\n        this.#state = State.SURVEY_SHOWN;\n      }\n      this.#render();\n    });\n  }\n\n  #render(): void {\n    if (this.#state === State.CHECKING || this.#state === State.DONT_SHOW_LINK) {\n      return;\n    }\n\n    let linkText = this.#promptText;\n    if (this.#state === State.SENDING) {\n      linkText = i18nString(UIStrings.openingSurvey);\n    } else if (this.#state === State.SURVEY_SHOWN) {\n      linkText = i18nString(UIStrings.thankYouForYourFeedback);\n    } else if (this.#state === State.FAILED) {\n      linkText = i18nString(UIStrings.anErrorOccurredWithTheSurvey);\n    }\n\n    let linkState = '';\n    if (this.#state === State.SENDING) {\n      linkState = 'pending-link';\n    } else if (this.#state === State.FAILED || this.#state === State.SURVEY_SHOWN) {\n      linkState = 'disabled-link';\n    }\n\n    const ariaDisabled = this.#state !== State.SHOW_LINK;\n\n    // clang-format off\n    // eslint-disable-next-line rulesdir/ban_style_tags_in_lit_html\n    const output = html`\n      <button class=\"link ${linkState}\" tabindex=${ariaDisabled ? '-1' : '0'} .disabled=${ariaDisabled} aria-disabled=${ariaDisabled} @click=${this.#sendSurvey}>\n        <devtools-icon class=\"link-icon\" .data=${{iconName: 'review', color: 'var(--sys-color-primary)', width: 'var(--issue-link-icon-size, 16px)', height: 'var(--issue-link-icon-size, 16px)'}}></devtools-icon><!--\n      -->${linkText}\n      </button>\n    `;\n    // clang-format on\n    LitHtml.render(output, this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-survey-link', SurveyLink);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-survey-link': SurveyLink;\n  }\n}\n"],
  "mappings": "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",
  "names": ["State"]
}
