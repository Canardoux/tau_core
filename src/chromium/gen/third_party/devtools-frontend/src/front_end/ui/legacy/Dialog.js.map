{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/Dialog.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as VisualLogging from '../visual_logging/visual_logging.js';\n\nimport * as ARIAUtils from './ARIAUtils.js';\nimport dialogStyles from './dialog.css.legacy.js';\nimport {GlassPane, PointerEventsBehavior} from './GlassPane.js';\nimport {InspectorView} from './InspectorView.js';\nimport {KeyboardShortcut, Keys} from './KeyboardShortcut.js';\nimport type {SplitWidget} from './SplitWidget.js';\nimport type {DevToolsCloseButton} from './UIUtils.js';\nimport {WidgetFocusRestorer} from './Widget.js';\n\nexport class Dialog extends Common.ObjectWrapper.eventMixin<EventTypes, typeof GlassPane>(GlassPane) {\n  private tabIndexBehavior: OutsideTabIndexBehavior;\n  private tabIndexMap: Map<HTMLElement, number>;\n  private focusRestorer: WidgetFocusRestorer|null;\n  private closeOnEscape: boolean;\n  private targetDocument!: Document|null;\n  private readonly targetDocumentKeyDownHandler: (event: Event) => void;\n  private escapeKeyCallback: ((arg0: Event) => void)|null;\n\n  constructor(jslogContext?: string) {\n    super();\n    this.registerRequiredCSS(dialogStyles);\n    this.contentElement.tabIndex = 0;\n    this.contentElement.addEventListener('focus', () => this.widget().focus(), false);\n    if (jslogContext) {\n      this.contentElement.setAttribute(\n          'jslog', `${VisualLogging.dialog(jslogContext).track({resize: true, keydown: 'Escape'})}`);\n    }\n    this.widget().setDefaultFocusedElement(this.contentElement);\n    this.setPointerEventsBehavior(PointerEventsBehavior.BLOCKED_BY_GLASS_PANE);\n    this.setOutsideClickCallback(event => {\n      this.hide();\n      event.consume(true);\n    });\n    ARIAUtils.markAsModalDialog(this.contentElement);\n    this.tabIndexBehavior = OutsideTabIndexBehavior.DISABLE_ALL_OUTSIDE_TAB_INDEX;\n    this.tabIndexMap = new Map();\n    this.focusRestorer = null;\n    this.closeOnEscape = true;\n    this.targetDocumentKeyDownHandler = this.onKeyDown.bind(this);\n    this.escapeKeyCallback = null;\n  }\n\n  static hasInstance(): boolean {\n    return Boolean(Dialog.instance);\n  }\n\n  static getInstance(): Dialog|null {\n    return Dialog.instance;\n  }\n\n  override show(where?: Document|Element): void {\n    const document =\n        (where instanceof Document ? where : (where || InspectorView.instance().element).ownerDocument as Document);\n    this.targetDocument = document;\n    this.targetDocument.addEventListener('keydown', this.targetDocumentKeyDownHandler, true);\n\n    if (Dialog.instance) {\n      Dialog.instance.hide();\n    }\n    Dialog.instance = this;\n    this.disableTabIndexOnElements(document);\n    super.show(document);\n    this.focusRestorer = new WidgetFocusRestorer(this.widget());\n  }\n\n  override hide(): void {\n    if (this.focusRestorer) {\n      this.focusRestorer.restore();\n    }\n    super.hide();\n\n    if (this.targetDocument) {\n      this.targetDocument.removeEventListener('keydown', this.targetDocumentKeyDownHandler, true);\n    }\n    this.restoreTabIndexOnElements();\n    this.dispatchEventToListeners(Events.HIDDEN);\n    Dialog.instance = null;\n  }\n\n  setCloseOnEscape(close: boolean): void {\n    this.closeOnEscape = close;\n  }\n\n  setEscapeKeyCallback(callback: (arg0: Event) => void): void {\n    this.escapeKeyCallback = callback;\n  }\n\n  addCloseButton(): void {\n    const closeButton =\n        (this.contentElement.createChild('div', 'dialog-close-button', 'dt-close-button') as DevToolsCloseButton);\n    closeButton.addEventListener('click', () => this.hide(), false);\n  }\n\n  setOutsideTabIndexBehavior(tabIndexBehavior: OutsideTabIndexBehavior): void {\n    this.tabIndexBehavior = tabIndexBehavior;\n  }\n\n  private disableTabIndexOnElements(document: Document): void {\n    if (this.tabIndexBehavior === OutsideTabIndexBehavior.PRESERVE_TAB_INDEX) {\n      return;\n    }\n\n    let exclusionSet: Set<HTMLElement>|(Set<HTMLElement>| null) = (null as Set<HTMLElement>| null);\n    if (this.tabIndexBehavior === OutsideTabIndexBehavior.PRESERVE_MAIN_VIEW_TAB_INDEX) {\n      exclusionSet = this.getMainWidgetTabIndexElements(InspectorView.instance().ownerSplit());\n    }\n\n    this.tabIndexMap.clear();\n    let node: (Node|null)|Document = document;\n    for (; node; node = node.traverseNextNode(document)) {\n      if (node instanceof HTMLElement) {\n        const element = (node as HTMLElement);\n        const tabIndex = element.tabIndex;\n        if (!exclusionSet?.has(element)) {\n          if (tabIndex >= 0) {\n            this.tabIndexMap.set(element, tabIndex);\n            element.tabIndex = -1;\n          } else if (element.hasAttribute('contenteditable')) {\n            this.tabIndexMap.set(element, element.hasAttribute('tabindex') ? tabIndex : 0);\n            element.tabIndex = -1;\n          }\n        }\n      }\n    }\n  }\n\n  private getMainWidgetTabIndexElements(splitWidget: SplitWidget|null): Set<HTMLElement> {\n    const elementSet = (new Set() as Set<HTMLElement>);\n    if (!splitWidget) {\n      return elementSet;\n    }\n\n    const mainWidget = splitWidget.mainWidget();\n    if (!mainWidget || !mainWidget.element) {\n      return elementSet;\n    }\n\n    let node: Node|null = mainWidget.element;\n    for (; node; node = node.traverseNextNode(mainWidget.element)) {\n      if (!(node instanceof HTMLElement)) {\n        continue;\n      }\n\n      const element = (node as HTMLElement);\n      const tabIndex = element.tabIndex;\n      if (tabIndex < 0) {\n        continue;\n      }\n\n      elementSet.add(element);\n    }\n\n    return elementSet;\n  }\n\n  private restoreTabIndexOnElements(): void {\n    for (const element of this.tabIndexMap.keys()) {\n      element.tabIndex = (this.tabIndexMap.get(element) as number);\n    }\n    this.tabIndexMap.clear();\n  }\n\n  private onKeyDown(event: Event): void {\n    const keyboardEvent = (event as KeyboardEvent);\n    if (keyboardEvent.keyCode === Keys.Esc.code && KeyboardShortcut.hasNoModifiers(event)) {\n      if (this.escapeKeyCallback) {\n        this.escapeKeyCallback(event);\n      }\n\n      if (event.handled) {\n        return;\n      }\n\n      if (this.closeOnEscape) {\n        event.consume(true);\n        this.hide();\n      }\n    }\n  }\n\n  private static instance: Dialog|null = null;\n}\n\nexport const enum Events {\n  HIDDEN = 'hidden',\n}\n\nexport type EventTypes = {\n  [Events.HIDDEN]: void,\n};\n\nexport const enum OutsideTabIndexBehavior {\n  DISABLE_ALL_OUTSIDE_TAB_INDEX = 'DisableAllTabIndex',\n  PRESERVE_MAIN_VIEW_TAB_INDEX = 'PreserveMainViewTabIndex',\n  PRESERVE_TAB_INDEX = 'PreserveTabIndex',\n}\n"],
  "mappings": "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",
  "names": ["Events", "OutsideTabIndexBehavior"]
}
