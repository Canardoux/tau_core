{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/ForwardedInputEventHandler.ts"],
  "sourcesContent": ["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\n\nimport {Context} from './Context.js';\nimport {KeyboardShortcut} from './KeyboardShortcut.js';\nimport {ForwardedShortcut, ShortcutRegistry} from './ShortcutRegistry.js';\n\n// This handler only forwards the keystrokes if DevTools front-end is\n// not running in hosted mode.\nexport class ForwardedInputEventHandler {\n  constructor() {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.KeyEventUnhandled, this.onKeyEventUnhandled, this);\n  }\n\n  private async onKeyEventUnhandled(\n      event: Common.EventTarget.EventTargetEvent<Host.InspectorFrontendHostAPI.KeyEventUnhandledEvent>): Promise<void> {\n    const {type, key, keyCode, modifiers} = event.data;\n    if (type !== 'keydown') {\n      return;\n    }\n\n    const context = Context.instance();\n    const shortcutRegistry = ShortcutRegistry.instance();\n\n    context.setFlavor(ForwardedShortcut, ForwardedShortcut.instance);\n    await shortcutRegistry.handleKey(KeyboardShortcut.makeKey(keyCode, modifiers), key);\n    context.setFlavor(ForwardedShortcut, null);\n  }\n}\n\nnew ForwardedInputEventHandler();\n"],
  "mappings": ";AAKA,YAAY,UAAU;AAEtB,SAAQ,eAAc;AACtB,SAAQ,wBAAuB;AAC/B,SAAQ,mBAAmB,wBAAuB;AAI3C,aAAM,2BAA2B;AAAA,EACtC,cAAc;AACZ,SAAK,sBAAsB,8BAA8B,OAAO;AAAA,MAC5D,KAAK,yBAAyB,OAAO;AAAA,MAAmB,KAAK;AAAA,MAAqB;AAAA,IAAI;AAAA,EAC5F;AAAA,EAEA,MAAc,oBACV,OAAiH;AACnH,UAAM,EAAC,MAAM,KAAK,SAAS,UAAS,IAAI,MAAM;AAC9C,QAAI,SAAS,WAAW;AACtB;AAAA,IACF;AAEA,UAAM,UAAU,QAAQ,SAAS;AACjC,UAAM,mBAAmB,iBAAiB,SAAS;AAEnD,YAAQ,UAAU,mBAAmB,kBAAkB,QAAQ;AAC/D,UAAM,iBAAiB,UAAU,iBAAiB,QAAQ,SAAS,SAAS,GAAG,GAAG;AAClF,YAAQ,UAAU,mBAAmB,IAAI;AAAA,EAC3C;AACF;AAEA,IAAI,2BAA2B;",
  "names": []
}
