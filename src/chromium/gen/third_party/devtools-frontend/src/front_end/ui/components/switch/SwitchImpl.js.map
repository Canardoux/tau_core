{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/components/switch/SwitchImpl.ts"],
  "sourcesContent": ["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\n\nimport switchStyles from './switch.css.js';\n\nconst {html} = LitHtml;\n\nexport class SwitchChangeEvent extends Event {\n  static readonly eventName = 'switchchange';\n\n  constructor(readonly checked: boolean) {\n    super(SwitchChangeEvent.eventName);\n  }\n}\n\nexport class Switch extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #checked = false;\n  #disabled = false;\n  #jslogContext = '';\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [switchStyles];\n    this.#render();\n  }\n\n  set checked(isChecked: boolean) {\n    this.#checked = isChecked;\n    this.#render();\n  }\n\n  get checked(): boolean {\n    return this.#checked;\n  }\n\n  set disabled(isDisabled: boolean) {\n    this.#disabled = isDisabled;\n    this.#render();\n  }\n\n  get disabled(): boolean {\n    return this.#disabled;\n  }\n\n  get jslogContext(): string {\n    return this.#jslogContext;\n  }\n\n  set jslogContext(jslogContext: string) {\n    this.#jslogContext = jslogContext;\n    this.#render();\n  }\n\n  #handleChange = (ev: Event): void => {\n    this.#checked = (ev.target as HTMLInputElement).checked;\n    this.dispatchEvent(new SwitchChangeEvent(this.#checked));\n  };\n\n  #render(): void {\n    const jslog = this.#jslogContext && VisualLogging.toggle(this.#jslogContext).track({change: true});\n    /* eslint-disable rulesdir/inject_checkbox_styles */\n    // clang-format off\n    LitHtml.render(html`\n    <label role=\"button\" jslog=${jslog || LitHtml.nothing}>\n      <input type=\"checkbox\"\n        @change=${this.#handleChange}\n        ?disabled=${this.#disabled}\n        .checked=${this.#checked}\n      >\n      <span class=\"slider\" @click=${(ev: Event) => ev.stopPropagation()}></span>\n    </label>\n    `, this.#shadow, {host: this});\n    // clang-format on\n    /* eslint-enable rulesdir/inject_checkbox_styles */\n  }\n}\n\ncustomElements.define('devtools-switch', Switch);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-switch': Switch;\n  }\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    [SwitchChangeEvent.eventName]: SwitchChangeEvent;\n  }\n}\n"],
  "mappings": ";AAIA,YAAY,aAAa;AACzB,YAAY,mBAAmB;AAE/B,OAAO,kBAAkB;AAEzB,MAAM,EAAC,KAAI,IAAI;AAER,aAAM,0BAA0B,MAAM;AAAA,EAG3C,YAAqB,SAAkB;AACrC,UAAM,kBAAkB,SAAS;AADd;AAAA,EAErB;AAAA,EAJA,OAAgB,YAAY;AAK9B;AAEO,aAAM,eAAe,YAAY;AAAA,EAC7B,UAAU,KAAK,aAAa,EAAC,MAAM,OAAM,CAAC;AAAA,EACnD,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAEhB,oBAA0B;AACxB,SAAK,QAAQ,qBAAqB,CAAC,YAAY;AAC/C,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,IAAI,QAAQ,WAAoB;AAC9B,SAAK,WAAW;AAChB,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,IAAI,UAAmB;AACrB,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,IAAI,SAAS,YAAqB;AAChC,SAAK,YAAY;AACjB,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,IAAI,WAAoB;AACtB,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,IAAI,eAAuB;AACzB,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,IAAI,aAAa,cAAsB;AACrC,SAAK,gBAAgB;AACrB,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,gBAAgB,CAAC,OAAoB;AACnC,SAAK,WAAY,GAAG,OAA4B;AAChD,SAAK,cAAc,IAAI,kBAAkB,KAAK,QAAQ,CAAC;AAAA,EACzD;AAAA,EAEA,UAAgB;AACd,UAAM,QAAQ,KAAK,iBAAiB,cAAc,OAAO,KAAK,aAAa,EAAE,MAAM,EAAC,QAAQ,KAAI,CAAC;AAGjG,YAAQ,OAAO;AAAA,iCACc,SAAS,QAAQ,OAAO;AAAA;AAAA,kBAEvC,KAAK,aAAa;AAAA,oBAChB,KAAK,SAAS;AAAA,mBACf,KAAK,QAAQ;AAAA;AAAA,oCAEI,CAAC,OAAc,GAAG,gBAAgB,CAAC;AAAA;AAAA,OAEhE,KAAK,SAAS,EAAC,MAAM,KAAI,CAAC;AAAA,EAG/B;AACF;AAEA,eAAe,OAAO,mBAAmB,MAAM;",
  "names": []
}
