{
  "version": 3,
  "sources": ["../../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/components/source_frame/SourceFrame.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Host from '../../../../core/host/host.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as Root from '../../../../core/root/root.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as Formatter from '../../../../models/formatter/formatter.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as CodeMirror from '../../../../third_party/codemirror.next/codemirror.next.js';\nimport * as Buttons from '../../../components/buttons/buttons.js';\nimport * as CodeHighlighter from '../../../components/code_highlighter/code_highlighter.js';\nimport * as TextEditor from '../../../components/text_editor/text_editor.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\n\nimport selfXssDialogStyles from './selfXssDialog.css.legacy.js';\n\nconst UIStrings = {\n  /**\n   *@description Text for the source of something\n   */\n  source: 'Source',\n  /**\n   *@description Text to pretty print a file\n   */\n  prettyPrint: 'Pretty print',\n  /**\n   *@description Text when something is loading\n   */\n  loading: 'Loading\u2026',\n  /**\n   * @description Shown at the bottom of the Sources panel when the user has made multiple\n   * simultaneous text selections in the text editor.\n   * @example {2} PH1\n   */\n  dSelectionRegions: '{PH1} selection regions',\n  /**\n   * @description Position indicator in Source Frame of the Sources panel. The placeholder is a\n   * hexadecimal number value, which is why it is prefixed with '0x'.\n   * @example {abc} PH1\n   */\n  bytecodePositionXs: 'Bytecode position `0x`{PH1}',\n  /**\n   *@description Text in Source Frame of the Sources panel\n   *@example {2} PH1\n   *@example {2} PH2\n   */\n  lineSColumnS: 'Line {PH1}, Column {PH2}',\n  /**\n   *@description Text in Source Frame of the Sources panel\n   *@example {2} PH1\n   */\n  dCharactersSelected: '{PH1} characters selected',\n  /**\n   *@description Text in Source Frame of the Sources panel\n   *@example {2} PH1\n   *@example {2} PH2\n   */\n  dLinesDCharactersSelected: '{PH1} lines, {PH2} characters selected',\n  /**\n   *@description Headline of warning shown to users when pasting text/code into DevTools.\n   */\n  doYouTrustThisCode: 'Do you trust this code?',\n  /**\n   *@description Warning shown to users when pasting text/code into DevTools.\n   *@example {allow pasting} PH1\n   */\n  doNotPaste:\n      'Don\\'t paste code you do not understand or have not reviewed yourself into DevTools. This could allow attackers to steal your identity or take control of your computer. Please type \\'\\'{PH1}\\'\\' below to allow pasting.',\n  /**\n   *@description Text a user needs to type in order to confirm that they are aware of the danger of pasting code into the DevTools console.\n   */\n  allowPasting: 'allow pasting',\n  /**\n   *@description Button text for canceling an action\n   */\n  cancel: 'Cancel',\n  /**\n   *@description Button text for allowing an action\n   */\n  allow: 'Allow',\n  /**\n   *@description Input box placeholder which instructs the user to type 'allow pasing' into the input box.\n   *@example {allow pasting} PH1\n   */\n  typeAllowPasting: 'Type \\'\\'{PH1}\\'\\'',\n  /**\n   * @description Error message shown when the user tries to open a file that contains non-readable data. \"Editor\" refers to\n   * a text editor.\n   */\n  binaryContentError:\n      'Editor can\\'t show binary data. Use the \"Response\" tab in the \"Network\" panel to inspect this resource.',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/SourceFrame.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface SourceFrameOptions {\n  // Whether to show line numbers. Defaults to true.\n  lineNumbers?: boolean;\n  // Whether to wrap lines. Defaults to false.\n  lineWrapping?: boolean;\n}\n\nexport const enum Events {\n  EDITOR_UPDATE = 'EditorUpdate',\n  EDITOR_SCROLL = 'EditorScroll',\n}\n\nexport type EventTypes = {\n  [Events.EDITOR_UPDATE]: CodeMirror.ViewUpdate,\n  [Events.EDITOR_SCROLL]: void,\n};\n\ntype FormatFn = (lineNo: number, state: CodeMirror.EditorState) => string;\nexport const LINE_NUMBER_FORMATTER = CodeMirror.Facet.define<FormatFn, FormatFn>({\n  combine(value): FormatFn {\n    if (value.length === 0) {\n      return (lineNo: number) => lineNo.toString();\n    }\n    return value[0];\n  },\n});\n\nexport class SourceFrameImpl extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.View.SimpleView>(\n    UI.View.SimpleView) implements UI.SearchableView.Searchable, UI.SearchableView.Replaceable, Transformer {\n  private readonly lazyContent: () => Promise<TextUtils.ContentData.ContentDataOrError>;\n  private prettyInternal: boolean;\n  private rawContent: string|CodeMirror.Text|null;\n  private formattedMap: Formatter.ScriptFormatter.FormatterSourceMapping|null;\n  private readonly prettyToggle: UI.Toolbar.ToolbarToggle;\n  private shouldAutoPrettyPrint: boolean;\n  private readonly progressToolbarItem: UI.Toolbar.ToolbarItem;\n  private textEditorInternal: TextEditor.TextEditor.TextEditor;\n  // The 'clean' document, before editing\n  private baseDoc: CodeMirror.Text;\n  private prettyBaseDoc: CodeMirror.Text|null = null;\n  private displayedSelection: CodeMirror.EditorSelection|null = null;\n  private searchConfig: UI.SearchableView.SearchConfig|null;\n  private delayedFindSearchMatches: (() => void)|null;\n  private currentSearchResultIndex: number;\n  private searchResults: SearchMatch[];\n  private searchRegex: UI.SearchableView.SearchRegexResult|null;\n  private loadError: boolean;\n  private muteChangeEventsForSetContent: boolean;\n  private readonly sourcePosition: UI.Toolbar.ToolbarText;\n  private searchableView: UI.SearchableView.SearchableView|null;\n  private editable: boolean;\n  private positionToReveal: {\n    from?: {lineNumber: number, columnNumber: number}, to: {lineNumber: number, columnNumber: number},\n    shouldHighlight?: boolean,\n  }|null;\n  private lineToScrollTo: number|null;\n  private selectionToSet: TextUtils.TextRange.TextRange|null;\n  private loadedInternal: boolean;\n  private contentRequested: boolean;\n  private wasmDisassemblyInternal: TextUtils.WasmDisassembly.WasmDisassembly|null;\n  contentSet: boolean;\n  private selfXssWarningDisabledSetting: Common.Settings.Setting<boolean>;\n\n  constructor(\n      lazyContent: () => Promise<TextUtils.ContentData.ContentDataOrError>,\n      private readonly options: SourceFrameOptions = {}) {\n    super(i18nString(UIStrings.source));\n\n    this.lazyContent = lazyContent;\n\n    this.prettyInternal = false;\n    this.rawContent = null;\n    this.formattedMap = null;\n    this.prettyToggle =\n        new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.prettyPrint), 'brackets', undefined, 'pretty-print');\n    this.prettyToggle.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => {\n      void this.setPretty(this.prettyToggle.isToggled());\n    });\n    this.shouldAutoPrettyPrint = false;\n    this.prettyToggle.setVisible(false);\n\n    this.progressToolbarItem = new UI.Toolbar.ToolbarItem(document.createElement('div'));\n\n    this.textEditorInternal = new TextEditor.TextEditor.TextEditor(this.placeholderEditorState(''));\n    this.textEditorInternal.style.flexGrow = '1';\n\n    this.element.appendChild(this.textEditorInternal);\n    this.element.addEventListener('keydown', (event: KeyboardEvent) => {\n      if (event.defaultPrevented) {\n        event.stopPropagation();\n      }\n    });\n\n    this.baseDoc = this.textEditorInternal.state.doc;\n\n    this.searchConfig = null;\n    this.delayedFindSearchMatches = null;\n    this.currentSearchResultIndex = -1;\n    this.searchResults = [];\n    this.searchRegex = null;\n    this.loadError = false;\n\n    this.muteChangeEventsForSetContent = false;\n\n    this.sourcePosition = new UI.Toolbar.ToolbarText();\n\n    this.searchableView = null;\n    this.editable = false;\n\n    this.positionToReveal = null;\n    this.lineToScrollTo = null;\n    this.selectionToSet = null;\n    this.loadedInternal = false;\n    this.contentRequested = false;\n\n    this.wasmDisassemblyInternal = null;\n    this.contentSet = false;\n\n    this.selfXssWarningDisabledSetting = Common.Settings.Settings.instance().createSetting(\n        'disable-self-xss-warning', false, Common.Settings.SettingStorageType.SYNCED);\n    Common.Settings.Settings.instance()\n        .moduleSetting('text-editor-indent')\n        .addChangeListener(this.#textEditorIndentChanged, this);\n  }\n\n  override disposeView(): void {\n    Common.Settings.Settings.instance()\n        .moduleSetting('text-editor-indent')\n        .removeChangeListener(this.#textEditorIndentChanged, this);\n  }\n\n  async #textEditorIndentChanged(): Promise<void> {\n    if (this.prettyInternal) {\n      // Indentation settings changed, which are used for pretty printing as well,\n      // so if the editor is currently pretty printed, just toggle the state here\n      // to apply the new indentation settings.\n      await this.setPretty(false);\n      await this.setPretty(true);\n    }\n  }\n\n  private placeholderEditorState(content: string): CodeMirror.EditorState {\n    return CodeMirror.EditorState.create({\n      doc: content,\n      extensions: [\n        CodeMirror.EditorState.readOnly.of(true),\n        this.options.lineNumbers !== false ? CodeMirror.lineNumbers() : [],\n        TextEditor.Config.theme(),\n      ],\n    });\n  }\n\n  protected editorConfiguration(doc: string|CodeMirror.Text): CodeMirror.Extension {\n    return [\n      CodeMirror.EditorView.updateListener.of(update => this.dispatchEventToListeners(Events.EDITOR_UPDATE, update)),\n      TextEditor.Config.baseConfiguration(doc),\n      TextEditor.Config.closeBrackets.instance(),\n      TextEditor.Config.autocompletion.instance(),\n      TextEditor.Config.showWhitespace.instance(),\n      TextEditor.Config.allowScrollPastEof.instance(),\n      CodeMirror.Prec.lowest(TextEditor.Config.codeFolding.instance()),\n      TextEditor.Config.autoDetectIndent.instance(),\n      sourceFrameTheme,\n      CodeMirror.EditorView.domEventHandlers({\n        focus: () => this.onFocus(),\n        blur: () => this.onBlur(),\n        paste: () => this.onPaste(),\n        scroll: () => this.dispatchEventToListeners(Events.EDITOR_SCROLL),\n        contextmenu: event => this.onContextMenu(event),\n      }),\n      CodeMirror.lineNumbers({\n        domEventHandlers:\n            {contextmenu: (_view, block, event) => this.onLineGutterContextMenu(block.from, event as MouseEvent)},\n      }),\n      CodeMirror.EditorView.updateListener.of(\n          (update):\n              void => {\n                if (update.selectionSet || update.docChanged) {\n                  this.updateSourcePosition();\n                }\n                if (update.docChanged) {\n                  this.onTextChanged();\n                }\n              }),\n      activeSearchState,\n      CodeMirror.Prec.lowest(searchHighlighter),\n      config.language.of([]),\n      this.wasmDisassemblyInternal ? markNonBreakableLines(this.wasmDisassemblyInternal) : nonBreakableLines,\n      this.options.lineWrapping ? CodeMirror.EditorView.lineWrapping : [],\n      this.options.lineNumbers !== false ? CodeMirror.lineNumbers() : [],\n      CodeMirror.indentationMarkers({\n        colors: {\n          light: 'var(--sys-color-divider)',\n          activeLight: 'var(--sys-color-divider-prominent)',\n          dark: 'var(--sys-color-divider)',\n          activeDark: 'var(--sys-color-divider-prominent)',\n        },\n      }),\n    ];\n  }\n\n  protected onBlur(): void {\n  }\n\n  protected onFocus(): void {\n  }\n\n  protected onPaste(): boolean {\n    if (Root.Runtime.Runtime.queryParam('isChromeForTesting') ||\n        Root.Runtime.Runtime.queryParam('disableSelfXssWarnings') || this.selfXssWarningDisabledSetting.get()) {\n      return false;\n    }\n    void this.showSelfXssWarning();\n    return true;\n  }\n\n  async showSelfXssWarning(): Promise<void> {\n    // Hack to circumvent Chrome issue which would show a tooltip for the newly opened\n    // dialog if pasting via keyboard.\n    await new Promise(resolve => setTimeout(resolve, 0));\n\n    const allowPasting = await SelfXssWarningDialog.show();\n    if (allowPasting) {\n      this.selfXssWarningDisabledSetting.set(true);\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.SelfXssAllowPastingInDialog);\n    }\n  }\n\n  get wasmDisassembly(): TextUtils.WasmDisassembly.WasmDisassembly|null {\n    return this.wasmDisassemblyInternal;\n  }\n\n  editorLocationToUILocation(lineNumber: number, columnNumber: number): {\n    lineNumber: number,\n    columnNumber: number,\n  };\n  editorLocationToUILocation(lineNumber: number): {\n    lineNumber: number,\n    columnNumber: number|undefined,\n  };\n  editorLocationToUILocation(lineNumber: number, columnNumber?: number): {\n    lineNumber: number,\n    columnNumber?: number|undefined,\n  } {\n    if (this.wasmDisassemblyInternal) {\n      columnNumber = this.wasmDisassemblyInternal.lineNumberToBytecodeOffset(lineNumber);\n      lineNumber = 0;\n    } else if (this.prettyInternal) {\n      [lineNumber, columnNumber] = this.prettyToRawLocation(lineNumber, columnNumber);\n    }\n    return {lineNumber, columnNumber};\n  }\n\n  uiLocationToEditorLocation(lineNumber: number, columnNumber: number|undefined = 0): {\n    lineNumber: number,\n    columnNumber: number,\n  } {\n    if (this.wasmDisassemblyInternal) {\n      lineNumber = this.wasmDisassemblyInternal.bytecodeOffsetToLineNumber(columnNumber);\n      columnNumber = 0;\n    } else if (this.prettyInternal) {\n      [lineNumber, columnNumber] = this.rawToPrettyLocation(lineNumber, columnNumber);\n    }\n    return {lineNumber, columnNumber};\n  }\n\n  setCanPrettyPrint(canPrettyPrint: boolean, autoPrettyPrint?: boolean): void {\n    this.shouldAutoPrettyPrint = autoPrettyPrint === true &&\n        Common.Settings.Settings.instance().moduleSetting('auto-pretty-print-minified').get();\n    this.prettyToggle.setVisible(canPrettyPrint);\n  }\n\n  setEditable(editable: boolean): void {\n    this.editable = editable;\n    if (this.loaded && editable !== !this.textEditor.state.readOnly) {\n      this.textEditor.dispatch({effects: config.editable.reconfigure(CodeMirror.EditorState.readOnly.of(!editable))});\n    }\n  }\n\n  private async setPretty(value: boolean): Promise<void> {\n    this.prettyInternal = value;\n    this.prettyToggle.setEnabled(false);\n\n    const wasLoaded = this.loaded;\n    const {textEditor} = this;\n    const selection = textEditor.state.selection.main;\n    const startPos = textEditor.toLineColumn(selection.from), endPos = textEditor.toLineColumn(selection.to);\n    let newSelection;\n    if (this.prettyInternal) {\n      const content =\n          this.rawContent instanceof CodeMirror.Text ? this.rawContent.sliceString(0) : this.rawContent || '';\n      const formatInfo = await Formatter.ScriptFormatter.formatScriptContent(this.contentType, content);\n      this.formattedMap = formatInfo.formattedMapping;\n      await this.setContent(formatInfo.formattedContent);\n      this.prettyBaseDoc = textEditor.state.doc;\n      const start = this.rawToPrettyLocation(startPos.lineNumber, startPos.columnNumber);\n      const end = this.rawToPrettyLocation(endPos.lineNumber, endPos.columnNumber);\n      newSelection = textEditor.createSelection(\n          {lineNumber: start[0], columnNumber: start[1]}, {lineNumber: end[0], columnNumber: end[1]});\n    } else {\n      await this.setContent(this.rawContent || '');\n      this.baseDoc = textEditor.state.doc;\n      const start = this.prettyToRawLocation(startPos.lineNumber, startPos.columnNumber);\n      const end = this.prettyToRawLocation(endPos.lineNumber, endPos.columnNumber);\n      newSelection = textEditor.createSelection(\n          {lineNumber: start[0], columnNumber: start[1]}, {lineNumber: end[0], columnNumber: end[1]});\n    }\n    if (wasLoaded) {\n      textEditor.revealPosition(newSelection, false);\n    }\n    this.prettyToggle.setEnabled(true);\n    this.updatePrettyPrintState();\n  }\n\n  // If this is a disassembled WASM file or a pretty-printed file,\n  // wire in a line number formatter that shows binary offsets or line\n  // numbers in the original source.\n  private getLineNumberFormatter(): CodeMirror.Extension {\n    if (this.options.lineNumbers === false) {\n      return [];\n    }\n    let formatNumber = undefined;\n    if (this.wasmDisassemblyInternal) {\n      const disassembly = this.wasmDisassemblyInternal;\n      const lastBytecodeOffset = disassembly.lineNumberToBytecodeOffset(disassembly.lineNumbers - 1);\n      const bytecodeOffsetDigits = lastBytecodeOffset.toString(16).length + 1;\n      formatNumber = (lineNumber: number) => {\n        const bytecodeOffset =\n            disassembly.lineNumberToBytecodeOffset(Math.min(disassembly.lineNumbers, lineNumber) - 1);\n        return `0x${bytecodeOffset.toString(16).padStart(bytecodeOffsetDigits, '0')}`;\n      };\n    } else if (this.prettyInternal) {\n      formatNumber = (lineNumber: number, state: CodeMirror.EditorState) => {\n        // @codemirror/view passes a high number here to estimate the\n        // maximum width to allocate for the line number gutter.\n        if (lineNumber < 2 || lineNumber > state.doc.lines) {\n          return String(lineNumber);\n        }\n        const [currLine] = this.prettyToRawLocation(lineNumber - 1);\n        const [prevLine] = this.prettyToRawLocation(lineNumber - 2);\n        if (currLine !== prevLine) {\n          return String(currLine + 1);\n        }\n        return '-';\n      };\n    }\n    return formatNumber ? [CodeMirror.lineNumbers({formatNumber}), LINE_NUMBER_FORMATTER.of(formatNumber)] : [];\n  }\n\n  private updateLineNumberFormatter(): void {\n    this.textEditor.dispatch({effects: config.lineNumbers.reconfigure(this.getLineNumberFormatter())});\n    this.textEditor.shadowRoot?.querySelector('.cm-lineNumbers')\n        ?.setAttribute('jslog', `${VisualLogging.gutter('line-numbers').track({click: true})}`);\n  }\n\n  private updatePrettyPrintState(): void {\n    this.prettyToggle.setToggled(this.prettyInternal);\n    this.textEditorInternal.classList.toggle('pretty-printed', this.prettyInternal);\n    this.updateLineNumberFormatter();\n  }\n\n  private prettyToRawLocation(line: number, column: number|undefined = 0): number[] {\n    if (!this.formattedMap) {\n      return [line, column];\n    }\n    return this.formattedMap.formattedToOriginal(line, column);\n  }\n\n  private rawToPrettyLocation(line: number, column: number): number[] {\n    if (!this.formattedMap) {\n      return [line, column];\n    }\n    return this.formattedMap.originalToFormatted(line, column);\n  }\n\n  hasLoadError(): boolean {\n    return this.loadError;\n  }\n\n  override wasShown(): void {\n    void this.ensureContentLoaded();\n    this.wasShownOrLoaded();\n  }\n\n  override willHide(): void {\n    super.willHide();\n\n    this.clearPositionToReveal();\n  }\n\n  override async toolbarItems(): Promise<UI.Toolbar.ToolbarItem[]> {\n    return [this.prettyToggle, this.sourcePosition, this.progressToolbarItem];\n  }\n\n  get loaded(): boolean {\n    return this.loadedInternal;\n  }\n\n  get textEditor(): TextEditor.TextEditor.TextEditor {\n    return this.textEditorInternal;\n  }\n\n  get pretty(): boolean {\n    return this.prettyInternal;\n  }\n\n  get contentType(): string {\n    return this.loadError ? '' : this.getContentType();\n  }\n\n  protected getContentType(): string {\n    return '';\n  }\n\n  private async ensureContentLoaded(): Promise<void> {\n    if (!this.contentRequested) {\n      this.contentRequested = true;\n      await this.setContentDataOrError(this.lazyContent());\n\n      this.contentSet = true;\n    }\n  }\n\n  protected async setContentDataOrError(contentDataPromise: Promise<TextUtils.ContentData.ContentDataOrError>):\n      Promise<void> {\n    const progressIndicator = new UI.ProgressIndicator.ProgressIndicator();\n    progressIndicator.setTitle(i18nString(UIStrings.loading));\n    progressIndicator.setTotalWork(100);\n    this.progressToolbarItem.element.appendChild(progressIndicator.element);\n\n    progressIndicator.setWorked(1);\n    const contentData = await contentDataPromise;\n\n    let error: string|undefined;\n    let content: CodeMirror.Text|string|null;\n    let isMinified = false;\n    if (TextUtils.ContentData.ContentData.isError(contentData)) {\n      error = contentData.error;\n      content = contentData.error;\n    } else if (contentData instanceof TextUtils.WasmDisassembly.WasmDisassembly) {\n      content = CodeMirror.Text.of(contentData.lines);\n      this.wasmDisassemblyInternal = contentData;\n    } else if (contentData.isTextContent) {\n      content = contentData.text;\n      isMinified = TextUtils.TextUtils.isMinified(contentData.text);\n      this.wasmDisassemblyInternal = null;\n    } else if (contentData.mimeType === 'application/wasm') {\n      // The network panel produces ContentData with raw WASM inside. We have to manually disassemble that\n      // as V8 might not know about it.\n      this.wasmDisassemblyInternal = await SDK.Script.disassembleWasm(contentData.base64);\n      content = CodeMirror.Text.of(this.wasmDisassemblyInternal.lines);\n    } else {\n      error = i18nString(UIStrings.binaryContentError);\n      content = null;\n      this.wasmDisassemblyInternal = null;\n    }\n\n    progressIndicator.setWorked(100);\n    progressIndicator.done();\n\n    if (this.rawContent === content && error === undefined) {\n      return;\n    }\n    this.rawContent = content;\n\n    this.formattedMap = null;\n    this.prettyToggle.setEnabled(true);\n\n    if (error) {\n      this.loadError = true;\n      this.textEditor.state = this.placeholderEditorState(error);\n      this.prettyToggle.setEnabled(false);\n    } else if (this.shouldAutoPrettyPrint && isMinified) {\n      await this.setPretty(true);\n    } else {\n      await this.setContent(this.rawContent || '');\n    }\n  }\n\n  revealPosition(position: RevealPosition, shouldHighlight?: boolean): void {\n    this.lineToScrollTo = null;\n    this.selectionToSet = null;\n    if (typeof position === 'number') {\n      let line = 0, column = 0;\n      const {doc} = this.textEditor.state;\n      if (position > doc.length) {\n        line = doc.lines - 1;\n      } else if (position >= 0) {\n        const lineObj = doc.lineAt(position);\n        line = lineObj.number - 1;\n        column = position - lineObj.from;\n      }\n      this.positionToReveal = {to: {lineNumber: line, columnNumber: column}, shouldHighlight};\n    } else if ('lineNumber' in position) {\n      const {lineNumber, columnNumber} = position;\n      this.positionToReveal = {to: {lineNumber, columnNumber: columnNumber ?? 0}, shouldHighlight};\n    } else {\n      this.positionToReveal = {...position, shouldHighlight};\n    }\n    this.innerRevealPositionIfNeeded();\n  }\n\n  private innerRevealPositionIfNeeded(): void {\n    if (!this.positionToReveal) {\n      return;\n    }\n\n    if (!this.loaded || !this.isShowing()) {\n      return;\n    }\n\n    const {from, to, shouldHighlight} = this.positionToReveal;\n    const toLocation = this.uiLocationToEditorLocation(to.lineNumber, to.columnNumber);\n    const fromLocation = from ? this.uiLocationToEditorLocation(from.lineNumber, from.columnNumber) : undefined;\n\n    const {textEditor} = this;\n    textEditor.revealPosition(textEditor.createSelection(toLocation, fromLocation), shouldHighlight);\n    this.positionToReveal = null;\n  }\n\n  private clearPositionToReveal(): void {\n    this.positionToReveal = null;\n  }\n\n  scrollToLine(line: number): void {\n    this.clearPositionToReveal();\n    this.lineToScrollTo = line;\n    this.innerScrollToLineIfNeeded();\n  }\n\n  private innerScrollToLineIfNeeded(): void {\n    if (this.lineToScrollTo !== null) {\n      if (this.loaded && this.isShowing()) {\n        const {textEditor} = this;\n        const position = textEditor.toOffset({lineNumber: this.lineToScrollTo, columnNumber: 0});\n        textEditor.dispatch({effects: CodeMirror.EditorView.scrollIntoView(position, {y: 'start', yMargin: 0})});\n        this.lineToScrollTo = null;\n      }\n    }\n  }\n\n  setSelection(textRange: TextUtils.TextRange.TextRange): void {\n    this.selectionToSet = textRange;\n    this.innerSetSelectionIfNeeded();\n  }\n\n  private innerSetSelectionIfNeeded(): void {\n    const sel = this.selectionToSet;\n    if (sel && this.loaded && this.isShowing()) {\n      const {textEditor} = this;\n      textEditor.dispatch({\n        selection: textEditor.createSelection(\n            {lineNumber: sel.startLine, columnNumber: sel.startColumn},\n            {lineNumber: sel.endLine, columnNumber: sel.endColumn}),\n      });\n      this.selectionToSet = null;\n    }\n  }\n\n  private wasShownOrLoaded(): void {\n    this.innerRevealPositionIfNeeded();\n    this.innerSetSelectionIfNeeded();\n    this.innerScrollToLineIfNeeded();\n    this.textEditor.shadowRoot?.querySelector('.cm-lineNumbers')\n        ?.setAttribute('jslog', `${VisualLogging.gutter('line-numbers').track({click: true})}`);\n    this.textEditor.shadowRoot?.querySelector('.cm-foldGutter')\n        ?.setAttribute('jslog', `${VisualLogging.gutter('fold')}`);\n    this.textEditor.setAttribute('jslog', `${VisualLogging.textField().track({change: true})}`);\n  }\n\n  onTextChanged(): void {\n    const wasPretty = this.pretty;\n    this.prettyInternal = Boolean(this.prettyBaseDoc && this.textEditor.state.doc.eq(this.prettyBaseDoc));\n    if (this.prettyInternal !== wasPretty) {\n      this.updatePrettyPrintState();\n    }\n    this.prettyToggle.setEnabled(this.isClean());\n\n    if (this.searchConfig && this.searchableView) {\n      this.performSearch(this.searchConfig, false, false);\n    }\n  }\n\n  isClean(): boolean {\n    return this.textEditor.state.doc.eq(this.baseDoc) ||\n        (this.prettyBaseDoc !== null && this.textEditor.state.doc.eq(this.prettyBaseDoc));\n  }\n\n  contentCommitted(): void {\n    this.baseDoc = this.textEditorInternal.state.doc;\n    this.prettyBaseDoc = null;\n    this.rawContent = this.textEditor.state.doc.toString();\n    this.formattedMap = null;\n    if (this.prettyInternal) {\n      this.prettyInternal = false;\n      this.updatePrettyPrintState();\n    }\n    this.prettyToggle.setEnabled(true);\n  }\n\n  protected async getLanguageSupport(content: string|CodeMirror.Text): Promise<CodeMirror.Extension> {\n    // This is a pretty horrible work-around for webpack-based Vue2 setups. See\n    // https://crbug.com/1416562 for the full story behind this.\n    let {contentType} = this;\n    if (contentType === 'text/x.vue') {\n      content = typeof content === 'string' ? content : content.sliceString(0);\n      if (!content.trimStart().startsWith('<')) {\n        contentType = 'text/javascript';\n      }\n    }\n    const languageDesc = await CodeHighlighter.CodeHighlighter.languageFromMIME(contentType);\n    if (!languageDesc) {\n      return [];\n    }\n    return [\n      languageDesc,\n      CodeMirror.javascript.javascriptLanguage.data.of({autocomplete: CodeMirror.completeAnyWord}),\n    ];\n  }\n\n  async updateLanguageMode(content: string): Promise<void> {\n    const langExtension = await this.getLanguageSupport(content);\n    this.textEditor.dispatch({effects: config.language.reconfigure(langExtension)});\n  }\n\n  async setContent(content: string|CodeMirror.Text): Promise<void> {\n    this.muteChangeEventsForSetContent = true;\n    const {textEditor} = this;\n    const wasLoaded = this.loadedInternal;\n    const scrollTop = textEditor.editor.scrollDOM.scrollTop;\n    this.loadedInternal = true;\n\n    const languageSupport = await this.getLanguageSupport(content);\n    const editorState = CodeMirror.EditorState.create({\n      doc: content,\n      extensions: [\n        this.editorConfiguration(content),\n        languageSupport,\n        config.lineNumbers.of(this.getLineNumberFormatter()),\n        config.editable.of(this.editable ? [] : CodeMirror.EditorState.readOnly.of(true)),\n      ],\n    });\n    this.baseDoc = editorState.doc;\n    textEditor.state = editorState;\n    if (wasLoaded) {\n      textEditor.editor.scrollDOM.scrollTop = scrollTop;\n    }\n    this.wasShownOrLoaded();\n\n    if (this.delayedFindSearchMatches) {\n      this.delayedFindSearchMatches();\n      this.delayedFindSearchMatches = null;\n    }\n    this.muteChangeEventsForSetContent = false;\n  }\n\n  setSearchableView(view: UI.SearchableView.SearchableView|null): void {\n    this.searchableView = view;\n  }\n\n  private doFindSearchMatches(\n      searchConfig: UI.SearchableView.SearchConfig, shouldJump: boolean, jumpBackwards: boolean): void {\n    this.currentSearchResultIndex = -1;\n\n    this.searchRegex = searchConfig.toSearchRegex(true);\n    this.searchResults = this.collectRegexMatches(this.searchRegex);\n\n    if (this.searchableView) {\n      this.searchableView.updateSearchMatchesCount(this.searchResults.length);\n    }\n\n    const editor = this.textEditor;\n    if (!this.searchResults.length) {\n      if (editor.state.field(activeSearchState)) {\n        editor.dispatch({effects: setActiveSearch.of(null)});\n      }\n    } else if (shouldJump && jumpBackwards) {\n      this.jumpToPreviousSearchResult();\n    } else if (shouldJump) {\n      this.jumpToNextSearchResult();\n    } else {\n      editor.dispatch({effects: setActiveSearch.of(new ActiveSearch(this.searchRegex, null))});\n    }\n  }\n\n  performSearch(searchConfig: UI.SearchableView.SearchConfig, shouldJump: boolean, jumpBackwards?: boolean): void {\n    if (this.searchableView) {\n      this.searchableView.updateSearchMatchesCount(0);\n    }\n\n    this.resetSearch();\n    this.searchConfig = searchConfig;\n    if (this.loaded) {\n      this.doFindSearchMatches(searchConfig, shouldJump, Boolean(jumpBackwards));\n    } else {\n      this.delayedFindSearchMatches =\n          this.doFindSearchMatches.bind(this, searchConfig, shouldJump, Boolean(jumpBackwards));\n    }\n\n    void this.ensureContentLoaded();\n  }\n\n  private resetCurrentSearchResultIndex(): void {\n    if (!this.searchResults.length) {\n      return;\n    }\n    this.currentSearchResultIndex = -1;\n    if (this.searchableView) {\n      this.searchableView.updateCurrentMatchIndex(this.currentSearchResultIndex);\n    }\n    const editor = this.textEditor;\n    const currentActiveSearch = editor.state.field(activeSearchState);\n    if (currentActiveSearch && currentActiveSearch.currentRange) {\n      editor.dispatch({effects: setActiveSearch.of(new ActiveSearch(currentActiveSearch.regexp, null))});\n    }\n  }\n\n  private resetSearch(): void {\n    this.searchConfig = null;\n    this.delayedFindSearchMatches = null;\n    this.currentSearchResultIndex = -1;\n    this.searchResults = [];\n    this.searchRegex = null;\n  }\n\n  onSearchCanceled(): void {\n    const range = this.currentSearchResultIndex !== -1 ? this.searchResults[this.currentSearchResultIndex] : null;\n    this.resetSearch();\n    if (!this.loaded) {\n      return;\n    }\n    const editor = this.textEditor;\n    editor.dispatch({\n      effects: setActiveSearch.of(null),\n      selection: range ? {anchor: range.from, head: range.to} : undefined,\n      scrollIntoView: true,\n      userEvent: 'select.search.cancel',\n    });\n  }\n\n  jumpToLastSearchResult(): void {\n    this.jumpToSearchResult(this.searchResults.length - 1);\n  }\n\n  private searchResultIndexForCurrentSelection(): number {\n    return Platform.ArrayUtilities.lowerBound(\n        this.searchResults, this.textEditor.state.selection.main, (a, b) => a.to - b.to);\n  }\n\n  jumpToNextSearchResult(): void {\n    const currentIndex = this.searchResultIndexForCurrentSelection();\n    const nextIndex = this.currentSearchResultIndex === -1 ? currentIndex : currentIndex + 1;\n    this.jumpToSearchResult(nextIndex);\n  }\n\n  jumpToPreviousSearchResult(): void {\n    const currentIndex = this.searchResultIndexForCurrentSelection();\n    this.jumpToSearchResult(currentIndex - 1);\n  }\n\n  supportsCaseSensitiveSearch(): boolean {\n    return true;\n  }\n\n  supportsRegexSearch(): boolean {\n    return true;\n  }\n\n  jumpToSearchResult(index: number): void {\n    if (!this.loaded || !this.searchResults.length || !this.searchRegex) {\n      return;\n    }\n    this.currentSearchResultIndex = (index + this.searchResults.length) % this.searchResults.length;\n    if (this.searchableView) {\n      this.searchableView.updateCurrentMatchIndex(this.currentSearchResultIndex);\n    }\n    const editor = this.textEditor;\n    const range = this.searchResults[this.currentSearchResultIndex];\n    editor.dispatch({\n      effects: setActiveSearch.of(new ActiveSearch(this.searchRegex, range)),\n      selection: {anchor: range.from, head: range.to},\n      scrollIntoView: true,\n      userEvent: 'select.search',\n    });\n  }\n\n  replaceSelectionWith(searchConfig: UI.SearchableView.SearchConfig, replacement: string): void {\n    const range = this.searchResults[this.currentSearchResultIndex];\n    if (!range) {\n      return;\n    }\n\n    const insert = this.searchRegex?.fromQuery ? range.insertPlaceholders(replacement) : replacement;\n    const editor = this.textEditor;\n    const changes = editor.state.changes({from: range.from, to: range.to, insert});\n    editor.dispatch(\n        {changes, selection: {anchor: changes.mapPos(editor.state.selection.main.to, 1)}, userEvent: 'input.replace'});\n  }\n\n  replaceAllWith(searchConfig: UI.SearchableView.SearchConfig, replacement: string): void {\n    this.resetCurrentSearchResultIndex();\n\n    const regex = searchConfig.toSearchRegex(true);\n    const ranges = this.collectRegexMatches(regex);\n    if (!ranges.length) {\n      return;\n    }\n\n    const isRegExp = regex.fromQuery;\n    const changes = ranges.map(\n        match =>\n            ({from: match.from, to: match.to, insert: isRegExp ? match.insertPlaceholders(replacement) : replacement}));\n\n    this.textEditor.dispatch({changes, scrollIntoView: true, userEvent: 'input.replace.all'});\n  }\n\n  private collectRegexMatches({regex}: UI.SearchableView.SearchRegexResult): SearchMatch[] {\n    const ranges = [];\n    let pos = 0;\n    for (const line of this.textEditor.state.doc.iterLines()) {\n      regex.lastIndex = 0;\n      for (;;) {\n        const match = regex.exec(line);\n        if (!match) {\n          break;\n        }\n        if (match[0].length) {\n          const from = pos + match.index;\n          ranges.push(new SearchMatch(from, from + match[0].length, match));\n        } else {\n          regex.lastIndex = match.index + 1;\n        }\n      }\n      pos += line.length + 1;\n    }\n    return ranges;\n  }\n\n  canEditSource(): boolean {\n    return this.editable;\n  }\n\n  private updateSourcePosition(): void {\n    const {textEditor} = this, {state} = textEditor, {selection} = state;\n    if (this.displayedSelection?.eq(selection)) {\n      return;\n    }\n    this.displayedSelection = selection;\n\n    if (selection.ranges.length > 1) {\n      this.sourcePosition.setText(i18nString(UIStrings.dSelectionRegions, {PH1: selection.ranges.length}));\n      return;\n    }\n    const {main} = state.selection;\n    if (main.empty) {\n      const {lineNumber, columnNumber} = textEditor.toLineColumn(main.head);\n      const location = this.prettyToRawLocation(lineNumber, columnNumber);\n      if (this.wasmDisassemblyInternal) {\n        const disassembly = this.wasmDisassemblyInternal;\n        const lastBytecodeOffset = disassembly.lineNumberToBytecodeOffset(disassembly.lineNumbers - 1);\n        const bytecodeOffsetDigits = lastBytecodeOffset.toString(16).length;\n        const bytecodeOffset = disassembly.lineNumberToBytecodeOffset(location[0]);\n        this.sourcePosition.setText(i18nString(\n            UIStrings.bytecodePositionXs, {PH1: bytecodeOffset.toString(16).padStart(bytecodeOffsetDigits, '0')}));\n      } else {\n        this.sourcePosition.setText(i18nString(UIStrings.lineSColumnS, {PH1: location[0] + 1, PH2: location[1] + 1}));\n      }\n    } else {\n      const startLine = state.doc.lineAt(main.from), endLine = state.doc.lineAt(main.to);\n      if (startLine.number === endLine.number) {\n        this.sourcePosition.setText(i18nString(UIStrings.dCharactersSelected, {PH1: main.to - main.from}));\n      } else {\n        this.sourcePosition.setText(i18nString(\n            UIStrings.dLinesDCharactersSelected,\n            {PH1: endLine.number - startLine.number + 1, PH2: main.to - main.from}));\n      }\n    }\n  }\n\n  onContextMenu(event: MouseEvent): boolean {\n    event.consume(true);  // Consume event now to prevent document from handling the async menu\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const {state} = this.textEditor;\n    const pos = state.selection.main.from, line = state.doc.lineAt(pos);\n    this.populateTextAreaContextMenu(contextMenu, line.number - 1, pos - line.from);\n    contextMenu.appendApplicableItems(this);\n    void contextMenu.show();\n    return true;\n  }\n\n  protected populateTextAreaContextMenu(_menu: UI.ContextMenu.ContextMenu, _lineNumber: number, _columnNumber: number):\n      void {\n  }\n\n  onLineGutterContextMenu(position: number, event: MouseEvent): boolean {\n    event.consume(true);  // Consume event now to prevent document from handling the async menu\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const lineNumber = this.textEditor.state.doc.lineAt(position).number - 1;\n    this.populateLineGutterContextMenu(contextMenu, lineNumber);\n    contextMenu.appendApplicableItems(this);\n    void contextMenu.show();\n    return true;\n  }\n\n  protected populateLineGutterContextMenu(_menu: UI.ContextMenu.ContextMenu, _lineNumber: number): void {\n  }\n\n  override focus(): void {\n    this.textEditor.focus();\n  }\n}\n\nclass SearchMatch {\n  constructor(readonly from: number, readonly to: number, readonly match: RegExpMatchArray) {\n  }\n\n  insertPlaceholders(replacement: string): string {\n    return replacement.replace(/\\$(\\$|&|\\d+|<[^>]+>)/g, (_, selector) => {\n      if (selector === '$') {\n        return '$';\n      }\n      if (selector === '&') {\n        return this.match[0];\n      }\n      if (selector[0] === '<') {\n        return (this.match.groups && this.match.groups[selector.slice(1, selector.length - 1)]) || '';\n      }\n      return this.match[Number.parseInt(selector, 10)] || '';\n    });\n  }\n}\n\nexport class SelfXssWarningDialog {\n  static async show(): Promise<boolean> {\n    const dialog = new UI.Dialog.Dialog('self-xss-warning');\n    dialog.setMaxContentSize(new UI.Geometry.Size(504, 340));\n    dialog.setSizeBehavior(UI.GlassPane.SizeBehavior.SET_EXACT_WIDTH_MAX_HEIGHT);\n    dialog.setDimmed(true);\n    const shadowRoot = UI.UIUtils.createShadowRootWithCoreStyles(\n        dialog.contentElement, {cssFile: selfXssDialogStyles, delegatesFocus: undefined});\n    const content = shadowRoot.createChild('div', 'widget');\n\n    const result = await new Promise<boolean>(resolve => {\n      const closeButton =\n          content.createChild('div', 'dialog-close-button', 'dt-close-button') as UI.UIUtils.DevToolsCloseButton;\n      closeButton.setTabbable(true);\n      self.onInvokeElement(closeButton, event => {\n        dialog.hide();\n        event.consume(true);\n        resolve(false);\n      });\n\n      content.createChild('div', 'title').textContent = i18nString(UIStrings.doYouTrustThisCode);\n      content.createChild('div', 'message').textContent =\n          i18nString(UIStrings.doNotPaste, {PH1: i18nString(UIStrings.allowPasting)});\n\n      const input = UI.UIUtils.createInput('text-input', 'text', 'allow-pasting');\n      input.placeholder = i18nString(UIStrings.typeAllowPasting, {PH1: i18nString(UIStrings.allowPasting)});\n      content.appendChild(input);\n\n      const buttonsBar = content.createChild('div', 'button');\n      const cancelButton =\n          UI.UIUtils.createTextButton(i18nString(UIStrings.cancel), () => resolve(false), {jslogContext: 'cancel'});\n      buttonsBar.appendChild(cancelButton);\n      const allowButton = UI.UIUtils.createTextButton(i18nString(UIStrings.allow), () => {\n        resolve(input.value === i18nString(UIStrings.allowPasting));\n      }, {jslogContext: 'confirm', variant: Buttons.Button.Variant.PRIMARY});\n      allowButton.disabled = true;\n      buttonsBar.appendChild(allowButton);\n\n      input.addEventListener('input', () => {\n        allowButton.disabled = !Boolean(input.value);\n      }, false);\n      input.addEventListener('paste', e => e.preventDefault());\n      input.addEventListener('drop', e => e.preventDefault());\n\n      dialog.setOutsideClickCallback(event => {\n        event.consume();\n        resolve(false);\n      });\n      dialog.show();\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.SelfXssWarningDialogShown);\n    });\n    dialog.hide();\n    return result;\n  }\n}\n\nexport interface Transformer {\n  editorLocationToUILocation(lineNumber: number, columnNumber: number): {\n    lineNumber: number,\n    columnNumber: number,\n  };\n  editorLocationToUILocation(lineNumber: number): {\n    lineNumber: number,\n    columnNumber: number|undefined,\n  };\n\n  uiLocationToEditorLocation(lineNumber: number, columnNumber?: number): {\n    lineNumber: number,\n    columnNumber: number,\n  };\n}\n\nexport const enum DecoratorType {\n  PERFORMANCE = 'performance',\n  MEMORY = 'memory',\n  COVERAGE = 'coverage',\n}\n\nconst config = {\n  editable: new CodeMirror.Compartment(),\n  language: new CodeMirror.Compartment(),\n  lineNumbers: new CodeMirror.Compartment(),\n};\n\nclass ActiveSearch {\n  constructor(\n      readonly regexp: UI.SearchableView.SearchRegexResult, readonly currentRange: {from: number, to: number}|null) {\n  }\n\n  map(change: CodeMirror.ChangeDesc): ActiveSearch {\n    return change.empty || !this.currentRange ?\n        this :\n        new ActiveSearch(\n            this.regexp, {from: change.mapPos(this.currentRange.from), to: change.mapPos(this.currentRange.to)});\n  }\n\n  static eq(a: ActiveSearch|null, b: ActiveSearch|null): boolean {\n    return Boolean(\n        a === b ||\n        a && b && a.currentRange?.from === b.currentRange?.from && a.currentRange?.to === b.currentRange?.to &&\n            a.regexp.regex.source === b.regexp.regex.source && a.regexp.regex.flags === b.regexp.regex.flags);\n  }\n}\n\nconst setActiveSearch =\n    CodeMirror.StateEffect.define<ActiveSearch|null>({map: (value, mapping) => value && value.map(mapping)});\n\nconst activeSearchState = CodeMirror.StateField.define<ActiveSearch|null>({\n  create(): null {\n    return null;\n  },\n  update(state, tr): ActiveSearch |\n      null {\n        return tr.effects.reduce(\n            (state, effect) => effect.is(setActiveSearch) ? effect.value : state, state && state.map(tr.changes));\n      },\n});\n\nconst searchMatchDeco = CodeMirror.Decoration.mark({class: 'cm-searchMatch'});\nconst currentSearchMatchDeco = CodeMirror.Decoration.mark({class: 'cm-searchMatch cm-searchMatch-selected'});\n\nconst searchHighlighter = CodeMirror.ViewPlugin.fromClass(class {\ndecorations:\n  CodeMirror.DecorationSet;\n\n  constructor(view: CodeMirror.EditorView) {\n    this.decorations = this.computeDecorations(view);\n  }\n\n  update(update: CodeMirror.ViewUpdate): void {\n    const active = update.state.field(activeSearchState);\n    if (!ActiveSearch.eq(active, update.startState.field(activeSearchState)) ||\n        (active && (update.viewportChanged || update.docChanged))) {\n      this.decorations = this.computeDecorations(update.view);\n    }\n  }\n\n  private computeDecorations(view: CodeMirror.EditorView): CodeMirror.DecorationSet {\n    const active = view.state.field(activeSearchState);\n    if (!active) {\n      return CodeMirror.Decoration.none;\n    }\n\n    const builder = new CodeMirror.RangeSetBuilder<CodeMirror.Decoration>();\n    const {doc} = view.state;\n    for (const {from, to} of view.visibleRanges) {\n      let pos = from;\n      for (const part of doc.iterRange(from, to)) {\n        if (part !== '\\n') {\n          active.regexp.regex.lastIndex = 0;\n          for (;;) {\n            const match = active.regexp.regex.exec(part);\n            if (!match) {\n              break;\n            }\n            if (match[0].length) {\n              const start = pos + match.index, end = start + match[0].length;\n              const current =\n                  active.currentRange && active.currentRange.from === start && active.currentRange.to === end;\n              builder.add(start, end, current ? currentSearchMatchDeco : searchMatchDeco);\n            } else {\n              active.regexp.regex.lastIndex = match.index + 1;\n            }\n          }\n        }\n        pos += part.length;\n      }\n    }\n    return builder.finish();\n  }\n}, {decorations: value => value.decorations});\n\nconst nonBreakableLineMark = new (class extends CodeMirror.GutterMarker {\n  override elementClass = 'cm-nonBreakableLine';\n})();\n\n// Effect to add lines (by position) to the set of non-breakable lines.\nexport const addNonBreakableLines = CodeMirror.StateEffect.define<readonly number[]>();\n\nconst nonBreakableLines = CodeMirror.StateField.define<CodeMirror.RangeSet<CodeMirror.GutterMarker>>({\n  create(): CodeMirror.RangeSet<CodeMirror.GutterMarker> {\n    return CodeMirror.RangeSet.empty;\n  },\n  update(deco, tr): CodeMirror.RangeSet<CodeMirror.GutterMarker> {\n    return tr.effects.reduce((deco, effect) => {\n      return !effect.is(addNonBreakableLines) ?\n          deco :\n          deco.update({add: effect.value.map(pos => nonBreakableLineMark.range(pos))});\n    }, deco.map(tr.changes));\n  },\n  provide: field => CodeMirror.lineNumberMarkers.from(field),\n});\n\nexport function isBreakableLine(state: CodeMirror.EditorState, line: CodeMirror.Line): boolean {\n  const nonBreakable = state.field(nonBreakableLines);\n  if (!nonBreakable.size) {\n    return true;\n  }\n  let found = false;\n  nonBreakable.between(line.from, line.from, () => {\n    found = true;\n  });\n  return !found;\n}\n\nfunction markNonBreakableLines(disassembly: TextUtils.WasmDisassembly.WasmDisassembly): CodeMirror.Extension {\n  // Mark non-breakable lines in the Wasm disassembly after setting\n  // up the content for the text editor (which creates the gutter).\n  return nonBreakableLines.init(state => {\n    const marks = [];\n    for (const lineNumber of disassembly.nonBreakableLineNumbers()) {\n      if (lineNumber < state.doc.lines) {\n        marks.push(nonBreakableLineMark.range(state.doc.line(lineNumber + 1).from));\n      }\n    }\n    return CodeMirror.RangeSet.of(marks);\n  });\n}\n\nconst sourceFrameTheme = CodeMirror.EditorView.theme({\n  '&.cm-editor': {height: '100%'},\n  '.cm-scroller': {overflow: 'auto'},\n  '.cm-lineNumbers .cm-gutterElement.cm-nonBreakableLine': {color: 'var(--sys-color-state-disabled) !important'},\n  '.cm-searchMatch': {\n    border: '1px solid var(--sys-color-outline)',\n    borderRadius: '3px',\n    margin: '0 -1px',\n    '&.cm-searchMatch-selected': {\n      borderRadius: '1px',\n      backgroundColor: 'var(--sys-color-yellow-container)',\n      borderColor: 'var(--sys-color-yellow-outline)',\n      '&, & *': {\n        color: 'var(--sys-color-on-surface) !important',\n      },\n    },\n  },\n  ':host-context(.pretty-printed) & .cm-lineNumbers .cm-gutterElement': {\n    color: 'var(--sys-color-primary)',\n  },\n});\n\n/**\n * Reveal position can either be a single point or a range.\n *\n * A single point can either be specified as a line/column combo or as an absolute\n * editor offset.\n */\nexport type RevealPosition = number|{lineNumber: number, columnNumber?: number}|\n    {from: {lineNumber: number, columnNumber: number}, to: {lineNumber: number, columnNumber: number}};\n"],
  "mappings": "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",
  "names": ["Events", "DecoratorType", "state", "deco"]
}
