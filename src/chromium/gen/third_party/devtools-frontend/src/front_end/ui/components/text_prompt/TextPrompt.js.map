{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/components/text_prompt/TextPrompt.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\n\nimport textPromptStyles from './textPrompt.css.js';\n\nconst {html} = LitHtml;\n\nexport interface TextPromptData {\n  ariaLabel: string;\n  prefix: string;\n  suggestion: string;\n}\n\nexport class PromptInputEvent extends Event {\n  static readonly eventName = 'promptinputchanged';\n  data: string;\n\n  constructor(value: string) {\n    super(PromptInputEvent.eventName);\n    this.data = value;\n  }\n}\n\nexport class TextPrompt extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #ariaLabelText = '';\n  #prefixText = '';\n  #suggestionText = '';\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [textPromptStyles];\n  }\n\n  set data(data: TextPromptData) {\n    this.#ariaLabelText = data.ariaLabel;\n    this.#prefixText = data.prefix;\n    this.#suggestionText = data.suggestion;\n    this.#render();\n  }\n\n  get data(): TextPromptData {\n    return {\n      ariaLabel: this.#ariaLabelText,\n      prefix: this.#prefixText,\n      suggestion: this.#suggestionText,\n    };\n  }\n\n  override focus(): void {\n    this.#input().focus();\n  }\n\n  #input(): HTMLInputElement {\n    const inputElement = this.#shadow.querySelector<HTMLInputElement>('.input');\n    if (!inputElement) {\n      throw new Error('Expected an input element!');\n    }\n    return inputElement;\n  }\n\n  moveCaretToEndOfInput(): void {\n    this.setSelectedRange(this.#text().length, this.#text().length);\n  }\n\n  onInput(): void {\n    this.#suggestion().value = this.#text();\n    this.dispatchEvent(new PromptInputEvent(this.#text()));\n  }\n\n  onKeyDown(event: KeyboardEvent): void {\n    if (event.key === Platform.KeyboardUtilities.ENTER_KEY) {\n      event.preventDefault();\n    }\n  }\n\n  setSelectedRange(startIndex: number, endIndex: number): void {\n    if (startIndex < 0) {\n      throw new RangeError('Selected range start must be a nonnegative integer');\n    }\n    const textContentLength = this.#text().length;\n    if (endIndex > textContentLength) {\n      endIndex = textContentLength;\n    }\n    if (endIndex < startIndex) {\n      endIndex = startIndex;\n    }\n    this.#input().setSelectionRange(startIndex, endIndex);\n  }\n\n  setPrefix(prefix: string): void {\n    this.#prefixText = prefix;\n    this.#render();\n  }\n\n  setSuggestion(suggestion: string): void {\n    this.#suggestionText = suggestion;\n    this.#suggestion().value += this.#suggestionText;\n    this.#render();\n  }\n\n  setText(text: string): void {\n    this.#input().value = text;\n    this.#suggestion().value = this.#text();\n\n    if (this.#input().hasFocus()) {\n      this.moveCaretToEndOfInput();\n      this.#input().scrollIntoView();\n    }\n  }\n\n  #suggestion(): HTMLInputElement {\n    const suggestionElement = this.#shadow.querySelector<HTMLInputElement>('.suggestion');\n    if (!suggestionElement) {\n      throw new Error('Expected an suggestion element!');\n    }\n    return suggestionElement;\n  }\n\n  #text(): string {\n    return this.#input().value || '';\n  }\n\n  #render(): void {\n    const output = html`\n      <span class=\"prefix\">${this.#prefixText} </span>\n      <span class=\"text-prompt-input\"><input class=\"input\" aria-label=${\n        this.#ariaLabelText} spellcheck=\"false\" @input=${this.onInput} @keydown=${\n        this.onKeyDown}/><input class=\"suggestion\" aria-label=${this.#ariaLabelText + ' Suggestion'}></span>`;\n    LitHtml.render(output, this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-text-prompt', TextPrompt);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-text-prompt': TextPrompt;\n  }\n\n  interface HTMLElementEventMap {\n    'promptinputchanged': PromptInputEvent;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
