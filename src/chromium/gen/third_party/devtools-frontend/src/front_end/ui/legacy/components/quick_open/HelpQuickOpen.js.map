{
  "version": 3,
  "sources": ["../../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/components/quick_open/HelpQuickOpen.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as IconButton from '../../../components/icon_button/icon_button.js';\nimport * as UI from '../../legacy.js';\n\nimport {getRegisteredProviders, Provider, registerProvider, type ProviderRegistration} from './FilteredListWidget.js';\nimport {QuickOpenImpl} from './QuickOpen.js';\n\nexport class HelpQuickOpen extends Provider {\n  private providers: {\n    prefix: string,\n    iconName: string,\n    iconWidth: string,\n    title: string,\n    jslogContext: string,\n  }[];\n\n  constructor(jslogContext: string) {\n    super(jslogContext);\n    this.providers = [];\n    getRegisteredProviders().forEach(this.addProvider.bind(this));\n  }\n\n  private async addProvider(extension: ProviderRegistration): Promise<void> {\n    if (extension.titleSuggestion) {\n      this.providers.push({\n        prefix: extension.prefix || '',\n        iconName: extension.iconName,\n        iconWidth: extension.iconWidth,\n        title: extension.titlePrefix() + ' ' + extension.titleSuggestion(),\n        jslogContext: (await extension.provider()).jslogContext,\n      });\n    }\n  }\n\n  override itemCount(): number {\n    return this.providers.length;\n  }\n\n  override itemKeyAt(itemIndex: number): string {\n    return this.providers[itemIndex].prefix;\n  }\n\n  override itemScoreAt(itemIndex: number, _query: string): number {\n    return -this.providers[itemIndex].prefix.length;\n  }\n\n  override renderItem(itemIndex: number, _query: string, titleElement: Element, _subtitleElement: Element): void {\n    const provider = this.providers[itemIndex];\n\n    const iconElement = new IconButton.Icon.Icon();\n    iconElement.data = {\n      iconName: provider.iconName,\n      color: 'var(--icon-default)',\n      width: provider.iconWidth,\n    };\n    titleElement.parentElement?.parentElement?.insertBefore(iconElement, titleElement.parentElement);\n\n    UI.UIUtils.createTextChild(titleElement, provider.title);\n  }\n\n  override jslogContextAt(itemIndex: number): string {\n    return this.providers[itemIndex].jslogContext;\n  }\n\n  override selectItem(itemIndex: number|null, _promptValue: string): void {\n    if (itemIndex !== null) {\n      QuickOpenImpl.show(this.providers[itemIndex].prefix);\n    }\n  }\n\n  override renderAsTwoRows(): boolean {\n    return false;\n  }\n}\n\nregisterProvider({\n  prefix: '?',\n  iconName: 'help',\n  iconWidth: '20px',\n  provider: () => Promise.resolve(new HelpQuickOpen('help')),\n  titlePrefix: () => 'Help',\n  titleSuggestion: undefined,\n});\n"],
  "mappings": ";AAIA,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AAEpB,SAAQ,wBAAwB,UAAU,wBAAkD;AAC5F,SAAQ,qBAAoB;AAErB,aAAM,sBAAsB,SAAS;AAAA,EAClC;AAAA,EAQR,YAAY,cAAsB;AAChC,UAAM,YAAY;AAClB,SAAK,YAAY,CAAC;AAClB,2BAAuB,EAAE,QAAQ,KAAK,YAAY,KAAK,IAAI,CAAC;AAAA,EAC9D;AAAA,EAEA,MAAc,YAAY,WAAgD;AACxE,QAAI,UAAU,iBAAiB;AAC7B,WAAK,UAAU,KAAK;AAAA,QAClB,QAAQ,UAAU,UAAU;AAAA,QAC5B,UAAU,UAAU;AAAA,QACpB,WAAW,UAAU;AAAA,QACrB,OAAO,UAAU,YAAY,IAAI,MAAM,UAAU,gBAAgB;AAAA,QACjE,eAAe,MAAM,UAAU,SAAS,GAAG;AAAA,MAC7C,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAES,YAAoB;AAC3B,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA,EAES,UAAU,WAA2B;AAC5C,WAAO,KAAK,UAAU,SAAS,EAAE;AAAA,EACnC;AAAA,EAES,YAAY,WAAmB,QAAwB;AAC9D,WAAO,CAAC,KAAK,UAAU,SAAS,EAAE,OAAO;AAAA,EAC3C;AAAA,EAES,WAAW,WAAmB,QAAgB,cAAuB,kBAAiC;AAC7G,UAAM,WAAW,KAAK,UAAU,SAAS;AAEzC,UAAM,cAAc,IAAI,WAAW,KAAK,KAAK;AAC7C,gBAAY,OAAO;AAAA,MACjB,UAAU,SAAS;AAAA,MACnB,OAAO;AAAA,MACP,OAAO,SAAS;AAAA,IAClB;AACA,iBAAa,eAAe,eAAe,aAAa,aAAa,aAAa,aAAa;AAE/F,OAAG,QAAQ,gBAAgB,cAAc,SAAS,KAAK;AAAA,EACzD;AAAA,EAES,eAAe,WAA2B;AACjD,WAAO,KAAK,UAAU,SAAS,EAAE;AAAA,EACnC;AAAA,EAES,WAAW,WAAwB,cAA4B;AACtE,QAAI,cAAc,MAAM;AACtB,oBAAc,KAAK,KAAK,UAAU,SAAS,EAAE,MAAM;AAAA,IACrD;AAAA,EACF;AAAA,EAES,kBAA2B;AAClC,WAAO;AAAA,EACT;AACF;AAEA,iBAAiB;AAAA,EACf,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,WAAW;AAAA,EACX,UAAU,MAAM,QAAQ,QAAQ,IAAI,cAAc,MAAM,CAAC;AAAA,EACzD,aAAa,MAAM;AAAA,EACnB,iBAAiB;AACnB,CAAC;",
  "names": []
}
