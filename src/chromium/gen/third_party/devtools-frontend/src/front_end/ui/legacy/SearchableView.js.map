{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/SearchableView.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2006, 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2007 Matt Lilek (pewtermoose@gmail.com).\n * Copyright (C) 2009 Joseph Pecoraro\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as Buttons from '../components/buttons/buttons.js';\nimport * as IconButton from '../components/icon_button/icon_button.js';\n\nimport * as ARIAUtils from './ARIAUtils.js';\nimport {HistoryInput} from './HistoryInput.js';\nimport {InspectorView} from './InspectorView.js';\nimport searchableViewStyles from './searchableView.css.legacy.js';\nimport {Toolbar, ToolbarButton, ToolbarText, ToolbarToggle} from './Toolbar.js';\nimport {createTextButton} from './UIUtils.js';\nimport {VBox} from './Widget.js';\n\nconst UIStrings = {\n  /**\n   *@description Text on a button to replace one instance with input text for the ctrl+F search bar\n   */\n  replace: 'Replace',\n  /**\n   *@description Tooltip text on a toggle to enable replacing one instance with input text for the ctrl+F search bar\n   */\n  enableFindAndReplace: 'Find and replace',\n  /**\n   *@description Tooltip text on a toggle to disable replacing one instance with input text for the ctrl+F search bar\n   */\n  disableFindAndReplace: 'Disable find and replace',\n  /**\n   *@description Text to find an item\n   */\n  findString: 'Find',\n  /**\n   *@description Tooltip text on a button to search previous instance for the ctrl+F search bar\n   */\n  searchPrevious: 'Show previous result',\n  /**\n   *@description Tooltip text on a button to search next instance for the ctrl+F search bar\n   */\n  searchNext: 'Show next result',\n  /**\n   *@description Tooltip text on a toggle to enable search by matching case of the input\n   */\n  enableCaseSensitive: 'Enable case sensitive search',\n  /**\n   *@description Tooltip text on a toggle to disable search by matching case of the input\n   */\n  disableCaseSensitive: 'Disable case sensitive search',\n  /**\n   *@description Tooltip text on a toggle to enable searching with regular expression\n   */\n  enableRegularExpression: 'Enable regular expressions',\n  /**\n   *@description Tooltip text on a toggle to disable searching with regular expression\n   */\n  disableRegularExpression: 'Disable regular expressions',\n  /**\n   *@description Tooltip text on a button to close the search bar\n   */\n  closeSearchBar: 'Close search bar',\n  /**\n   *@description Text on a button to replace all instances with input text for the ctrl+F search bar\n   */\n  replaceAll: 'Replace all',\n  /**\n   *@description Text to indicate the current match index and the total number of matches for the ctrl+F search bar\n   *@example {2} PH1\n   *@example {3} PH2\n   */\n  dOfD: '{PH1} of {PH2}',\n  /**\n   *@description Tooltip text to indicate the current match index and the total number of matches for the ctrl+F search bar\n   *@example {2} PH1\n   *@example {3} PH2\n   */\n  accessibledOfD: 'Shows result {PH1} of {PH2}',\n  /**\n   *@description Text to indicate search result for the ctrl+F search bar\n   */\n  matchString: '1 match',\n  /**\n   *@description Text to indicate search result for the ctrl+F search bar\n   *@example {2} PH1\n   */\n  dMatches: '{PH1} matches',\n  /**\n   *@description Text on a button to search previous instance for the ctrl+F search bar\n   */\n  clearInput: 'Clear',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/SearchableView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nfunction createClearButton(jslogContext: string): Buttons.Button.Button {\n  const button = new Buttons.Button.Button();\n  button.data = {\n    variant: Buttons.Button.Variant.ICON,\n    size: Buttons.Button.Size.SMALL,\n    jslogContext,\n    title: i18nString(UIStrings.clearInput),\n    iconName: 'cross-circle-filled',\n  };\n  button.ariaLabel = i18nString(UIStrings.clearInput);\n  button.classList.add('clear-button');\n  button.tabIndex = -1;\n  return button;\n}\nexport class SearchableView extends VBox {\n  private searchProvider: Searchable;\n  private replaceProvider: Replaceable|null;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private setting: Common.Settings.Setting<any>|null;\n  private replaceable: boolean;\n  private readonly footerElementContainer: HTMLElement;\n  private readonly footerElement: HTMLElement;\n  private replaceToggleButton: ToolbarToggle;\n  private searchInputElement: HistoryInput;\n  private matchesElement: HTMLElement;\n  private searchNavigationPrevElement: ToolbarButton;\n  private searchNavigationNextElement: ToolbarButton;\n  private readonly replaceInputElement: HTMLInputElement;\n  private caseSensitiveButton: Buttons.Button.Button|undefined;\n  private regexButton: Buttons.Button.Button|undefined;\n  private replaceButtonElement: Buttons.Button.Button;\n  private replaceAllButtonElement: Buttons.Button.Button;\n  private minimalSearchQuerySize: number;\n  private searchIsVisible?: boolean;\n  private currentQuery?: string;\n  private valueChangedTimeoutId?: number;\n\n  constructor(searchable: Searchable, replaceable: Replaceable|null, settingName?: string) {\n    super(true);\n    this.registerRequiredCSS(searchableViewStyles);\n    searchableViewsByElement.set(this.element, this);\n\n    this.searchProvider = searchable;\n    this.replaceProvider = replaceable;\n    this.setting = settingName ? Common.Settings.Settings.instance().createSetting(settingName, {}) : null;\n    this.replaceable = false;\n\n    this.contentElement.createChild('slot');\n    this.footerElementContainer = this.contentElement.createChild('div', 'search-bar hidden');\n    this.footerElementContainer.style.order = '100';\n    this.footerElement = this.footerElementContainer.createChild('div', 'toolbar-search');\n    this.footerElement.setAttribute('jslog', `${VisualLogging.toolbar('search').track({resize: true})}`);\n\n    const replaceToggleToolbar = new Toolbar('replace-toggle-toolbar', this.footerElement);\n    this.replaceToggleButton =\n        new ToolbarToggle(i18nString(UIStrings.enableFindAndReplace), 'replace', undefined, 'replace');\n    ARIAUtils.setLabel(this.replaceToggleButton.element, i18nString(UIStrings.enableFindAndReplace));\n    this.replaceToggleButton.addEventListener(ToolbarButton.Events.CLICK, this.toggleReplace, this);\n    replaceToggleToolbar.appendToolbarItem(this.replaceToggleButton);\n\n    // Elements within `searchInputElements` are added according to their expected tab order.\n    const searchInputElements = this.footerElement.createChild('div', 'search-inputs');\n    const iconAndInput = searchInputElements.createChild('div', 'icon-and-input');\n    const searchIcon = IconButton.Icon.create('search');\n    iconAndInput.appendChild(searchIcon);\n\n    this.searchInputElement = HistoryInput.create();\n    this.searchInputElement.type = 'search';\n    this.searchInputElement.classList.add('search-replace', 'search');\n    this.searchInputElement.id = 'search-input-field';\n    this.searchInputElement.autocomplete = 'off';\n    this.searchInputElement.placeholder = i18nString(UIStrings.findString);\n    this.searchInputElement.setAttribute(\n        'jslog',\n        `${VisualLogging.textField('search').track({change: true, keydown: 'ArrowUp|ArrowDown|Enter|Escape'})}`);\n    this.searchInputElement.addEventListener('keydown', this.onSearchKeyDown.bind(this), true);\n    this.searchInputElement.addEventListener('input', this.onInput.bind(this), false);\n    iconAndInput.appendChild(this.searchInputElement);\n\n    const replaceInputElements = searchInputElements.createChild('div', 'replace-element input-line');\n    this.replaceInputElement = replaceInputElements.createChild('input', 'search-replace') as HTMLInputElement;\n    this.replaceInputElement.addEventListener('keydown', this.onReplaceKeyDown.bind(this), true);\n    this.replaceInputElement.placeholder = i18nString(UIStrings.replace);\n    this.replaceInputElement.setAttribute(\n        'jslog', `${VisualLogging.textField('replace').track({change: true, keydown: 'Enter'})}`);\n\n    const replaceInputClearButton = createClearButton('clear-replace-input');\n    replaceInputClearButton.addEventListener('click', () => {\n      this.replaceInputElement.value = '';\n      this.replaceInputElement.focus();\n    });\n    replaceInputElements.appendChild(replaceInputClearButton);\n\n    const searchConfigButtons = searchInputElements.createChild('div', 'search-config-buttons');\n    const clearButton = createClearButton('clear-search-input');\n    clearButton.addEventListener('click', () => {\n      this.searchInputElement.value = '';\n      this.clearSearch();\n      this.searchInputElement.focus();\n    });\n    searchConfigButtons.appendChild(clearButton);\n    if (this.searchProvider.supportsRegexSearch()) {\n      const iconName = 'regular-expression';\n      this.regexButton = new Buttons.Button.Button();\n      this.regexButton.data = {\n        variant: Buttons.Button.Variant.ICON_TOGGLE,\n        size: Buttons.Button.Size.SMALL,\n        iconName,\n        toggledIconName: iconName,\n        toggleType: Buttons.Button.ToggleType.PRIMARY,\n        toggled: false,\n        jslogContext: iconName,\n        title: i18nString(UIStrings.enableCaseSensitive),\n      };\n      this.regexButton.addEventListener('click', () => this.toggleRegexSearch());\n      searchConfigButtons.appendChild(this.regexButton);\n    }\n\n    if (this.searchProvider.supportsCaseSensitiveSearch()) {\n      const iconName = 'match-case';\n      this.caseSensitiveButton = new Buttons.Button.Button();\n      this.caseSensitiveButton.data = {\n        variant: Buttons.Button.Variant.ICON_TOGGLE,\n        size: Buttons.Button.Size.SMALL,\n        iconName,\n        toggledIconName: iconName,\n        toggled: false,\n        toggleType: Buttons.Button.ToggleType.PRIMARY,\n        title: i18nString(UIStrings.enableCaseSensitive),\n        jslogContext: iconName,\n      };\n      this.caseSensitiveButton.addEventListener('click', () => this.toggleCaseSensitiveSearch());\n      searchConfigButtons.appendChild(this.caseSensitiveButton);\n    }\n\n    // Introduce a separate element for the background of the `Find` input line (instead of\n    // grouping together the `Find` input together with all search config option buttons\n    // and styling the parent's background).\n    // This allows for a tabbing order that can jump from the `Find` input, to\n    // the `Replace` input, and back to all search config option buttons.\n    searchInputElements.createChild('div', 'input-line search-input-background');\n\n    const buttonsContainer = this.footerElement.createChild('div', 'toolbar-search-buttons');\n    const firstRowButtons = buttonsContainer.createChild('div', 'first-row-buttons');\n\n    const toolbar = new Toolbar('toolbar-search-options', firstRowButtons);\n    this.searchNavigationPrevElement =\n        new ToolbarButton(i18nString(UIStrings.searchPrevious), 'chevron-up', undefined, 'select-previous');\n    this.searchNavigationPrevElement.addEventListener(ToolbarButton.Events.CLICK, () => this.onPrevButtonSearch());\n    toolbar.appendToolbarItem(this.searchNavigationPrevElement);\n    ARIAUtils.setLabel(this.searchNavigationPrevElement.element, i18nString(UIStrings.searchPrevious));\n\n    this.searchNavigationNextElement =\n        new ToolbarButton(i18nString(UIStrings.searchNext), 'chevron-down', undefined, 'select-next');\n    this.searchNavigationNextElement.addEventListener(ToolbarButton.Events.CLICK, () => this.onNextButtonSearch());\n    ARIAUtils.setLabel(this.searchNavigationNextElement.element, i18nString(UIStrings.searchNext));\n    toolbar.appendToolbarItem(this.searchNavigationNextElement);\n\n    const matchesText = new ToolbarText();\n    this.matchesElement = matchesText.element;\n    this.matchesElement.style.fontVariantNumeric = 'tabular-nums';\n    this.matchesElement.style.color = 'var(--sys-color-on-surface-subtle)';\n    this.matchesElement.style.padding = '0 var(--sys-size-3)';\n    this.matchesElement.classList.add('search-results-matches');\n    toolbar.appendToolbarItem(matchesText);\n\n    const cancelButtonElement = new Buttons.Button.Button();\n    cancelButtonElement.data = {\n      variant: Buttons.Button.Variant.TOOLBAR,\n      size: Buttons.Button.Size.REGULAR,\n      iconName: 'cross',\n      title: i18nString(UIStrings.closeSearchBar),\n      jslogContext: 'close-search',\n    };\n\n    cancelButtonElement.classList.add('close-search-button');\n    cancelButtonElement.addEventListener('click', () => this.closeSearch());\n    firstRowButtons.appendChild(cancelButtonElement);\n\n    const secondRowButtons = buttonsContainer.createChild('div', 'second-row-buttons replace-element');\n\n    this.replaceButtonElement = createTextButton(i18nString(UIStrings.replace), this.replace.bind(this), {\n      className: 'search-action-button',\n      jslogContext: 'replace',\n    });\n    this.replaceButtonElement.disabled = true;\n    secondRowButtons.appendChild(this.replaceButtonElement);\n\n    this.replaceAllButtonElement = createTextButton(i18nString(UIStrings.replaceAll), this.replaceAll.bind(this), {\n      className: 'search-action-button',\n      jslogContext: 'replace-all',\n    });\n\n    secondRowButtons.appendChild(this.replaceAllButtonElement);\n    this.replaceAllButtonElement.disabled = true;\n\n    this.minimalSearchQuerySize = 3;\n    this.loadSetting();\n  }\n\n  static fromElement(element: Element|null): SearchableView|null {\n    let view: (SearchableView|null)|null = null;\n    while (element && !view) {\n      view = searchableViewsByElement.get(element) || null;\n      element = element.parentElementOrShadowHost();\n    }\n    return view;\n  }\n\n  private toggleCaseSensitiveSearch(): void {\n    if (this.caseSensitiveButton) {\n      this.caseSensitiveButton.title = this.caseSensitiveButton.toggled ? i18nString(UIStrings.disableCaseSensitive) :\n                                                                          i18nString(UIStrings.enableCaseSensitive);\n    }\n    this.saveSetting();\n    this.performSearch(false, true);\n  }\n\n  private toggleRegexSearch(): void {\n    if (this.regexButton) {\n      this.regexButton.title = this.regexButton.toggled ? i18nString(UIStrings.disableRegularExpression) :\n                                                          i18nString(UIStrings.enableRegularExpression);\n    }\n    this.saveSetting();\n    this.performSearch(false, true);\n  }\n\n  private toggleReplace(): void {\n    const replaceEnabled = this.replaceToggleButton.isToggled();\n    const label =\n        replaceEnabled ? i18nString(UIStrings.disableFindAndReplace) : i18nString(UIStrings.enableFindAndReplace);\n    ARIAUtils.setLabel(this.replaceToggleButton.element, label);\n    this.replaceToggleButton.element.title = label;\n    this.updateSecondRowVisibility();\n  }\n\n  private saveSetting(): void {\n    if (!this.setting) {\n      return;\n    }\n    const settingValue = this.setting.get() || {};\n    if (this.caseSensitiveButton) {\n      settingValue.caseSensitive = this.caseSensitiveButton.toggled;\n    }\n    if (this.regexButton) {\n      settingValue.isRegex = this.regexButton.toggled;\n    }\n    this.setting.set(settingValue);\n  }\n\n  private loadSetting(): void {\n    const settingValue = this.setting ? (this.setting.get() || {}) : {};\n    if (this.searchProvider.supportsCaseSensitiveSearch() && this.caseSensitiveButton) {\n      this.caseSensitiveButton.toggled = Boolean(settingValue.caseSensitive);\n      const label = settingValue.caseSensitive ? i18nString(UIStrings.disableCaseSensitive) :\n                                                 i18nString(UIStrings.enableCaseSensitive);\n      this.caseSensitiveButton.title = label;\n      ARIAUtils.setLabel(this.caseSensitiveButton, label);\n    }\n    if (this.searchProvider.supportsRegexSearch() && this.regexButton) {\n      this.regexButton.toggled = Boolean(settingValue.isRegex);\n      const label = settingValue.regular ? i18nString(UIStrings.disableRegularExpression) :\n                                           i18nString(UIStrings.enableRegularExpression);\n      this.regexButton.title = label;\n      ARIAUtils.setLabel(this.regexButton, label);\n    }\n  }\n\n  setMinimalSearchQuerySize(minimalSearchQuerySize: number): void {\n    this.minimalSearchQuerySize = minimalSearchQuerySize;\n  }\n\n  setPlaceholder(placeholder: string, ariaLabel?: string): void {\n    this.searchInputElement.placeholder = placeholder;\n    if (ariaLabel) {\n      ARIAUtils.setLabel(this.searchInputElement, ariaLabel);\n    }\n  }\n\n  setReplaceable(replaceable: boolean): void {\n    this.replaceable = replaceable;\n  }\n\n  updateSearchMatchesCount(matches: number): void {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const untypedSearchProvider = (this.searchProvider as any);\n    if (untypedSearchProvider.currentSearchMatches === matches) {\n      return;\n    }\n    untypedSearchProvider.currentSearchMatches = matches;\n    this.updateSearchMatchesCountAndCurrentMatchIndex(untypedSearchProvider.currentQuery ? matches : 0, -1);\n  }\n\n  updateCurrentMatchIndex(currentMatchIndex: number): void {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const untypedSearchProvider = (this.searchProvider as any);\n    this.updateSearchMatchesCountAndCurrentMatchIndex(untypedSearchProvider.currentSearchMatches, currentMatchIndex);\n  }\n\n  isSearchVisible(): boolean {\n    return Boolean(this.searchIsVisible);\n  }\n\n  closeSearch(): void {\n    this.cancelSearch();\n    if (this.footerElementContainer.hasFocus()) {\n      this.focus();\n    }\n\n    this.searchProvider.onSearchClosed?.();\n  }\n\n  private toggleSearchBar(toggled: boolean): void {\n    this.footerElementContainer.classList.toggle('hidden', !toggled);\n    this.doResize();\n  }\n\n  cancelSearch(): void {\n    if (!this.searchIsVisible) {\n      return;\n    }\n    this.resetSearch();\n    delete this.searchIsVisible;\n    this.toggleSearchBar(false);\n  }\n\n  resetSearch(): void {\n    this.clearSearch();\n    this.updateReplaceVisibility();\n    this.matchesElement.textContent = '';\n  }\n\n  refreshSearch(): void {\n    if (!this.searchIsVisible) {\n      return;\n    }\n    this.resetSearch();\n    this.performSearch(false, false);\n  }\n\n  handleFindNextShortcut(): boolean {\n    if (!this.searchIsVisible) {\n      return false;\n    }\n    this.searchProvider.jumpToNextSearchResult();\n    return true;\n  }\n\n  handleFindPreviousShortcut(): boolean {\n    if (!this.searchIsVisible) {\n      return false;\n    }\n    this.searchProvider.jumpToPreviousSearchResult();\n    return true;\n  }\n\n  handleFindShortcut(): boolean {\n    this.showSearchField();\n    return true;\n  }\n\n  handleCancelSearchShortcut(): boolean {\n    if (!this.searchIsVisible) {\n      return false;\n    }\n    this.closeSearch();\n    return true;\n  }\n\n  private updateSearchNavigationButtonState(enabled: boolean): void {\n    this.replaceButtonElement.disabled = !enabled;\n    this.replaceAllButtonElement.disabled = !enabled;\n    this.searchNavigationPrevElement.setEnabled(enabled);\n    this.searchNavigationNextElement.setEnabled(enabled);\n  }\n\n  private updateSearchMatchesCountAndCurrentMatchIndex(matches: number, currentMatchIndex: number): void {\n    if (!this.currentQuery) {\n      this.matchesElement.textContent = '';\n    } else if (matches === 0 || currentMatchIndex >= 0) {\n      this.matchesElement.textContent = i18nString(UIStrings.dOfD, {PH1: currentMatchIndex + 1, PH2: matches});\n      ARIAUtils.setLabel(\n          this.matchesElement, i18nString(UIStrings.accessibledOfD, {PH1: currentMatchIndex + 1, PH2: matches}));\n    } else if (matches === 1) {\n      this.matchesElement.textContent = i18nString(UIStrings.matchString);\n    } else {\n      this.matchesElement.textContent = i18nString(UIStrings.dMatches, {PH1: matches});\n    }\n    this.updateSearchNavigationButtonState(matches > 0);\n  }\n\n  showSearchField(): void {\n    if (this.searchIsVisible) {\n      this.cancelSearch();\n    }\n\n    let queryCandidate;\n    if (!this.searchInputElement.hasFocus()) {\n      const selection = InspectorView.instance().element.window().getSelection();\n      if (selection && selection.rangeCount) {\n        queryCandidate = selection.toString().replace(/\\r?\\n.*/, '');\n      }\n    }\n\n    this.toggleSearchBar(true);\n    this.updateReplaceVisibility();\n    if (queryCandidate) {\n      this.searchInputElement.value = queryCandidate;\n    }\n    this.performSearch(false, false);\n    this.searchInputElement.focus();\n    this.searchInputElement.select();\n    this.searchIsVisible = true;\n  }\n\n  private updateReplaceVisibility(): void {\n    this.replaceToggleButton.setVisible(this.replaceable);\n    if (!this.replaceable) {\n      this.replaceToggleButton.setToggled(false);\n      this.updateSecondRowVisibility();\n    }\n  }\n\n  private onSearchKeyDown(ev: Event): void {\n    const event = (ev as KeyboardEvent);\n    if (Platform.KeyboardUtilities.isEscKey(event)) {\n      this.closeSearch();\n      event.consume(true);\n      return;\n    }\n    if (!(event.key === 'Enter')) {\n      return;\n    }\n\n    if (!this.currentQuery) {\n      this.performSearch(true, true, event.shiftKey);\n    } else {\n      this.jumpToNextSearchResult(event.shiftKey);\n    }\n  }\n\n  private onReplaceKeyDown(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      this.replace();\n    }\n  }\n\n  private jumpToNextSearchResult(isBackwardSearch?: boolean): void {\n    if (!this.currentQuery) {\n      return;\n    }\n\n    if (isBackwardSearch) {\n      this.searchProvider.jumpToPreviousSearchResult();\n    } else {\n      this.searchProvider.jumpToNextSearchResult();\n    }\n  }\n\n  private onNextButtonSearch(): void {\n    this.jumpToNextSearchResult();\n  }\n\n  private onPrevButtonSearch(): void {\n    this.jumpToNextSearchResult(true);\n  }\n\n  private clearSearch(): void {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const untypedSearchProvider = (this.searchProvider as any);\n    delete this.currentQuery;\n    if (Boolean(untypedSearchProvider.currentQuery)) {\n      delete untypedSearchProvider.currentQuery;\n      this.searchProvider.onSearchCanceled();\n    }\n    this.updateSearchMatchesCountAndCurrentMatchIndex(0, -1);\n  }\n\n  private performSearch(forceSearch: boolean, shouldJump: boolean, jumpBackwards?: boolean): void {\n    const query = this.searchInputElement.value;\n    if (!query || (!forceSearch && query.length < this.minimalSearchQuerySize && !this.currentQuery)) {\n      this.clearSearch();\n      return;\n    }\n\n    this.currentQuery = query;\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.searchProvider as any).currentQuery = query;\n\n    const searchConfig = this.currentSearchConfig();\n    this.searchProvider.performSearch(searchConfig, shouldJump, jumpBackwards);\n  }\n\n  private currentSearchConfig(): SearchConfig {\n    const query = this.searchInputElement.value;\n    const caseSensitive = this.caseSensitiveButton ? this.caseSensitiveButton.toggled : false;\n    const isRegex = this.regexButton ? this.regexButton.toggled : false;\n    return new SearchConfig(query, caseSensitive, isRegex);\n  }\n\n  private updateSecondRowVisibility(): void {\n    const secondRowVisible = this.replaceToggleButton.isToggled();\n    this.footerElementContainer.classList.toggle('replaceable', secondRowVisible);\n\n    if (secondRowVisible) {\n      this.replaceInputElement.focus();\n    } else {\n      this.searchInputElement.focus();\n    }\n    this.doResize();\n  }\n\n  private replace(): void {\n    if (!this.replaceProvider) {\n      throw new Error('No \\'replacable\\' provided to SearchableView!');\n    }\n    const searchConfig = this.currentSearchConfig();\n    this.replaceProvider.replaceSelectionWith(searchConfig, this.replaceInputElement.value);\n    delete this.currentQuery;\n    this.performSearch(true, true);\n  }\n\n  private replaceAll(): void {\n    if (!this.replaceProvider) {\n      throw new Error('No \\'replacable\\' provided to SearchableView!');\n    }\n    const searchConfig = this.currentSearchConfig();\n    this.replaceProvider.replaceAllWith(searchConfig, this.replaceInputElement.value);\n  }\n\n  private onInput(): void {\n    if (!Common.Settings.Settings.instance().moduleSetting('search-as-you-type').get()) {\n      this.clearSearch();\n      return;\n    }\n\n    if (this.valueChangedTimeoutId) {\n      clearTimeout(this.valueChangedTimeoutId);\n    }\n    const timeout = this.searchInputElement.value.length < 3 ? 200 : 0;\n    this.valueChangedTimeoutId = window.setTimeout(this.onValueChanged.bind(this), timeout);\n  }\n\n  private onValueChanged(): void {\n    if (!this.searchIsVisible) {\n      return;\n    }\n    delete this.valueChangedTimeoutId;\n    this.performSearch(false, true);\n  }\n}\n\nconst searchableViewsByElement = new WeakMap<Element, SearchableView>();\n\nexport interface Searchable {\n  onSearchCanceled(): void;\n  // Called when the search toolbar is closed\n  onSearchClosed?: () => void;\n  performSearch(searchConfig: SearchConfig, shouldJump: boolean, jumpBackwards?: boolean): void;\n  jumpToNextSearchResult(): void;\n  jumpToPreviousSearchResult(): void;\n  supportsCaseSensitiveSearch(): boolean;\n  supportsRegexSearch(): boolean;\n}\n\nexport interface Replaceable {\n  replaceSelectionWith(searchConfig: SearchConfig, replacement: string): void;\n  replaceAllWith(searchConfig: SearchConfig, replacement: string): void;\n}\n\nexport interface SearchRegexResult {\n  regex: RegExp;\n  fromQuery: boolean;\n}\n\nexport class SearchConfig {\n  query: string;\n  caseSensitive: boolean;\n  isRegex: boolean;\n\n  constructor(query: string, caseSensitive: boolean, isRegex: boolean) {\n    this.query = query;\n    this.caseSensitive = caseSensitive;\n    this.isRegex = isRegex;\n  }\n\n  toSearchRegex(global?: boolean): SearchRegexResult {\n    let modifiers = this.caseSensitive ? '' : 'i';\n    if (global) {\n      modifiers += 'g';\n    }\n\n    // Check if query is surrounded by forward slashes\n    const isRegexFormatted = this.query.startsWith('/') && this.query.endsWith('/');\n    const query = this.isRegex && !isRegexFormatted ? '/' + this.query + '/' : this.query;\n    let regex: RegExp|undefined;\n    let fromQuery = false;\n\n    // First try creating regex if user knows the / / hint.\n    try {\n      if (/^\\/.+\\/$/.test(query) && this.isRegex) {\n        regex = new RegExp(query.substring(1, query.length - 1), modifiers);\n        fromQuery = true;\n      }\n    } catch (e) {\n      // Silent catch.\n    }\n\n    // Otherwise just do a plain text search.\n    if (!regex) {\n      regex = Platform.StringUtilities.createPlainTextSearchRegex(query, modifiers);\n    }\n\n    return {\n      regex,\n      fromQuery,\n    };\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
