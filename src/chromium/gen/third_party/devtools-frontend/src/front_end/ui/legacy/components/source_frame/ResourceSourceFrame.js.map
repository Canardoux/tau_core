{
  "version": 3,
  "sources": ["../../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/components/source_frame/ResourceSourceFrame.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) IBM Corp. 2009  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as FormatterActions from '../../../../entrypoints/formatter_worker/FormatterActions.js';  // eslint-disable-line rulesdir/es_modules_import\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as UI from '../../legacy.js';\n\nimport resourceSourceFrameStyles from './resourceSourceFrame.css.legacy.js';\nimport {type RevealPosition, SourceFrameImpl, type SourceFrameOptions} from './SourceFrame.js';\n\nconst UIStrings = {\n  /**\n   *@description Text to find an item\n   */\n  find: 'Find',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/ResourceSourceFrame.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ResourceSourceFrame extends SourceFrameImpl {\n  private readonly resourceInternal: TextUtils.ContentProvider.ContentProvider;\n  readonly #givenContentType: string;\n\n  constructor(\n      resource: TextUtils.ContentProvider.ContentProvider, givenContentType: string, options?: SourceFrameOptions) {\n    const isStreamingProvider = TextUtils.ContentProvider.isStreamingContentProvider(resource);\n    /* eslint-disable @typescript-eslint/explicit-function-return-type */\n    const lazyContent = isStreamingProvider ?\n        () => resource.requestStreamingContent().then(TextUtils.StreamingContentData.asContentDataOrError) :\n        () => resource.requestContentData();\n    super(lazyContent, options);\n    /* eslint-enable @typescript-eslint/explicit-function-return-type */\n    this.#givenContentType = givenContentType;\n    this.resourceInternal = resource;\n    if (isStreamingProvider) {\n      void resource.requestStreamingContent().then(streamingContent => {\n        if (!TextUtils.StreamingContentData.isError(streamingContent)) {\n          streamingContent.addEventListener(TextUtils.StreamingContentData.Events.CHUNK_ADDED, () => {\n            void this.setContentDataOrError(Promise.resolve(streamingContent.content()));\n          });\n        }\n      });\n    }\n  }\n\n  static createSearchableView(resource: TextUtils.ContentProvider.ContentProvider, contentType: string):\n      UI.Widget.Widget {\n    return new SearchableContainer(resource, contentType);\n  }\n\n  protected override getContentType(): string {\n    return this.#givenContentType;\n  }\n\n  get resource(): TextUtils.ContentProvider.ContentProvider {\n    return this.resourceInternal;\n  }\n\n  protected override populateTextAreaContextMenu(\n      contextMenu: UI.ContextMenu.ContextMenu, lineNumber: number, columnNumber: number): void {\n    super.populateTextAreaContextMenu(contextMenu, lineNumber, columnNumber);\n    contextMenu.appendApplicableItems(this.resourceInternal);\n  }\n}\n\nexport class SearchableContainer extends UI.Widget.VBox {\n  private readonly sourceFrame: ResourceSourceFrame;\n\n  constructor(resource: TextUtils.ContentProvider.ContentProvider, contentType: string) {\n    super(true);\n    this.registerRequiredCSS(resourceSourceFrameStyles);\n    const simpleContentType = Common.ResourceType.ResourceType.simplifyContentType(contentType);\n    const sourceFrame = new ResourceSourceFrame(resource, simpleContentType);\n    this.sourceFrame = sourceFrame;\n    const canPrettyPrint = FormatterActions.FORMATTABLE_MEDIA_TYPES.includes(simpleContentType);\n    sourceFrame.setCanPrettyPrint(canPrettyPrint, true /* autoPrettyPrint */);\n    const searchableView = new UI.SearchableView.SearchableView(sourceFrame, sourceFrame);\n    searchableView.element.classList.add('searchable-view');\n    searchableView.setPlaceholder(i18nString(UIStrings.find));\n    sourceFrame.show(searchableView.element);\n    sourceFrame.setSearchableView(searchableView);\n    searchableView.show(this.contentElement);\n\n    const toolbar = new UI.Toolbar.Toolbar('toolbar', this.contentElement);\n    void sourceFrame.toolbarItems().then(items => {\n      items.map(item => toolbar.appendToolbarItem(item));\n    });\n  }\n\n  async revealPosition(position: RevealPosition): Promise<void> {\n    this.sourceFrame.revealPosition(position, true);\n  }\n}\n"],
  "mappings": ";AAiCA,YAAY,YAAY;AACxB,YAAY,UAAU;AACtB,YAAY,sBAAsB;AAClC,YAAY,eAAe;AAC3B,YAAY,QAAQ;AAEpB,OAAO,+BAA+B;AACtC,SAA6B,uBAA+C;AAE5E,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA,EAIhB,MAAM;AACR;AACA,MAAM,OAAO,KAAK,KAAK,kBAAkB,4DAA4D,SAAS;AAC9G,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW,IAAI;AAE7D,aAAM,4BAA4B,gBAAgB;AAAA,EACtC;AAAA,EACR;AAAA,EAET,YACI,UAAqD,kBAA0B,SAA8B;AAC/G,UAAM,sBAAsB,UAAU,gBAAgB,2BAA2B,QAAQ;AAEzF,UAAM,cAAc,sBAChB,MAAM,SAAS,wBAAwB,EAAE,KAAK,UAAU,qBAAqB,oBAAoB,IACjG,MAAM,SAAS,mBAAmB;AACtC,UAAM,aAAa,OAAO;AAE1B,SAAK,oBAAoB;AACzB,SAAK,mBAAmB;AACxB,QAAI,qBAAqB;AACvB,WAAK,SAAS,wBAAwB,EAAE,KAAK,sBAAoB;AAC/D,YAAI,CAAC,UAAU,qBAAqB,QAAQ,gBAAgB,GAAG;AAC7D,2BAAiB,iBAAiB,UAAU,qBAAqB,OAAO,aAAa,MAAM;AACzF,iBAAK,KAAK,sBAAsB,QAAQ,QAAQ,iBAAiB,QAAQ,CAAC,CAAC;AAAA,UAC7E,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEA,OAAO,qBAAqB,UAAqD,aAC5D;AACnB,WAAO,IAAI,oBAAoB,UAAU,WAAW;AAAA,EACtD;AAAA,EAEmB,iBAAyB;AAC1C,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,IAAI,WAAsD;AACxD,WAAO,KAAK;AAAA,EACd;AAAA,EAEmB,4BACf,aAAyC,YAAoB,cAA4B;AAC3F,UAAM,4BAA4B,aAAa,YAAY,YAAY;AACvE,gBAAY,sBAAsB,KAAK,gBAAgB;AAAA,EACzD;AACF;AAEO,aAAM,4BAA4B,GAAG,OAAO,KAAK;AAAA,EACrC;AAAA,EAEjB,YAAY,UAAqD,aAAqB;AACpF,UAAM,IAAI;AACV,SAAK,oBAAoB,yBAAyB;AAClD,UAAM,oBAAoB,OAAO,aAAa,aAAa,oBAAoB,WAAW;AAC1F,UAAM,cAAc,IAAI,oBAAoB,UAAU,iBAAiB;AACvE,SAAK,cAAc;AACnB,UAAM,iBAAiB,iBAAiB,wBAAwB,SAAS,iBAAiB;AAC1F,gBAAY;AAAA,MAAkB;AAAA,MAAgB;AAAA;AAAA,IAA0B;AACxE,UAAM,iBAAiB,IAAI,GAAG,eAAe,eAAe,aAAa,WAAW;AACpF,mBAAe,QAAQ,UAAU,IAAI,iBAAiB;AACtD,mBAAe,eAAe,WAAW,UAAU,IAAI,CAAC;AACxD,gBAAY,KAAK,eAAe,OAAO;AACvC,gBAAY,kBAAkB,cAAc;AAC5C,mBAAe,KAAK,KAAK,cAAc;AAEvC,UAAM,UAAU,IAAI,GAAG,QAAQ,QAAQ,WAAW,KAAK,cAAc;AACrE,SAAK,YAAY,aAAa,EAAE,KAAK,WAAS;AAC5C,YAAM,IAAI,UAAQ,QAAQ,kBAAkB,IAAI,CAAC;AAAA,IACnD,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,eAAe,UAAyC;AAC5D,SAAK,YAAY,eAAe,UAAU,IAAI;AAAA,EAChD;AACF;",
  "names": []
}
