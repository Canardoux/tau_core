{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/components/settings/SettingCheckbox.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport './SettingDeprecationWarning.js';\n\nimport type * as Common from '../../../core/common/common.js';\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\nimport * as Buttons from '../buttons/buttons.js';\nimport * as Input from '../input/input.js';\n\nimport settingCheckboxStyles from './settingCheckbox.css.js';\n\nconst {html, Directives: {ifDefined}} = LitHtml;\n\nconst UIStrings = {\n  /**\n   *@description Text that is usually a hyperlink to more documentation\n   */\n  learnMore: 'Learn more',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/components/settings/SettingCheckbox.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface SettingCheckboxData {\n  setting: Common.Settings.Setting<boolean>;\n  textOverride?: string;\n}\n\n/**\n * A simple checkbox that is backed by a boolean setting.\n */\nexport class SettingCheckbox extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #setting?: Common.Settings.Setting<boolean>;\n  #changeListenerDescriptor?: Common.EventTarget.EventDescriptor;\n  #textOverride?: string;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [Input.checkboxStyles, settingCheckboxStyles];\n  }\n\n  set data(data: SettingCheckboxData) {\n    if (this.#changeListenerDescriptor && this.#setting) {\n      this.#setting.removeChangeListener(this.#changeListenerDescriptor.listener);\n    }\n\n    this.#setting = data.setting;\n    this.#textOverride = data.textOverride;\n\n    this.#changeListenerDescriptor = this.#setting.addChangeListener(() => {\n      this.#render();\n    });\n    this.#render();\n  }\n\n  icon(): LitHtml.TemplateResult|undefined {\n    if (!this.#setting) {\n      return undefined;\n    }\n\n    if (this.#setting.deprecation) {\n      return html`<devtools-setting-deprecation-warning .data=${\n          this.#setting.deprecation}></devtools-setting-deprecation-warning>`;\n    }\n\n    const learnMore = this.#setting.learnMore();\n    if (learnMore && learnMore.url) {\n      const url = learnMore.url;\n      const data: Buttons.Button.ButtonData = {\n        iconName: 'help',\n        variant: Buttons.Button.Variant.ICON,\n        size: Buttons.Button.Size.SMALL,\n        jslogContext: `${this.#setting.name}-documentation`,\n        title: i18nString(UIStrings.learnMore),\n      };\n      const handleClick = (event: MouseEvent): void => {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(url);\n        event.consume();\n      };\n      return html`<devtools-button\n                    class=learn-more\n                    @click=${handleClick}\n                    .data=${data}></devtools-button>`;\n    }\n\n    return undefined;\n  }\n\n  #render(): void {\n    if (!this.#setting) {\n      throw new Error('No \"Setting\" object provided for rendering');\n    }\n\n    const icon = this.icon();\n    const title = `${this.#setting.learnMore() ? this.#setting.learnMore()?.tooltip() : ''}`;\n    const reason = this.#setting.disabledReason() ?\n        html`\n      <devtools-button class=\"disabled-reason\" .iconName=${'info'} .variant=${Buttons.Button.Variant.ICON} .size=${\n            Buttons.Button.Size.SMALL} title=${ifDefined(this.#setting.disabledReason())} @click=${\n            onclick}></devtools-button>\n    ` :\n        LitHtml.nothing;\n    LitHtml.render(\n        html`\n      <p>\n        <label title=${title}>\n          <input\n            type=\"checkbox\"\n            .checked=${this.#setting.disabledReason() ? false : this.#setting.get()}\n            ?disabled=${this.#setting.disabled()}\n            @change=${this.#checkboxChanged}\n            jslog=${VisualLogging.toggle().track({click: true}).context(this.#setting.name)}\n            aria-label=${this.#setting.title()}\n          />\n          ${this.#textOverride || this.#setting.title()}${reason}\n        </label>\n        ${icon}\n      </p>`,\n        this.#shadow, {host: this});\n  }\n\n  #checkboxChanged(e: Event): void {\n    this.#setting?.set((e.target as HTMLInputElement).checked);\n    this.dispatchEvent(new CustomEvent('change', {\n      bubbles: true,\n      composed: false,\n    }));\n  }\n}\n\ncustomElements.define('setting-checkbox', SettingCheckbox);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'setting-checkbox': SettingCheckbox;\n  }\n}\n"],
  "mappings": ";AAIA,OAAO;AAGP,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,aAAa;AACzB,YAAY,mBAAmB;AAC/B,YAAY,aAAa;AACzB,YAAY,WAAW;AAEvB,OAAO,2BAA2B;AAElC,MAAM,EAAC,MAAM,YAAY,EAAC,UAAS,EAAC,IAAI;AAExC,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA,EAIhB,WAAW;AACb;AACA,MAAM,OAAO,KAAK,KAAK,kBAAkB,6CAA6C,SAAS;AAC/F,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW,IAAI;AAU7D,aAAM,wBAAwB,YAAY;AAAA,EACtC,UAAU,KAAK,aAAa,EAAC,MAAM,OAAM,CAAC;AAAA,EAEnD;AAAA,EACA;AAAA,EACA;AAAA,EAEA,oBAA0B;AACxB,SAAK,QAAQ,qBAAqB,CAAC,MAAM,gBAAgB,qBAAqB;AAAA,EAChF;AAAA,EAEA,IAAI,KAAK,MAA2B;AAClC,QAAI,KAAK,6BAA6B,KAAK,UAAU;AACnD,WAAK,SAAS,qBAAqB,KAAK,0BAA0B,QAAQ;AAAA,IAC5E;AAEA,SAAK,WAAW,KAAK;AACrB,SAAK,gBAAgB,KAAK;AAE1B,SAAK,4BAA4B,KAAK,SAAS,kBAAkB,MAAM;AACrE,WAAK,QAAQ;AAAA,IACf,CAAC;AACD,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,OAAyC;AACvC,QAAI,CAAC,KAAK,UAAU;AAClB,aAAO;AAAA,IACT;AAEA,QAAI,KAAK,SAAS,aAAa;AAC7B,aAAO,mDACH,KAAK,SAAS,WAAW;AAAA,IAC/B;AAEA,UAAM,YAAY,KAAK,SAAS,UAAU;AAC1C,QAAI,aAAa,UAAU,KAAK;AAC9B,YAAM,MAAM,UAAU;AACtB,YAAM,OAAkC;AAAA,QACtC,UAAU;AAAA,QACV,SAAS,QAAQ,OAAO,QAAQ;AAAA,QAChC,MAAM,QAAQ,OAAO,KAAK;AAAA,QAC1B,cAAc,GAAG,KAAK,SAAS,IAAI;AAAA,QACnC,OAAO,WAAW,UAAU,SAAS;AAAA,MACvC;AACA,YAAM,cAAc,CAAC,UAA4B;AAC/C,aAAK,sBAAsB,8BAA8B,aAAa,GAAG;AACzE,cAAM,QAAQ;AAAA,MAChB;AACA,aAAO;AAAA;AAAA,6BAEgB,WAAW;AAAA,4BACZ,IAAI;AAAA,IAC5B;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,UAAgB;AACd,QAAI,CAAC,KAAK,UAAU;AAClB,YAAM,IAAI,MAAM,4CAA4C;AAAA,IAC9D;AAEA,UAAM,OAAO,KAAK,KAAK;AACvB,UAAM,QAAQ,GAAG,KAAK,SAAS,UAAU,IAAI,KAAK,SAAS,UAAU,GAAG,QAAQ,IAAI,EAAE;AACtF,UAAM,SAAS,KAAK,SAAS,eAAe,IACxC;AAAA,2DACmD,MAAM,aAAa,QAAQ,OAAO,QAAQ,IAAI,UAC7F,QAAQ,OAAO,KAAK,KAAK,UAAU,UAAU,KAAK,SAAS,eAAe,CAAC,CAAC,WAC5E,OAAO;AAAA,QAEX,QAAQ;AACZ,YAAQ;AAAA,MACJ;AAAA;AAAA,uBAEe,KAAK;AAAA;AAAA;AAAA,uBAGL,KAAK,SAAS,eAAe,IAAI,QAAQ,KAAK,SAAS,IAAI,CAAC;AAAA,wBAC3D,KAAK,SAAS,SAAS,CAAC;AAAA,sBAC1B,KAAK,gBAAgB;AAAA,oBACvB,cAAc,OAAO,EAAE,MAAM,EAAC,OAAO,KAAI,CAAC,EAAE,QAAQ,KAAK,SAAS,IAAI,CAAC;AAAA,yBAClE,KAAK,SAAS,MAAM,CAAC;AAAA;AAAA,YAElC,KAAK,iBAAiB,KAAK,SAAS,MAAM,CAAC,GAAG,MAAM;AAAA;AAAA,UAEtD,IAAI;AAAA;AAAA,MAEN,KAAK;AAAA,MAAS,EAAC,MAAM,KAAI;AAAA,IAAC;AAAA,EAChC;AAAA,EAEA,iBAAiB,GAAgB;AAC/B,SAAK,UAAU,IAAK,EAAE,OAA4B,OAAO;AACzD,SAAK,cAAc,IAAI,YAAY,UAAU;AAAA,MAC3C,SAAS;AAAA,MACT,UAAU;AAAA,IACZ,CAAC,CAAC;AAAA,EACJ;AACF;AAEA,eAAe,OAAO,oBAAoB,eAAe;",
  "names": []
}
