{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/visual_logging/NonDomState.ts"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport type {Loggable} from './Loggable.js';\nimport type {LoggingConfig} from './LoggingConfig.js';\n\ninterface LoggableRegistration {\n  loggable: Loggable;\n  config: LoggingConfig;\n  parent?: Loggable;\n}\n\nlet registry = new WeakMap<Loggable, LoggableRegistration[]>();\n\nfunction getLoggables(parent?: Loggable): LoggableRegistration[] {\n  return registry.get(parent || nullParent) || [];\n}\n\nexport function registerLoggable(loggable: Loggable, config: LoggingConfig, parent?: Loggable): void {\n  const values = getLoggables(parent);\n  values.push({loggable, config, parent});\n  registry.set(parent || nullParent, values);\n}\n\nexport function hasNonDomLoggables(parent?: Loggable): boolean {\n  return registry.has(parent || nullParent);\n}\n\nexport function getNonDomLoggables(parent?: Loggable): LoggableRegistration[] {\n  return [...getLoggables(parent)];\n}\n\nexport function unregisterLoggables(parent?: Loggable): void {\n  registry.delete(parent || nullParent);\n}\n\nexport function unregisterAllLoggables(): void {\n  registry = new WeakMap();\n}\n\nconst nullParent = {};\n"],
  "mappings": ";AAYA,IAAI,WAAW,oBAAI,QAA0C;AAE7D,SAAS,aAAa,QAA2C;AAC/D,SAAO,SAAS,IAAI,UAAU,UAAU,KAAK,CAAC;AAChD;AAEO,gBAAS,iBAAiB,UAAoB,QAAuB,QAAyB;AACnG,QAAM,SAAS,aAAa,MAAM;AAClC,SAAO,KAAK,EAAC,UAAU,QAAQ,OAAM,CAAC;AACtC,WAAS,IAAI,UAAU,YAAY,MAAM;AAC3C;AAEO,gBAAS,mBAAmB,QAA4B;AAC7D,SAAO,SAAS,IAAI,UAAU,UAAU;AAC1C;AAEO,gBAAS,mBAAmB,QAA2C;AAC5E,SAAO,CAAC,GAAG,aAAa,MAAM,CAAC;AACjC;AAEO,gBAAS,oBAAoB,QAAyB;AAC3D,WAAS,OAAO,UAAU,UAAU;AACtC;AAEO,gBAAS,yBAA+B;AAC7C,aAAW,oBAAI,QAAQ;AACzB;AAEA,MAAM,aAAa,CAAC;",
  "names": []
}
