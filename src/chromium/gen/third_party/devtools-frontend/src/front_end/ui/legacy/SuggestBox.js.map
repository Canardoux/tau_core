{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/SuggestBox.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport type * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as VisualLogging from '../visual_logging/visual_logging.js';\n\nimport * as ARIAUtils from './ARIAUtils.js';\nimport {Size} from './Geometry.js';\nimport {AnchorBehavior, GlassPane} from './GlassPane.js';\nimport {ListControl, type ListDelegate, ListMode} from './ListControl.js';\nimport {ListModel} from './ListModel.js';\nimport suggestBoxStyles from './suggestBox.css.legacy.js';\nimport {createShadowRootWithCoreStyles, measuredScrollbarWidth, measurePreferredSize} from './UIUtils.js';\n\nconst UIStrings = {\n  /**\n   *@description Aria alert to read the suggestion for the suggestion box when typing in text editor\n   *@example {name} PH1\n   *@example {2} PH2\n   *@example {5} PH3\n   */\n  sSuggestionSOfS: '{PH1}, suggestion {PH2} of {PH3}',\n  /**\n   *@description Aria alert to confirm the suggestion when it is selected from the suggestion box\n   *@example {name} PH1\n   */\n  sSuggestionSSelected: '{PH1}, suggestion selected',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/SuggestBox.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport interface SuggestBoxDelegate {\n  applySuggestion(suggestion: Suggestion|null, isIntermediateSuggestion?: boolean): void;\n\n  /**\n   * acceptSuggestion will be always called after call to applySuggestion with isIntermediateSuggestion being equal to false.\n   */\n  acceptSuggestion(): void;\n\n  /**\n   * Called to obtain the owner element.\n   */\n  ownerElement(): Element;\n}\n\nexport class SuggestBox implements ListDelegate<Suggestion> {\n  private readonly suggestBoxDelegate: SuggestBoxDelegate;\n  private readonly maxItemsHeight: number|undefined;\n  private rowHeight: number;\n  private userEnteredText: string;\n  private readonly defaultSelectionIsDimmed: boolean;\n  private onlyCompletion: Suggestion|null;\n  private readonly items: ListModel<Suggestion>;\n  private readonly list: ListControl<Suggestion>;\n  element: HTMLDivElement;\n  private readonly glassPane: GlassPane;\n\n  constructor(suggestBoxDelegate: SuggestBoxDelegate, maxItemsHeight?: number) {\n    this.suggestBoxDelegate = suggestBoxDelegate;\n    this.maxItemsHeight = maxItemsHeight;\n    this.rowHeight = 17;\n    this.userEnteredText = '';\n    this.defaultSelectionIsDimmed = false;\n\n    this.onlyCompletion = null;\n\n    this.items = new ListModel();\n    this.list = new ListControl(this.items, this, ListMode.EqualHeightItems);\n    this.element = this.list.element;\n    this.element.classList.add('suggest-box');\n    this.element.addEventListener('mousedown', event => event.preventDefault(), true);\n    this.element.addEventListener('click', this.onClick.bind(this), false);\n    this.element.setAttribute(\n        'jslog',\n        `${VisualLogging.menu().parent('mapped').track({resize: true, keydown: 'ArrowUp|ArrowDown|PageUp|PageDown'})}`);\n\n    this.glassPane = new GlassPane();\n    this.glassPane.setAnchorBehavior(AnchorBehavior.PREFER_BOTTOM);\n    this.glassPane.setOutsideClickCallback(this.hide.bind(this));\n    const shadowRoot = createShadowRootWithCoreStyles(\n        this.glassPane.contentElement, {cssFile: suggestBoxStyles, delegatesFocus: undefined});\n    shadowRoot.appendChild(this.element);\n  }\n\n  visible(): boolean {\n    return this.glassPane.isShowing();\n  }\n\n  setPosition(anchorBox: AnchorBox): void {\n    this.glassPane.setContentAnchorBox(anchorBox);\n  }\n\n  setAnchorBehavior(behavior: AnchorBehavior): void {\n    this.glassPane.setAnchorBehavior(behavior);\n  }\n\n  private updateMaxSize(items: Suggestion[]): void {\n    const maxWidth = this.maxWidth(items);\n    const length = this.maxItemsHeight ? Math.min(this.maxItemsHeight, items.length) : items.length;\n    const maxHeight = length * this.rowHeight;\n    this.glassPane.setMaxContentSize(new Size(maxWidth, maxHeight));\n  }\n\n  private maxWidth(items: Suggestion[]): number {\n    const kMaxWidth = 300;\n    if (!items.length) {\n      return kMaxWidth;\n    }\n    let maxItem;\n    let maxLength: number = -Infinity;\n    for (let i = 0; i < items.length; i++) {\n      const length = (items[i].title || items[i].text).length + (items[i].subtitle || '').length;\n      if (length > maxLength) {\n        maxLength = length;\n        maxItem = items[i];\n      }\n    }\n    const element = this.createElementForItem((maxItem as Suggestion));\n    const preferredWidth =\n        measurePreferredSize(element, this.element).width + measuredScrollbarWidth(this.element.ownerDocument);\n    return Math.min(kMaxWidth, preferredWidth);\n  }\n\n  private show(): void {\n    if (this.visible()) {\n      return;\n    }\n    VisualLogging.setMappedParent(this.element, this.suggestBoxDelegate.ownerElement());\n    // TODO(dgozman): take document as a parameter.\n    this.glassPane.show(document);\n    const suggestion = ({text: '1', subtitle: '12'} as Suggestion);\n    this.rowHeight = measurePreferredSize(this.createElementForItem(suggestion), this.element).height;\n    ARIAUtils.setControls(this.suggestBoxDelegate.ownerElement(), this.element);\n    ARIAUtils.setExpanded(this.suggestBoxDelegate.ownerElement(), true);\n  }\n\n  hide(): void {\n    if (!this.visible()) {\n      return;\n    }\n    this.glassPane.hide();\n    ARIAUtils.setControls(this.suggestBoxDelegate.ownerElement(), null);\n    ARIAUtils.setExpanded(this.suggestBoxDelegate.ownerElement(), false);\n  }\n\n  private applySuggestion(isIntermediateSuggestion?: boolean): boolean {\n    if (this.onlyCompletion) {\n      isIntermediateSuggestion ?\n          ARIAUtils.alert(i18nString(\n              UIStrings.sSuggestionSOfS,\n              {PH1: this.onlyCompletion.text, PH2: this.list.selectedIndex() + 1, PH3: this.items.length})) :\n          ARIAUtils.alert(i18nString(UIStrings.sSuggestionSSelected, {PH1: this.onlyCompletion.text}));\n      this.suggestBoxDelegate.applySuggestion(this.onlyCompletion, isIntermediateSuggestion);\n      return true;\n    }\n    const suggestion = this.list.selectedItem();\n    if (suggestion && suggestion.text) {\n      isIntermediateSuggestion ?\n          ARIAUtils.alert(i18nString(UIStrings.sSuggestionSOfS, {\n            PH1: suggestion.title || suggestion.text,\n            PH2: this.list.selectedIndex() + 1,\n            PH3: this.items.length,\n          })) :\n          ARIAUtils.alert(i18nString(UIStrings.sSuggestionSSelected, {PH1: suggestion.title || suggestion.text}));\n    }\n    this.suggestBoxDelegate.applySuggestion(suggestion, isIntermediateSuggestion);\n\n    return this.visible() && Boolean(suggestion);\n  }\n\n  acceptSuggestion(): boolean {\n    const result = this.applySuggestion();\n    this.hide();\n    if (!result) {\n      return false;\n    }\n\n    this.suggestBoxDelegate.acceptSuggestion();\n\n    return true;\n  }\n\n  createElementForItem(item: Suggestion): Element {\n    const query = this.userEnteredText;\n    const element = document.createElement('div');\n    element.classList.add('suggest-box-content-item');\n    element.classList.add('source-code');\n    if (item.isSecondary) {\n      element.classList.add('secondary');\n    }\n    element.tabIndex = -1;\n    const maxTextLength = 50 + query.length;\n    const displayText = Platform.StringUtilities.trimEndWithMaxLength((item.title || item.text).trim(), maxTextLength)\n                            .replace(/\\n/g, '\\u21B5');\n\n    const titleElement = element.createChild('span', 'suggestion-title');\n    const index = displayText.toLowerCase().indexOf(query.toLowerCase());\n    if (index > 0) {\n      titleElement.createChild('span').textContent = displayText.substring(0, index);\n    }\n    if (index > -1) {\n      titleElement.createChild('span', 'query').textContent = displayText.substring(index, index + query.length);\n    }\n    titleElement.createChild('span').textContent = displayText.substring(index > -1 ? index + query.length : 0);\n    titleElement.createChild('span', 'spacer');\n    if (item.subtitleRenderer) {\n      const subtitleElement = (item.subtitleRenderer.call(null) as HTMLElement);\n      subtitleElement.classList.add('suggestion-subtitle');\n      element.appendChild(subtitleElement);\n    } else if (item.subtitle) {\n      const subtitleElement = element.createChild('span', 'suggestion-subtitle');\n      subtitleElement.textContent =\n          Platform.StringUtilities.trimEndWithMaxLength(item.subtitle, maxTextLength - displayText.length);\n    }\n    if (item.iconElement) {\n      element.appendChild(item.iconElement);\n    }\n    return element;\n  }\n\n  heightForItem(_item: Suggestion): number {\n    return this.rowHeight;\n  }\n\n  isItemSelectable(_item: Suggestion): boolean {\n    return true;\n  }\n\n  selectedItemChanged(from: Suggestion|null, to: Suggestion|null, fromElement: Element|null, toElement: Element|null):\n      void {\n    if (fromElement) {\n      fromElement.classList.remove('selected', 'force-white-icons');\n    }\n    if (toElement) {\n      toElement.classList.add('selected');\n      toElement.classList.add('force-white-icons');\n    }\n    this.applySuggestion(true);\n  }\n\n  updateSelectedItemARIA(_fromElement: Element|null, _toElement: Element|null): boolean {\n    return false;\n  }\n\n  private onClick(event: Event): void {\n    const item = this.list.itemForNode((event.target as Node | null));\n    if (!item) {\n      return;\n    }\n\n    this.list.selectItem(item);\n    this.acceptSuggestion();\n    event.consume(true);\n  }\n\n  private canShowBox(\n      completions: Suggestion[], highestPriorityItem: Suggestion|null, canShowForSingleItem: boolean,\n      userEnteredText: string): boolean {\n    if (!completions || !completions.length) {\n      return false;\n    }\n\n    if (completions.length > 1) {\n      return true;\n    }\n\n    if (!highestPriorityItem || highestPriorityItem.isSecondary ||\n        !highestPriorityItem.text.startsWith(userEnteredText)) {\n      return true;\n    }\n\n    // Do not show a single suggestion if it is the same as user-entered query, even if allowed to show single-item suggest boxes.\n    return canShowForSingleItem && highestPriorityItem.text !== userEnteredText;\n  }\n\n  updateSuggestions(\n      anchorBox: AnchorBox, completions: Suggestion[], selectHighestPriority: boolean, canShowForSingleItem: boolean,\n      userEnteredText: string): void {\n    this.onlyCompletion = null;\n    const highestPriorityItem =\n        selectHighestPriority ? completions.reduce((a, b) => (a.priority || 0) >= (b.priority || 0) ? a : b) : null;\n    if (this.canShowBox(completions, highestPriorityItem, canShowForSingleItem, userEnteredText)) {\n      this.userEnteredText = userEnteredText;\n\n      this.show();\n      this.updateMaxSize(completions);\n      this.glassPane.setContentAnchorBox(anchorBox);\n      this.list.invalidateItemHeight();\n      this.items.replaceAll(completions);\n\n      if (highestPriorityItem && !highestPriorityItem.isSecondary) {\n        this.list.selectItem(highestPriorityItem, true);\n      } else {\n        this.list.selectItem(null);\n      }\n    } else {\n      if (completions.length === 1) {\n        this.onlyCompletion = completions[0];\n        this.applySuggestion(true);\n      }\n      this.hide();\n    }\n  }\n\n  keyPressed(event: KeyboardEvent): boolean {\n    switch (event.key) {\n      case 'Enter':\n        return this.enterKeyPressed();\n      case 'ArrowUp':\n        return this.list.selectPreviousItem(true, false);\n      case 'ArrowDown':\n        return this.list.selectNextItem(true, false);\n      case 'PageUp':\n        return this.list.selectItemPreviousPage(false);\n      case 'PageDown':\n        return this.list.selectItemNextPage(false);\n    }\n    return false;\n  }\n\n  enterKeyPressed(): boolean {\n    const hasSelectedItem = Boolean(this.list.selectedItem()) || Boolean(this.onlyCompletion);\n    this.acceptSuggestion();\n\n    // Report the event as non-handled if there is no selected item,\n    // to commit the input or handle it otherwise.\n    return hasSelectedItem;\n  }\n}\nexport interface Suggestion {\n  text: string;\n  title?: string;\n  subtitle?: string;\n  priority?: number;\n  isSecondary?: boolean;\n  subtitleRenderer?: (() => Element);\n  selectionRange?: {\n    startColumn: number,\n    endColumn: number,\n  };\n  hideGhostText?: boolean;\n  iconElement?: HTMLElement;\n}\n\nexport type Suggestions = Suggestion[];\nexport interface AutocompleteConfig {\n  substituteRangeCallback?: ((arg0: number, arg1: number) => TextUtils.TextRange.TextRange | null);\n  tooltipCallback?: ((arg0: number, arg1: number) => Promise<Element|null>);\n  suggestionsCallback?:\n      ((arg0: TextUtils.TextRange.TextRange, arg1: TextUtils.TextRange.TextRange,\n        arg2?: boolean|undefined) => Promise<Suggestion[]>| null);\n  isWordChar?: ((arg0: string) => boolean);\n  anchorBehavior?: AnchorBehavior;\n}\n"],
  "mappings": "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",
  "names": []
}
