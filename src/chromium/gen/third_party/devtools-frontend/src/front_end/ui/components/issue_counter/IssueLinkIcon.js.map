{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/components/issue_counter/IssueLinkIcon.ts"],
  "sourcesContent": ["// Copyright (c) 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/components/icon_button/icon_button.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as IssuesManager from '../../../models/issues_manager/issues_manager.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport {getIssueKindIconData} from './IssueCounter.js';\nimport IssueLinkIconStyles from './issueLinkIcon.css.js';\n\nconst {html} = LitHtml;\n\nconst UIStrings = {\n  /**\n   * @description Title for a link to show an issue in the issues tab\n   */\n  clickToShowIssue: 'Click to show issue in the issues tab',\n  /**\n   * @description Title for a link to show an issue in the issues tab\n   * @example {A title of an Issue} title\n   */\n  clickToShowIssueWithTitle: 'Click to open the issue tab and show issue: {title}',\n  /**\n   *@description Title for an link to show an issue that is unavailable because the issue couldn't be resolved\n   */\n  issueUnavailable: 'Issue unavailable at this time',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/components/issue_counter/IssueLinkIcon.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface IssueLinkIconData {\n  issue?: IssuesManager.Issue.Issue|null;\n  issueId?: Protocol.Audits.IssueId;\n  issueResolver?: IssuesManager.IssueResolver.IssueResolver;\n  additionalOnClickAction?: () => void;\n  revealOverride?: (revealable: unknown, omitFocus?: boolean) => Promise<void>;\n}\n\nexport const extractShortPath = (path: string): string => {\n  // 1st regex matches everything after last '/'\n  // if path ends with '/', 2nd regex returns everything between the last two '/'\n  return (/[^/]+$/.exec(path) || /[^/]+\\/$/.exec(path) || [''])[0];\n};\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nexport class IssueLinkIcon extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  // The value `null` indicates that the issue is not available,\n  // `undefined` that it is still being resolved.\n  #issue?: IssuesManager.Issue.Issue|null;\n  #issueTitle: string|null = null;\n  #issueId?: Protocol.Audits.IssueId;\n  #issueResolver?: IssuesManager.IssueResolver.IssueResolver;\n  #additionalOnClickAction?: () => void;\n  #reveal = Common.Revealer.reveal;\n\n  set data(data: IssueLinkIconData) {\n    this.#issue = data.issue;\n    this.#issueId = data.issueId;\n    this.#issueResolver = data.issueResolver;\n    if (!this.#issue) {\n      if (!this.#issueId) {\n        throw new Error('Either `issue` or `issueId` must be provided');\n      } else if (!this.#issueResolver) {\n        throw new Error('An `IssueResolver` must be provided if an `issueId` is provided.');\n      }\n    }\n    this.#additionalOnClickAction = data.additionalOnClickAction;\n    if (data.revealOverride) {\n      this.#reveal = data.revealOverride;\n    }\n    void this.#fetchIssueData();\n    void this.#render();\n  }\n\n  async #fetchIssueData(): Promise<void> {\n    if (!this.#issue && this.#issueId) {\n      try {\n        this.#issue = await this.#issueResolver?.waitFor(this.#issueId);\n      } catch {\n        this.#issue = null;\n      }\n    }\n    const description = this.#issue?.getDescription();\n    if (description) {\n      const title = await IssuesManager.MarkdownIssueDescription.getIssueTitleFromMarkdownDescription(description);\n      if (title) {\n        this.#issueTitle = title;\n      }\n    }\n    await this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [IssueLinkIconStyles];\n  }\n\n  get data(): IssueLinkIconData {\n    return {\n      issue: this.#issue,\n      issueId: this.#issueId,\n      issueResolver: this.#issueResolver,\n      additionalOnClickAction: this.#additionalOnClickAction,\n      revealOverride: this.#reveal !== Common.Revealer.reveal ? this.#reveal : undefined,\n    };\n  }\n\n  handleClick(event: MouseEvent): void {\n    if (event.button !== 0) {\n      return;  // Only handle left-click for now.\n    }\n    if (this.#issue) {\n      void this.#reveal(this.#issue);\n    }\n    this.#additionalOnClickAction?.();\n    event.consume();\n  }\n\n  #getTooltip(): Platform.UIString.LocalizedString {\n    if (this.#issueTitle) {\n      return i18nString(UIStrings.clickToShowIssueWithTitle, {title: this.#issueTitle});\n    }\n    if (this.#issue) {\n      return i18nString(UIStrings.clickToShowIssue);\n    }\n    return i18nString(UIStrings.issueUnavailable);\n  }\n\n  #getIconName(): string {\n    if (!this.#issue) {\n      return 'issue-questionmark-filled';\n    }\n    const {iconName} = getIssueKindIconData(this.#issue.getKind());\n    return iconName;\n  }\n\n  #render(): Promise<void> {\n    return coordinator.write(() => {\n      // clang-format off\n      LitHtml.render(html`\n      <button class=${LitHtml.Directives.classMap({link: Boolean(this.#issue)})}\n              title=${this.#getTooltip()}\n              jslog=${VisualLogging.link('issue').track({click: true})}\n              @click=${this.handleClick}>\n        <devtools-icon name=${this.#getIconName()}></devtools-icon>\n      </button>`,\n      this.#shadow, {host: this});\n      // clang-format on\n    });\n  }\n}\n\ncustomElements.define('devtools-issue-link-icon', IssueLinkIcon);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-issue-link-icon': IssueLinkIcon;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
