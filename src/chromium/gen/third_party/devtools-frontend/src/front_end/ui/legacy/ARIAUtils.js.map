{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/ARIAUtils.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\n\nimport {Dialog} from './Dialog.js';\n\nlet id = 0;\n\nexport function nextId(prefix: string): string {\n  return (prefix || '') + ++id;\n}\n\nexport function bindLabelToControl(label: Element, control: Element): void {\n  const controlId = nextId('labelledControl');\n  control.id = controlId;\n  label.setAttribute('for', controlId);\n}\n\nexport function markAsAlert(element: Element): void {\n  element.setAttribute('role', 'alert');\n  element.setAttribute('aria-live', 'polite');\n}\n\nexport function markAsApplication(element: Element): void {\n  element.setAttribute('role', 'application');\n}\n\nexport function markAsButton(element: Element): void {\n  element.setAttribute('role', 'button');\n}\n\nexport function markAsCheckbox(element: Element): void {\n  element.setAttribute('role', 'checkbox');\n}\n\nexport function markAsCombobox(element: Element): void {\n  element.setAttribute('role', 'combobox');\n}\n\nexport function markAsModalDialog(element: Element): void {\n  element.setAttribute('role', 'dialog');\n  element.setAttribute('aria-modal', 'true');\n}\n\nexport function markAsGroup(element: Element): void {\n  element.setAttribute('role', 'group');\n}\n\nexport function markAsLink(element: Element): void {\n  element.setAttribute('role', 'link');\n}\n\nexport function markAsMenuButton(element: Element): void {\n  markAsButton(element);\n  element.setAttribute('aria-haspopup', 'true');\n}\n\nexport function markAsProgressBar(element: Element, min: number|undefined = 0, max: number|undefined = 100): void {\n  element.setAttribute('role', 'progressbar');\n  element.setAttribute('aria-valuemin', min.toString());\n  element.setAttribute('aria-valuemax', max.toString());\n}\n\nexport function markAsTab(element: Element): void {\n  element.setAttribute('role', 'tab');\n}\n\nexport function markAsTablist(element: Element): void {\n  element.setAttribute('role', 'tablist');\n}\n\nexport function markAsTabpanel(element: Element): void {\n  element.setAttribute('role', 'tabpanel');\n}\n\nexport function markAsTree(element: Element): void {\n  element.setAttribute('role', 'tree');\n}\n\nexport function markAsTreeitem(element: Element): void {\n  element.setAttribute('role', 'treeitem');\n}\n\nexport function markAsTextBox(element: Element): void {\n  element.setAttribute('role', 'textbox');\n}\n\nexport function markAsMenu(element: Element): void {\n  element.setAttribute('role', 'menu');\n}\n\nexport function markAsMenuItem(element: Element): void {\n  element.setAttribute('role', 'menuitem');\n}\n\nexport function markAsMenuItemCheckBox(element: Element): void {\n  element.setAttribute('role', 'menuitemcheckbox');\n}\n\nexport function markAsMenuItemSubMenu(element: Element): void {\n  markAsMenuItem(element);\n  element.setAttribute('aria-haspopup', 'true');\n}\n\nexport function markAsList(element: Element): void {\n  element.setAttribute('role', 'list');\n}\n\nexport function markAsListitem(element: Element): void {\n  element.setAttribute('role', 'listitem');\n}\n\nexport function markAsMain(element: Element): void {\n  element.setAttribute('role', 'main');\n}\n\nexport function markAsComplementary(element: Element): void {\n  element.setAttribute('role', 'complementary');\n}\n\nexport function markAsNavigation(element: Element): void {\n  element.setAttribute('role', 'navigation');\n}\n\n/**\n * Must contain children whose role is option.\n */\nexport function markAsListBox(element: Element): void {\n  element.setAttribute('role', 'listbox');\n}\n\nexport function markAsMultiSelectable(element: Element): void {\n  element.setAttribute('aria-multiselectable', 'true');\n}\n\n/**\n * Must be contained in, or owned by, an element with the role listbox.\n */\nexport function markAsOption(element: Element): void {\n  element.setAttribute('role', 'option');\n}\n\nexport function markAsRadioGroup(element: Element): void {\n  element.setAttribute('role', 'radiogroup');\n}\n\nexport function markAsHidden(element: Element): void {\n  element.setAttribute('aria-hidden', 'true');\n}\n\nexport function markAsSlider(element: Element, min: number|undefined = 0, max: number|undefined = 100): void {\n  element.setAttribute('role', 'slider');\n  element.setAttribute('aria-valuemin', String(min));\n  element.setAttribute('aria-valuemax', String(max));\n}\n\nexport function markAsHeading(element: Element, level: number): void {\n  element.setAttribute('role', 'heading');\n  element.setAttribute('aria-level', level.toString());\n}\n\nexport function markAsPoliteLiveRegion(element: Element, isAtomic: boolean): void {\n  element.setAttribute('aria-live', 'polite');\n  if (isAtomic) {\n    element.setAttribute('aria-atomic', 'true');\n  }\n}\n\nexport function markAsLog(element: Element): void {\n  element.setAttribute('role', 'log');\n}\n\nexport function hasRole(element: Element): boolean {\n  return element.hasAttribute('role');\n}\n\nexport function removeRole(element: Element): void {\n  element.removeAttribute('role');\n}\n\nexport function setPlaceholder(element: Element, placeholder: string|null): void {\n  if (placeholder) {\n    element.setAttribute('aria-placeholder', placeholder);\n  } else {\n    element.removeAttribute('aria-placeholder');\n  }\n}\n\nexport function markAsPresentation(element: Element): void {\n  element.setAttribute('role', 'presentation');\n}\n\nexport function markAsStatus(element: Element): void {\n  element.setAttribute('role', 'status');\n}\n\nexport function ensureId(element: Element): void {\n  if (!element.id) {\n    element.id = nextId('ariaElement');\n  }\n}\n\nexport function setAriaValueText(element: Element, valueText: string): void {\n  element.setAttribute('aria-valuetext', valueText);\n}\n\nexport function setAriaValueNow(element: Element, value: string): void {\n  element.setAttribute('aria-valuenow', value);\n}\n\nexport function setAriaValueMinMax(element: Element, min: string, max: string): void {\n  element.setAttribute('aria-valuemin', min);\n  element.setAttribute('aria-valuemax', max);\n}\n\nexport function setControls(element: Element, controlledElement: Element|null): void {\n  if (!controlledElement) {\n    element.removeAttribute('aria-controls');\n    return;\n  }\n\n  ensureId(controlledElement);\n  element.setAttribute('aria-controls', controlledElement.id);\n}\n\nexport function setChecked(element: Element, value: boolean): void {\n  element.setAttribute('aria-checked', (Boolean(value)).toString());\n}\n\nexport function setCheckboxAsIndeterminate(element: Element): void {\n  element.setAttribute('aria-checked', 'mixed');\n}\n\nexport function setDisabled(element: Element, value: boolean): void {\n  element.setAttribute('aria-disabled', (Boolean(value)).toString());\n}\n\nexport function setExpanded(element: Element, value: boolean): void {\n  element.setAttribute('aria-expanded', (Boolean(value)).toString());\n}\n\nexport function unsetExpandable(element: Element): void {\n  element.removeAttribute('aria-expanded');\n}\n\nexport function setHidden(element: Element, value: boolean): void {\n  element.setAttribute('aria-hidden', (Boolean(value)).toString());\n}\n\nexport function setLevel(element: Element, level: number): void {\n  element.setAttribute('aria-level', level.toString());\n}\n\nexport const enum AutocompleteInteractionModel {\n  INLINE = 'inline',\n  LIST = 'list',\n  BOTH = 'both',\n  NONE = 'none',\n}\n\nexport function setAutocomplete(\n    element: Element, interactionModel: AutocompleteInteractionModel = AutocompleteInteractionModel.NONE): void {\n  element.setAttribute('aria-autocomplete', interactionModel);\n}\n\nexport function clearAutocomplete(element: Element): void {\n  element.removeAttribute('aria-autocomplete');\n}\n\nexport const enum PopupRole {\n  FALSE = 'false',       // (default) Indicates the element does not have a popup.\n  TRUE = 'true',         // Indicates the popup is a menu.\n  MENU = 'menu',         // Indicates the popup is a menu.\n  LIST_BOX = 'listbox',  // Indicates the popup is a listbox.\n  TREE = 'tree',         // Indicates the popup is a tree.\n  GRID = 'grid',         // Indicates the popup is a grid.\n  DIALOG = 'dialog',     // Indicates the popup is a dialog.\n}\n\nexport function setHasPopup(element: Element, value: PopupRole = PopupRole.FALSE): void {\n  if (value !== PopupRole.FALSE) {\n    element.setAttribute('aria-haspopup', value);\n  } else {\n    element.removeAttribute('aria-haspopup');\n  }\n}\n\nexport function setSelected(element: Element, value: boolean): void {\n  // aria-selected behaves differently for false and undefined.\n  // Often times undefined values are unintentionally typed as booleans.\n  // Use !! to make sure this is true or false.\n  element.setAttribute('aria-selected', (Boolean(value)).toString());\n}\n\nexport function clearSelected(element: Element): void {\n  element.removeAttribute('aria-selected');\n}\n\nexport function setInvalid(element: Element, value: boolean): void {\n  if (value) {\n    element.setAttribute('aria-invalid', value.toString());\n  } else {\n    element.removeAttribute('aria-invalid');\n  }\n}\n\nexport function setPressed(element: Element, value: boolean): void {\n  // aria-pressed behaves differently for false and undefined.\n  // Often times undefined values are unintentionally typed as booleans.\n  // Use !! to make sure this is true or false.\n  element.setAttribute('aria-pressed', (Boolean(value)).toString());\n}\n\nexport function setValueNow(element: Element, value: number): void {\n  element.setAttribute('aria-valuenow', value.toString());\n}\n\nexport function setValueText(element: Element, value: number): void {\n  element.setAttribute('aria-valuetext', value.toString());\n}\n\nexport function setProgressBarValue(element: Element, valueNow: number, valueText?: string): void {\n  element.setAttribute('aria-valuenow', valueNow.toString());\n\n  if (valueText) {\n    element.setAttribute('aria-valuetext', valueText);\n  }\n}\n\nexport function setLabel(element: Element, name: string): void {\n  element.setAttribute('aria-label', name);\n}\n\nexport function setDescription(element: Element, description: string): void {\n  // Nodes in the accessibility tree are made up of a core\n  // triplet of \"name\", \"value\", \"description\"\n  // The \"description\" field is taken from either\n  // 1. The title html attribute\n  // 2. The value of the aria-description attribute.\n  // 3. The textContent of an element specified by aria-describedby\n  //\n  // The title attribute has the side effect of causing tooltips\n  // to appear with the description when the element is hovered.\n  // This is usually fine, except that DevTools has its own styled\n  // tooltips which would interfere with the browser tooltips.\n  element.setAttribute('aria-description', description);\n}\n\nexport function setActiveDescendant(element: Element, activedescendant: Element|null): void {\n  if (!activedescendant) {\n    element.removeAttribute('aria-activedescendant');\n    return;\n  }\n\n  if (activedescendant.isConnected && element.isConnected) {\n    console.assert(\n        Platform.DOMUtilities.getEnclosingShadowRootForNode(activedescendant) ===\n            Platform.DOMUtilities.getEnclosingShadowRootForNode(element),\n        'elements are not in the same shadow dom');\n  }\n\n  ensureId(activedescendant);\n  element.setAttribute('aria-activedescendant', activedescendant.id);\n}\n\nexport function setSetSize(element: Element, size: number): void {\n  element.setAttribute('aria-setsize', size.toString());\n}\n\nexport function setPositionInSet(element: Element, position: number): void {\n  element.setAttribute('aria-posinset', position.toString());\n}\n\nfunction hideFromLayout(element: HTMLElement): void {\n  element.style.position = 'absolute';\n  element.style.left = '-999em';\n  element.style.width = '100em';\n  element.style.overflow = 'hidden';\n}\n\ntype AlertState = {\n  one: HTMLDivElement,\n  two: HTMLDivElement,\n  alertToggle: boolean,\n};\nconst alertElements = new WeakMap<HTMLElement, AlertState>();\n\nfunction createAlertElement(container: HTMLElement): HTMLDivElement {\n  const element = container.createChild('div');\n  hideFromLayout(element);\n  element.setAttribute('role', 'alert');\n  element.setAttribute('aria-atomic', 'true');\n  return element as HTMLDivElement;\n}\n\nexport function getOrCreateAlertElements(container: HTMLElement = document.body): AlertState {\n  let state = alertElements.get(container);\n  if (!state) {\n    state = {\n      one: createAlertElement(container),\n      two: createAlertElement(container),\n      alertToggle: false,\n    };\n    alertElements.set(container, state);\n  }\n  return state;\n}\n\n/**\n * This function instantiates and switches off returning one of two offscreen alert elements.\n * We utilize two alert elements to ensure that alerts with the same string are still registered\n * as changes and trigger screen reader announcement.\n */\nexport function alertElementInstance(container = document.body): HTMLElement {\n  const state = getOrCreateAlertElements(container);\n  state.alertToggle = !state.alertToggle;\n  if (state.alertToggle) {\n    state.two.textContent = '';\n    return state.one;\n  }\n  state.one.textContent = '';\n  return state.two;\n}\n\n/**\n * This function is used to announce a message with the screen reader.\n * Setting the textContent would allow the SR to access the offscreen element via browse mode\n */\nexport function alert(message: string): void {\n  const dialog = Dialog.getInstance();\n  const element = alertElementInstance(dialog && dialog.isShowing() ? dialog.contentElement : undefined);\n  element.textContent = Platform.StringUtilities.trimEndWithMaxLength(message, 10000);\n}\n"],
  "mappings": "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",
  "names": ["AutocompleteInteractionModel", "PopupRole"]
}
