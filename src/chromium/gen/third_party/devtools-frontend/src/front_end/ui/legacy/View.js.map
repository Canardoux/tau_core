{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/View.ts"],
  "sourcesContent": ["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\n\nimport type {TabbedPane} from './TabbedPane.js';\nimport type {ToolbarItem, ToolbarMenuButton} from './Toolbar.js';\nimport {ViewManager} from './ViewManager.js';\nimport {VBox, type Widget} from './Widget.js';\n\nexport interface View {\n  viewId(): string;\n\n  title(): Platform.UIString.LocalizedString;\n\n  isCloseable(): boolean;\n\n  isPreviewFeature(): boolean;\n\n  iconName(): string|undefined;\n\n  isTransient(): boolean;\n\n  toolbarItems(): Promise<ToolbarItem[]>;\n\n  widget(): Promise<Widget>;\n\n  disposeView(): void|Promise<void>;\n}\n\nexport class SimpleView extends VBox implements View {\n  readonly #title: Platform.UIString.LocalizedString;\n  readonly #viewId: Lowercase<string>;\n\n  constructor(title: Platform.UIString.LocalizedString, useShadowDom?: boolean, viewId?: Lowercase<string>) {\n    super(useShadowDom);\n    this.#title = title;\n    if (viewId) {\n      if (!Platform.StringUtilities.isExtendedKebabCase(viewId)) {\n        throw new Error(`Invalid view ID '${viewId}'`);\n      }\n    }\n    this.#viewId = viewId ?? Platform.StringUtilities.toKebabCase(title);\n  }\n\n  viewId(): string {\n    return this.#viewId;\n  }\n\n  title(): Platform.UIString.LocalizedString {\n    return this.#title;\n  }\n\n  isCloseable(): boolean {\n    return false;\n  }\n\n  isTransient(): boolean {\n    return false;\n  }\n\n  toolbarItems(): Promise<ToolbarItem[]> {\n    return Promise.resolve([]);\n  }\n\n  widget(): Promise<Widget> {\n    return Promise.resolve(this);\n  }\n\n  revealView(): Promise<void> {\n    return ViewManager.instance().revealView(this);\n  }\n\n  disposeView(): void {\n  }\n\n  isPreviewFeature(): boolean {\n    return false;\n  }\n\n  iconName(): string|undefined {\n    return undefined;\n  }\n}\n\nexport interface ViewLocation {\n  appendApplicableItems(locationName: string): void;\n  appendView(view: View, insertBefore?: View|null): void;\n  showView(view: View, insertBefore?: View|null, userGesture?: boolean): Promise<void>;\n  removeView(view: View): void;\n  widget(): Widget;\n}\n\nexport interface TabbedViewLocation extends ViewLocation {\n  tabbedPane(): TabbedPane;\n  enableMoreTabsButton(): ToolbarMenuButton;\n}\n\nexport interface ViewLocationResolver {\n  resolveLocation(location: string): ViewLocation|null;\n}\n"],
  "mappings": ";AAIA,YAAY,cAAc;AAI1B,SAAQ,mBAAkB;AAC1B,SAAQ,YAAwB;AAsBzB,aAAM,mBAAmB,KAAqB;AAAA,EAC1C;AAAA,EACA;AAAA,EAET,YAAY,OAA0C,cAAwB,QAA4B;AACxG,UAAM,YAAY;AAClB,SAAK,SAAS;AACd,QAAI,QAAQ;AACV,UAAI,CAAC,SAAS,gBAAgB,oBAAoB,MAAM,GAAG;AACzD,cAAM,IAAI,MAAM,oBAAoB,MAAM,GAAG;AAAA,MAC/C;AAAA,IACF;AACA,SAAK,UAAU,UAAU,SAAS,gBAAgB,YAAY,KAAK;AAAA,EACrE;AAAA,EAEA,SAAiB;AACf,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,QAA2C;AACzC,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,cAAuB;AACrB,WAAO;AAAA,EACT;AAAA,EAEA,cAAuB;AACrB,WAAO;AAAA,EACT;AAAA,EAEA,eAAuC;AACrC,WAAO,QAAQ,QAAQ,CAAC,CAAC;AAAA,EAC3B;AAAA,EAEA,SAA0B;AACxB,WAAO,QAAQ,QAAQ,IAAI;AAAA,EAC7B;AAAA,EAEA,aAA4B;AAC1B,WAAO,YAAY,SAAS,EAAE,WAAW,IAAI;AAAA,EAC/C;AAAA,EAEA,cAAoB;AAAA,EACpB;AAAA,EAEA,mBAA4B;AAC1B,WAAO;AAAA,EACT;AAAA,EAEA,WAA6B;AAC3B,WAAO;AAAA,EACT;AACF;",
  "names": []
}
