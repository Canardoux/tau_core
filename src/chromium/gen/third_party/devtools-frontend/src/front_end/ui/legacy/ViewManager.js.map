{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/ViewManager.ts"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport type * as Root from '../../core/root/root.js';\nimport * as IconButton from '../components/icon_button/icon_button.js';\nimport * as VisualLogging from '../visual_logging/visual_logging.js';\n\nimport * as ARIAUtils from './ARIAUtils.js';\nimport type {ContextMenu} from './ContextMenu.js';\nimport {type EventData, Events as TabbedPaneEvents, TabbedPane} from './TabbedPane.js';\nimport {type ItemsProvider, Toolbar, type ToolbarItem, ToolbarMenuButton} from './Toolbar.js';\nimport {createTextChild} from './UIUtils.js';\nimport type {TabbedViewLocation, View, ViewLocation} from './View.js';\nimport viewContainersStyles from './viewContainers.css.legacy.js';\nimport {\n  getLocalizedViewLocationCategory,\n  getRegisteredLocationResolvers,\n  getRegisteredViewExtensions,\n  maybeRemoveViewExtension,\n  registerLocationResolver,\n  registerViewExtension,\n  resetViewRegistration,\n  ViewLocationCategory,\n  ViewLocationValues,\n  ViewPersistence,\n  type ViewRegistration,\n} from './ViewRegistration.js';\nimport {VBox, type Widget} from './Widget.js';\n\nconst UIStrings = {\n  /**\n   *@description Aria label for the tab panel view container\n   *@example {Sensors} PH1\n   */\n  sPanel: '{PH1} panel',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/ViewManager.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport const defaultOptionsForTabs = {\n  security: true,\n  freestyler: true,\n};\n\nexport class PreRegisteredView implements View {\n  private readonly viewRegistration: ViewRegistration;\n  private widgetPromise: Promise<Widget>|null;\n\n  constructor(viewRegistration: ViewRegistration) {\n    this.viewRegistration = viewRegistration;\n    this.widgetPromise = null;\n  }\n\n  title(): Common.UIString.LocalizedString {\n    return this.viewRegistration.title();\n  }\n\n  commandPrompt(): Common.UIString.LocalizedString {\n    return this.viewRegistration.commandPrompt();\n  }\n  isCloseable(): boolean {\n    return this.viewRegistration.persistence === ViewPersistence.CLOSEABLE;\n  }\n\n  isPreviewFeature(): boolean {\n    return Boolean(this.viewRegistration.isPreviewFeature);\n  }\n\n  iconName(): string|undefined {\n    return this.viewRegistration.iconName;\n  }\n\n  isTransient(): boolean {\n    return this.viewRegistration.persistence === ViewPersistence.TRANSIENT;\n  }\n\n  viewId(): string {\n    return this.viewRegistration.id;\n  }\n\n  location(): ViewLocationValues|undefined {\n    return this.viewRegistration.location;\n  }\n\n  order(): number|undefined {\n    return this.viewRegistration.order;\n  }\n\n  settings(): string[]|undefined {\n    return this.viewRegistration.settings;\n  }\n\n  tags(): string|undefined {\n    if (this.viewRegistration.tags) {\n      // Get localized keys and separate by null character to prevent fuzzy matching from matching across them.\n      return this.viewRegistration.tags.map(tag => tag()).join('\\0');\n    }\n    return undefined;\n  }\n\n  persistence(): ViewPersistence|undefined {\n    return this.viewRegistration.persistence;\n  }\n\n  async toolbarItems(): Promise<ToolbarItem[]> {\n    if (!this.viewRegistration.hasToolbar) {\n      return [];\n    }\n    const provider = await this.widget() as unknown as ItemsProvider;\n    return provider.toolbarItems();\n  }\n\n  widget(): Promise<Widget> {\n    if (this.widgetPromise === null) {\n      this.widgetPromise = this.viewRegistration.loadView();\n    }\n    return this.widgetPromise;\n  }\n\n  async disposeView(): Promise<void> {\n    if (this.widgetPromise === null) {\n      return;\n    }\n\n    const widget = await this.widgetPromise;\n    await widget.ownerViewDisposed();\n  }\n\n  experiment(): string|undefined {\n    return this.viewRegistration.experiment;\n  }\n\n  condition(): Root.Runtime.Condition|undefined {\n    return this.viewRegistration.condition;\n  }\n}\n\nlet viewManagerInstance: ViewManager|undefined;\n\nexport class ViewManager {\n  readonly views: Map<string, View>;\n  private readonly locationNameByViewId: Map<string, string>;\n  private readonly locationOverrideSetting: Common.Settings.Setting<{[key: string]: string}>;\n\n  private constructor() {\n    this.views = new Map();\n    this.locationNameByViewId = new Map();\n\n    // Read override setting for location\n    this.locationOverrideSetting = Common.Settings.Settings.instance().createSetting('views-location-override', {});\n    const preferredExtensionLocations = this.locationOverrideSetting.get();\n\n    // Views may define their initial ordering within a location. When the user has not reordered, we use the\n    // default ordering as defined by the views themselves.\n\n    const viewsByLocation = new Map<ViewLocationValues|'none', PreRegisteredView[]>();\n    for (const view of getRegisteredViewExtensions(Common.Settings.Settings.instance().getHostConfig())) {\n      const location = view.location() || 'none';\n      const views = viewsByLocation.get(location) || [];\n      views.push(view);\n      viewsByLocation.set(location, views);\n    }\n\n    let sortedViewExtensions: PreRegisteredView[] = [];\n    for (const views of viewsByLocation.values()) {\n      views.sort((firstView, secondView) => {\n        const firstViewOrder = firstView.order();\n        const secondViewOrder = secondView.order();\n        if (firstViewOrder !== undefined && secondViewOrder !== undefined) {\n          return firstViewOrder - secondViewOrder;\n        }\n        return 0;\n      });\n      sortedViewExtensions = sortedViewExtensions.concat(views);\n    }\n\n    for (const view of sortedViewExtensions) {\n      const viewId = view.viewId();\n      const location = view.location();\n      if (this.views.has(viewId)) {\n        throw new Error(`Duplicate view id '${viewId}'`);\n      }\n      if (!Platform.StringUtilities.isExtendedKebabCase(viewId)) {\n        throw new Error(`Invalid view ID '${viewId}'`);\n      }\n      this.views.set(viewId, view);\n      // Use the preferred user location if available\n      const locationName = preferredExtensionLocations[viewId] || location;\n      this.locationNameByViewId.set(viewId, locationName as string);\n    }\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ViewManager {\n    const {forceNew} = opts;\n    if (!viewManagerInstance || forceNew) {\n      viewManagerInstance = new ViewManager();\n    }\n\n    return viewManagerInstance;\n  }\n\n  static removeInstance(): void {\n    viewManagerInstance = undefined;\n  }\n\n  static createToolbar(toolbarItems: ToolbarItem[]): Element|null {\n    if (!toolbarItems.length) {\n      return null;\n    }\n    const toolbar = new Toolbar('');\n    for (const item of toolbarItems) {\n      toolbar.appendToolbarItem(item);\n    }\n    return toolbar.element;\n  }\n\n  locationNameForViewId(viewId: string): string {\n    const locationName = this.locationNameByViewId.get(viewId);\n    if (!locationName) {\n      throw new Error(`No location name for view with id ${viewId}`);\n    }\n    return locationName;\n  }\n\n  /**\n   * Moves a view to a new location\n   */\n  moveView(viewId: string, locationName: string, options?: {\n    shouldSelectTab: (boolean),\n    overrideSaving: (boolean),\n  }): void {\n    const defaultOptions = {shouldSelectTab: true, overrideSaving: false};\n    const {shouldSelectTab, overrideSaving} = options || defaultOptions;\n    if (!viewId || !locationName) {\n      return;\n    }\n\n    const view = this.view(viewId);\n    if (!view) {\n      return;\n    }\n\n    if (!overrideSaving) {\n      // Update the inner map of locations\n      this.locationNameByViewId.set(viewId, locationName);\n\n      // Update the settings of location overwrites\n      const locations = this.locationOverrideSetting.get();\n      locations[viewId] = locationName;\n      this.locationOverrideSetting.set(locations);\n    }\n\n    // Find new location and show view there\n    void this.resolveLocation(locationName).then(location => {\n      if (!location) {\n        throw new Error('Move view: Could not resolve location for view: ' + viewId);\n      }\n      location.reveal();\n      return location.showView(view, undefined, /* userGesture*/ true, /* omitFocus*/ false, shouldSelectTab);\n    });\n  }\n\n  revealView(view: View): Promise<void> {\n    const location = locationForView.get(view);\n    if (!location) {\n      return Promise.resolve();\n    }\n    location.reveal();\n    return location.showView(view);\n  }\n\n  /**\n   * Show view in location\n   */\n  showViewInLocation(viewId: string, locationName: string, shouldSelectTab: boolean|undefined = true): void {\n    this.moveView(viewId, locationName, {\n      shouldSelectTab,\n      overrideSaving: true,\n    });\n  }\n\n  view(viewId: string): View {\n    const view = this.views.get(viewId);\n    if (!view) {\n      throw new Error(`No view with id ${viewId} found!`);\n    }\n    return view;\n  }\n\n  materializedWidget(viewId: string): Widget|null {\n    const view = this.view(viewId);\n    if (!view) {\n      return null;\n    }\n    return widgetForView.get(view) || null;\n  }\n\n  async showView(viewId: string, userGesture?: boolean, omitFocus?: boolean): Promise<void> {\n    const view = this.views.get(viewId);\n    if (!view) {\n      console.error('Could not find view for id: \\'' + viewId + '\\' ' + new Error().stack);\n      return;\n    }\n\n    const location = locationForView.get(view) ?? await this.resolveLocation(this.locationNameByViewId.get(viewId));\n    if (!location) {\n      throw new Error('Could not resolve location for view: ' + viewId);\n    }\n    location.reveal();\n    await location.showView(view, undefined, userGesture, omitFocus);\n  }\n\n  async resolveLocation(location?: string): Promise<Location|null> {\n    if (!location) {\n      return null;\n    }\n    const registeredResolvers = getRegisteredLocationResolvers().filter(resolver => resolver.name === location);\n\n    if (registeredResolvers.length > 1) {\n      throw new Error('Duplicate resolver for location: ' + location);\n    }\n    if (registeredResolvers.length) {\n      const resolver = await registeredResolvers[0].loadResolver();\n      return resolver.resolveLocation(location) as Location | null;\n    }\n    throw new Error('Unresolved location: ' + location);\n  }\n\n  createTabbedLocation(\n      revealCallback?: (() => void), location?: string, restoreSelection?: boolean, allowReorder?: boolean,\n      defaultTab?: string|null): TabbedViewLocation {\n    return new TabbedLocation(this, revealCallback, location, restoreSelection, allowReorder, defaultTab);\n  }\n\n  createStackLocation(revealCallback?: (() => void), location?: string, jslogContext?: string): ViewLocation {\n    return new StackLocation(this, revealCallback, location, jslogContext);\n  }\n\n  hasViewsForLocation(location: string): boolean {\n    return Boolean(this.viewsForLocation(location).length);\n  }\n\n  viewsForLocation(location: string): View[] {\n    const result = [];\n    for (const [id, view] of this.views.entries()) {\n      if (this.locationNameByViewId.get(id) === location) {\n        result.push(view);\n      }\n    }\n    return result;\n  }\n}\n\nconst widgetForView = new WeakMap<View, Widget>();\n\nexport class ContainerWidget extends VBox {\n  private readonly view: View;\n  private materializePromise?: Promise<void>;\n\n  constructor(view: View) {\n    super();\n    this.element.classList.add('flex-auto', 'view-container', 'overflow-auto');\n    this.view = view;\n    this.element.tabIndex = -1;\n    ARIAUtils.markAsTabpanel(this.element);\n    ARIAUtils.setLabel(this.element, i18nString(UIStrings.sPanel, {PH1: view.title()}));\n    this.setDefaultFocusedElement(this.element);\n  }\n\n  materialize(): Promise<void> {\n    if (this.materializePromise) {\n      return this.materializePromise;\n    }\n    const promises = [];\n    // TODO(crbug.com/1006759): Transform to async-await\n    promises.push(this.view.toolbarItems().then(toolbarItems => {\n      const toolbarElement = ViewManager.createToolbar(toolbarItems);\n      if (toolbarElement) {\n        this.element.insertBefore(toolbarElement, this.element.firstChild);\n      }\n    }));\n    promises.push(this.view.widget().then(widget => {\n      // Move focus from |this| to loaded |widget| if any.\n      const shouldFocus = this.element.hasFocus();\n      this.setDefaultFocusedElement(null);\n      widgetForView.set(this.view, widget);\n      widget.show(this.element);\n      if (shouldFocus) {\n        widget.focus();\n      }\n    }));\n    this.materializePromise = Promise.all(promises).then(() => {});\n    return this.materializePromise;\n  }\n\n  override wasShown(): void {\n    void this.materialize().then(() => {\n      const widget = widgetForView.get(this.view);\n      if (widget) {\n        widget.show(this.element);\n        this.wasShownForTest();\n      }\n    });\n  }\n\n  private wasShownForTest(): void {\n    // This method is sniffed in tests.\n  }\n}\n\nclass ExpandableContainerWidget extends VBox {\n  private titleElement: HTMLDivElement;\n  private readonly titleExpandIcon: IconButton.Icon.Icon;\n  private readonly view: View;\n  private widget?: Widget;\n  private materializePromise?: Promise<void>;\n\n  constructor(view: View) {\n    super(true);\n    this.element.classList.add('flex-none');\n    this.registerRequiredCSS(viewContainersStyles);\n\n    this.titleElement = document.createElement('div');\n    this.titleElement.classList.add('expandable-view-title');\n    this.titleElement.setAttribute('jslog', `${VisualLogging.sectionHeader().context(view.viewId()).track({\n                                     click: true,\n                                     keydown: 'Enter|Space|ArrowLeft|ArrowRight',\n                                   })}`);\n    ARIAUtils.markAsTreeitem(this.titleElement);\n    this.titleExpandIcon = IconButton.Icon.create('triangle-right', 'title-expand-icon');\n    this.titleElement.appendChild(this.titleExpandIcon);\n    const titleText = view.title();\n    createTextChild(this.titleElement, titleText);\n    ARIAUtils.setLabel(this.titleElement, titleText);\n    ARIAUtils.setExpanded(this.titleElement, false);\n    this.titleElement.tabIndex = 0;\n    self.onInvokeElement(this.titleElement, this.toggleExpanded.bind(this));\n    this.titleElement.addEventListener('keydown', this.onTitleKeyDown.bind(this), false);\n    this.contentElement.insertBefore(this.titleElement, this.contentElement.firstChild);\n\n    ARIAUtils.setControls(this.titleElement, this.contentElement.createChild('slot'));\n    this.view = view;\n    expandableContainerForView.set(view, this);\n  }\n\n  override wasShown(): void {\n    if (this.widget && this.materializePromise) {\n      void this.materializePromise.then(() => {\n        if (this.titleElement.classList.contains('expanded') && this.widget) {\n          this.widget.show(this.element);\n        }\n      });\n    }\n  }\n\n  private materialize(): Promise<void> {\n    if (this.materializePromise) {\n      return this.materializePromise;\n    }\n    // TODO(crbug.com/1006759): Transform to async-await\n    const promises = [];\n    promises.push(this.view.toolbarItems().then(toolbarItems => {\n      const toolbarElement = ViewManager.createToolbar(toolbarItems);\n      if (toolbarElement) {\n        this.titleElement.appendChild(toolbarElement);\n      }\n    }));\n    promises.push(this.view.widget().then(widget => {\n      this.widget = widget;\n      widgetForView.set(this.view, widget);\n      widget.show(this.element);\n    }));\n    this.materializePromise = Promise.all(promises).then(() => {});\n    return this.materializePromise;\n  }\n\n  expand(): Promise<void> {\n    if (this.titleElement.classList.contains('expanded')) {\n      return this.materialize();\n    }\n    this.titleElement.classList.add('expanded');\n    ARIAUtils.setExpanded(this.titleElement, true);\n    this.titleExpandIcon.name = 'triangle-down';\n    return this.materialize().then(() => {\n      if (this.widget) {\n        this.widget.show(this.element);\n      }\n    });\n  }\n\n  private collapse(): void {\n    if (!this.titleElement.classList.contains('expanded')) {\n      return;\n    }\n    this.titleElement.classList.remove('expanded');\n    ARIAUtils.setExpanded(this.titleElement, false);\n    this.titleExpandIcon.name = 'triangle-right';\n    void this.materialize().then(() => {\n      if (this.widget) {\n        this.widget.detach();\n      }\n    });\n  }\n\n  private toggleExpanded(event: Event): void {\n    if (event.type === 'keydown' && event.target !== this.titleElement) {\n      return;\n    }\n    if (this.titleElement.classList.contains('expanded')) {\n      this.collapse();\n    } else {\n      void this.expand();\n    }\n  }\n\n  private onTitleKeyDown(event: Event): void {\n    if (event.target !== this.titleElement) {\n      return;\n    }\n    const keyEvent = (event as KeyboardEvent);\n    if (keyEvent.key === 'ArrowLeft') {\n      this.collapse();\n    } else if (keyEvent.key === 'ArrowRight') {\n      if (!this.titleElement.classList.contains('expanded')) {\n        void this.expand();\n      } else if (this.widget) {\n        this.widget.focus();\n      }\n    }\n  }\n}\n\nconst expandableContainerForView = new WeakMap<View, ExpandableContainerWidget>();\n\nclass Location {\n  protected readonly manager: ViewManager;\n  private readonly revealCallback: (() => void)|undefined;\n  private readonly widgetInternal: Widget;\n\n  constructor(manager: ViewManager, widget: Widget, revealCallback?: (() => void)) {\n    this.manager = manager;\n    this.revealCallback = revealCallback;\n    this.widgetInternal = widget;\n  }\n\n  widget(): Widget {\n    return this.widgetInternal;\n  }\n\n  reveal(): void {\n    if (this.revealCallback) {\n      this.revealCallback();\n    }\n  }\n\n  showView(\n      _view: View, _insertBefore?: View|null, _userGesture?: boolean, _omitFocus?: boolean,\n      _shouldSelectTab?: boolean): Promise<void> {\n    throw new Error('not implemented');\n  }\n\n  removeView(_view: View): void {\n    throw new Error('not implemented');\n  }\n}\n\nconst locationForView = new WeakMap<View, Location>();\n\ninterface CloseableTabSetting {\n  [tabName: string]: boolean;\n}\n\ninterface TabOrderSetting {\n  [tabName: string]: number;\n}\n\nclass TabbedLocation extends Location implements TabbedViewLocation {\n  private tabbedPaneInternal: TabbedPane;\n  private readonly allowReorder: boolean|undefined;\n  private readonly closeableTabSetting: Common.Settings.Setting<CloseableTabSetting>;\n  private readonly tabOrderSetting: Common.Settings.Setting<TabOrderSetting>;\n  private readonly lastSelectedTabSetting?: Common.Settings.Setting<string>;\n  private readonly defaultTab: string|null|undefined;\n  private readonly views: Map<string, View>;\n\n  constructor(\n      manager: ViewManager, revealCallback?: (() => void), location?: string, restoreSelection?: boolean,\n      allowReorder?: boolean, defaultTab?: string|null) {\n    const tabbedPane = new TabbedPane();\n    if (allowReorder) {\n      tabbedPane.setAllowTabReorder(true);\n    }\n\n    super(manager, tabbedPane, revealCallback);\n    this.tabbedPaneInternal = tabbedPane;\n    this.allowReorder = allowReorder;\n\n    this.tabbedPaneInternal.addEventListener(TabbedPaneEvents.TabSelected, this.tabSelected, this);\n    this.tabbedPaneInternal.addEventListener(TabbedPaneEvents.TabClosed, this.tabClosed, this);\n\n    this.closeableTabSetting = Common.Settings.Settings.instance().createSetting('closeable-tabs', {});\n    // As we give tabs the capability to be closed we also need to add them to the setting so they are still open\n    // until the user decide to close them\n    this.setOrUpdateCloseableTabsSetting();\n\n    this.tabOrderSetting = Common.Settings.Settings.instance().createSetting(location + '-tab-order', {});\n    this.tabbedPaneInternal.addEventListener(TabbedPaneEvents.TabOrderChanged, this.persistTabOrder, this);\n    if (restoreSelection) {\n      this.lastSelectedTabSetting = Common.Settings.Settings.instance().createSetting(location + '-selected-tab', '');\n    }\n    this.defaultTab = defaultTab;\n\n    this.views = new Map();\n\n    if (location) {\n      this.appendApplicableItems(location);\n    }\n  }\n\n  private setOrUpdateCloseableTabsSetting(): void {\n    // Update the setting value, we respect the closed state decided by the user\n    // and append the new tabs with value of true so they are shown open\n    const newClosable = {\n      ...defaultOptionsForTabs,\n      ...this.closeableTabSetting.get(),\n    };\n    this.closeableTabSetting.set(newClosable);\n  }\n\n  override widget(): Widget {\n    return this.tabbedPaneInternal;\n  }\n\n  tabbedPane(): TabbedPane {\n    return this.tabbedPaneInternal;\n  }\n\n  enableMoreTabsButton(): ToolbarMenuButton {\n    const moreTabsButton = new ToolbarMenuButton(\n        this.appendTabsToMenu.bind(this), /* isIconDropdown */ true, undefined, 'more-tabs', 'dots-vertical');\n    this.tabbedPaneInternal.leftToolbar().appendToolbarItem(moreTabsButton);\n    this.tabbedPaneInternal.disableOverflowMenu();\n    return moreTabsButton;\n  }\n\n  appendApplicableItems(locationName: string): void {\n    const views = this.manager.viewsForLocation(locationName);\n    if (this.allowReorder) {\n      let i = 0;\n      const persistedOrders = this.tabOrderSetting.get();\n      const orders = new Map<string, number>();\n      for (const view of views) {\n        orders.set(view.viewId(), persistedOrders[view.viewId()] || (++i) * TabbedLocation.orderStep);\n      }\n      views.sort((a, b) => (orders.get(a.viewId()) as number) - (orders.get(b.viewId()) as number));\n    }\n\n    for (const view of views) {\n      const id = view.viewId();\n      this.views.set(id, view);\n      locationForView.set(view, this);\n      if (view.isTransient()) {\n        continue;\n      }\n      if (!view.isCloseable()) {\n        this.appendTab(view);\n      } else if (this.closeableTabSetting.get()[id]) {\n        this.appendTab(view);\n      }\n    }\n\n    // If a default tab was provided we open or select it\n    if (this.defaultTab) {\n      if (this.tabbedPaneInternal.hasTab(this.defaultTab)) {\n        // If the tabbed pane already has the tab we just have to select it\n        this.tabbedPaneInternal.selectTab(this.defaultTab);\n      } else {\n        // If the tab is not present already it can be because:\n        // it doesn't correspond to this tabbed location\n        // or because it is closed\n        const view = Array.from(this.views.values()).find(view => view.viewId() === this.defaultTab);\n        if (view) {\n          // defaultTab is indeed part of the views for this tabbed location\n          void this.showView(view);\n        }\n      }\n    } else if (this.lastSelectedTabSetting && this.tabbedPaneInternal.hasTab(this.lastSelectedTabSetting.get())) {\n      this.tabbedPaneInternal.selectTab(this.lastSelectedTabSetting.get());\n    }\n  }\n\n  private appendTabsToMenu(contextMenu: ContextMenu): void {\n    const views = Array.from(this.views.values());\n    views.sort((viewa, viewb) => viewa.title().localeCompare(viewb.title()));\n    for (const view of views) {\n      const title = view.title();\n\n      if (view.viewId() === 'issues-pane') {\n        contextMenu.defaultSection().appendItem(title, () => {\n          Host.userMetrics.issuesPanelOpenedFrom(Host.UserMetrics.IssueOpener.HAMBURGER_MENU);\n          void this.showView(view, undefined, true);\n        }, {jslogContext: 'issues-pane'});\n        continue;\n      }\n\n      const isPreviewFeature = view.isPreviewFeature();\n      contextMenu.defaultSection().appendItem(\n          title, this.showView.bind(this, view, undefined, true), {isPreviewFeature, jslogContext: view.viewId()});\n    }\n  }\n\n  private appendTab(view: View, index?: number): void {\n    this.tabbedPaneInternal.appendTab(\n        view.viewId(), view.title(), new ContainerWidget(view), undefined, false,\n        view.isCloseable() || view.isTransient(), view.isPreviewFeature(), index);\n    const iconName = view.iconName();\n    if (iconName) {\n      const icon = IconButton.Icon.create(iconName);\n      this.tabbedPaneInternal.setTabIcon(view.viewId(), icon);\n    }\n  }\n\n  appendView(view: View, insertBefore?: View|null): void {\n    if (this.tabbedPaneInternal.hasTab(view.viewId())) {\n      return;\n    }\n    const oldLocation = locationForView.get(view);\n    if (oldLocation && oldLocation !== this) {\n      oldLocation.removeView(view);\n    }\n    locationForView.set(view, this);\n    this.manager.views.set(view.viewId(), view);\n    this.views.set(view.viewId(), view);\n    let index: number|undefined = undefined;\n    const tabIds = this.tabbedPaneInternal.tabIds();\n    if (this.allowReorder) {\n      const orderSetting = this.tabOrderSetting.get();\n      const order = orderSetting[view.viewId()];\n      for (let i = 0; order && i < tabIds.length; ++i) {\n        if (orderSetting[tabIds[i]] && orderSetting[tabIds[i]] > order) {\n          index = i;\n          break;\n        }\n      }\n    } else if (insertBefore) {\n      for (let i = 0; i < tabIds.length; ++i) {\n        if (tabIds[i] === insertBefore.viewId()) {\n          index = i;\n          break;\n        }\n      }\n    }\n    this.appendTab(view, index);\n\n    if (view.isCloseable()) {\n      const tabs = this.closeableTabSetting.get();\n      const tabId = view.viewId();\n      if (!tabs[tabId]) {\n        tabs[tabId] = true;\n        this.closeableTabSetting.set(tabs);\n      }\n    }\n    this.persistTabOrder();\n  }\n\n  override async showView(\n      view: View, insertBefore?: View|null, userGesture?: boolean, omitFocus?: boolean,\n      shouldSelectTab: boolean|undefined = true): Promise<void> {\n    this.appendView(view, insertBefore);\n    if (shouldSelectTab) {\n      this.tabbedPaneInternal.selectTab(view.viewId(), userGesture);\n    }\n    if (!omitFocus) {\n      this.tabbedPaneInternal.focus();\n    }\n    const widget = (this.tabbedPaneInternal.tabView(view.viewId()) as ContainerWidget);\n    await widget.materialize();\n  }\n\n  override removeView(view: View): void {\n    if (!this.tabbedPaneInternal.hasTab(view.viewId())) {\n      return;\n    }\n\n    locationForView.delete(view);\n    this.manager.views.delete(view.viewId());\n    this.tabbedPaneInternal.closeTab(view.viewId());\n    this.views.delete(view.viewId());\n  }\n\n  private tabSelected(event: Common.EventTarget.EventTargetEvent<EventData>): void {\n    const {tabId} = event.data;\n    if (this.lastSelectedTabSetting && event.data['isUserGesture']) {\n      this.lastSelectedTabSetting.set(tabId);\n    }\n  }\n\n  private tabClosed(event: Common.EventTarget.EventTargetEvent<EventData>): void {\n    const {tabId} = event.data;\n    const tabs = this.closeableTabSetting.get();\n    if (tabs[tabId]) {\n      tabs[tabId] = false;\n      this.closeableTabSetting.set(tabs);\n    }\n    const view = this.views.get(tabId);\n    if (view) {\n      void view.disposeView();\n    }\n  }\n\n  private persistTabOrder(): void {\n    const tabIds = this.tabbedPaneInternal.tabIds();\n    const tabOrders: {\n      [x: string]: number,\n    } = {};\n    for (let i = 0; i < tabIds.length; i++) {\n      tabOrders[tabIds[i]] = (i + 1) * TabbedLocation.orderStep;\n    }\n\n    const oldTabOrder = this.tabOrderSetting.get();\n    const oldTabArray = Object.keys(oldTabOrder);\n    oldTabArray.sort((a, b) => oldTabOrder[a] - oldTabOrder[b]);\n    let lastOrder = 0;\n    for (const key of oldTabArray) {\n      if (key in tabOrders) {\n        lastOrder = tabOrders[key];\n        continue;\n      }\n      tabOrders[key] = ++lastOrder;\n    }\n    this.tabOrderSetting.set(tabOrders);\n  }\n\n  getCloseableTabSetting(): CloseableTabSetting {\n    return this.closeableTabSetting.get();\n  }\n\n  static orderStep = 10;  // Keep in sync with descriptors.\n}\n\nclass StackLocation extends Location implements ViewLocation {\n  private readonly vbox: VBox;\n  private readonly expandableContainers: Map<string, ExpandableContainerWidget>;\n\n  constructor(manager: ViewManager, revealCallback?: (() => void), location?: string, jslogContext?: string) {\n    const vbox = new VBox();\n    vbox.element.setAttribute('jslog', `${VisualLogging.pane(jslogContext || 'sidebar').track({resize: true})}`);\n    super(manager, vbox, revealCallback);\n    this.vbox = vbox;\n    ARIAUtils.markAsTree(vbox.element);\n\n    this.expandableContainers = new Map();\n\n    if (location) {\n      this.appendApplicableItems(location);\n    }\n  }\n\n  appendView(view: View, insertBefore?: View|null): void {\n    const oldLocation = locationForView.get(view);\n    if (oldLocation && oldLocation !== this) {\n      oldLocation.removeView(view);\n    }\n\n    let container = this.expandableContainers.get(view.viewId());\n    if (!container) {\n      locationForView.set(view, this);\n      this.manager.views.set(view.viewId(), view);\n      container = new ExpandableContainerWidget(view);\n      let beforeElement: Node|null = null;\n      if (insertBefore) {\n        const beforeContainer = expandableContainerForView.get(insertBefore);\n        beforeElement = beforeContainer ? beforeContainer.element : null;\n      }\n      container.show(this.vbox.contentElement, beforeElement);\n      this.expandableContainers.set(view.viewId(), container);\n    }\n  }\n\n  override async showView(view: View, insertBefore?: View|null): Promise<void> {\n    this.appendView(view, insertBefore);\n    const container = this.expandableContainers.get(view.viewId());\n    if (container) {\n      await container.expand();\n    }\n  }\n\n  override removeView(view: View): void {\n    const container = this.expandableContainers.get(view.viewId());\n    if (!container) {\n      return;\n    }\n\n    container.detach();\n    this.expandableContainers.delete(view.viewId());\n    locationForView.delete(view);\n    this.manager.views.delete(view.viewId());\n  }\n\n  appendApplicableItems(locationName: string): void {\n    for (const view of this.manager.viewsForLocation(locationName)) {\n      this.appendView(view);\n    }\n  }\n}\n\nexport {\n  ViewRegistration,\n  ViewPersistence,\n  getRegisteredViewExtensions,\n  maybeRemoveViewExtension,\n  registerViewExtension,\n  ViewLocationValues,\n  getRegisteredLocationResolvers,\n  registerLocationResolver,\n  ViewLocationCategory,\n  getLocalizedViewLocationCategory,\n  resetViewRegistration,\n};\n"],
  "mappings": "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",
  "names": ["view"]
}
