{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/components/panel_feedback/PreviewToggle.ts"],
  "sourcesContent": ["// Copyright (c) 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/legacy/legacy.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as Input from '../input/input.js';\n\nimport previewToggleStyles from './previewToggle.css.js';\n\nconst {render, html, nothing} = LitHtml;\n\nexport interface PreviewToggleData {\n  name: string;\n  helperText: string|null;\n  feedbackURL: string|null;\n  experiment: Root.Runtime.ExperimentName;\n  learnMoreURL?: string;\n  onChangeCallback?: (checked: boolean) => void;\n}\n\nconst UIStrings = {\n  /**\n   *@description Link text the user can click to provide feedback to the team.\n   */\n  previewTextFeedbackLink: 'Send us your feedback.',\n  /**\n   *@description Link text the user can click to provide feedback to the team.\n   */\n  shortFeedbackLink: 'Send feedback',\n  /**\n   *@description Link text the user can click to see documentation.\n   */\n  learnMoreLink: 'Learn More',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('ui/components/panel_feedback/PreviewToggle.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class PreviewToggle extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #name = '';\n  #helperText: string|null = null;\n  #feedbackURL: string|null = null;\n  #learnMoreURL: string|undefined;\n  #experiment: string = '';\n  #onChangeCallback?: (checked: boolean) => void;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [Input.checkboxStyles, previewToggleStyles];\n  }\n\n  set data(data: PreviewToggleData) {\n    this.#name = data.name;\n    this.#helperText = data.helperText;\n    this.#feedbackURL = data.feedbackURL;\n    this.#learnMoreURL = data.learnMoreURL;\n    this.#experiment = data.experiment;\n    this.#onChangeCallback = data.onChangeCallback;\n    this.#render();\n  }\n\n  #render(): void {\n    const checked = Root.Runtime.experiments.isEnabled(this.#experiment);\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(\n      html`\n      <div class=\"container\">\n        <label class=\"experiment-preview\">\n          <input type=\"checkbox\" ?checked=${checked} @change=${this.#checkboxChanged} aria-label=${this.#name} />\n          <devtools-icon .data=${{\n            iconName: 'experiment',\n            width: '16px',\n            height: '16px',\n            color: 'var(--icon-default)',\n          }}>\n          </devtools-icon>${this.#name}\n        </label>\n        <div class=\"spacer\"></div>\n        ${this.#feedbackURL && !this.#helperText\n          ? html`<div class=\"feedback\"><x-link class=\"x-link\" href=${this.#feedbackURL}>${i18nString(UIStrings.shortFeedbackLink)}</x-link></div>`\n          : nothing}\n        ${this.#learnMoreURL\n          ? html`<div class=\"learn-more\"><x-link class=\"x-link\" href=${this.#learnMoreURL}>${i18nString(UIStrings.learnMoreLink)}</x-link></div>`\n          : nothing}\n        <div class=\"helper\">\n          ${this.#helperText && this.#feedbackURL\n            ? html`<p>${this.#helperText} <x-link class=\"x-link\" href=${this.#feedbackURL}>${i18nString(UIStrings.previewTextFeedbackLink)}</x-link></p>`\n            : nothing}\n        </div>\n      </div>`,\n      this.#shadow,\n      {\n        host: this,\n      });\n    // clang-format on\n  }\n\n  #checkboxChanged(event: Event): void {\n    const checked = (event.target as HTMLInputElement).checked;\n    Root.Runtime.experiments.setEnabled(this.#experiment, checked);\n    this.#onChangeCallback?.(checked);\n  }\n}\n\ncustomElements.define('devtools-preview-toggle', PreviewToggle);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-preview-toggle': PreviewToggle;\n  }\n}\n"],
  "mappings": ";AAIA,OAAO;AAEP,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,aAAa;AACzB,YAAY,WAAW;AAEvB,OAAO,yBAAyB;AAEhC,MAAM,EAAC,QAAQ,MAAM,QAAO,IAAI;AAWhC,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA,EAIhB,yBAAyB;AAAA;AAAA;AAAA;AAAA,EAIzB,mBAAmB;AAAA;AAAA;AAAA;AAAA,EAInB,eAAe;AACjB;AAEA,MAAM,OAAO,KAAK,KAAK,kBAAkB,iDAAiD,SAAS;AACnG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW,IAAI;AAE7D,aAAM,sBAAsB,YAAY;AAAA,EACpC,UAAU,KAAK,aAAa,EAAC,MAAM,OAAM,CAAC;AAAA,EAEnD,QAAQ;AAAA,EACR,cAA2B;AAAA,EAC3B,eAA4B;AAAA,EAC5B;AAAA,EACA,cAAsB;AAAA,EACtB;AAAA,EAEA,oBAA0B;AACxB,SAAK,QAAQ,qBAAqB,CAAC,MAAM,gBAAgB,mBAAmB;AAAA,EAC9E;AAAA,EAEA,IAAI,KAAK,MAAyB;AAChC,SAAK,QAAQ,KAAK;AAClB,SAAK,cAAc,KAAK;AACxB,SAAK,eAAe,KAAK;AACzB,SAAK,gBAAgB,KAAK;AAC1B,SAAK,cAAc,KAAK;AACxB,SAAK,oBAAoB,KAAK;AAC9B,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,UAAgB;AACd,UAAM,UAAU,KAAK,QAAQ,YAAY,UAAU,KAAK,WAAW;AAGnE;AAAA,MACE;AAAA;AAAA;AAAA,4CAGsC,OAAO,YAAY,KAAK,gBAAgB,eAAe,KAAK,KAAK;AAAA,iCAC5E;AAAA,QACrB,UAAU;AAAA,QACV,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,OAAO;AAAA,MACT,CAAC;AAAA,4BACiB,KAAK,KAAK;AAAA;AAAA;AAAA,UAG5B,KAAK,gBAAgB,CAAC,KAAK,cACzB,yDAAyD,KAAK,YAAY,IAAI,WAAW,UAAU,iBAAiB,CAAC,oBACrH,OAAO;AAAA,UACT,KAAK,gBACH,2DAA2D,KAAK,aAAa,IAAI,WAAW,UAAU,aAAa,CAAC,oBACpH,OAAO;AAAA;AAAA,YAEP,KAAK,eAAe,KAAK,eACvB,UAAU,KAAK,WAAW,gCAAgC,KAAK,YAAY,IAAI,WAAW,UAAU,uBAAuB,CAAC,kBAC5H,OAAO;AAAA;AAAA;AAAA,MAGf,KAAK;AAAA,MACL;AAAA,QACE,MAAM;AAAA,MACR;AAAA,IAAC;AAAA,EAEL;AAAA,EAEA,iBAAiB,OAAoB;AACnC,UAAM,UAAW,MAAM,OAA4B;AACnD,SAAK,QAAQ,YAAY,WAAW,KAAK,aAAa,OAAO;AAC7D,SAAK,oBAAoB,OAAO;AAAA,EAClC;AACF;AAEA,eAAe,OAAO,2BAA2B,aAAa;",
  "names": []
}
