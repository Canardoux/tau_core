{
  "version": 3,
  "sources": ["../../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/components/source_frame/ImageView.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Host from '../../../../core/host/host.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as Workspace from '../../../../models/workspace/workspace.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\n\nimport imageViewStyles from './imageView.css.legacy.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Image View of the Sources panel\n   */\n  image: 'Image',\n  /**\n   *@description Text that appears when user drag and drop something (for example, a file) in Image View of the Sources panel\n   */\n  dropImageFileHere: 'Drop image file here',\n  /**\n   *@description Text to indicate the source of an image\n   *@example {example.com} PH1\n   */\n  imageFromS: 'Image from {PH1}',\n  /**\n   *@description Text in Image View of the Sources panel\n   *@example {2} PH1\n   *@example {2} PH2\n   */\n  dD: '{PH1} \u00D7 {PH2}',\n  /**\n   *@description A context menu item in the Image View of the Sources panel\n   */\n  copyImageUrl: 'Copy image URL',\n  /**\n   *@description A context menu item in the Image View of the Sources panel\n   */\n  copyImageAsDataUri: 'Copy image as data URI',\n  /**\n   *@description A context menu item in the Image View of the Sources panel\n   */\n  openImageInNewTab: 'Open image in new tab',\n  /**\n   *@description A context menu item in the Image Preview\n   */\n  saveImageAs: 'Save image as...',\n  /**\n   *@description The default file name when downloading a file\n   */\n  download: 'download',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/ImageView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ImageView extends UI.View.SimpleView {\n  private url: Platform.DevToolsPath.UrlString;\n  private parsedURL: Common.ParsedURL.ParsedURL;\n  private readonly mimeType: string;\n  private readonly contentProvider: TextUtils.ContentProvider.ContentProvider;\n  private uiSourceCode: Workspace.UISourceCode.UISourceCode|null;\n  private readonly sizeLabel: UI.Toolbar.ToolbarText;\n  private readonly dimensionsLabel: UI.Toolbar.ToolbarText;\n  private readonly aspectRatioLabel: UI.Toolbar.ToolbarText;\n  private readonly mimeTypeLabel: UI.Toolbar.ToolbarText;\n  private readonly container: HTMLElement;\n  private imagePreviewElement: HTMLImageElement;\n  private cachedContent?: TextUtils.ContentData.ContentData;\n  constructor(mimeType: string, contentProvider: TextUtils.ContentProvider.ContentProvider) {\n    super(i18nString(UIStrings.image));\n    this.registerRequiredCSS(imageViewStyles);\n    this.element.tabIndex = -1;\n    this.element.classList.add('image-view');\n    this.element.setAttribute('jslog', `${VisualLogging.pane('image-view')}`);\n    this.url = contentProvider.contentURL();\n    this.parsedURL = new Common.ParsedURL.ParsedURL(this.url);\n    this.mimeType = mimeType;\n    this.contentProvider = contentProvider;\n    this.uiSourceCode = contentProvider instanceof Workspace.UISourceCode.UISourceCode ?\n        contentProvider as Workspace.UISourceCode.UISourceCode :\n        null;\n    if (this.uiSourceCode) {\n      this.uiSourceCode.addEventListener(\n          Workspace.UISourceCode.Events.WorkingCopyCommitted, this.workingCopyCommitted, this);\n      new UI.DropTarget.DropTarget(\n          this.element, [UI.DropTarget.Type.ImageFile, UI.DropTarget.Type.URI], i18nString(UIStrings.dropImageFileHere),\n          this.handleDrop.bind(this));\n    }\n    this.sizeLabel = new UI.Toolbar.ToolbarText();\n    this.dimensionsLabel = new UI.Toolbar.ToolbarText();\n    this.aspectRatioLabel = new UI.Toolbar.ToolbarText();\n    this.mimeTypeLabel = new UI.Toolbar.ToolbarText(mimeType);\n    this.container = this.element.createChild('div', 'image');\n    this.imagePreviewElement = (this.container.createChild('img', 'resource-image-view') as HTMLImageElement);\n    this.imagePreviewElement.addEventListener('contextmenu', this.contextMenu.bind(this), true);\n  }\n\n  override async toolbarItems(): Promise<UI.Toolbar.ToolbarItem[]> {\n    await this.updateContentIfNeeded();\n    return [\n      this.sizeLabel,\n      new UI.Toolbar.ToolbarSeparator(),\n      this.dimensionsLabel,\n      new UI.Toolbar.ToolbarSeparator(),\n      this.aspectRatioLabel,\n      new UI.Toolbar.ToolbarSeparator(),\n      this.mimeTypeLabel,\n    ];\n  }\n\n  override wasShown(): void {\n    void this.updateContentIfNeeded();\n  }\n\n  override disposeView(): void {\n    if (this.uiSourceCode) {\n      this.uiSourceCode.removeEventListener(\n          Workspace.UISourceCode.Events.WorkingCopyCommitted, this.workingCopyCommitted, this);\n    }\n  }\n\n  private workingCopyCommitted(): void {\n    void this.updateContentIfNeeded();\n  }\n\n  private async updateContentIfNeeded(): Promise<void> {\n    const content = await this.contentProvider.requestContentData();\n    if (TextUtils.ContentData.ContentData.isError(content) || this.cachedContent?.contentEqualTo(content)) {\n      return;\n    }\n\n    this.cachedContent = content;\n    const imageSrc = content.asDataUrl() ?? this.url;\n    const loadPromise = new Promise(x => {\n      this.imagePreviewElement.onload = x;\n    });\n    this.imagePreviewElement.src = imageSrc;\n    this.imagePreviewElement.alt = i18nString(UIStrings.imageFromS, {PH1: this.url});\n    const size = content.isTextContent ? content.text.length : Platform.StringUtilities.base64ToSize(content.base64);\n    this.sizeLabel.setText(i18n.ByteUtilities.bytesToString(size));\n    await loadPromise;\n    this.dimensionsLabel.setText(i18nString(\n        UIStrings.dD, {PH1: this.imagePreviewElement.naturalWidth, PH2: this.imagePreviewElement.naturalHeight}));\n    this.aspectRatioLabel.setText(Platform.NumberUtilities.aspectRatio(\n        this.imagePreviewElement.naturalWidth, this.imagePreviewElement.naturalHeight));\n  }\n\n  private contextMenu(event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const parsedSrc = new Common.ParsedURL.ParsedURL(this.imagePreviewElement.src);\n    if (!this.parsedURL.isDataURL()) {\n      contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyImageUrl), this.copyImageURL.bind(this), {\n        jslogContext: 'image-view.copy-image-url',\n      });\n    }\n    if (parsedSrc.isDataURL()) {\n      contextMenu.clipboardSection().appendItem(\n          i18nString(UIStrings.copyImageAsDataUri), this.copyImageAsDataURL.bind(this), {\n            jslogContext: 'image-view.copy-image-as-data-url',\n          });\n    }\n\n    contextMenu.clipboardSection().appendItem(i18nString(UIStrings.openImageInNewTab), this.openInNewTab.bind(this), {\n      jslogContext: 'image-view.open-in-new-tab',\n    });\n    contextMenu.clipboardSection().appendItem(i18nString(UIStrings.saveImageAs), this.saveImage.bind(this), {\n      jslogContext: 'image-view.save-image',\n    });\n\n    void contextMenu.show();\n  }\n\n  private copyImageAsDataURL(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(this.imagePreviewElement.src);\n  }\n\n  private copyImageURL(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(this.url);\n  }\n\n  private async saveImage(): Promise<void> {\n    const imageDataURL = this.cachedContent?.asDataUrl();\n    if (!imageDataURL) {\n      return;\n    }\n\n    const link = document.createElement('a');\n    link.href = imageDataURL;\n\n    // If it is a Base64 image, set a default file name.\n    // When chrome saves a file, the file name characters that are not supported\n    // by the OS will be replaced automatically. For example, in the Mac,\n    // `:` it will be replaced with `_`.\n    link.download =\n        this.parsedURL.isDataURL() ? i18nString(UIStrings.download) : decodeURIComponent(this.parsedURL.displayName);\n    link.click();\n    link.remove();\n  }\n\n  private openInNewTab(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(this.url);\n  }\n\n  private async handleDrop(dataTransfer: DataTransfer): Promise<void> {\n    const items = dataTransfer.items;\n    if (!items.length || items[0].kind !== 'file') {\n      return;\n    }\n\n    const file = items[0].getAsFile();\n    if (!file) {\n      return;\n    }\n    const encoded = !file.name.endsWith('.svg');\n    const fileCallback = (file: Blob): void => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        let result;\n        try {\n          result = (reader.result as string | null);\n        } catch (e) {\n          result = null;\n          console.error('Can\\'t read file: ' + e);\n        }\n        if (typeof result !== 'string' || !this.uiSourceCode) {\n          return;\n        }\n        this.uiSourceCode.setContent(encoded ? btoa(result) : result, encoded);\n      };\n      if (encoded) {\n        reader.readAsBinaryString(file);\n      } else {\n        reader.readAsText(file);\n      }\n    };\n    fileCallback(file);\n  }\n}\n"],
  "mappings": "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",
  "names": ["file"]
}
