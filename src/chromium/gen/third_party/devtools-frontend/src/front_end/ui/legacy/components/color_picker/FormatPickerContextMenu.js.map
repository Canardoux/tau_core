{
  "version": 3,
  "sources": ["../../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/components/color_picker/FormatPickerContextMenu.ts"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as IconButton from '../../../components/icon_button/icon_button.js';\nimport * as UI from '../../legacy.js';\n\nconst UIStrings = {\n  /**\n   *@description Tooltip text describing that a color was clipped after conversion to match the target gamut\n   *@example {rgb(255 255 255)} PH1\n   */\n  colorClippedTooltipText: 'This color was clipped to match the format\\'s gamut. The actual result was {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/color_picker/FormatPickerContextMenu.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ntype OnSelectFn = (color: Common.Color.Color) => void;\n\nexport class FormatPickerContextMenu {\n  #color: Common.Color.Color;\n\n  constructor(color: Common.Color.Color) {\n    this.#color = color;\n  }\n\n  async show(e: Event, onSelect: OnSelectFn): Promise<void> {\n    let resolveShowPromise: (() => void)|undefined = undefined;\n    const showPromise = new Promise<void>(resolve => {\n      resolveShowPromise = resolve;\n    });\n\n    const legacyFormats = [\n      Common.Color.Format.HEX,\n      Common.Color.Format.HEXA,\n      Common.Color.Format.RGB,\n      Common.Color.Format.RGBA,\n      Common.Color.Format.HSL,\n      Common.Color.Format.HWB,\n    ];\n    const modernFormats = [\n      Common.Color.Format.LCH,\n      Common.Color.Format.OKLCH,\n      Common.Color.Format.LAB,\n      Common.Color.Format.OKLAB,\n      Common.Color.Format.SRGB,\n      Common.Color.Format.SRGB_LINEAR,\n      Common.Color.Format.DISPLAY_P3,\n      Common.Color.Format.A98_RGB,\n      Common.Color.Format.PROPHOTO_RGB,\n      Common.Color.Format.REC_2020,\n      Common.Color.Format.XYZ,\n      Common.Color.Format.XYZ_D50,\n      Common.Color.Format.XYZ_D65,\n    ];\n    const menu = new UI.ContextMenu.ContextMenu(e, {onSoftMenuClosed: () => resolveShowPromise?.()});\n    const legacySection = menu.section('legacy');\n    const wideSection = menu.section('wide');\n    const colorFunctionSection = menu.section('color-function').appendSubMenuItem('color()', false, 'color').section();\n\n    if (!(this.#color instanceof Common.Color.Nickname)) {\n      const nickname = this.#color.asLegacyColor().nickname();\n      if (nickname) {\n        this.addColorToSection(nickname, legacySection, onSelect);\n      }\n    }\n\n    if (!(this.#color instanceof Common.Color.ShortHex)) {\n      const shortHex =\n          this.#color.as((this.#color.alpha ?? 1) === 1 ? Common.Color.Format.HEX : Common.Color.Format.HEXA)\n                            .shortHex();\n      if (shortHex) {\n        this.addColorToSection(shortHex, legacySection, onSelect);\n      }\n    }\n\n    for (const format of [...legacyFormats, ...modernFormats]) {\n      if (format === this.#color.format()) {\n        continue;\n      }\n      const newColor = this.#color.as(format);\n      const section = legacyFormats.includes(format)     ? legacySection :\n          newColor instanceof Common.Color.ColorFunction ? colorFunctionSection :\n                                                           wideSection;\n      this.addColorToSection(newColor, section, onSelect);\n    }\n\n    await menu.show();\n    await showPromise;\n  }\n\n  addColorToSection(newColor: Common.Color.Color, section: UI.ContextMenu.Section, onSelect: OnSelectFn): void {\n    if (newColor instanceof Common.Color.Legacy) {\n      const originalHasAlpha = (this.#color.alpha ?? 1) !== 1;\n      const isAlphaFormat = newColor.alpha !== null;\n\n      // When the original color has alpha, only print alpha legacy formats. Otherwise, only print non-alpha legacy\n      // formats.\n      if (isAlphaFormat !== originalHasAlpha) {\n        return;\n      }\n    }\n    const label = newColor.asString();\n    if (!label) {\n      return;\n    }\n    let icon = undefined;\n    if (newColor.isGamutClipped()) {\n      icon = new IconButton.Icon.Icon();\n      icon.data = {\n        iconName: 'warning',\n        color: 'var(--icon-default)',\n        width: '16px',\n        height: '16px',\n      };\n      icon.style.marginLeft = '1px';\n      icon.style.marginTop = '-1px';\n      icon.style.minWidth = '16px';\n      icon.style.minHeight = '16px';\n    }\n    const tooltip =\n        icon ? i18nString(UIStrings.colorClippedTooltipText, {PH1: newColor.getAsRawString() ?? 'none'}) : undefined;\n\n    const handler = (): void => onSelect(newColor);\n\n    section.appendItem(\n        label, handler,\n        {additionalElement: icon, tooltip, jslogContext: newColor.isGamutClipped() ? 'color' : 'clipped-color'});\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
