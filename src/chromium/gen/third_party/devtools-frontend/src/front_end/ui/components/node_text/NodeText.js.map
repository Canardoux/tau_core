{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/components/node_text/NodeText.ts"],
  "sourcesContent": ["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport nodeTextStyles from './nodeText.css.js';\n\nconst {render, html} = LitHtml;\n\nexport interface NodeTextData {\n  nodeTitle: string;\n  nodeId?: string;\n  nodeClasses?: string[];\n}\n\nexport class NodeText extends HTMLElement {\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #nodeTitle: string = '';\n  #nodeId?: string = '';\n  #nodeClasses?: string[] = [];\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [nodeTextStyles];\n  }\n\n  set data(data: NodeTextData) {\n    this.#nodeTitle = data.nodeTitle;\n    this.#nodeId = data.nodeId;\n    this.#nodeClasses = data.nodeClasses;\n    this.#render();\n  }\n\n  #render(): void {\n    const hasId = Boolean(this.#nodeId);\n    const hasNodeClasses = Boolean(this.#nodeClasses && this.#nodeClasses.length > 0);\n\n    const parts = [\n      html`<span class=\"node-label-name\">${this.#nodeTitle}</span>`,\n    ];\n\n    if (this.#nodeId) {\n      const classes = LitHtml.Directives.classMap({\n        'node-label-id': true,\n        'node-multiple-descriptors': hasNodeClasses,\n      });\n      parts.push(html`<span class=${classes}>#${CSS.escape(this.#nodeId)}</span>`);\n    }\n\n    if (this.#nodeClasses && this.#nodeClasses.length > 0) {\n      const text = this.#nodeClasses.map(c => `.${CSS.escape(c)}`).join('');\n      const classes = LitHtml.Directives.classMap({\n        'node-label-class': true,\n        'node-multiple-descriptors': hasId,\n      });\n      parts.push(html`<span class=${classes}>${text}</span>`);\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      ${parts}\n    `, this.#shadow, {\n      host: this,\n    });\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-node-text', NodeText);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-node-text': NodeText;\n  }\n}\n"],
  "mappings": ";AAIA,YAAY,aAAa;AAEzB,OAAO,oBAAoB;AAE3B,MAAM,EAAC,QAAQ,KAAI,IAAI;AAQhB,aAAM,iBAAiB,YAAY;AAAA,EAE/B,UAAU,KAAK,aAAa,EAAC,MAAM,OAAM,CAAC;AAAA,EACnD,aAAqB;AAAA,EACrB,UAAmB;AAAA,EACnB,eAA0B,CAAC;AAAA,EAE3B,oBAA0B;AACxB,SAAK,QAAQ,qBAAqB,CAAC,cAAc;AAAA,EACnD;AAAA,EAEA,IAAI,KAAK,MAAoB;AAC3B,SAAK,aAAa,KAAK;AACvB,SAAK,UAAU,KAAK;AACpB,SAAK,eAAe,KAAK;AACzB,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,UAAgB;AACd,UAAM,QAAQ,QAAQ,KAAK,OAAO;AAClC,UAAM,iBAAiB,QAAQ,KAAK,gBAAgB,KAAK,aAAa,SAAS,CAAC;AAEhF,UAAM,QAAQ;AAAA,MACZ,qCAAqC,KAAK,UAAU;AAAA,IACtD;AAEA,QAAI,KAAK,SAAS;AAChB,YAAM,UAAU,QAAQ,WAAW,SAAS;AAAA,QAC1C,iBAAiB;AAAA,QACjB,6BAA6B;AAAA,MAC/B,CAAC;AACD,YAAM,KAAK,mBAAmB,OAAO,KAAK,IAAI,OAAO,KAAK,OAAO,CAAC,SAAS;AAAA,IAC7E;AAEA,QAAI,KAAK,gBAAgB,KAAK,aAAa,SAAS,GAAG;AACrD,YAAM,OAAO,KAAK,aAAa,IAAI,OAAK,IAAI,IAAI,OAAO,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE;AACpE,YAAM,UAAU,QAAQ,WAAW,SAAS;AAAA,QAC1C,oBAAoB;AAAA,QACpB,6BAA6B;AAAA,MAC/B,CAAC;AACD,YAAM,KAAK,mBAAmB,OAAO,IAAI,IAAI,SAAS;AAAA,IACxD;AAIA,WAAO;AAAA,QACH,KAAK;AAAA,OACN,KAAK,SAAS;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,EAEH;AACF;AAEA,eAAe,OAAO,sBAAsB,QAAQ;",
  "names": []
}
