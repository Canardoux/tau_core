{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/DropTarget.ts"],
  "sourcesContent": ["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport dropTargetStyles from './dropTarget.css.legacy.js';\nimport {createShadowRootWithCoreStyles} from './UIUtils.js';\n\nexport class DropTarget {\n  private element: Element;\n  private readonly transferTypes: {\n    kind: string,\n    type: RegExp,\n  }[];\n  private messageText: string;\n  private readonly handleDrop: (arg0: DataTransfer) => void;\n  private enabled: boolean;\n  private dragMaskElement: Element|null;\n\n  constructor(\n      element: Element, transferTypes: {\n        kind: string,\n        type: RegExp,\n      }[],\n      messageText: string, handleDrop: (arg0: DataTransfer) => void) {\n    element.addEventListener('dragenter', this.onDragEnter.bind(this), true);\n    element.addEventListener('dragover', this.onDragOver.bind(this), true);\n    this.element = element;\n    this.transferTypes = transferTypes;\n    this.messageText = messageText;\n    this.handleDrop = handleDrop;\n    this.enabled = true;\n    this.dragMaskElement = null;\n  }\n\n  setEnabled(enabled: boolean): void {\n    this.enabled = enabled;\n  }\n\n  private onDragEnter(event: Event): void {\n    if (this.enabled && this.hasMatchingType(event)) {\n      event.consume(true);\n    }\n  }\n\n  private hasMatchingType(ev: Event): boolean {\n    const event = (ev as DragEvent);\n    if (!event.dataTransfer) {\n      return false;\n    }\n    for (const transferType of this.transferTypes) {\n      const found = Array.from(event.dataTransfer.items).find(item => {\n        return transferType.kind === item.kind && Boolean(transferType.type.exec(item.type));\n      });\n      if (found) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private onDragOver(ev: Event): void {\n    const event = (ev as DragEvent);\n    if (!this.enabled || !this.hasMatchingType(event)) {\n      return;\n    }\n    if (event.dataTransfer) {\n      event.dataTransfer.dropEffect = 'copy';\n    }\n    event.consume(true);\n    if (this.dragMaskElement) {\n      return;\n    }\n    this.dragMaskElement = this.element.createChild('div', '');\n    const shadowRoot =\n        createShadowRootWithCoreStyles(this.dragMaskElement, {cssFile: dropTargetStyles, delegatesFocus: undefined});\n    shadowRoot.createChild('div', 'drop-target-message').textContent = this.messageText;\n    this.dragMaskElement.addEventListener('drop', this.onDrop.bind(this), true);\n    this.dragMaskElement.addEventListener('dragleave', this.onDragLeave.bind(this), true);\n  }\n\n  private onDrop(ev: Event): void {\n    const event = (ev as DragEvent);\n    event.consume(true);\n    this.removeMask();\n    if (this.enabled && event.dataTransfer) {\n      this.handleDrop(event.dataTransfer);\n    }\n  }\n\n  private onDragLeave(event: Event): void {\n    event.consume(true);\n    this.removeMask();\n  }\n\n  private removeMask(): void {\n    if (this.dragMaskElement) {\n      this.dragMaskElement.remove();\n      this.dragMaskElement = null;\n    }\n  }\n}\n\nexport const Type = {\n  URI: {kind: 'string', type: /text\\/uri-list/},\n  Folder: {kind: 'file', type: /$^/},\n  File: {kind: 'file', type: /.*/},\n  WebFile: {kind: 'file', type: /[\\w]+/},\n  ImageFile: {kind: 'file', type: /image\\/.*/},\n};\n"],
  "mappings": ";AAIA,OAAO,sBAAsB;AAC7B,SAAQ,sCAAqC;AAEtC,aAAM,WAAW;AAAA,EACd;AAAA,EACS;AAAA,EAIT;AAAA,EACS;AAAA,EACT;AAAA,EACA;AAAA,EAER,YACI,SAAkB,eAIlB,aAAqB,YAA0C;AACjE,YAAQ,iBAAiB,aAAa,KAAK,YAAY,KAAK,IAAI,GAAG,IAAI;AACvE,YAAQ,iBAAiB,YAAY,KAAK,WAAW,KAAK,IAAI,GAAG,IAAI;AACrE,SAAK,UAAU;AACf,SAAK,gBAAgB;AACrB,SAAK,cAAc;AACnB,SAAK,aAAa;AAClB,SAAK,UAAU;AACf,SAAK,kBAAkB;AAAA,EACzB;AAAA,EAEA,WAAW,SAAwB;AACjC,SAAK,UAAU;AAAA,EACjB;AAAA,EAEQ,YAAY,OAAoB;AACtC,QAAI,KAAK,WAAW,KAAK,gBAAgB,KAAK,GAAG;AAC/C,YAAM,QAAQ,IAAI;AAAA,IACpB;AAAA,EACF;AAAA,EAEQ,gBAAgB,IAAoB;AAC1C,UAAM,QAAS;AACf,QAAI,CAAC,MAAM,cAAc;AACvB,aAAO;AAAA,IACT;AACA,eAAW,gBAAgB,KAAK,eAAe;AAC7C,YAAM,QAAQ,MAAM,KAAK,MAAM,aAAa,KAAK,EAAE,KAAK,UAAQ;AAC9D,eAAO,aAAa,SAAS,KAAK,QAAQ,QAAQ,aAAa,KAAK,KAAK,KAAK,IAAI,CAAC;AAAA,MACrF,CAAC;AACD,UAAI,OAAO;AACT,eAAO;AAAA,MACT;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EAEQ,WAAW,IAAiB;AAClC,UAAM,QAAS;AACf,QAAI,CAAC,KAAK,WAAW,CAAC,KAAK,gBAAgB,KAAK,GAAG;AACjD;AAAA,IACF;AACA,QAAI,MAAM,cAAc;AACtB,YAAM,aAAa,aAAa;AAAA,IAClC;AACA,UAAM,QAAQ,IAAI;AAClB,QAAI,KAAK,iBAAiB;AACxB;AAAA,IACF;AACA,SAAK,kBAAkB,KAAK,QAAQ,YAAY,OAAO,EAAE;AACzD,UAAM,aACF,+BAA+B,KAAK,iBAAiB,EAAC,SAAS,kBAAkB,gBAAgB,OAAS,CAAC;AAC/G,eAAW,YAAY,OAAO,qBAAqB,EAAE,cAAc,KAAK;AACxE,SAAK,gBAAgB,iBAAiB,QAAQ,KAAK,OAAO,KAAK,IAAI,GAAG,IAAI;AAC1E,SAAK,gBAAgB,iBAAiB,aAAa,KAAK,YAAY,KAAK,IAAI,GAAG,IAAI;AAAA,EACtF;AAAA,EAEQ,OAAO,IAAiB;AAC9B,UAAM,QAAS;AACf,UAAM,QAAQ,IAAI;AAClB,SAAK,WAAW;AAChB,QAAI,KAAK,WAAW,MAAM,cAAc;AACtC,WAAK,WAAW,MAAM,YAAY;AAAA,IACpC;AAAA,EACF;AAAA,EAEQ,YAAY,OAAoB;AACtC,UAAM,QAAQ,IAAI;AAClB,SAAK,WAAW;AAAA,EAClB;AAAA,EAEQ,aAAmB;AACzB,QAAI,KAAK,iBAAiB;AACxB,WAAK,gBAAgB,OAAO;AAC5B,WAAK,kBAAkB;AAAA,IACzB;AAAA,EACF;AACF;AAEO,aAAM,OAAO;AAAA,EAClB,KAAK,EAAC,MAAM,UAAU,MAAM,iBAAgB;AAAA,EAC5C,QAAQ,EAAC,MAAM,QAAQ,MAAM,KAAI;AAAA,EACjC,MAAM,EAAC,MAAM,QAAQ,MAAM,KAAI;AAAA,EAC/B,SAAS,EAAC,MAAM,QAAQ,MAAM,QAAO;AAAA,EACrC,WAAW,EAAC,MAAM,QAAQ,MAAM,YAAW;AAC7C;",
  "names": []
}
