{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/components/panel_feedback/FeedbackButton.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as ComponentHelpers from '../../components/helpers/helpers.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as Buttons from '../buttons/buttons.js';\n\nconst {html} = LitHtml;\n\nconst UIStrings = {\n  /**\n   * @description The title of the button that leads to the feedback form.\n   */\n  feedback: 'Feedback',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('ui/components/panel_feedback/FeedbackButton.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst feedbackIconUrl = new URL('../../../Images/review.svg', import.meta.url).toString();\n\nexport interface FeedbackButtonData {\n  feedbackUrl: Platform.DevToolsPath.UrlString;\n}\nexport class FeedbackButton extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #boundRender = this.#render.bind(this);\n\n  #props: FeedbackButtonData = {\n    feedbackUrl: Platform.DevToolsPath.EmptyUrlString,\n  };\n\n  set data(data: FeedbackButtonData) {\n    this.#props = data;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  #onFeedbackClick(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(this.#props.feedbackUrl);\n  }\n\n  #render(): void {\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('FeedbackButton render was not scheduled');\n    }\n\n    // clang-format off\n    LitHtml.render(html`\n      <devtools-button\n          @click=${this.#onFeedbackClick}\n          .iconUrl=${feedbackIconUrl}\n          .variant=${Buttons.Button.Variant.OUTLINED}\n          .jslogContext=${'feedback'}\n      >${i18nString(UIStrings.feedback)}</devtools-button>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-feedback-button', FeedbackButton);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-feedback-button': FeedbackButton;\n  }\n}\n"],
  "mappings": ";AAIA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,cAAc;AAC1B,YAAY,sBAAsB;AAClC,YAAY,aAAa;AACzB,YAAY,aAAa;AAEzB,MAAM,EAAC,KAAI,IAAI;AAEf,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA,EAIhB,UAAU;AACZ;AAEA,MAAM,OAAO,KAAK,KAAK,kBAAkB,kDAAkD,SAAS;AACpG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW,IAAI;AAEpE,MAAM,kBAAkB,IAAI,IAAI,8BAA8B,YAAY,GAAG,EAAE,SAAS;AAKjF,aAAM,uBAAuB,YAAY;AAAA,EACrC,UAAU,KAAK,aAAa,EAAC,MAAM,OAAM,CAAC;AAAA,EAC1C,eAAe,KAAK,QAAQ,KAAK,IAAI;AAAA,EAE9C,SAA6B;AAAA,IAC3B,aAAa,SAAS,aAAa;AAAA,EACrC;AAAA,EAEA,IAAI,KAAK,MAA0B;AACjC,SAAK,SAAS;AACd,SAAK,iBAAiB,gBAAgB,eAAe,MAAM,KAAK,YAAY;AAAA,EAC9E;AAAA,EAEA,mBAAyB;AACvB,SAAK,sBAAsB,8BAA8B,aAAa,KAAK,OAAO,WAAW;AAAA,EAC/F;AAAA,EAEA,UAAgB;AACd,QAAI,CAAC,iBAAiB,gBAAgB,kBAAkB,IAAI,GAAG;AAC7D,YAAM,IAAI,MAAM,yCAAyC;AAAA,IAC3D;AAGA,YAAQ,OAAO;AAAA;AAAA,mBAEA,KAAK,gBAAgB;AAAA,qBACnB,eAAe;AAAA,qBACf,QAAQ,OAAO,QAAQ,QAAQ;AAAA,0BAC1B,UAAU;AAAA,SAC3B,WAAW,UAAU,QAAQ,CAAC;AAAA,SAC9B,KAAK,SAAS,EAAC,MAAM,KAAI,CAAC;AAAA,EAEjC;AACF;AAEA,eAAe,OAAO,4BAA4B,cAAc;",
  "names": []
}
