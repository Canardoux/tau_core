{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/visual_logging/LoggingDriver.ts"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as Coordinator from '../components/render_coordinator/render_coordinator.js';\n\nimport {processForDebugging, processStartLoggingForDebugging} from './Debugging.js';\nimport {getDomState, visibleOverlap} from './DomState.js';\nimport type {Loggable} from './Loggable.js';\nimport {getLoggingConfig} from './LoggingConfig.js';\nimport {logChange, logClick, logDrag, logHover, logImpressions, logKeyDown, logResize} from './LoggingEvents.js';\nimport {getLoggingState, getOrCreateLoggingState, type LoggingState} from './LoggingState.js';\nimport {getNonDomLoggables, hasNonDomLoggables, unregisterAllLoggables, unregisterLoggables} from './NonDomState.js';\n\nconst PROCESS_DOM_INTERVAL = 500;\nconst KEYBOARD_LOG_INTERVAL = 3000;\nconst HOVER_LOG_INTERVAL = 1000;\nconst DRAG_LOG_INTERVAL = 1250;\nconst DRAG_REPORT_THRESHOLD = 50;\nconst CLICK_LOG_INTERVAL = 500;\nconst RESIZE_LOG_INTERVAL = 200;\nconst RESIZE_REPORT_THRESHOLD = 50;\n\nconst noOpThrottler = {\n  schedule: async () => {},\n} as unknown as Common.Throttler.Throttler;\n\nlet processingThrottler = noOpThrottler;\nexport let keyboardLogThrottler = noOpThrottler;\nlet hoverLogThrottler = noOpThrottler;\nlet dragLogThrottler = noOpThrottler;\nexport let clickLogThrottler = noOpThrottler;\nexport let resizeLogThrottler = noOpThrottler;\n\nconst mutationObserver = new MutationObserver(scheduleProcessing);\nconst resizeObserver = new ResizeObserver(onResizeOrIntersection);\nconst intersectionObserver = new IntersectionObserver(onResizeOrIntersection);\nconst documents: Document[] = [];\nconst pendingResize = new Map<Element, DOMRect>();\nconst pendingChange = new Set<Element>();\n\nfunction observeMutations(roots: Node[]): void {\n  for (const root of roots) {\n    mutationObserver.observe(root, {attributes: true, childList: true, subtree: true});\n  }\n}\n\nlet logging = false;\n\nexport function isLogging(): boolean {\n  return logging;\n}\n\nexport async function startLogging(options?: {\n  processingThrottler?: Common.Throttler.Throttler,\n  keyboardLogThrottler?: Common.Throttler.Throttler,\n  hoverLogThrottler?: Common.Throttler.Throttler,\n  dragLogThrottler?: Common.Throttler.Throttler,\n  clickLogThrottler?: Common.Throttler.Throttler,\n  resizeLogThrottler?: Common.Throttler.Throttler,\n}): Promise<void> {\n  logging = true;\n  processingThrottler = options?.processingThrottler || new Common.Throttler.Throttler(PROCESS_DOM_INTERVAL);\n  keyboardLogThrottler = options?.keyboardLogThrottler || new Common.Throttler.Throttler(KEYBOARD_LOG_INTERVAL);\n  hoverLogThrottler = options?.hoverLogThrottler || new Common.Throttler.Throttler(HOVER_LOG_INTERVAL);\n  dragLogThrottler = options?.dragLogThrottler || new Common.Throttler.Throttler(DRAG_LOG_INTERVAL);\n  clickLogThrottler = options?.clickLogThrottler || new Common.Throttler.Throttler(CLICK_LOG_INTERVAL);\n  resizeLogThrottler = options?.resizeLogThrottler || new Common.Throttler.Throttler(RESIZE_LOG_INTERVAL);\n  processStartLoggingForDebugging();\n  await addDocument(document);\n}\n\nexport async function addDocument(document: Document): Promise<void> {\n  documents.push(document);\n  if (['interactive', 'complete'].includes(document.readyState)) {\n    await process();\n  }\n  document.addEventListener('visibilitychange', scheduleProcessing);\n  document.addEventListener('scroll', scheduleProcessing);\n  observeMutations([document.body]);\n}\n\nexport async function stopLogging(): Promise<void> {\n  await keyboardLogThrottler.schedule(async () => {}, Common.Throttler.Scheduling.AS_SOON_AS_POSSIBLE);\n  logging = false;\n  unregisterAllLoggables();\n  for (const document of documents) {\n    document.removeEventListener('visibilitychange', scheduleProcessing);\n    document.removeEventListener('scroll', scheduleProcessing);\n  }\n  mutationObserver.disconnect();\n  resizeObserver.disconnect();\n  intersectionObserver.disconnect();\n  documents.length = 0;\n  viewportRects.clear();\n  processingThrottler = noOpThrottler;\n  pendingResize.clear();\n  pendingChange.clear();\n}\n\nexport function pendingWorkComplete(): Promise<void> {\n  return Promise\n      .all([\n        processingThrottler,\n        keyboardLogThrottler,\n        hoverLogThrottler,\n        dragLogThrottler,\n        clickLogThrottler,\n        resizeLogThrottler,\n      ].map(async throttler => {\n        for (let i = 0; throttler.process && i < 3; ++i) {\n          await throttler.processCompleted;\n        }\n      }))\n      .then(() => {});\n}\n\nasync function yieldToResize(): Promise<void> {\n  while (resizeLogThrottler.process) {\n    await resizeLogThrottler.processCompleted;\n  }\n}\n\nasync function yieldToInteractions(): Promise<void> {\n  while (clickLogThrottler.process) {\n    await clickLogThrottler.processCompleted;\n  }\n  while (keyboardLogThrottler.process) {\n    await keyboardLogThrottler.processCompleted;\n  }\n}\n\nfunction flushPendingChangeEvents(): void {\n  for (const element of pendingChange) {\n    logPendingChange(element);\n  }\n}\n\nexport async function scheduleProcessing(): Promise<void> {\n  if (!processingThrottler) {\n    return;\n  }\n  void processingThrottler.schedule(\n      () => Coordinator.RenderCoordinator.RenderCoordinator.instance().read('processForLogging', process));\n}\n\nconst viewportRects = new Map<Document, DOMRect>();\nconst viewportRectFor = (element: Element): DOMRect => {\n  const ownerDocument = element.ownerDocument;\n  const viewportRect = viewportRects.get(ownerDocument) ||\n      new DOMRect(0, 0, ownerDocument.defaultView?.innerWidth || 0, ownerDocument.defaultView?.innerHeight || 0);\n  viewportRects.set(ownerDocument, viewportRect);\n  return viewportRect;\n};\n\nasync function process(): Promise<void> {\n  if (document.hidden) {\n    return;\n  }\n  const startTime = performance.now();\n  const {loggables, shadowRoots} = getDomState(documents);\n  const visibleLoggables: Loggable[] = [];\n  observeMutations(shadowRoots);\n  const nonDomRoots: (Loggable|undefined)[] = [undefined];\n\n  for (const {element, parent} of loggables) {\n    const loggingState = getOrCreateLoggingState(element, getLoggingConfig(element), parent);\n    if (!loggingState.impressionLogged) {\n      const overlap = visibleOverlap(element, viewportRectFor(element));\n      const visibleSelectOption = element.tagName === 'OPTION' && loggingState.parent?.selectOpen;\n      const visible = overlap && (!parent || loggingState.parent?.impressionLogged);\n      if (visible || visibleSelectOption) {\n        if (overlap) {\n          loggingState.size = overlap;\n        }\n        visibleLoggables.push(element);\n        loggingState.impressionLogged = true;\n      }\n    }\n    if (loggingState.impressionLogged && hasNonDomLoggables(element)) {\n      nonDomRoots.push(element);\n    }\n    if (!loggingState.processed) {\n      const clickLikeHandler = (doubleClick: boolean) => (e: Event) => {\n        const loggable = e.currentTarget as Element;\n        maybeCancelDrag(e);\n        logClick(clickLogThrottler)(loggable, e, {doubleClick});\n      };\n      if (loggingState.config.track?.click) {\n        element.addEventListener('click', clickLikeHandler(false), {capture: true});\n        element.addEventListener('auxclick', clickLikeHandler(false), {capture: true});\n        element.addEventListener('contextmenu', clickLikeHandler(false), {capture: true});\n      }\n      if (loggingState.config.track?.dblclick) {\n        element.addEventListener('dblclick', clickLikeHandler(true), {capture: true});\n      }\n      const trackHover = loggingState.config.track?.hover;\n      if (trackHover) {\n        element.addEventListener('mouseover', logHover(hoverLogThrottler), {capture: true});\n        element.addEventListener(\n            'mouseout',\n            () => hoverLogThrottler.schedule(cancelLogging, Common.Throttler.Scheduling.AS_SOON_AS_POSSIBLE),\n            {capture: true});\n      }\n      const trackDrag = loggingState.config.track?.drag;\n      if (trackDrag) {\n        element.addEventListener('pointerdown', onDragStart, {capture: true});\n        document.addEventListener('pointerup', maybeCancelDrag, {capture: true});\n        document.addEventListener('dragend', maybeCancelDrag, {capture: true});\n      }\n      if (loggingState.config.track?.change) {\n        element.addEventListener('input', (event: Event) => {\n          if (!(event instanceof InputEvent)) {\n            return;\n          }\n          if (loggingState.pendingChangeContext && loggingState.pendingChangeContext !== event.inputType) {\n            void logPendingChange(element);\n          }\n          loggingState.pendingChangeContext = event.inputType;\n          pendingChange.add(element);\n        }, {capture: true});\n        element.addEventListener('change', (event: Event) => {\n          const target = event?.target ?? element;\n          if (['checkbox', 'radio'].includes((target as HTMLInputElement).type)) {\n            loggingState.pendingChangeContext = (target as HTMLInputElement).checked ? 'on' : 'off';\n          }\n          logPendingChange(element);\n        }, {capture: true});\n        element.addEventListener('focusout', () => {\n          if (loggingState.pendingChangeContext) {\n            void logPendingChange(element);\n          }\n        }, {capture: true});\n      }\n      const trackKeyDown = loggingState.config.track?.keydown;\n      if (trackKeyDown) {\n        element.addEventListener('keydown', e => logKeyDown(keyboardLogThrottler)(e.currentTarget, e), {capture: true});\n      }\n      if (loggingState.config.track?.resize) {\n        resizeObserver.observe(element);\n        intersectionObserver.observe(element);\n      }\n      if (element.tagName === 'SELECT') {\n        const onSelectOpen = (e: Event): void => {\n          void logClick(clickLogThrottler)(element, e);\n          if (loggingState.selectOpen) {\n            return;\n          }\n          loggingState.selectOpen = true;\n          void scheduleProcessing();\n        };\n        element.addEventListener('click', onSelectOpen, {capture: true});\n        // Based on MenuListSelectType::ShouldOpenPopupForKey{Down,Press}Event\n        element.addEventListener('keydown', event => {\n          const e = event as KeyboardEvent;\n          if ((Host.Platform.isMac() || e.altKey) && (e.code === 'ArrowDown' || e.code === 'ArrowUp') ||\n              (!e.altKey && !e.ctrlKey && e.code === 'F4')) {\n            onSelectOpen(event);\n          }\n        }, {capture: true});\n        element.addEventListener('keypress', event => {\n          const e = event as KeyboardEvent;\n          if (e.key === ' ' || !Host.Platform.isMac() && e.key === '\\r') {\n            onSelectOpen(event);\n          }\n        }, {capture: true});\n        element.addEventListener('change', e => {\n          for (const option of (element as HTMLSelectElement).selectedOptions) {\n            if (getLoggingState(option)?.config.track?.click) {\n              void logClick(clickLogThrottler)(option, e);\n            }\n          }\n        }, {capture: true});\n      }\n      loggingState.processed = true;\n    }\n    processForDebugging(element);\n  }\n  for (let i = 0; i < nonDomRoots.length; ++i) {\n    const root = nonDomRoots[i];\n    for (const {loggable, config, parent} of getNonDomLoggables(root)) {\n      const loggingState = getOrCreateLoggingState(loggable, config, parent);\n      processForDebugging(loggable);\n      visibleLoggables.push(loggable);\n      loggingState.impressionLogged = true;\n      if (hasNonDomLoggables(loggable)) {\n        nonDomRoots.push(loggable);\n      }\n    }\n    // No need to track loggable as soon as we've logged the impression\n    // We can still log interaction events with a handle to a loggable\n    unregisterLoggables(root);\n  }\n  if (visibleLoggables.length) {\n    await yieldToInteractions();\n    await yieldToResize();\n    flushPendingChangeEvents();\n    await logImpressions(visibleLoggables);\n  }\n  Host.userMetrics.visualLoggingProcessingDone(performance.now() - startTime);\n}\n\nfunction logPendingChange(element: Element): void {\n  const loggingState = getLoggingState(element);\n  if (!loggingState) {\n    return;\n  }\n  void logChange(element);\n  delete loggingState.pendingChangeContext;\n  pendingChange.delete(element);\n}\n\nasync function cancelLogging(): Promise<void> {\n}\n\nlet dragStartX = 0, dragStartY = 0;\n\nfunction onDragStart(event: Event): void {\n  if (!(event instanceof MouseEvent)) {\n    return;\n  }\n  dragStartX = event.screenX;\n  dragStartY = event.screenY;\n  void logDrag(dragLogThrottler)(event);\n}\n\nfunction maybeCancelDrag(event: Event): void {\n  if (!(event instanceof MouseEvent)) {\n    return;\n  }\n  if (Math.abs(event.screenX - dragStartX) >= DRAG_REPORT_THRESHOLD ||\n      Math.abs(event.screenY - dragStartY) >= DRAG_REPORT_THRESHOLD) {\n    return;\n  }\n  void dragLogThrottler.schedule(cancelLogging, Common.Throttler.Scheduling.AS_SOON_AS_POSSIBLE);\n}\n\nfunction isAncestorOf(state1: LoggingState|null, state2: LoggingState|null): boolean {\n  while (state2) {\n    if (state2 === state1) {\n      return true;\n    }\n    state2 = state2.parent;\n  }\n  return false;\n}\n\nasync function onResizeOrIntersection(entries: ResizeObserverEntry[]|IntersectionObserverEntry[]): Promise<void> {\n  for (const entry of entries) {\n    const element = entry.target;\n    const loggingState = getLoggingState(element);\n    const overlap = visibleOverlap(element, viewportRectFor(element)) || new DOMRect(0, 0, 0, 0);\n    if (!loggingState?.size) {\n      continue;\n    }\n\n    let hasPendingParent = false;\n    for (const pendingElement of pendingResize.keys()) {\n      if (pendingElement === element) {\n        continue;\n      }\n      const pendingState = getLoggingState(pendingElement);\n      if (isAncestorOf(pendingState, loggingState)) {\n        hasPendingParent = true;\n        break;\n      }\n      if (isAncestorOf(loggingState, pendingState)) {\n        pendingResize.delete(pendingElement);\n      }\n    }\n    if (hasPendingParent) {\n      continue;\n    }\n    pendingResize.set(element, overlap);\n    void resizeLogThrottler.schedule(async () => {\n      if (pendingResize.size) {\n        await yieldToInteractions();\n        flushPendingChangeEvents();\n      }\n      for (const [element, overlap] of pendingResize.entries()) {\n        const loggingState = getLoggingState(element);\n        if (!loggingState) {\n          continue;\n        }\n        if (Math.abs(overlap.width - loggingState.size.width) >= RESIZE_REPORT_THRESHOLD ||\n            Math.abs(overlap.height - loggingState.size.height) >= RESIZE_REPORT_THRESHOLD) {\n          logResize(element, overlap);\n        }\n      }\n      pendingResize.clear();\n    }, Common.Throttler.Scheduling.DELAYED);\n  }\n}\n"],
  "mappings": "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",
  "names": ["document", "element", "overlap", "loggingState"]
}
