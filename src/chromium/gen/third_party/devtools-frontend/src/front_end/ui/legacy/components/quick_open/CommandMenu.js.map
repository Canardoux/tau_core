{
  "version": 3,
  "sources": ["../../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/components/quick_open/CommandMenu.ts"],
  "sourcesContent": ["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Host from '../../../../core/host/host.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as Diff from '../../../../third_party/diff/diff.js';\nimport * as UI from '../../legacy.js';\n\nimport {FilteredListWidget, Provider, registerProvider} from './FilteredListWidget.js';\nimport {QuickOpenImpl} from './QuickOpen.js';\n\nconst UIStrings = {\n  /**\n   * @description Message to display if a setting change requires a reload of DevTools\n   */\n  oneOrMoreSettingsHaveChanged: 'One or more settings have changed which requires a reload to take effect.',\n  /**\n   * @description Text in Command Menu of the Command Menu\n   */\n  noCommandsFound: 'No commands found',\n  /**\n   * @description Text for command prefix of run a command\n   */\n  run: 'Run',\n  /**\n   * @description Text for command suggestion of run a command\n   */\n  command: 'Command',\n  /**\n   * @description Hint text to indicate that a selected command is deprecated\n   */\n  deprecated: '\u2014 deprecated',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/quick_open/CommandMenu.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet commandMenuInstance: CommandMenu;\n\nexport class CommandMenu {\n  private readonly commandsInternal: Command[];\n  private constructor() {\n    this.commandsInternal = [];\n    this.loadCommands();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): CommandMenu {\n    const {forceNew} = opts;\n    if (!commandMenuInstance || forceNew) {\n      commandMenuInstance = new CommandMenu();\n    }\n    return commandMenuInstance;\n  }\n\n  static createCommand(options: CreateCommandOptions): Command {\n    const {\n      category,\n      keys,\n      title,\n      shortcut,\n      jslogContext,\n      executeHandler,\n      availableHandler,\n      userActionCode,\n      deprecationWarning,\n      isPanelOrDrawer,\n    } = options;\n\n    let handler = executeHandler;\n    if (userActionCode) {\n      const actionCode = userActionCode;\n      handler = () => {\n        Host.userMetrics.actionTaken(actionCode);\n        executeHandler();\n      };\n    }\n    return new Command(\n        category, title, keys, shortcut, jslogContext, handler, availableHandler, deprecationWarning, isPanelOrDrawer);\n  }\n\n  static createSettingCommand<V>(setting: Common.Settings.Setting<V>, title: Common.UIString.LocalizedString, value: V):\n      Command {\n    const category = setting.category();\n    if (!category) {\n      throw new Error(`Creating '${title}' setting command failed. Setting has no category.`);\n    }\n    const tags = setting.tags() || '';\n    const reloadRequired = Boolean(setting.reloadRequired());\n\n    return CommandMenu.createCommand({\n      category: Common.Settings.getLocalizedSettingsCategory(category),\n      keys: tags,\n      title,\n      shortcut: '',\n      jslogContext: Platform.StringUtilities.toKebabCase(`${setting.name}-${value}`),\n      executeHandler: () => {\n        if (setting.deprecation?.disabled &&\n            (!setting.deprecation?.experiment || setting.deprecation.experiment.isEnabled())) {\n          void Common.Revealer.reveal(setting);\n          return;\n        }\n        setting.set(value);\n\n        if (setting.name === 'emulate-page-focus') {\n          Host.userMetrics.actionTaken(Host.UserMetrics.Action.ToggleEmulateFocusedPageFromCommandMenu);\n        }\n\n        if (reloadRequired) {\n          UI.InspectorView.InspectorView.instance().displayReloadRequiredWarning(\n              i18nString(UIStrings.oneOrMoreSettingsHaveChanged));\n        }\n      },\n      availableHandler,\n      userActionCode: undefined,\n      deprecationWarning: setting.deprecation?.warning,\n    });\n\n    function availableHandler(): boolean {\n      return setting.get() !== value;\n    }\n  }\n\n  static createActionCommand(options: ActionCommandOptions): Command {\n    const {action, userActionCode} = options;\n    const category = action.category();\n    if (!category) {\n      throw new Error(`Creating '${action.title()}' action command failed. Action has no category.`);\n    }\n\n    let panelOrDrawer = undefined;\n    if (category === UI.ActionRegistration.ActionCategory.DRAWER) {\n      panelOrDrawer = PanelOrDrawer.DRAWER;\n    }\n\n    const shortcut = UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutTitleForAction(action.id()) || '';\n\n    return CommandMenu.createCommand({\n      category: UI.ActionRegistration.getLocalizedActionCategory(category),\n      keys: action.tags() || '',\n      title: action.title(),\n      shortcut,\n      jslogContext: action.id(),\n      executeHandler: action.execute.bind(action),\n      userActionCode,\n      availableHandler: undefined,\n      isPanelOrDrawer: panelOrDrawer,\n    });\n  }\n\n  static createRevealViewCommand(options: RevealViewCommandOptions): Command {\n    const {title, tags, category, userActionCode, id} = options;\n    if (!category) {\n      throw new Error(`Creating '${title}' reveal view command failed. Reveal view has no category.`);\n    }\n    let panelOrDrawer = undefined;\n    if (category === UI.ViewManager.ViewLocationCategory.PANEL) {\n      panelOrDrawer = PanelOrDrawer.PANEL;\n    } else if (category === UI.ViewManager.ViewLocationCategory.DRAWER) {\n      panelOrDrawer = PanelOrDrawer.DRAWER;\n    }\n\n    const executeHandler = (): Promise<void> => {\n      if (id === 'issues-pane') {\n        Host.userMetrics.issuesPanelOpenedFrom(Host.UserMetrics.IssueOpener.COMMAND_MENU);\n      }\n      return UI.ViewManager.ViewManager.instance().showView(id, /* userGesture */ true);\n    };\n\n    return CommandMenu.createCommand({\n      category: UI.ViewManager.getLocalizedViewLocationCategory(category),\n      keys: tags,\n      title,\n      shortcut: '',\n      jslogContext: id,\n      executeHandler,\n      userActionCode,\n      availableHandler: undefined,\n      isPanelOrDrawer: panelOrDrawer,\n    });\n  }\n\n  private loadCommands(): void {\n    const locations = new Map<UI.ViewManager.ViewLocationValues, UI.ViewManager.ViewLocationCategory>();\n    for (const {category, name} of UI.ViewManager.getRegisteredLocationResolvers()) {\n      if (category && name) {\n        locations.set(name, category);\n      }\n    }\n    const views = UI.ViewManager.getRegisteredViewExtensions(Common.Settings.Settings.instance().getHostConfig());\n    for (const view of views) {\n      const viewLocation = view.location();\n      const category = viewLocation && locations.get(viewLocation);\n      if (!category) {\n        continue;\n      }\n\n      const options: RevealViewCommandOptions = {\n        title: view.commandPrompt(),\n        tags: view.tags() || '',\n        category,\n        userActionCode: undefined,\n        id: view.viewId(),\n      };\n      this.commandsInternal.push(CommandMenu.createRevealViewCommand(options));\n    }\n    // Populate allowlisted settings.\n    const settingsRegistrations = Common.Settings.Settings.instance().getRegisteredSettings();\n    for (const settingRegistration of settingsRegistrations) {\n      const options = settingRegistration.options;\n      if (!options || !settingRegistration.category) {\n        continue;\n      }\n      for (const pair of options) {\n        const setting = Common.Settings.Settings.instance().moduleSetting(settingRegistration.settingName);\n        this.commandsInternal.push(CommandMenu.createSettingCommand(setting, pair.title(), pair.value));\n      }\n    }\n  }\n\n  commands(): Command[] {\n    return this.commandsInternal;\n  }\n}\nexport interface ActionCommandOptions {\n  action: UI.ActionRegistration.Action;\n  userActionCode?: number;\n}\n\nexport interface RevealViewCommandOptions {\n  id: string;\n  title: Common.UIString.LocalizedString;\n  tags: string;\n  category: UI.ViewManager.ViewLocationCategory;\n  userActionCode?: number;\n}\n\nexport interface CreateCommandOptions {\n  category: Platform.UIString.LocalizedString;\n  keys: string;\n  title: Common.UIString.LocalizedString;\n  shortcut: string;\n  jslogContext: string;\n  executeHandler: () => void;\n  availableHandler?: () => boolean;\n  userActionCode?: number;\n  deprecationWarning?: Platform.UIString.LocalizedString;\n  isPanelOrDrawer?: PanelOrDrawer;\n}\n\nexport const enum PanelOrDrawer {\n  PANEL = 'PANEL',\n  DRAWER = 'DRAWER',\n}\n\nexport class CommandMenuProvider extends Provider {\n  private commands: Command[];\n\n  constructor(commandsForTest: Command[] = []) {\n    super('command');\n    this.commands = commandsForTest;\n  }\n\n  override attach(): void {\n    const allCommands = CommandMenu.instance().commands();\n\n    // Populate allowlisted actions.\n    const actions = UI.ActionRegistry.ActionRegistry.instance().availableActions();\n    for (const action of actions) {\n      const category = action.category();\n      if (!category) {\n        continue;\n      }\n\n      const options: ActionCommandOptions = {action, userActionCode: undefined};\n      this.commands.push(CommandMenu.createActionCommand(options));\n    }\n\n    for (const command of allCommands) {\n      if (!command.available()) {\n        continue;\n      }\n      if (this.commands.find(({title, category}) => title === command.title && category === command.category)) {\n        continue;\n      }\n      this.commands.push(command);\n    }\n\n    this.commands = this.commands.sort(commandComparator);\n\n    function commandComparator(left: Command, right: Command): number {\n      const cats = Platform.StringUtilities.compare(left.category, right.category);\n      return cats ? cats : Platform.StringUtilities.compare(left.title, right.title);\n    }\n  }\n\n  override detach(): void {\n    this.commands = [];\n  }\n\n  override itemCount(): number {\n    return this.commands.length;\n  }\n\n  override itemKeyAt(itemIndex: number): string {\n    return this.commands[itemIndex].key;\n  }\n\n  override itemScoreAt(itemIndex: number, query: string): number {\n    const command = this.commands[itemIndex];\n    let score = Diff.Diff.DiffWrapper.characterScore(query.toLowerCase(), command.title.toLowerCase());\n\n    // Score panel/drawer reveals above regular actions.\n    if (command.isPanelOrDrawer === PanelOrDrawer.PANEL) {\n      score += 2;\n    } else if (command.isPanelOrDrawer === PanelOrDrawer.DRAWER) {\n      score += 1;\n    }\n\n    return score;\n  }\n\n  override renderItem(itemIndex: number, query: string, titleElement: Element, subtitleElement: Element): void {\n    const command = this.commands[itemIndex];\n\n    titleElement.removeChildren();\n    UI.UIUtils.createTextChild(titleElement, command.title);\n    FilteredListWidget.highlightRanges(titleElement, query, true);\n\n    subtitleElement.textContent = command.shortcut;\n\n    const deprecationWarning = command.deprecationWarning;\n    if (deprecationWarning) {\n      const deprecatedTagElement = (titleElement.parentElement?.createChild('span', 'deprecated-tag') as HTMLElement);\n      if (deprecatedTagElement) {\n        deprecatedTagElement.textContent = i18nString(UIStrings.deprecated);\n        deprecatedTagElement.title = deprecationWarning;\n      }\n    }\n    const tagElement = (titleElement.parentElement?.parentElement?.createChild('span', 'tag') as HTMLElement);\n    if (!tagElement) {\n      return;\n    }\n    const index = Platform.StringUtilities.hashCode(command.category) % MaterialPaletteColors.length;\n    tagElement.style.backgroundColor = MaterialPaletteColors[index];\n    tagElement.style.color = '#fff';\n    tagElement.textContent = command.category;\n  }\n\n  override jslogContextAt(itemIndex: number): string {\n    return this.commands[itemIndex].jslogContext;\n  }\n\n  override selectItem(itemIndex: number|null, _promptValue: string): void {\n    if (itemIndex === null) {\n      return;\n    }\n    this.commands[itemIndex].execute();\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.SelectCommandFromCommandMenu);\n  }\n\n  override notFoundText(): string {\n    return i18nString(UIStrings.noCommandsFound);\n  }\n}\n\nexport const MaterialPaletteColors = [\n  '#F44336',\n  '#E91E63',\n  '#9C27B0',\n  '#673AB7',\n  '#3F51B5',\n  '#03A9F4',\n  '#00BCD4',\n  '#009688',\n  '#4CAF50',\n  '#8BC34A',\n  '#CDDC39',\n  '#FFC107',\n  '#FF9800',\n  '#FF5722',\n  '#795548',\n  '#9E9E9E',\n  '#607D8B',\n];\n\nexport class Command {\n  readonly category: Common.UIString.LocalizedString;\n  readonly title: Common.UIString.LocalizedString;\n  readonly key: string;\n  readonly shortcut: string;\n  readonly jslogContext: string;\n  readonly deprecationWarning?: Platform.UIString.LocalizedString;\n  readonly isPanelOrDrawer?: PanelOrDrawer;\n\n  readonly #executeHandler: () => unknown;\n  readonly #availableHandler?: () => boolean;\n\n  constructor(\n      category: Common.UIString.LocalizedString, title: Common.UIString.LocalizedString, key: string, shortcut: string,\n      jslogContext: string, executeHandler: () => unknown, availableHandler?: () => boolean,\n      deprecationWarning?: Platform.UIString.LocalizedString, isPanelOrDrawer?: PanelOrDrawer) {\n    this.category = category;\n    this.title = title;\n    this.key = category + '\\0' + title + '\\0' + key;\n    this.shortcut = shortcut;\n    this.jslogContext = jslogContext;\n    this.#executeHandler = executeHandler;\n    this.#availableHandler = availableHandler;\n    this.deprecationWarning = deprecationWarning;\n    this.isPanelOrDrawer = isPanelOrDrawer;\n  }\n\n  available(): boolean {\n    return this.#availableHandler ? this.#availableHandler() : true;\n  }\n\n  execute(): unknown {\n    return this.#executeHandler();  // Tests might want to await the action in case it's async.\n  }\n}\n\nexport class ShowActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(_context: UI.Context.Context, _actionId: string): boolean {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront();\n    QuickOpenImpl.show('>');\n    return true;\n  }\n}\n\nregisterProvider({\n  prefix: '>',\n  iconName: 'chevron-right',\n  iconWidth: '20px',\n  provider: () => Promise.resolve(new CommandMenuProvider()),\n  titlePrefix: () => i18nString(UIStrings.run),\n  titleSuggestion: () => i18nString(UIStrings.command),\n});\n"],
  "mappings": "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",
  "names": ["PanelOrDrawer"]
}
