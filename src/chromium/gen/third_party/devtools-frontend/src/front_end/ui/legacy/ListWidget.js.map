{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/ListWidget.ts"],
  "sourcesContent": ["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as VisualLogging from '../visual_logging/visual_logging.js';\n\nimport * as ARIAUtils from './ARIAUtils.js';\nimport listWidgetStyles from './listWidget.css.legacy.js';\nimport {Toolbar, ToolbarButton} from './Toolbar.js';\nimport {Tooltip} from './Tooltip.js';\nimport {createInput, createTextButton, ElementFocusRestorer} from './UIUtils.js';\nimport {VBox} from './Widget.js';\n\nconst UIStrings = {\n  /**\n   *@description Text on a button to start editing text\n   */\n  editString: 'Edit',\n  /**\n   *@description Label for an item to remove something\n   */\n  removeString: 'Remove',\n  /**\n   *@description Text to save something\n   */\n  saveString: 'Save',\n  /**\n   *@description Text to add something\n   */\n  addString: 'Add',\n  /**\n   *@description Text to cancel something\n   */\n  cancelString: 'Cancel',\n  /**\n   * @description Text for screen reader to announce that an item has been saved.\n   */\n  changesSaved: 'Changes to item have been saved',\n  /**\n   * @description Text for screen reader to announce that an item has been removed.\n   */\n  removedItem: 'Item has been removed',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/ListWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ListWidget<T> extends VBox {\n  private delegate: Delegate<T>;\n  private readonly list: HTMLElement;\n  private lastSeparator: boolean;\n  private focusRestorer: ElementFocusRestorer|null;\n  private items: T[];\n  private editable: boolean[];\n  private elements: Element[];\n  private editor: Editor<T>|null;\n  private editItem: T|null;\n  private editElement: Element|null;\n  private emptyPlaceholder: Element|null;\n  private isTable: boolean;\n  constructor(delegate: Delegate<T>, delegatesFocus: boolean|undefined = true, isTable: boolean = false) {\n    super(true, delegatesFocus);\n    this.registerRequiredCSS(listWidgetStyles);\n    this.delegate = delegate;\n\n    this.list = this.contentElement.createChild('div', 'list');\n\n    this.lastSeparator = false;\n    this.focusRestorer = null;\n    this.items = [];\n    this.editable = [];\n    this.elements = [];\n    this.editor = null;\n    this.editItem = null;\n    this.editElement = null;\n\n    this.emptyPlaceholder = null;\n\n    this.isTable = isTable;\n    if (isTable) {\n      this.list.role = 'table';\n    }\n\n    this.updatePlaceholder();\n  }\n\n  clear(): void {\n    this.items = [];\n    this.editable = [];\n    this.elements = [];\n    this.lastSeparator = false;\n    this.list.removeChildren();\n    this.updatePlaceholder();\n    this.stopEditing();\n  }\n\n  appendItem(item: T, editable: boolean): void {\n    if (this.lastSeparator && this.items.length) {\n      const element = document.createElement('div');\n      element.classList.add('list-separator');\n      if (this.isTable) {\n        element.role = 'rowgroup';\n      }\n      this.list.appendChild(element);\n    }\n    this.lastSeparator = false;\n\n    this.items.push(item);\n    this.editable.push(editable);\n\n    const element = this.list.createChild('div', 'list-item');\n    if (this.isTable) {\n      element.role = 'rowgroup';\n    }\n    const content = this.delegate.renderItem(item, editable);\n    if (!content.hasAttribute('jslog')) {\n      element.setAttribute('jslog', `${VisualLogging.item()}`);\n    }\n    element.appendChild(content);\n    if (editable) {\n      element.classList.add('editable');\n      element.tabIndex = 0;\n      element.appendChild(this.createControls(item, element));\n    }\n    this.elements.push(element);\n    this.updatePlaceholder();\n  }\n\n  appendSeparator(): void {\n    this.lastSeparator = true;\n  }\n\n  removeItem(index: number): void {\n    if (this.editItem === this.items[index]) {\n      this.stopEditing();\n    }\n\n    const element = this.elements[index];\n\n    const previous = element.previousElementSibling;\n    const previousIsSeparator = previous && previous.classList.contains('list-separator');\n\n    const next = element.nextElementSibling;\n    const nextIsSeparator = next && next.classList.contains('list-separator');\n\n    if (previousIsSeparator && (nextIsSeparator || !next)) {\n      (previous as Element).remove();\n    }\n    if (nextIsSeparator && !previous) {\n      (next as Element).remove();\n    }\n    element.remove();\n\n    this.elements.splice(index, 1);\n    this.items.splice(index, 1);\n    this.editable.splice(index, 1);\n    this.updatePlaceholder();\n  }\n\n  addNewItem(index: number, item: T): void {\n    this.startEditing(item, null, this.elements[index] || null);\n  }\n\n  setEmptyPlaceholder(element: Element|null): void {\n    this.emptyPlaceholder = element;\n    this.updatePlaceholder();\n  }\n\n  private createControls(item: T, element: Element): Element {\n    const controls = document.createElement('div');\n    controls.classList.add('controls-container');\n    controls.classList.add('fill');\n    controls.createChild('div', 'controls-gradient');\n\n    const buttons = controls.createChild('div', 'controls-buttons');\n\n    const toolbar = new Toolbar('', buttons);\n\n    const editButton = new ToolbarButton(i18nString(UIStrings.editString), 'edit', undefined, 'edit-item');\n    editButton.addEventListener(ToolbarButton.Events.CLICK, onEditClicked.bind(this));\n    toolbar.appendToolbarItem(editButton);\n\n    const removeButton = new ToolbarButton(i18nString(UIStrings.removeString), 'bin', undefined, 'remove-item');\n    removeButton.addEventListener(ToolbarButton.Events.CLICK, onRemoveClicked.bind(this));\n    toolbar.appendToolbarItem(removeButton);\n\n    return controls;\n\n    function onEditClicked(this: ListWidget<T>): void {\n      const index = this.elements.indexOf(element);\n      const insertionPoint = this.elements[index + 1] || null;\n      this.startEditing(item, element, insertionPoint);\n    }\n\n    function onRemoveClicked(this: ListWidget<T>): void {\n      const index = this.elements.indexOf(element);\n      this.element.focus();\n      this.delegate.removeItemRequested(this.items[index], index);\n      ARIAUtils.alert(i18nString(UIStrings.removedItem));\n      if (this.elements.length >= 1) {\n        // focus on the next item in the list, or the last item if we're removing the last item\n        (this.elements[Math.min(index, this.elements.length - 1)] as HTMLElement).focus();\n      }\n    }\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.stopEditing();\n  }\n\n  private updatePlaceholder(): void {\n    if (!this.emptyPlaceholder) {\n      return;\n    }\n\n    if (!this.elements.length && !this.editor) {\n      this.list.appendChild(this.emptyPlaceholder);\n    } else {\n      this.emptyPlaceholder.remove();\n    }\n  }\n\n  private startEditing(item: T, element: Element|null, insertionPoint: Element|null): void {\n    if (element && this.editElement === element) {\n      return;\n    }\n\n    this.stopEditing();\n    this.focusRestorer = new ElementFocusRestorer(this.element);\n\n    this.list.classList.add('list-editing');\n    this.element.classList.add('list-editing');\n    this.editItem = item;\n    this.editElement = element;\n    if (element) {\n      element.classList.add('hidden');\n    }\n\n    const index = element ? this.elements.indexOf(element) : -1;\n    this.editor = this.delegate.beginEdit(item);\n    this.updatePlaceholder();\n    this.list.insertBefore(this.editor.element, insertionPoint);\n    this.editor.beginEdit(\n        item, index, element ? i18nString(UIStrings.saveString) : i18nString(UIStrings.addString),\n        this.commitEditing.bind(this), this.stopEditing.bind(this));\n  }\n\n  private commitEditing(): void {\n    const editItem = this.editItem;\n    const isNew = !this.editElement;\n    const editor = (this.editor as Editor<T>);\n    // Focus on the current item or the new item after committing\n    const focusElementIndex = this.editElement ? this.elements.indexOf(this.editElement) : this.elements.length - 1;\n    this.stopEditing();\n    if (editItem !== null) {\n      this.delegate.commitEdit(editItem, editor, isNew);\n      ARIAUtils.alert(i18nString(UIStrings.changesSaved));\n      if (this.elements[focusElementIndex]) {\n        (this.elements[focusElementIndex] as HTMLElement).focus();\n      }\n    }\n  }\n\n  private stopEditing(): void {\n    this.list.classList.remove('list-editing');\n    this.element.classList.remove('list-editing');\n    if (this.focusRestorer) {\n      this.focusRestorer.restore();\n    }\n    if (this.editElement) {\n      this.editElement.classList.remove('hidden');\n    }\n    if (this.editor && this.editor.element.parentElement) {\n      this.editor.element.remove();\n    }\n\n    this.editor = null;\n    this.editItem = null;\n    this.editElement = null;\n    this.updatePlaceholder();\n  }\n}\n\nexport interface Delegate<T> {\n  renderItem(item: T, editable: boolean): Element;\n  removeItemRequested(item: T, index: number): void;\n  beginEdit(item: T): Editor<T>;\n  commitEdit(item: T, editor: Editor<T>, isNew: boolean): void;\n}\n\nexport interface CustomEditorControl<T> extends HTMLElement {\n  value: T;\n  validate: () => ValidatorResult;\n}\n\nexport type EditorControl<T = string> = (HTMLInputElement|HTMLSelectElement|CustomEditorControl<T>);\n\nexport class Editor<T> {\n  element: HTMLDivElement;\n  private readonly contentElementInternal: HTMLElement;\n  private commitButton: Buttons.Button.Button;\n  private readonly cancelButton: Buttons.Button.Button;\n  private errorMessageContainer: HTMLElement;\n  private readonly controls: EditorControl[];\n  private readonly controlByName: Map<string, EditorControl>;\n  private readonly validators: ((arg0: T, arg1: number, arg2: EditorControl) => ValidatorResult)[];\n  private commit: (() => void)|null;\n  private cancel: (() => void)|null;\n  private item: T|null;\n  private index: number;\n\n  constructor() {\n    this.element = document.createElement('div');\n    this.element.classList.add('editor-container');\n    this.element.setAttribute('jslog', `${VisualLogging.pane('editor').track({resize: true})}`);\n    this.element.addEventListener(\n        'keydown', onKeyDown.bind(null, Platform.KeyboardUtilities.isEscKey, this.cancelClicked.bind(this)), false);\n\n    this.contentElementInternal = this.element.createChild('div', 'editor-content');\n    this.contentElementInternal.addEventListener('keydown', onKeyDown.bind(null, event => {\n      if (event.key !== 'Enter') {\n        return false;\n      }\n      if (event.target instanceof HTMLSelectElement) {\n        // 'Enter' on <select> is supposed to open the drop down, so don't swallow that here.\n        return false;\n      }\n      return true;\n    }, this.commitClicked.bind(this)), false);\n\n    const buttonsRow = this.element.createChild('div', 'editor-buttons');\n    this.cancelButton = createTextButton(i18nString(UIStrings.cancelString), this.cancelClicked.bind(this), {\n      jslogContext: 'cancel',\n      variant: Buttons.Button.Variant.OUTLINED,\n    });\n    this.cancelButton.setAttribute('jslog', `${VisualLogging.action('cancel').track({click: true})}`);\n    buttonsRow.appendChild(this.cancelButton);\n    this.commitButton = createTextButton('', this.commitClicked.bind(this), {\n      jslogContext: 'commit',\n      variant: Buttons.Button.Variant.PRIMARY,\n    });\n    buttonsRow.appendChild(this.commitButton);\n\n    this.errorMessageContainer = this.element.createChild('div', 'list-widget-input-validation-error');\n    ARIAUtils.markAsAlert(this.errorMessageContainer);\n\n    function onKeyDown(predicate: (arg0: KeyboardEvent) => boolean, callback: () => void, event: KeyboardEvent): void {\n      if (predicate(event)) {\n        event.consume(true);\n        callback();\n      }\n    }\n\n    this.controls = [];\n    this.controlByName = new Map();\n    this.validators = [];\n\n    this.commit = null;\n    this.cancel = null;\n    this.item = null;\n    this.index = -1;\n  }\n\n  contentElement(): Element {\n    return this.contentElementInternal;\n  }\n\n  createInput(\n      name: string, type: string, title: string,\n      validator: (arg0: T, arg1: number, arg2: EditorControl) => ValidatorResult): HTMLInputElement {\n    const input = (createInput('', type) as HTMLInputElement);\n    input.placeholder = title;\n    input.addEventListener('input', this.validateControls.bind(this, false), false);\n    input.setAttribute('jslog', `${VisualLogging.textField().track({change: true, keydown: 'Enter'}).context(name)}`);\n    ARIAUtils.setLabel(input, title);\n    this.controlByName.set(name, input);\n    this.controls.push(input);\n    this.validators.push(validator);\n    return input;\n  }\n\n  createSelect(\n      name: string, options: string[], validator: (arg0: T, arg1: number, arg2: EditorControl) => ValidatorResult,\n      title?: string): HTMLSelectElement {\n    const select = document.createElement('select');\n    select.setAttribute('jslog', `${VisualLogging.dropDown().track({change: true}).context(name)}`);\n    select.classList.add('chrome-select');\n    for (let index = 0; index < options.length; ++index) {\n      const option = (select.createChild('option') as HTMLOptionElement);\n      option.value = options[index];\n      option.textContent = options[index];\n      option.setAttribute(\n          'jslog', `${VisualLogging.item(Platform.StringUtilities.toKebabCase(options[index])).track({click: true})}`);\n    }\n    if (title) {\n      Tooltip.install(select, title);\n      ARIAUtils.setLabel(select, title);\n    }\n    select.addEventListener('input', this.validateControls.bind(this, false), false);\n    select.addEventListener('blur', this.validateControls.bind(this, false), false);\n    this.controlByName.set(name, select);\n    this.controls.push(select);\n    this.validators.push(validator);\n    return select;\n  }\n\n  createCustomControl<S, U extends CustomEditorControl<S>>(\n      name: string, ctor: {new(): U},\n      validator: (arg0: T, arg1: number, arg2: EditorControl) => ValidatorResult): CustomEditorControl<S> {\n    const control = new ctor();\n    this.controlByName.set(name, control as unknown as CustomEditorControl<string>);\n    this.controls.push(control as unknown as CustomEditorControl<string>);\n    this.validators.push(validator);\n    return control;\n  }\n\n  control(name: string): EditorControl {\n    const control = this.controlByName.get(name);\n    if (!control) {\n      throw new Error(`Control with name ${name} does not exist, please verify.`);\n    }\n    return control;\n  }\n\n  private validateControls(forceValid: boolean): void {\n    let allValid = true;\n    this.errorMessageContainer.textContent = '';\n    for (let index = 0; index < this.controls.length; ++index) {\n      const input = this.controls[index];\n      const {valid, errorMessage} = this.validators[index].call(null, (this.item as T), this.index, input);\n\n      input.classList.toggle('error-input', !valid && !forceValid);\n      if (valid || forceValid) {\n        ARIAUtils.setInvalid(input, false);\n      } else {\n        ARIAUtils.setInvalid(input, true);\n      }\n\n      if (!forceValid && errorMessage) {\n        if (this.errorMessageContainer.textContent) {\n          const br = document.createElement('br');\n          this.errorMessageContainer.append(br);\n        }\n        this.errorMessageContainer.append(errorMessage);\n      }\n\n      allValid = allValid && valid;\n    }\n    this.commitButton.disabled = !allValid;\n  }\n\n  requestValidation(): void {\n    this.validateControls(false);\n  }\n\n  beginEdit(item: T, index: number, commitButtonTitle: string, commit: () => void, cancel: () => void): void {\n    this.commit = commit;\n    this.cancel = cancel;\n    this.item = item;\n    this.index = index;\n\n    this.commitButton.textContent = commitButtonTitle;\n    this.element.scrollIntoViewIfNeeded(false);\n    if (this.controls.length) {\n      this.controls[0].focus();\n    }\n    this.validateControls(true);\n  }\n\n  private commitClicked(): void {\n    if (this.commitButton.disabled) {\n      return;\n    }\n\n    const commit = this.commit;\n    this.commit = null;\n    this.cancel = null;\n    this.item = null;\n    this.index = -1;\n    if (commit) {\n      commit();\n    }\n  }\n\n  private cancelClicked(): void {\n    const cancel = this.cancel;\n    this.commit = null;\n    this.cancel = null;\n    this.item = null;\n    this.index = -1;\n    if (cancel) {\n      cancel();\n    }\n  }\n}\nexport interface ValidatorResult {\n  valid: boolean;\n  errorMessage?: string;\n}\n"],
  "mappings": "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",
  "names": ["element"]
}
