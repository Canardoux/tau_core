{
  "version": 3,
  "sources": ["../../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/components/inline_editor/CSSAngleEditor.ts"],
  "sourcesContent": ["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as LitHtml from '../../../lit-html/lit-html.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\n\nimport cssAngleEditorStyles from './cssAngleEditor.css.js';\nimport {\n  type Angle,\n  AngleUnit,\n  get2DTranslationsForAngle,\n  getAngleFromRadians,\n  getNewAngleFromEvent,\n  getRadiansFromAngle,\n} from './CSSAngleUtils.js';\n\nconst {render, html} = LitHtml;\nconst styleMap = LitHtml.Directives.styleMap;\n\nconst CLOCK_DIAL_LENGTH = 6;\n\nexport interface CSSAngleEditorData {\n  angle: Angle;\n  onAngleUpdate: (angle: Angle) => void;\n  background: string;\n}\n\nexport class CSSAngleEditor extends HTMLElement {\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private angle: Angle = {\n    value: 0,\n    unit: AngleUnit.RAD,\n  };\n  private onAngleUpdate?: (angle: Angle) => void;\n  private background = '';\n  private clockRadius = 77 / 2;  // By default the clock is 77 * 77.\n  private dialTemplates?: LitHtml.TemplateResult[];\n  private mousemoveThrottler = new Common.Throttler.Throttler(16.67 /* 60fps */);\n  private mousemoveListener = this.onMousemove.bind(this);\n\n  connectedCallback(): void {\n    this.shadow.adoptedStyleSheets = [cssAngleEditorStyles];\n    this.style.setProperty('--clock-dial-length', `${CLOCK_DIAL_LENGTH}px`);\n  }\n  set data(data: CSSAngleEditorData) {\n    this.angle = data.angle;\n    this.onAngleUpdate = data.onAngleUpdate;\n    this.background = data.background;\n    this.render();\n  }\n\n  private updateAngleFromMousePosition(mouseX: number, mouseY: number, shouldSnapToMultipleOf15Degrees: boolean): void {\n    const clock = this.shadow.querySelector('.clock');\n    if (!clock || !this.onAngleUpdate) {\n      return;\n    }\n\n    const {top, right, bottom, left} = clock.getBoundingClientRect();\n    this.clockRadius = (right - left) / 2;\n    const clockCenterX = (left + right) / 2;\n    const clockCenterY = (bottom + top) / 2;\n    const radian = -Math.atan2(mouseX - clockCenterX, mouseY - clockCenterY) + Math.PI;\n    if (shouldSnapToMultipleOf15Degrees) {\n      const multipleInRadian = getRadiansFromAngle({\n        value: 15,\n        unit: AngleUnit.DEG,\n      });\n      const closestMultipleOf15Degrees = Math.round(radian / multipleInRadian) * multipleInRadian;\n      this.onAngleUpdate(getAngleFromRadians(closestMultipleOf15Degrees, this.angle.unit));\n    } else {\n      this.onAngleUpdate(getAngleFromRadians(radian, this.angle.unit));\n    }\n  }\n\n  private onEditorMousedown(event: MouseEvent): void {\n    event.stopPropagation();\n    this.updateAngleFromMousePosition(event.pageX, event.pageY, event.shiftKey);\n    const targetDocument = event.target instanceof Node && event.target.ownerDocument;\n    const editor = this.shadow.querySelector<HTMLElement>('.editor');\n    if (targetDocument && editor) {\n      targetDocument.addEventListener('mousemove', this.mousemoveListener, {capture: true});\n      editor.classList.add('interacting');\n      targetDocument.addEventListener('mouseup', () => {\n        targetDocument.removeEventListener('mousemove', this.mousemoveListener, {capture: true});\n        editor.classList.remove('interacting');\n      }, {once: true});\n    }\n  }\n\n  private onMousemove(event: MouseEvent): void {\n    const isPressed = event.buttons === 1;\n    if (!isPressed) {\n      return;\n    }\n\n    event.preventDefault();\n\n    void this.mousemoveThrottler.schedule(() => {\n      this.updateAngleFromMousePosition(event.pageX, event.pageY, event.shiftKey);\n      return Promise.resolve();\n    });\n  }\n\n  private onEditorWheel(event: WheelEvent): void {\n    if (!this.onAngleUpdate) {\n      return;\n    }\n\n    const newAngle = getNewAngleFromEvent(this.angle, event);\n    if (newAngle) {\n      this.onAngleUpdate(newAngle);\n    }\n\n    event.preventDefault();\n  }\n\n  private render(): void {\n    const clockStyles = {\n      background: this.background,\n    };\n\n    const {translateX, translateY} = get2DTranslationsForAngle(this.angle, this.clockRadius / 2);\n    const handStyles = {\n      transform: `translate(${translateX}px, ${translateY}px) rotate(${this.angle.value}${this.angle.unit})`,\n    };\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <div class=\"editor\" jslog=${VisualLogging.dialog('cssAngleEditor').track({click: true, drag: true, resize: true, keydown: 'Enter|Escape'})}>\n        <span class=\"pointer\"></span>\n        <div\n          class=\"clock\"\n          style=${styleMap(clockStyles)}\n          @mousedown=${this.onEditorMousedown}\n          @wheel=${this.onEditorWheel}>\n          ${this.renderDials()}\n          <div class=\"hand\" style=${styleMap(handStyles)}></div>\n          <span class=\"center\"></span>\n        </div>\n      </div>\n    `, this.shadow, {\n      host: this,\n    });\n    // clang-format on\n  }\n\n  private renderDials(): LitHtml.TemplateResult[] {\n    if (!this.dialTemplates) {\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      this.dialTemplates = [0, 45, 90, 135, 180, 225, 270, 315].map(deg => {\n        const radius = this.clockRadius - CLOCK_DIAL_LENGTH - 3 /* clock border */;\n        const {translateX, translateY} = get2DTranslationsForAngle({\n          value: deg,\n          unit: AngleUnit.DEG,\n        }, radius);\n        const dialStyles = {\n          transform: `translate(${translateX}px, ${translateY}px) rotate(${deg}deg)`,\n        };\n        return html`<span class=\"dial\" style=${styleMap(dialStyles)}></span>`;\n      });\n      // clang-format on\n    }\n\n    return this.dialTemplates;\n  }\n}\n\ncustomElements.define('devtools-css-angle-editor', CSSAngleEditor);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-css-angle-editor': CSSAngleEditor;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
