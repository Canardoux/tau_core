{
  "version": 3,
  "sources": ["../../../../../../../../../../../third_party/devtools-frontend/src/front_end/ui/legacy/components/source_frame/JSONView.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\nimport * as ObjectUI from '../object_ui/object_ui.js';\n\nimport jsonViewStyles from './jsonView.css.legacy.js';\n\nconst UIStrings = {\n  /**\n   *@description Text to find an item\n   */\n  find: 'Find',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/JSONView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class JSONView extends UI.Widget.VBox implements UI.SearchableView.Searchable {\n  private initialized: boolean;\n  private readonly parsedJSON: ParsedJSON;\n  private startCollapsed: boolean;\n  private searchableView!: UI.SearchableView.SearchableView|null;\n  private treeOutline!: ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection;\n  private currentSearchFocusIndex: number;\n  private currentSearchTreeElements: ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement[];\n  private searchRegex: RegExp|null;\n  constructor(parsedJSON: ParsedJSON, startCollapsed?: boolean) {\n    super();\n    this.initialized = false;\n    this.registerRequiredCSS(jsonViewStyles);\n    this.parsedJSON = parsedJSON;\n    this.startCollapsed = Boolean(startCollapsed);\n    this.element.classList.add('json-view');\n    this.element.setAttribute('jslog', `${VisualLogging.section('json-view')}`);\n    this.currentSearchFocusIndex = 0;\n    this.currentSearchTreeElements = [];\n    this.searchRegex = null;\n  }\n\n  static async createView(content: string): Promise<UI.SearchableView.SearchableView|null> {\n    // We support non-strict JSON parsing by parsing an AST tree which is why we offload it to a worker.\n    const parsedJSON = await JSONView.parseJSON(content);\n    if (!parsedJSON || typeof parsedJSON.data !== 'object') {\n      return null;\n    }\n\n    const jsonView = new JSONView(parsedJSON);\n    const searchableView = new UI.SearchableView.SearchableView(jsonView, null);\n    searchableView.setPlaceholder(i18nString(UIStrings.find));\n    jsonView.searchableView = searchableView;\n    jsonView.show(searchableView.element);\n    return searchableView;\n  }\n\n  static createViewSync(obj: Object|null): UI.SearchableView.SearchableView {\n    const jsonView = new JSONView(new ParsedJSON(obj, '', ''));\n    const searchableView = new UI.SearchableView.SearchableView(jsonView, null);\n    searchableView.setPlaceholder(i18nString(UIStrings.find));\n    jsonView.searchableView = searchableView;\n    jsonView.show(searchableView.element);\n    jsonView.element.tabIndex = 0;\n    return searchableView;\n  }\n\n  private static parseJSON(text: string|null): Promise<ParsedJSON|null> {\n    let returnObj: (ParsedJSON|null)|null = null;\n    if (text) {\n      returnObj = JSONView.extractJSON((text as string));\n    }\n    if (!returnObj) {\n      return Promise.resolve(null);\n    }\n    try {\n      const json = JSON.parse(returnObj.data);\n      if (!json) {\n        return Promise.resolve(null);\n      }\n      returnObj.data = json;\n    } catch (e) {\n      returnObj = null;\n    }\n\n    return Promise.resolve(returnObj);\n  }\n\n  private static extractJSON(text: string): ParsedJSON|null {\n    // Do not treat HTML as JSON.\n    if (text.startsWith('<')) {\n      return null;\n    }\n    let inner = JSONView.findBrackets(text, '{', '}');\n    const inner2 = JSONView.findBrackets(text, '[', ']');\n    inner = inner2.length > inner.length ? inner2 : inner;\n\n    // Return on blank payloads or on payloads significantly smaller than original text.\n    if (inner.length === -1 || text.length - inner.length > 80) {\n      return null;\n    }\n\n    const prefix = text.substring(0, inner.start);\n    const suffix = text.substring(inner.end + 1);\n    text = text.substring(inner.start, inner.end + 1);\n\n    // Only process valid JSONP.\n    if (suffix.trim().length && !(suffix.trim().startsWith(')') && prefix.trim().endsWith('('))) {\n      return null;\n    }\n\n    return new ParsedJSON(text, prefix, suffix);\n  }\n\n  private static findBrackets(text: string, open: string, close: string): {\n    start: number,\n    end: number,\n    length: number,\n  } {\n    const start = text.indexOf(open);\n    const end = text.lastIndexOf(close);\n    let length: -1|number = end - start - 1;\n    if (start === -1 || end === -1 || end < start) {\n      length = -1;\n    }\n    return {start, end, length};\n  }\n\n  override wasShown(): void {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    if (this.initialized) {\n      return;\n    }\n    this.initialized = true;\n\n    const obj = SDK.RemoteObject.RemoteObject.fromLocalObject(this.parsedJSON.data);\n    const title = this.parsedJSON.prefix + obj.description + this.parsedJSON.suffix;\n    this.treeOutline =\n        new ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection(obj, title, undefined, true /* showOverflow */);\n    this.treeOutline.enableContextMenu();\n    this.treeOutline.setEditable(false);\n    if (!this.startCollapsed) {\n      this.treeOutline.expand();\n    }\n    this.element.appendChild(this.treeOutline.element);\n    const firstChild = this.treeOutline.firstChild();\n    if (firstChild) {\n      firstChild.select(true /* omitFocus */, false /* selectedByUser */);\n    }\n  }\n\n  private jumpToMatch(index: number): void {\n    if (!this.searchRegex) {\n      return;\n    }\n    const previousFocusElement = this.currentSearchTreeElements[this.currentSearchFocusIndex];\n    if (previousFocusElement) {\n      previousFocusElement.setSearchRegex(this.searchRegex);\n    }\n\n    const newFocusElement = this.currentSearchTreeElements[index];\n    if (newFocusElement) {\n      this.updateSearchIndex(index);\n      newFocusElement.setSearchRegex(this.searchRegex, UI.UIUtils.highlightedCurrentSearchResultClassName);\n      newFocusElement.reveal();\n    } else {\n      this.updateSearchIndex(0);\n    }\n  }\n\n  private updateSearchCount(count: number): void {\n    if (!this.searchableView) {\n      return;\n    }\n    this.searchableView.updateSearchMatchesCount(count);\n  }\n\n  private updateSearchIndex(index: number): void {\n    this.currentSearchFocusIndex = index;\n    if (!this.searchableView) {\n      return;\n    }\n    this.searchableView.updateCurrentMatchIndex(index);\n  }\n\n  onSearchCanceled(): void {\n    this.searchRegex = null;\n    this.currentSearchTreeElements = [];\n\n    let element: UI.TreeOutline.TreeElement|null;\n    for (element = this.treeOutline.rootElement(); element; element = element.traverseNextTreeElement(false)) {\n      if (!(element instanceof ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement)) {\n        continue;\n      }\n      element.revertHighlightChanges();\n    }\n    this.updateSearchCount(0);\n    this.updateSearchIndex(0);\n  }\n\n  performSearch(searchConfig: UI.SearchableView.SearchConfig, shouldJump: boolean, jumpBackwards?: boolean): void {\n    let newIndex: number = this.currentSearchFocusIndex;\n    const previousSearchFocusElement = this.currentSearchTreeElements[newIndex];\n    this.onSearchCanceled();\n    this.searchRegex = searchConfig.toSearchRegex(true).regex;\n\n    let element: UI.TreeOutline.TreeElement|null;\n    for (element = this.treeOutline.rootElement(); element; element = element.traverseNextTreeElement(false)) {\n      if (!(element instanceof ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement)) {\n        continue;\n      }\n      const hasMatch = element.setSearchRegex(this.searchRegex);\n      if (hasMatch) {\n        this.currentSearchTreeElements.push(element);\n      }\n      if (previousSearchFocusElement === element) {\n        const currentIndex = this.currentSearchTreeElements.length - 1;\n        if (hasMatch || jumpBackwards) {\n          newIndex = currentIndex;\n        } else {\n          newIndex = currentIndex + 1;\n        }\n      }\n    }\n    this.updateSearchCount(this.currentSearchTreeElements.length);\n\n    if (!this.currentSearchTreeElements.length) {\n      this.updateSearchIndex(-1);\n      return;\n    }\n    newIndex = Platform.NumberUtilities.mod(newIndex, this.currentSearchTreeElements.length);\n\n    this.jumpToMatch(newIndex);\n  }\n\n  jumpToNextSearchResult(): void {\n    if (!this.currentSearchTreeElements.length) {\n      return;\n    }\n    const newIndex =\n        Platform.NumberUtilities.mod(this.currentSearchFocusIndex + 1, this.currentSearchTreeElements.length);\n    this.jumpToMatch(newIndex);\n  }\n\n  jumpToPreviousSearchResult(): void {\n    if (!this.currentSearchTreeElements.length) {\n      return;\n    }\n    const newIndex =\n        Platform.NumberUtilities.mod(this.currentSearchFocusIndex - 1, this.currentSearchTreeElements.length);\n    this.jumpToMatch(newIndex);\n  }\n\n  supportsCaseSensitiveSearch(): boolean {\n    return true;\n  }\n\n  supportsRegexSearch(): boolean {\n    return true;\n  }\n}\n\nexport class ParsedJSON {\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  data: any;\n  prefix: string;\n  suffix: string;\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(data: any, prefix: string, suffix: string) {\n    this.data = data;\n    this.prefix = prefix;\n    this.suffix = suffix;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
