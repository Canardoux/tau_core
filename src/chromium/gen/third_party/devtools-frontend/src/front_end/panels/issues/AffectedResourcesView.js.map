{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/issues/AffectedResourcesView.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport type * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport type * as NetworkForward from '../../panels/network/forward/forward.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as RequestLinkIcon from '../../ui/components/request_link_icon/request_link_icon.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport type {AggregatedIssue} from './IssueAggregator.js';\nimport type {IssueView} from './IssueView.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Object Properties Section\n   */\n  unknown: 'unknown',\n  /**\n   *@description Tooltip for button linking to the Elements panel\n   */\n  clickToRevealTheFramesDomNodeIn: 'Click to reveal the frame\\'s DOM node in the Elements panel',\n  /**\n   *@description Replacement text for a link to an HTML element which is not available (anymore).\n   */\n  unavailable: 'unavailable',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/issues/AffectedResourcesView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport const enum AffectedItem {\n  COOKIE = 'Cookie',\n  DIRECTIVE = 'Directive',\n  ELEMENT = 'Element',\n  REQUEST = 'Request',\n  SOURCE = 'Source',\n}\n\nexport const extractShortPath = (path: Platform.DevToolsPath.UrlString): string => {\n  // 1st regex matches everything after last '/'\n  // if path ends with '/', 2nd regex returns everything between the last two '/'\n  return (/[^/]+$/.exec(path) || /[^/]+\\/$/.exec(path) || [''])[0];\n};\n\nexport interface CreateRequestCellOptions {\n  linkToPreflight?: boolean;\n  highlightHeader?: {section: NetworkForward.UIRequestLocation.UIHeaderSection, name: string};\n  networkTab?: NetworkForward.UIRequestLocation.UIRequestTabs;\n  additionalOnClickAction?: () => void;\n}\n\n/**\n * The base class for all affected resource views. It provides basic scaffolding\n * as well as machinery for resolving request and frame ids to SDK objects.\n */\nexport abstract class AffectedResourcesView extends UI.TreeOutline.TreeElement {\n  readonly #parentView: IssueView;\n  protected issue: AggregatedIssue;\n  protected affectedResourcesCountElement: HTMLElement;\n  protected affectedResources: HTMLElement;\n  #affectedResourcesCount: number;\n  #frameListeners: Common.EventTarget.EventDescriptor[];\n  #unresolvedFrameIds: Set<string>;\n  protected requestResolver: Logs.RequestResolver.RequestResolver;\n\n  constructor(parent: IssueView, issue: AggregatedIssue, jslogContext: string) {\n    super(/* title */ undefined, /* expandable */ undefined, jslogContext);\n    this.#parentView = parent;\n    this.issue = issue;\n    this.toggleOnClick = true;\n    this.affectedResourcesCountElement = this.createAffectedResourcesCounter();\n\n    this.affectedResources = this.createAffectedResources();\n    this.#affectedResourcesCount = 0;\n    this.requestResolver = new Logs.RequestResolver.RequestResolver();\n    this.#frameListeners = [];\n    this.#unresolvedFrameIds = new Set();\n  }\n\n  /**\n   * Sets the issue to take the resources from. Does not\n   * trigger an update, the caller needs to do that explicitly.\n   */\n  setIssue(issue: AggregatedIssue): void {\n    this.issue = issue;\n  }\n\n  createAffectedResourcesCounter(): HTMLElement {\n    const counterLabel = document.createElement('div');\n    counterLabel.classList.add('affected-resource-label');\n    this.listItemElement.appendChild(counterLabel);\n    return counterLabel;\n  }\n\n  createAffectedResources(): HTMLElement {\n    const body = new UI.TreeOutline.TreeElement();\n    const affectedResources = document.createElement('table');\n    affectedResources.classList.add('affected-resource-list');\n    body.listItemElement.appendChild(affectedResources);\n    this.appendChild(body);\n\n    return affectedResources;\n  }\n\n  protected abstract getResourceNameWithCount(count: number): string;\n\n  protected updateAffectedResourceCount(count: number): void {\n    this.#affectedResourcesCount = count;\n    this.affectedResourcesCountElement.textContent = this.getResourceNameWithCount(count);\n    this.hidden = this.#affectedResourcesCount === 0;\n    this.#parentView.updateAffectedResourceVisibility();\n  }\n\n  isEmpty(): boolean {\n    return this.#affectedResourcesCount === 0;\n  }\n\n  clear(): void {\n    this.affectedResources.textContent = '';\n    this.requestResolver.clear();\n  }\n\n  expandIfOneResource(): void {\n    if (this.#affectedResourcesCount === 1) {\n      this.expand();\n    }\n  }\n\n  /**\n   * This function resolves a frameId to a ResourceTreeFrame. If the frameId does not resolve, or hasn't navigated yet,\n   * a listener is installed that takes care of updating the view if the frame is added. This is useful if the issue is\n   * added before the frame gets reported.\n   */\n  #resolveFrameId(frameId: Protocol.Page.FrameId): SDK.ResourceTreeModel.ResourceTreeFrame|null {\n    const frame = SDK.FrameManager.FrameManager.instance().getFrame(frameId);\n    if (!frame || !frame.url) {\n      this.#unresolvedFrameIds.add(frameId);\n      if (!this.#frameListeners.length) {\n        const addListener = SDK.FrameManager.FrameManager.instance().addEventListener(\n            SDK.FrameManager.Events.FRAME_ADDED_TO_TARGET, this.#onFrameChanged, this);\n        const navigateListener = SDK.FrameManager.FrameManager.instance().addEventListener(\n            SDK.FrameManager.Events.FRAME_NAVIGATED, this.#onFrameChanged, this);\n        this.#frameListeners = [addListener, navigateListener];\n      }\n    }\n    return frame;\n  }\n\n  #onFrameChanged(event: Common.EventTarget.EventTargetEvent<{frame: SDK.ResourceTreeModel.ResourceTreeFrame}>): void {\n    const frame = event.data.frame;\n    if (!frame.url) {\n      return;\n    }\n    const frameWasUnresolved = this.#unresolvedFrameIds.delete(frame.id);\n    if (this.#unresolvedFrameIds.size === 0 && this.#frameListeners.length) {\n      // Stop listening once all requests are resolved.\n      Common.EventTarget.removeEventListeners(this.#frameListeners);\n      this.#frameListeners = [];\n    }\n    if (frameWasUnresolved) {\n      this.update();\n    }\n  }\n\n  protected createFrameCell(frameId: Protocol.Page.FrameId, issueCategory: IssuesManager.Issue.IssueCategory):\n      HTMLElement {\n    const frame = this.#resolveFrameId(frameId);\n    const url = frame && (frame.unreachableUrl() || frame.url) || i18nString(UIStrings.unknown);\n\n    const frameCell = document.createElement('td');\n    frameCell.classList.add('affected-resource-cell');\n    if (frame) {\n      const icon = new IconButton.Icon.Icon();\n      icon.data = {iconName: 'code-circle', color: 'var(--icon-link)', width: '16px', height: '16px'};\n      icon.classList.add('link', 'elements-panel');\n      icon.onclick = async () => {\n        Host.userMetrics.issuesPanelResourceOpened(issueCategory, AffectedItem.ELEMENT);\n        const frame = SDK.FrameManager.FrameManager.instance().getFrame(frameId);\n        if (frame) {\n          const ownerNode = await frame.getOwnerDOMNodeOrDocument();\n          if (ownerNode) {\n            void Common.Revealer.reveal(ownerNode);\n          }\n        }\n      };\n      icon.title = i18nString(UIStrings.clickToRevealTheFramesDomNodeIn);\n      frameCell.appendChild(icon);\n    }\n    frameCell.appendChild(document.createTextNode(url));\n    frameCell.onmouseenter = () => {\n      const frame = SDK.FrameManager.FrameManager.instance().getFrame(frameId);\n      if (frame) {\n        void frame.highlight();\n      }\n    };\n    frameCell.onmouseleave = () => SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    return frameCell;\n  }\n\n  protected createRequestCell(affectedRequest: Protocol.Audits.AffectedRequest, options: CreateRequestCellOptions = {}):\n      HTMLElement {\n    const requestCell = document.createElement('td');\n    requestCell.classList.add('affected-resource-cell');\n    const requestLinkIcon = new RequestLinkIcon.RequestLinkIcon.RequestLinkIcon();\n    requestLinkIcon.data = {...options, affectedRequest, requestResolver: this.requestResolver, displayURL: true};\n    requestCell.appendChild(requestLinkIcon);\n    return requestCell;\n  }\n\n  protected async createElementCell(\n      {backendNodeId, nodeName, target}: IssuesManager.Issue.AffectedElement,\n      issueCategory: IssuesManager.Issue.IssueCategory): Promise<Element> {\n    if (!target) {\n      const cellElement = document.createElement('td');\n      cellElement.textContent = nodeName || i18nString(UIStrings.unavailable);\n      return cellElement;\n    }\n\n    function sendTelemetry(): void {\n      Host.userMetrics.issuesPanelResourceOpened(issueCategory, AffectedItem.ELEMENT);\n    }\n\n    const deferredDOMNode = new SDK.DOMModel.DeferredDOMNode(target, backendNodeId);\n    const anchorElement = (await Common.Linkifier.Linkifier.linkify(deferredDOMNode)) as HTMLElement;\n    anchorElement.textContent = nodeName;\n    anchorElement.addEventListener('click', () => sendTelemetry());\n    anchorElement.addEventListener('keydown', (event: Event) => {\n      if ((event as KeyboardEvent).key === 'Enter') {\n        sendTelemetry();\n      }\n    });\n    const cellElement = document.createElement('td');\n    cellElement.classList.add('affected-resource-element', 'devtools-link');\n    cellElement.appendChild(anchorElement);\n    return cellElement;\n  }\n\n  protected appendSourceLocation(\n      element: HTMLElement,\n      sourceLocation: {url: string, scriptId?: Protocol.Runtime.ScriptId, lineNumber: number, columnNumber?: number}|\n      undefined,\n      target: SDK.Target.Target|null|undefined): void {\n    const sourceCodeLocation = document.createElement('td');\n    sourceCodeLocation.classList.add('affected-source-location');\n    if (sourceLocation) {\n      const maxLengthForDisplayedURLs = 40;  // Same as console messages.\n      // TODO(crbug.com/1108503): Add some mechanism to be able to add telemetry to this element.\n      const linkifier = new Components.Linkifier.Linkifier(maxLengthForDisplayedURLs);\n      const sourceAnchor = linkifier.linkifyScriptLocation(\n          target || null, sourceLocation.scriptId || null, sourceLocation.url as Platform.DevToolsPath.UrlString,\n          sourceLocation.lineNumber, {columnNumber: sourceLocation.columnNumber, inlineFrameIndex: 0});\n      sourceAnchor.setAttribute('jslog', `${VisualLogging.link('source-location').track({click: true})}`);\n      sourceCodeLocation.appendChild(sourceAnchor);\n    }\n    element.appendChild(sourceCodeLocation);\n  }\n\n  protected appendColumnTitle(header: HTMLElement, title: string, additionalClass: string|null = null): void {\n    const info = document.createElement('td');\n    info.classList.add('affected-resource-header');\n    if (additionalClass) {\n      info.classList.add(additionalClass);\n    }\n    info.textContent = title;\n    header.appendChild(info);\n  }\n\n  protected createIssueDetailCell(textContent: string|HTMLElement, additionalClass: string|null = null):\n      HTMLTableDataCellElement {\n    const cell = document.createElement('td');\n\n    if (typeof textContent === 'string') {\n      cell.textContent = textContent;\n    } else {\n      cell.appendChild(textContent);\n    }\n\n    if (additionalClass) {\n      cell.classList.add(additionalClass);\n    }\n    return cell;\n  }\n\n  protected appendIssueDetailCell(\n      element: HTMLElement, textContent: string|HTMLElement,\n      additionalClass: string|null = null): HTMLTableDataCellElement {\n    const cell = this.createIssueDetailCell(textContent, additionalClass);\n    element.appendChild(cell);\n    return cell;\n  }\n\n  abstract update(): void;\n}\n"],
  "mappings": "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",
  "names": ["AffectedItem", "frame", "cellElement"]
}
