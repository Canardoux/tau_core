{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/css_overview/CSSOverviewSidebarPanel.ts"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport cssOverviewSidebarPanelStyles from './cssOverviewSidebarPanel.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Label for the 'Clear overview' button in the CSS overview report\n   */\n  clearOverview: 'Clear overview',\n  /**\n   * @description Accessible label for the CSS overview panel sidebar\n   */\n  cssOverviewPanelSidebar: 'CSS overview panel sidebar',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/CSSOverviewSidebarPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst ITEM_CLASS_NAME = 'overview-sidebar-panel-item';\nconst SELECTED_CLASS_NAME = 'selected';\n\nexport class CSSOverviewSidebarPanel extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.VBox>(\n    UI.Widget.VBox) {\n  containerElement: HTMLDivElement;\n\n  constructor() {\n    super(true);\n\n    this.contentElement.classList.add('overview-sidebar-panel');\n    this.contentElement.addEventListener('click', this.#onItemClick.bind(this));\n    this.contentElement.addEventListener('keydown', this.#onItemKeyDown.bind(this));\n\n    // We need a container so that each item covers the full width of the\n    // longest item, so that the selected item's background expands fully\n    // even when the sidebar overflows.\n    // Also see crbug/1408003\n    this.containerElement =\n        this.contentElement.createChild('div', 'overview-sidebar-panel-container') as HTMLDivElement;\n    UI.ARIAUtils.setLabel(this.containerElement, i18nString(UIStrings.cssOverviewPanelSidebar));\n    UI.ARIAUtils.markAsTree(this.containerElement);\n\n    // Clear overview.\n    const clearResultsButton = new UI.Toolbar.ToolbarButton(\n        i18nString(UIStrings.clearOverview), 'clear', undefined, 'css-overview.clear-overview');\n    clearResultsButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.#reset, this);\n\n    // Toolbar.\n    const toolbarElement = this.containerElement.createChild('div', 'overview-toolbar');\n    const toolbar = new UI.Toolbar.Toolbar('', toolbarElement);\n    toolbar.appendToolbarItem(clearResultsButton);\n  }\n\n  addItem(name: string, id: string): void {\n    const item = this.containerElement.createChild('div', ITEM_CLASS_NAME);\n    item.setAttribute(\n        'jslog',\n        `${\n            VisualLogging.item()\n                .track({click: true, keydown: 'Enter|ArrowUp|ArrowDown'})\n                .context(`css-overview.${id}`)}`);\n    UI.ARIAUtils.markAsTreeitem(item);\n    item.textContent = name;\n    item.dataset.id = id;\n    item.tabIndex = 0;\n  }\n\n  #reset(): void {\n    this.dispatchEventToListeners(SidebarEvents.RESET);\n  }\n\n  #deselectAllItems(): void {\n    const items = this.containerElement.querySelectorAll(`.${ITEM_CLASS_NAME}`);\n    items.forEach(item => {\n      item.classList.remove(SELECTED_CLASS_NAME);\n    });\n  }\n\n  #onItemClick(event: Event): void {\n    const target = (event.composedPath()[0] as HTMLElement);\n    if (!target.classList.contains(ITEM_CLASS_NAME)) {\n      return;\n    }\n\n    const {id} = target.dataset;\n    if (!id) {\n      return;\n    }\n    this.select(id, false);\n    this.dispatchEventToListeners(SidebarEvents.ITEM_SELECTED, {id, isMouseEvent: true, key: undefined});\n  }\n\n  #onItemKeyDown(event: KeyboardEvent): void {\n    if (event.key !== 'Enter' && event.key !== 'ArrowUp' && event.key !== 'ArrowDown') {\n      return;\n    }\n    const target = (event.composedPath()[0] as HTMLElement);\n    if (!target.classList.contains(ITEM_CLASS_NAME)) {\n      return;\n    }\n\n    const {id} = target.dataset;\n    if (!id) {\n      return;\n    }\n\n    if (event.key === 'Enter') {\n      this.select(id, false);\n      this.dispatchEventToListeners(SidebarEvents.ITEM_SELECTED, {id, isMouseEvent: false, key: event.key});\n    } else {  // arrow up/down key\n      const items = this.containerElement.querySelectorAll(`.${ITEM_CLASS_NAME}`);\n\n      let currItemIndex = -1;\n      for (let idx = 0; idx < items.length; idx++) {\n        if ((items[idx] as HTMLElement).dataset.id === id) {\n          currItemIndex = idx;\n          break;\n        }\n      }\n      if (currItemIndex < 0) {\n        return;\n      }\n\n      const moveTo = (event.key === 'ArrowDown' ? 1 : -1);\n      const nextItemIndex = (currItemIndex + moveTo) % items.length;\n      const nextItemId = (items[nextItemIndex] as HTMLElement).dataset.id;\n      if (!nextItemId) {\n        return;\n      }\n\n      this.select(nextItemId, true);\n      this.dispatchEventToListeners(SidebarEvents.ITEM_SELECTED, {id: nextItemId, isMouseEvent: false, key: event.key});\n    }\n\n    event.consume(true);\n  }\n\n  select(id: string, focus: boolean): void {\n    const target = this.containerElement.querySelector(`[data-id=${CSS.escape(id)}]`) as HTMLElement;\n    if (!target) {\n      return;\n    }\n\n    if (target.classList.contains(SELECTED_CLASS_NAME)) {\n      return;\n    }\n\n    this.#deselectAllItems();\n    target.classList.add(SELECTED_CLASS_NAME);\n\n    if (focus) {\n      target.contentEditable = 'true';\n      target.focus();\n      target.contentEditable = 'false';\n    }\n  }\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([cssOverviewSidebarPanelStyles]);\n  }\n}\n\nexport const enum SidebarEvents {\n  ITEM_SELECTED = 'ItemSelected',\n  RESET = 'Reset',\n}\n\nexport interface ItemSelectedEvent {\n  id: string;\n  isMouseEvent: boolean;\n  key: string|undefined;\n}\n\nexport type EventTypes = {\n  [SidebarEvents.ITEM_SELECTED]: ItemSelectedEvent,\n  [SidebarEvents.RESET]: void,\n};\n"],
  "mappings": "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",
  "names": ["SidebarEvents"]
}
