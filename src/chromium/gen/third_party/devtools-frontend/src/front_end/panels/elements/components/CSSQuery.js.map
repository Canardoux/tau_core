{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/elements/components/CSSQuery.ts"],
  "sourcesContent": ["// Copyright (c) 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport inspectorCommonStyles from '../../../ui/legacy/inspectorCommon.css.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport cssQueryStyles from './cssQuery.css.js';\n\nconst {render, html} = LitHtml;\n\nexport interface CSSQueryData {\n  queryPrefix: string;\n  queryName?: string;\n  queryText: string;\n  onQueryTextClick?: (event: Event) => void;\n  jslogContext: string;\n}\n\nexport class CSSQuery extends HTMLElement {\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #queryPrefix: string = '';\n  #queryName?: string;\n  #queryText: string = '';\n  #onQueryTextClick?: (event: Event) => void;\n  #jslogContext?: string;\n\n  set data(data: CSSQueryData) {\n    this.#queryPrefix = data.queryPrefix;\n    this.#queryName = data.queryName;\n    this.#queryText = data.queryText;\n    this.#onQueryTextClick = data.onQueryTextClick;\n    this.#jslogContext = data.jslogContext;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [\n      cssQueryStyles,\n      inspectorCommonStyles,\n    ];\n  }\n\n  #render(): void {\n    const queryClasses = LitHtml.Directives.classMap({\n      query: true,\n      editable: Boolean(this.#onQueryTextClick),\n    });\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    const queryText = html`\n      <span class=\"query-text\" @click=${this.#onQueryTextClick}>${this.#queryText}</span>\n    `;\n\n    render(html`\n      <div class=${queryClasses} jslog=${VisualLogging.cssRuleHeader(this.#jslogContext).track({click:true, change: true})}>\n        <slot name=\"indent\"></slot>${this.#queryPrefix ? html`<span>${this.#queryPrefix + ' '}</span>` : LitHtml.nothing}${this.#queryName ? html`<span>${this.#queryName + ' '}</span>` : LitHtml.nothing}${queryText} {\n      </div>\n    `, this.#shadow, {\n      host: this,\n    });\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-css-query', CSSQuery);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-css-query': CSSQuery;\n  }\n}\n"],
  "mappings": ";AAKA,OAAO,2BAA2B;AAClC,YAAY,aAAa;AACzB,YAAY,mBAAmB;AAE/B,OAAO,oBAAoB;AAE3B,MAAM,EAAC,QAAQ,KAAI,IAAI;AAUhB,aAAM,iBAAiB,YAAY;AAAA,EAE/B,UAAU,KAAK,aAAa,EAAC,MAAM,OAAM,CAAC;AAAA,EACnD,eAAuB;AAAA,EACvB;AAAA,EACA,aAAqB;AAAA,EACrB;AAAA,EACA;AAAA,EAEA,IAAI,KAAK,MAAoB;AAC3B,SAAK,eAAe,KAAK;AACzB,SAAK,aAAa,KAAK;AACvB,SAAK,aAAa,KAAK;AACvB,SAAK,oBAAoB,KAAK;AAC9B,SAAK,gBAAgB,KAAK;AAC1B,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,oBAA0B;AACxB,SAAK,QAAQ,qBAAqB;AAAA,MAChC;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA,EAEA,UAAgB;AACd,UAAM,eAAe,QAAQ,WAAW,SAAS;AAAA,MAC/C,OAAO;AAAA,MACP,UAAU,QAAQ,KAAK,iBAAiB;AAAA,IAC1C,CAAC;AAID,UAAM,YAAY;AAAA,wCACkB,KAAK,iBAAiB,IAAI,KAAK,UAAU;AAAA;AAG7E,WAAO;AAAA,mBACQ,YAAY,UAAU,cAAc,cAAc,KAAK,aAAa,EAAE,MAAM,EAAC,OAAM,MAAM,QAAQ,KAAI,CAAC,CAAC;AAAA,qCACrF,KAAK,eAAe,aAAa,KAAK,eAAe,GAAG,YAAY,QAAQ,OAAO,GAAG,KAAK,aAAa,aAAa,KAAK,aAAa,GAAG,YAAY,QAAQ,OAAO,GAAG,SAAS;AAAA;AAAA,OAE/M,KAAK,SAAS;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,EAEH;AACF;AAEA,eAAe,OAAO,sBAAsB,QAAQ;",
  "names": []
}
