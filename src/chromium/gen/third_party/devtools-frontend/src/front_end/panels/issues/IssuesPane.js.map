{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/issues/IssuesPane.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as IssueCounter from '../../ui/components/issue_counter/issue_counter.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {HiddenIssuesRow} from './HiddenIssuesRow.js';\nimport {\n  type AggregatedIssue,\n  type AggregationKey,\n  Events as IssueAggregatorEvents,\n  IssueAggregator,\n} from './IssueAggregator.js';\nimport {getGroupIssuesByKindSetting, IssueKindView, issueKindViewSortPriority} from './IssueKindView.js';\nimport issuesPaneStyles from './issuesPane.css.js';\nimport issuesTreeStyles from './issuesTree.css.js';\nimport {IssueView} from './IssueView.js';\n\nconst UIStrings = {\n  /**\n   * @description Category title for a group of cross origin embedder policy (COEP) issues\n   */\n  crossOriginEmbedderPolicy: 'Cross Origin Embedder Policy',\n  /**\n   * @description Category title for a group of mixed content issues\n   */\n  mixedContent: 'Mixed Content',\n  /**\n   * @description Category title for a group of SameSite cookie issues\n   */\n  samesiteCookie: 'SameSite Cookie',\n  /**\n   * @description Category title for a group of heavy ads issues\n   */\n  heavyAds: 'Heavy Ads',\n  /**\n   * @description Category title for a group of content security policy (CSP) issues\n   */\n  contentSecurityPolicy: 'Content Security Policy',\n  /**\n   * @description Text for other types of items\n   */\n  other: 'Other',\n  /**\n   * @description Category title for the different 'low text contrast' issues. Low text contrast refers\n   *              to the difference between the color of a text and the background color where that text\n   *              appears.\n   */\n  lowTextContrast: 'Low Text Contrast',\n  /**\n   * @description Category title for the different 'Cross-Origin Resource Sharing' (CORS) issues. CORS\n   *              refers to one origin (e.g 'a.com') loading resources from another origin (e.g. 'b.com').\n   */\n  cors: 'Cross Origin Resource Sharing',\n  /**\n   * @description Title for a checkbox which toggles grouping by category in the issues tab\n   */\n  groupDisplayedIssuesUnder: 'Group displayed issues under associated categories',\n  /**\n   * @description Label for a checkbox which toggles grouping by category in the issues tab\n   */\n  groupByCategory: 'Group by category',\n  /**\n   * @description Title for a checkbox which toggles grouping by kind in the issues tab\n   */\n  groupDisplayedIssuesUnderKind: 'Group displayed issues as Page errors, Breaking changes and Improvements',\n  /**\n   * @description Label for a checkbox which toggles grouping by kind in the issues tab\n   */\n  groupByKind: 'Group by kind',\n  /**\n   * @description Title for a checkbox. Whether the issues tab should include third-party issues or not.\n   */\n  includeCookieIssuesCausedBy: 'Include cookie Issues caused by third-party sites',\n  /**\n   * @description Label for a checkbox. Whether the issues tab should include third-party issues or not.\n   */\n  includeThirdpartyCookieIssues: 'Include third-party cookie issues',\n  /**\n   * @description Label on the issues tab\n   */\n  onlyThirdpartyCookieIssues: 'Only third-party cookie issues detected so far',\n  /**\n   * @description Label in the issues panel\n   */\n  noIssuesDetectedSoFar: 'No issues detected so far',\n  /**\n   * @description Category title for the different 'Attribution Reporting API' issues. The\n   * Attribution Reporting API is a newly proposed web API (see https://github.com/WICG/conversion-measurement-api).\n   */\n  attributionReporting: 'Attribution Reporting `API`',\n  /**\n   * @description Category title for the different 'Quirks Mode' issues. Quirks Mode refers\n   *              to the legacy browser modes that displays web content according to outdated\n   *              browser behaviors.\n   */\n  quirksMode: 'Quirks Mode',\n  /**\n   * @description Category title for the different 'Generic' issues.\n   */\n  generic: 'Generic',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/issues/IssuesPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nclass IssueCategoryView extends UI.TreeOutline.TreeElement {\n  #category: IssuesManager.Issue.IssueCategory;\n\n  constructor(category: IssuesManager.Issue.IssueCategory) {\n    super();\n    this.#category = category;\n\n    this.toggleOnClick = true;\n    this.listItemElement.classList.add('issue-category');\n    this.childrenListElement.classList.add('issue-category-body');\n  }\n\n  getCategoryName(): string {\n    switch (this.#category) {\n      case IssuesManager.Issue.IssueCategory.CROSS_ORIGIN_EMBEDDER_POLICY:\n        return i18nString(UIStrings.crossOriginEmbedderPolicy);\n      case IssuesManager.Issue.IssueCategory.MIXED_CONTENT:\n        return i18nString(UIStrings.mixedContent);\n      case IssuesManager.Issue.IssueCategory.COOKIE:\n        return i18nString(UIStrings.samesiteCookie);\n      case IssuesManager.Issue.IssueCategory.HEAVY_AD:\n        return i18nString(UIStrings.heavyAds);\n      case IssuesManager.Issue.IssueCategory.CONTENT_SECURITY_POLICY:\n        return i18nString(UIStrings.contentSecurityPolicy);\n      case IssuesManager.Issue.IssueCategory.LOW_TEXT_CONTRAST:\n        return i18nString(UIStrings.lowTextContrast);\n      case IssuesManager.Issue.IssueCategory.CORS:\n        return i18nString(UIStrings.cors);\n      case IssuesManager.Issue.IssueCategory.ATTRIBUTION_REPORTING:\n        return i18nString(UIStrings.attributionReporting);\n      case IssuesManager.Issue.IssueCategory.QUIRKS_MODE:\n        return i18nString(UIStrings.quirksMode);\n      case IssuesManager.Issue.IssueCategory.GENERIC:\n        return i18nString(UIStrings.generic);\n      case IssuesManager.Issue.IssueCategory.OTHER:\n        return i18nString(UIStrings.other);\n    }\n  }\n\n  override onattach(): void {\n    this.#appendHeader();\n  }\n\n  #appendHeader(): void {\n    const header = document.createElement('div');\n    header.classList.add('header');\n\n    const title = document.createElement('div');\n    title.classList.add('title');\n    title.textContent = this.getCategoryName();\n    header.appendChild(title);\n\n    this.listItemElement.appendChild(header);\n  }\n}\n\nexport function getGroupIssuesByCategorySetting(): Common.Settings.Setting<boolean> {\n  return Common.Settings.Settings.instance().createSetting('group-issues-by-category', false);\n}\n\nexport class IssuesPane extends UI.Widget.VBox {\n  #categoryViews: Map<IssuesManager.Issue.IssueCategory, IssueCategoryView>;\n  #issueViews: Map<AggregationKey, IssueView>;\n  #kindViews: Map<IssuesManager.Issue.IssueKind, IssueKindView>;\n  #showThirdPartyCheckbox: UI.Toolbar.ToolbarSettingCheckbox|null;\n  #issuesTree: UI.TreeOutline.TreeOutlineInShadow;\n  #hiddenIssuesRow: HiddenIssuesRow;\n  #noIssuesMessageDiv: HTMLDivElement;\n  #issuesManager: IssuesManager.IssuesManager.IssuesManager;\n  #aggregator: IssueAggregator;\n  #issueViewUpdatePromise: Promise<void> = Promise.resolve();\n\n  constructor() {\n    super(true);\n\n    this.element.setAttribute('jslog', `${VisualLogging.panel('issues')}`);\n\n    this.contentElement.classList.add('issues-pane');\n\n    this.#categoryViews = new Map();\n    this.#kindViews = new Map();\n    this.#issueViews = new Map();\n    this.#showThirdPartyCheckbox = null;\n\n    this.#createToolbars();\n\n    this.#issuesTree = new UI.TreeOutline.TreeOutlineInShadow();\n\n    this.#issuesTree.setShowSelectionOnKeyboardFocus(true);\n    this.#issuesTree.contentElement.classList.add('issues');\n    this.contentElement.appendChild(this.#issuesTree.element);\n\n    this.#hiddenIssuesRow = new HiddenIssuesRow();\n    this.#issuesTree.appendChild(this.#hiddenIssuesRow);\n\n    this.#noIssuesMessageDiv = document.createElement('div');\n    this.#noIssuesMessageDiv.classList.add('issues-pane-no-issues');\n    this.contentElement.appendChild(this.#noIssuesMessageDiv);\n\n    this.#issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n    this.#aggregator = new IssueAggregator(this.#issuesManager);\n    this.#aggregator.addEventListener(IssueAggregatorEvents.AGGREGATED_ISSUE_UPDATED, this.#issueUpdated, this);\n    this.#aggregator.addEventListener(IssueAggregatorEvents.FULL_UPDATE_REQUIRED, this.#onFullUpdate, this);\n    this.#hiddenIssuesRow.hidden = this.#issuesManager.numberOfHiddenIssues() === 0;\n    this.#onFullUpdate();\n    this.#issuesManager.addEventListener(\n        IssuesManager.IssuesManager.Events.ISSUES_COUNT_UPDATED, this.#updateCounts, this);\n  }\n\n  override elementsToRestoreScrollPositionsFor(): Element[] {\n    return [this.#issuesTree.element];\n  }\n\n  #createToolbars(): {toolbarContainer: Element} {\n    const toolbarContainer = this.contentElement.createChild('div', 'issues-toolbar-container');\n    toolbarContainer.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n    new UI.Toolbar.Toolbar('issues-toolbar-left', toolbarContainer);\n    const rightToolbar = new UI.Toolbar.Toolbar('issues-toolbar-right', toolbarContainer);\n\n    const groupByCategorySetting = getGroupIssuesByCategorySetting();\n    const groupByCategoryCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        groupByCategorySetting, i18nString(UIStrings.groupDisplayedIssuesUnder), i18nString(UIStrings.groupByCategory));\n    // Hide the option to toggle category grouping for now.\n    groupByCategoryCheckbox.setVisible(false);\n    rightToolbar.appendToolbarItem(groupByCategoryCheckbox);\n    groupByCategorySetting.addChangeListener(() => {\n      this.#fullUpdate(true);\n    });\n\n    const groupByKindSetting = getGroupIssuesByKindSetting();\n    const groupByKindSettingCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        groupByKindSetting, i18nString(UIStrings.groupDisplayedIssuesUnderKind), i18nString(UIStrings.groupByKind));\n    rightToolbar.appendToolbarItem(groupByKindSettingCheckbox);\n    groupByKindSetting.addChangeListener(() => {\n      this.#fullUpdate(true);\n    });\n    groupByKindSettingCheckbox.setVisible(true);\n\n    const thirdPartySetting = IssuesManager.Issue.getShowThirdPartyIssuesSetting();\n    this.#showThirdPartyCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        thirdPartySetting, i18nString(UIStrings.includeCookieIssuesCausedBy),\n        i18nString(UIStrings.includeThirdpartyCookieIssues));\n    rightToolbar.appendToolbarItem(this.#showThirdPartyCheckbox);\n    this.setDefaultFocusedElement(this.#showThirdPartyCheckbox.inputElement);\n\n    rightToolbar.appendSeparator();\n    const issueCounter = new IssueCounter.IssueCounter.IssueCounter();\n    issueCounter.data = {\n      tooltipCallback: () => {\n        const issueEnumeration = IssueCounter.IssueCounter.getIssueCountsEnumeration(\n            IssuesManager.IssuesManager.IssuesManager.instance(), false);\n        issueCounter.title = issueEnumeration;\n      },\n      displayMode: IssueCounter.IssueCounter.DisplayMode.SHOW_ALWAYS,\n      issuesManager: IssuesManager.IssuesManager.IssuesManager.instance(),\n    };\n    issueCounter.id = 'console-issues-counter';\n    issueCounter.setAttribute('jslog', `${VisualLogging.counter('issues')}`);\n    const issuesToolbarItem = new UI.Toolbar.ToolbarItem(issueCounter);\n    rightToolbar.appendToolbarItem(issuesToolbarItem);\n\n    return {toolbarContainer};\n  }\n\n  #issueUpdated(event: Common.EventTarget.EventTargetEvent<AggregatedIssue>): void {\n    this.#scheduleIssueViewUpdate(event.data);\n  }\n\n  #scheduleIssueViewUpdate(issue: AggregatedIssue): void {\n    this.#issueViewUpdatePromise = this.#issueViewUpdatePromise.then(() => this.#updateIssueView(issue));\n  }\n\n  /** Don't call directly. Use `scheduleIssueViewUpdate` instead. */\n  async #updateIssueView(issue: AggregatedIssue): Promise<void> {\n    let issueView = this.#issueViews.get(issue.aggregationKey());\n    if (!issueView) {\n      const description = issue.getDescription();\n      if (!description) {\n        console.warn('Could not find description for issue code:', issue.code());\n        return;\n      }\n      const markdownDescription =\n          await IssuesManager.MarkdownIssueDescription.createIssueDescriptionFromMarkdown(description);\n      issueView = new IssueView(issue, markdownDescription);\n      this.#issueViews.set(issue.aggregationKey(), issueView);\n      const parent = this.#getIssueViewParent(issue);\n      this.appendIssueViewToParent(issueView, parent);\n    } else {\n      issueView.setIssue(issue);\n      const newParent = this.#getIssueViewParent(issue);\n      if (issueView.parent !== newParent &&\n          !(newParent instanceof UI.TreeOutline.TreeOutline && issueView.parent === newParent.rootElement())) {\n        issueView.parent?.removeChild(issueView);\n        this.appendIssueViewToParent(issueView, newParent);\n      }\n    }\n    issueView.update();\n    this.#updateCounts();\n  }\n\n  appendIssueViewToParent(issueView: IssueView, parent: UI.TreeOutline.TreeOutline|UI.TreeOutline.TreeElement): void {\n    parent.appendChild(issueView, (a, b) => {\n      if (a instanceof HiddenIssuesRow) {\n        return 1;\n      }\n      if (b instanceof HiddenIssuesRow) {\n        return -1;\n      }\n      if (a instanceof IssueView && b instanceof IssueView) {\n        return a.getIssueTitle().localeCompare(b.getIssueTitle());\n      }\n      console.error('The issues tree should only contain IssueView objects as direct children');\n      return 0;\n    });\n    if (parent instanceof UI.TreeOutline.TreeElement) {\n      // This is an aggregated view, so we need to update the label for position and size of the treeItem.\n      this.#updateItemPositionAndSize(parent);\n    }\n  }\n\n  #updateItemPositionAndSize(parent: UI.TreeOutline.TreeElement): void {\n    const childNodes = parent.childrenListNode.children;\n    let treeItemCount = 0;\n\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i];\n      if (node.classList.contains('issue')) {\n        UI.ARIAUtils.setPositionInSet(node, ++treeItemCount);\n        UI.ARIAUtils.setSetSize(node, childNodes.length / 2);  // Each issue has 2 nodes (issue + description).\n      }\n    }\n  }\n\n  #getIssueViewParent(issue: AggregatedIssue): UI.TreeOutline.TreeOutline|UI.TreeOutline.TreeElement {\n    if (issue.isHidden()) {\n      return this.#hiddenIssuesRow;\n    }\n    if (getGroupIssuesByKindSetting().get()) {\n      const kind = issue.getKind();\n      const view = this.#kindViews.get(kind);\n      if (view) {\n        return view;\n      }\n\n      const newView = new IssueKindView(kind);\n      this.#issuesTree.appendChild(newView, (a, b) => {\n        if (a instanceof IssueKindView && b instanceof IssueKindView) {\n          return issueKindViewSortPriority(a, b);\n        }\n        return 0;\n      });\n      this.#kindViews.set(kind, newView);\n      return newView;\n    }\n    if (getGroupIssuesByCategorySetting().get()) {\n      const category = issue.getCategory();\n      const view = this.#categoryViews.get(category);\n      if (view) {\n        return view;\n      }\n\n      const newView = new IssueCategoryView(category);\n      this.#issuesTree.appendChild(newView, (a, b) => {\n        if (a instanceof IssueCategoryView && b instanceof IssueCategoryView) {\n          return a.getCategoryName().localeCompare(b.getCategoryName());\n        }\n        return 0;\n      });\n      this.#categoryViews.set(category, newView);\n      return newView;\n    }\n    return this.#issuesTree;\n  }\n\n  #clearViews<T>(views: Map<T, UI.TreeOutline.TreeElement>, preservedSet?: Set<T>): void {\n    for (const [key, view] of Array.from(views.entries())) {\n      if (preservedSet?.has(key)) {\n        continue;\n      }\n      view.parent && view.parent.removeChild(view);\n      views.delete(key);\n    }\n  }\n\n  #onFullUpdate(): void {\n    this.#fullUpdate(false);\n  }\n\n  #fullUpdate(force: boolean): void {\n    this.#clearViews(this.#categoryViews, force ? undefined : this.#aggregator.aggregatedIssueCategories());\n    this.#clearViews(this.#kindViews, force ? undefined : this.#aggregator.aggregatedIssueKinds());\n    this.#clearViews(this.#issueViews, force ? undefined : this.#aggregator.aggregatedIssueCodes());\n    if (this.#aggregator) {\n      for (const issue of this.#aggregator.aggregatedIssues()) {\n        this.#scheduleIssueViewUpdate(issue);\n      }\n    }\n    this.#updateCounts();\n  }\n\n  #updateIssueKindViewsCount(): void {\n    for (const view of this.#kindViews.values()) {\n      const count = this.#issuesManager.numberOfIssues(view.getKind());\n      view.update(count);\n    }\n  }\n\n  #updateCounts(): void {\n    this.#showIssuesTreeOrNoIssuesDetectedMessage(\n        this.#issuesManager.numberOfIssues(), this.#issuesManager.numberOfHiddenIssues());\n    if (getGroupIssuesByKindSetting().get()) {\n      this.#updateIssueKindViewsCount();\n    }\n  }\n\n  #showIssuesTreeOrNoIssuesDetectedMessage(issuesCount: number, hiddenIssueCount: number): void {\n    if (issuesCount > 0 || hiddenIssueCount > 0) {\n      this.#hiddenIssuesRow.hidden = hiddenIssueCount === 0;\n      this.#hiddenIssuesRow.update(hiddenIssueCount);\n      this.#issuesTree.element.hidden = false;\n      this.#noIssuesMessageDiv.style.display = 'none';\n      const firstChild = this.#issuesTree.firstChild();\n      if (firstChild) {\n        firstChild.select(/* omitFocus= */ true);\n        this.setDefaultFocusedElement(firstChild.listItemElement);\n      }\n    } else {\n      this.#issuesTree.element.hidden = true;\n      if (this.#showThirdPartyCheckbox) {\n        this.setDefaultFocusedElement(this.#showThirdPartyCheckbox.inputElement);\n      }\n      // We alreay know that issesCount is zero here.\n      const hasOnlyThirdPartyIssues = this.#issuesManager.numberOfAllStoredIssues() > 0;\n      this.#noIssuesMessageDiv.textContent = hasOnlyThirdPartyIssues ?\n          i18nString(UIStrings.onlyThirdpartyCookieIssues) :\n          i18nString(UIStrings.noIssuesDetectedSoFar);\n      this.#noIssuesMessageDiv.style.display = 'flex';\n    }\n  }\n\n  async reveal(issue: IssuesManager.Issue.Issue): Promise<void> {\n    await this.#issueViewUpdatePromise;\n    const key = this.#aggregator.keyForIssue(issue);\n    const issueView = this.#issueViews.get(key);\n    if (issueView) {\n      if (issueView.isForHiddenIssue()) {\n        this.#hiddenIssuesRow.expand();\n        this.#hiddenIssuesRow.reveal();\n      }\n      if (getGroupIssuesByKindSetting().get() && !issueView.isForHiddenIssue()) {\n        const kindView = this.#kindViews.get(issueView.getIssueKind());\n        kindView?.expand();\n        kindView?.reveal();\n      }\n      issueView.expand();\n      issueView.reveal();\n      issueView.select(false, true);\n    }\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.#issuesTree.registerCSSFiles([issuesTreeStyles]);\n    this.registerCSSFiles([issuesPaneStyles]);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
