{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/issues/IssueRevealer.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport type * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {IssuesPane} from './IssuesPane.js';\n\nexport class IssueRevealer implements Common.Revealer.Revealer<IssuesManager.Issue.Issue> {\n  async reveal(issue: IssuesManager.Issue.Issue): Promise<void> {\n    await UI.ViewManager.ViewManager.instance().showView('issues-pane');\n    const view = UI.ViewManager.ViewManager.instance().view('issues-pane');\n    if (view) {\n      const issuesPane = await view.widget();\n      if (issuesPane instanceof IssuesPane) {\n        await issuesPane.reveal(issue);\n      } else {\n        throw new Error('Expected issues pane to be an instance of IssuesPane');\n      }\n    }\n  }\n}\n"],
  "mappings": ";AAMA,YAAY,QAAQ;AAEpB,SAAQ,kBAAiB;AAElB,aAAM,cAA6E;AAAA,EACxF,MAAM,OAAO,OAAiD;AAC5D,UAAM,GAAG,YAAY,YAAY,SAAS,EAAE,SAAS,aAAa;AAClE,UAAM,OAAO,GAAG,YAAY,YAAY,SAAS,EAAE,KAAK,aAAa;AACrE,QAAI,MAAM;AACR,YAAM,aAAa,MAAM,KAAK,OAAO;AACrC,UAAI,sBAAsB,YAAY;AACpC,cAAM,WAAW,OAAO,KAAK;AAAA,MAC/B,OAAO;AACL,cAAM,IAAI,MAAM,sDAAsD;AAAA,MACxE;AAAA,IACF;AAAA,EACF;AACF;",
  "names": []
}
