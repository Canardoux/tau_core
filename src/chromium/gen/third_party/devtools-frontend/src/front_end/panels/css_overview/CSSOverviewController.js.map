{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/css_overview/CSSOverviewController.ts"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type {ContrastIssue} from './CSSOverviewCompletedView.js';\nimport type {UnusedDeclaration} from './CSSOverviewUnusedDeclarations.js';\n\nexport class OverviewController extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  currentUrl: string;\n  constructor() {\n    super();\n\n    this.currentUrl = SDK.TargetManager.TargetManager.instance().inspectedURL();\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.INSPECTED_URL_CHANGED, this.#checkUrlAndResetIfChanged, this);\n  }\n\n  #checkUrlAndResetIfChanged(): void {\n    if (this.currentUrl === SDK.TargetManager.TargetManager.instance().inspectedURL()) {\n      return;\n    }\n\n    this.currentUrl = SDK.TargetManager.TargetManager.instance().inspectedURL();\n    this.dispatchEventToListeners(Events.RESET);\n  }\n}\n\nexport type PopulateNodesEvent = {\n  type: 'contrast',\n  key: string,\n  section: string|undefined,\n  nodes: ContrastIssue[],\n}|{\n  type: 'color',\n  color: string,\n  section: string | undefined,\n  nodes: {nodeId: Protocol.DOM.BackendNodeId}[],\n}|{\n  type: 'unused-declarations',\n  declaration: string,\n  nodes: UnusedDeclaration[],\n}|{\n  type: 'media-queries',\n  text: string,\n  nodes: Protocol.CSS.CSSMedia[],\n}|{\n  type: 'font-info',\n  name: string,\n  nodes: {nodeId: Protocol.DOM.BackendNodeId}[],\n};\n\nexport type PopulateNodesEventNodes = PopulateNodesEvent['nodes'];\nexport type PopulateNodesEventNodeTypes = PopulateNodesEventNodes[0];\n\nexport const enum Events {\n  REQUEST_OVERVIEW_START = 'RequestOverviewStart',\n  REQUEST_NODE_HIGHLIGHT = 'RequestNodeHighlight',\n  POPULATE_NODES = 'PopulateNodes',\n  REQUEST_OVERVIEW_CANCEL = 'RequestOverviewCancel',\n  OVERVIEW_COMPLETED = 'OverviewCompleted',\n  RESET = 'Reset',\n}\n\nexport type EventTypes = {\n  [Events.REQUEST_OVERVIEW_START]: void,\n  [Events.REQUEST_NODE_HIGHLIGHT]: number,\n  [Events.POPULATE_NODES]: {payload: PopulateNodesEvent},\n  [Events.REQUEST_OVERVIEW_CANCEL]: void,\n  [Events.OVERVIEW_COMPLETED]: void,\n  [Events.RESET]: void,\n};\n"],
  "mappings": ";AAIA,YAAY,YAAY;AACxB,YAAY,SAAS;AAMd,aAAM,2BAA2B,OAAO,cAAc,cAA0B;AAAA,EACrF;AAAA,EACA,cAAc;AACZ,UAAM;AAEN,SAAK,aAAa,IAAI,cAAc,cAAc,SAAS,EAAE,aAAa;AAC1E,QAAI,cAAc,cAAc,SAAS,EAAE;AAAA,MACvC,IAAI,cAAc,OAAO;AAAA,MAAuB,KAAK;AAAA,MAA4B;AAAA,IAAI;AAAA,EAC3F;AAAA,EAEA,6BAAmC;AACjC,QAAI,KAAK,eAAe,IAAI,cAAc,cAAc,SAAS,EAAE,aAAa,GAAG;AACjF;AAAA,IACF;AAEA,SAAK,aAAa,IAAI,cAAc,cAAc,SAAS,EAAE,aAAa;AAC1E,SAAK,yBAAyB,mBAAY;AAAA,EAC5C;AACF;AA6BO,WAAW,SAAX,kBAAWA,YAAX;AACL,EAAAA,QAAA,4BAAyB;AACzB,EAAAA,QAAA,4BAAyB;AACzB,EAAAA,QAAA,oBAAiB;AACjB,EAAAA,QAAA,6BAA0B;AAC1B,EAAAA,QAAA,wBAAqB;AACrB,EAAAA,QAAA,WAAQ;AANQ,SAAAA;AAAA,GAAA;",
  "names": ["Events"]
}
