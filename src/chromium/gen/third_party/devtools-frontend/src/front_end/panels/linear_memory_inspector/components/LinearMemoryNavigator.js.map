{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/linear_memory_inspector/components/LinearMemoryNavigator.ts"],
  "sourcesContent": ["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/components/icon_button/icon_button.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport linearMemoryNavigatorStyles from './linearMemoryNavigator.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Tooltip text that appears when hovering over a valid memory address (e.g. 0x0) in the address line in the Linear memory inspector.\n   */\n  enterAddress: 'Enter address',\n  /**\n   *@description Tooltip text that appears when hovering over the button to go back in history in the Linear Memory Navigator\n   */\n  goBackInAddressHistory: 'Go back in address history',\n  /**\n   *@description Tooltip text that appears when hovering over the button to go forward in history in the Linear Memory Navigator\n   */\n  goForwardInAddressHistory: 'Go forward in address history',\n  /**\n   *@description Tooltip text that appears when hovering over the page back icon in the Linear Memory Navigator\n   */\n  previousPage: 'Previous page',\n  /**\n   *@description Tooltip text that appears when hovering over the next page icon in the Linear Memory Navigator\n   */\n  nextPage: 'Next page',\n  /**\n   *@description Text to refresh the page\n   */\n  refresh: 'Refresh',\n};\nconst str_ =\n    i18n.i18n.registerUIStrings('panels/linear_memory_inspector/components/LinearMemoryNavigator.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst {render, html, Directives: {ifDefined}} = LitHtml;\n\nexport const enum Navigation {\n  BACKWARD = 'Backward',\n  FORWARD = 'Forward',\n}\n\nexport class AddressInputChangedEvent extends Event {\n  static readonly eventName = 'addressinputchanged';\n  data: {address: string, mode: Mode};\n\n  constructor(address: string, mode: Mode) {\n    super(AddressInputChangedEvent.eventName);\n    this.data = {address, mode};\n  }\n}\n\nexport class PageNavigationEvent extends Event {\n  static readonly eventName = 'pagenavigation';\n  data: Navigation;\n\n  constructor(navigation: Navigation) {\n    super(PageNavigationEvent.eventName, {});\n    this.data = navigation;\n  }\n}\n\nexport class HistoryNavigationEvent extends Event {\n  static readonly eventName = 'historynavigation';\n  data: Navigation;\n\n  constructor(navigation: Navigation) {\n    super(HistoryNavigationEvent.eventName, {});\n    this.data = navigation;\n  }\n}\n\nexport class RefreshRequestedEvent extends Event {\n  static readonly eventName = 'refreshrequested';\n  constructor() {\n    super(RefreshRequestedEvent.eventName, {});\n  }\n}\n\nexport interface LinearMemoryNavigatorData {\n  address: string;\n  mode: Mode;\n  canGoBackInHistory: boolean;\n  canGoForwardInHistory: boolean;\n  valid: boolean;\n  error: string|undefined;\n}\n\nexport const enum Mode {\n  EDIT = 'Edit',\n  SUBMITTED = 'Submitted',\n  INVALID_SUBMIT = 'InvalidSubmit',\n}\n\nexport class LinearMemoryNavigator extends HTMLElement {\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #address = '0';\n  #error: string|undefined = undefined;\n  #valid = true;\n  #canGoBackInHistory = false;\n  #canGoForwardInHistory = false;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [linearMemoryNavigatorStyles];\n  }\n\n  set data(data: LinearMemoryNavigatorData) {\n    this.#address = data.address;\n    this.#error = data.error;\n    this.#valid = data.valid;\n    this.#canGoBackInHistory = data.canGoBackInHistory;\n    this.#canGoForwardInHistory = data.canGoForwardInHistory;\n    this.#render();\n\n    const addressInput = this.#shadow.querySelector<HTMLInputElement>('.address-input');\n    if (addressInput) {\n      if (data.mode === Mode.SUBMITTED) {\n        addressInput.blur();\n      } else if (data.mode === Mode.INVALID_SUBMIT) {\n        addressInput.select();\n      }\n    }\n  }\n\n  #render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    const result = html`\n      <div class=\"navigator\">\n        <div class=\"navigator-item\">\n          ${this.#createButton({icon: 'undo', title: i18nString(UIStrings.goBackInAddressHistory),\n              event: new HistoryNavigationEvent(Navigation.BACKWARD), enabled: this.#canGoBackInHistory,\n              jslogContext:'linear-memory-inspector.history-back'})}\n          ${this.#createButton({icon: 'redo', title: i18nString(UIStrings.goForwardInAddressHistory),\n              event: new HistoryNavigationEvent(Navigation.FORWARD), enabled: this.#canGoForwardInHistory,\n              jslogContext:'linear-memory-inspector.history-forward'})}\n        </div>\n        <div class=\"navigator-item\">\n          ${this.#createButton({icon: 'chevron-left', title: i18nString(UIStrings.previousPage),\n              event: new PageNavigationEvent(Navigation.BACKWARD), enabled: true,\n              jslogContext:'linear-memory-inspector.previous-page'})}\n          ${this.#createAddressInput()}\n          ${this.#createButton({icon: 'chevron-right', title: i18nString(UIStrings.nextPage),\n              event: new PageNavigationEvent(Navigation.FORWARD), enabled: true,\n              jslogContext:'linear-memory-inspector.next-page'})}\n        </div>\n        ${this.#createButton({icon: 'refresh', title: i18nString(UIStrings.refresh),\n            event: new RefreshRequestedEvent(), enabled: true,\n            jslogContext:'linear-memory-inspector.refresh'})}\n      </div>\n      `;\n      render(result, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #createAddressInput(): LitHtml.TemplateResult {\n    const classMap = {\n      'address-input': true,\n      invalid: !this.#valid,\n    };\n    return html`\n      <input class=${LitHtml.Directives.classMap(classMap)} data-input=\"true\" .value=${this.#address}\n        jslog=${VisualLogging.textField('linear-memory-inspector.address').track({\n      change: true,\n    })}\n        title=${ifDefined(this.#valid ? i18nString(UIStrings.enterAddress) : this.#error)} @change=${\n        this.#onAddressChange.bind(this, Mode.SUBMITTED)} @input=${this.#onAddressChange.bind(this, Mode.EDIT)}/>`;\n  }\n\n  #onAddressChange(mode: Mode, event: Event): void {\n    const addressInput = event.target as HTMLInputElement;\n    this.dispatchEvent(new AddressInputChangedEvent(addressInput.value, mode));\n  }\n\n  #createButton(data: {icon: string, title: string, event: Event, enabled: boolean, jslogContext: string}):\n      LitHtml.TemplateResult {\n    return html`\n      <button class=\"navigator-button\" ?disabled=${!data.enabled}\n        jslog=${VisualLogging.action().track({click: true, keydown: 'Enter'}).context(data.jslogContext)}\n        data-button=${data.event.type} title=${data.title}\n        @click=${this.dispatchEvent.bind(this, data.event)}>\n        <devtools-icon name=${data.icon}></devtools-icon>\n      </button>`;\n  }\n}\n\ncustomElements.define('devtools-linear-memory-inspector-navigator', LinearMemoryNavigator);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-linear-memory-inspector-navigator': LinearMemoryNavigator;\n  }\n}\n"],
  "mappings": "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",
  "names": ["Navigation", "Mode"]
}
