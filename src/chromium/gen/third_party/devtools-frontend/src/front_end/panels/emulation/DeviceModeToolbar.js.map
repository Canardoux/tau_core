{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/emulation/DeviceModeToolbar.ts"],
  "sourcesContent": ["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as EmulationModel from '../../models/emulation/emulation.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../mobile_throttling/mobile_throttling.js';\n\nimport * as EmulationComponents from './components/components.js';\nimport deviceModeToolbarStyles from './deviceModeToolbar.css.legacy.js';\n\nconst UIStrings = {\n  /**\n   * @description Title of the device dimensions selection iteam in the Device Mode Toolbar.\n   * webpage in pixels.\n   */\n  dimensions: 'Dimensions',\n  /**\n   * @description Title of the width input textbox in the Device Mode Toolbar, for the width of the\n   * webpage in pixels.\n   */\n  width: 'Width',\n  /**\n   * @description Title of the height input textbox in the Device Mode Toolbar, for the height of the\n   * webpage in pixels. 'leave empty for full' is an instruction to the user - the webpage will be\n   * full-height if this textbox is left empty.\n   */\n  heightLeaveEmptyForFull: 'Height (leave empty for full)',\n  /**\n   * @description Tooltip text for a drop-down menu where the user can select the zoom percentage of\n   * the webpage preview.\n   */\n  zoom: 'Zoom',\n  /**\n   * @description Tooltip tip for a drop-down menu where the user can select the device pixel ratio\n   * (the ratio between the physical pixels on a screen and CSS logical pixels) of the webpage\n   * preview.\n   */\n  devicePixelRatio: 'Device pixel ratio',\n  /**\n   * @description Tooltip tip for a drop-down menu where the user can select the device type e.g.\n   * Mobile, Desktop.\n   */\n  deviceType: 'Device type',\n  /**\n   * @description Tooltip text for a button to disable Experimental Web Platform Features when they are enabled.\n   */\n  experimentalWebPlatformFeature: '\"`Experimental Web Platform Feature`\" flag is enabled. Click to disable it.',\n  /**\n   * @description Tooltip text for a button to enable Experimental Web Platform Features when they are disabled.\n   */\n  experimentalWebPlatformFeatureFlag: '\"`Experimental Web Platform Feature`\" flag is disabled. Click to enable it.',\n  /**\n   * @description Tooltip text for a 'three dots' style menu button which shows an expanded set of options.\n   */\n  moreOptions: 'More options',\n  /**\n   * @description A context menu item in the Device Mode Toolbar. This is a command to resize the\n   * webpage preview to fit the current window. The placeholder is the percentage of full-size that\n   * will be displayed after fitting.\n   * @example {30.0} PH1\n   */\n  fitToWindowF: 'Fit to window ({PH1}%)',\n  /**\n   * @description A checkbox setting that appears in the context menu for the zoom level, in the\n   * Device Mode Toolbar.\n   */\n  autoadjustZoom: 'Auto-adjust zoom',\n  /**\n   * @description A menu item in the drop-down box that allows the user to select the device pixel\n   * ratio. Labels the default value which varies between device types, represented by the\n   * placeholder, which is a number. In the Device Mode Toolbar.\n   * @example {4.3} PH1\n   */\n  defaultF: 'Default: {PH1}',\n  /**\n   * @description Command to hide the frame (like a picture frame) around the mobile device screen.\n   */\n  hideDeviceFrame: 'Hide device frame',\n  /**\n   * @description Command to show the frame (like a picture frame) around the mobile device screen.\n   */\n  showDeviceFrame: 'Show device frame',\n  /**\n   * @description Command to hide a display in the Device Mode Toolbar that shows the different media\n   * queries for the device, above the device screen.\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n   */\n  hideMediaQueries: 'Hide media queries',\n  /**\n   * @description Command to show a display in the Device Mode Toolbar that shows the different media\n   * queries for the device, above the device screen.\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n   */\n  showMediaQueries: 'Show media queries',\n  /**\n   * @description Command in the Device Mode Toolbar to hide a virtual ruler (for measuring),\n   * displayed above and next to the device screen.\n   */\n  hideRulers: 'Hide rulers',\n  /**\n   * @description Command in the Device Mode Toolbar to show a virtual ruler (for measuring),\n   * displayed above and next to the device screen.\n   */\n  showRulers: 'Show rulers',\n  /**\n   * @description Command in the Device Mode Toolbar to remove the drop-down menu from the toolbar\n   * that lets the user override the device pixel ratio of the emulated device.\n   */\n  removeDevicePixelRatio: 'Remove device pixel ratio',\n  /**\n   * @description Command in the Device Mode Toolbar to add the drop-down menu to the toolbar\n   * that lets the user override the device pixel ratio of the emulated device.\n   */\n  addDevicePixelRatio: 'Add device pixel ratio',\n  /**\n   * @description Command in the Device Mode Toolbar to add the drop-down menu to the toolbar\n   * that lets the user set the device type (e.g. Desktop or Mobile).\n   */\n  removeDeviceType: 'Remove device type',\n  /**\n   * @description Command in the Device Mode Toolbar to add the drop-down menu to the toolbar\n   * that lets the user add the device type (e.g. Desktop or Mobile).\n   */\n  addDeviceType: 'Add device type',\n  /**\n   * @description A context menu item in the Device Mode Toolbar that resets all settings back to\n   * their default values.\n   */\n  resetToDefaults: 'Reset to defaults',\n  /**\n   * @description A menu command in the Device Mode Toolbar that closes DevTools.\n   */\n  closeDevtools: 'Close DevTools',\n  /**\n   * @description Title of the device selected in the Device Mode Toolbar. The 'response' device is\n   * not a specific phone/tablet model but a virtual device that can change its height and width\n   * dynamically by clicking and dragging the sides. 'Response' refers to response design:\n   * https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Responsive_Design\n   */\n  responsive: 'Responsive',\n  /**\n   * @description A context menu item in the Device Mode Toolbar that takes the user to a new screen\n   * where they can add/edit/remove custom devices.\n   */\n  edit: 'Edit\u2026',\n  /**\n   * @description Text describing the current orientation of the phone/device (vs. landscape).\n   */\n  portrait: 'Portrait',\n  /**\n   * @description Text describing the current orientation of the phone/device (vs. portrait).\n   */\n  landscape: 'Landscape',\n  /**\n   * @description Title of button in the Device Mode Toolbar which rotates the device 90 degrees.\n   */\n  rotate: 'Rotate',\n  /**\n   * @description Fallback/default text used for the name of a custom device when no name has been\n   * provided by the user.\n   */\n  none: 'None',\n  /**\n   * @description Tooltip of the rotate/screen orientation button.\n   */\n  screenOrientationOptions: 'Screen orientation options',\n  /**\n   * @description Tooltip for a button which turns on/off dual-screen mode, which emulates devices\n   * like tablets which have two screens.\n   */\n  toggleDualscreenMode: 'Toggle dual-screen mode',\n  /**\n   * @description Tooltip tip for a drop-down menu where the user can select the device\n   * posture e.g. Continuous, Folded.\n   */\n  devicePosture: 'Device posture',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/emulation/DeviceModeToolbar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n/**\n * Even though the emulation panel uses all UI elements, the tooltips are not supported.\n * That's because the emulation elements are rendered around the page context, rather\n * than in the DevTools panel itself. Therefore, we need to fall back to using the\n * built-in tooltip by setting the title attribute on the button's element.\n */\nfunction setTitleForButton(button: UI.Toolbar.ToolbarButton|UI.Toolbar.ToolbarMenuButton, title: string): void {\n  button.setTitle(title);\n  button.element.title = title;\n}\n\nexport class DeviceModeToolbar {\n  private model: EmulationModel.DeviceModeModel.DeviceModeModel;\n  private readonly showMediaInspectorSetting: Common.Settings.Setting<boolean>;\n  private readonly showRulersSetting: Common.Settings.Setting<boolean>;\n  private readonly deviceOutlineSetting: Common.Settings.Setting<boolean>;\n  private readonly showDeviceScaleFactorSetting: Common.Settings.Setting<boolean>;\n  private readonly showUserAgentTypeSetting: Common.Settings.Setting<boolean>;\n  private autoAdjustScaleSetting: Common.Settings.Setting<boolean>;\n  private readonly lastMode: Map<EmulationModel.EmulatedDevices.EmulatedDevice, EmulationModel.EmulatedDevices.Mode>;\n  private readonly elementInternal: HTMLDivElement;\n  private readonly emulatedDevicesList: EmulationModel.EmulatedDevices.EmulatedDevicesList;\n  private readonly persistenceSetting: Common.Settings.Setting<{device: string, orientation: string, mode: string}>;\n  private spanButton!: UI.Toolbar.ToolbarButton;\n  private postureItem!: UI.Toolbar.ToolbarMenuButton;\n  private modeButton!: UI.Toolbar.ToolbarButton;\n  private widthInput: EmulationComponents.DeviceSizeInputElement.SizeInputElement;\n  private heightInput: EmulationComponents.DeviceSizeInputElement.SizeInputElement;\n  private deviceScaleItem!: UI.Toolbar.ToolbarMenuButton;\n  private deviceSelectItem!: UI.Toolbar.ToolbarMenuButton;\n  private scaleItem!: UI.Toolbar.ToolbarMenuButton;\n  private uaItem!: UI.Toolbar.ToolbarMenuButton;\n  private experimentalButton!: UI.Toolbar.ToolbarToggle|null;\n  private cachedDeviceScale!: number|null;\n  private cachedUaType!: string|null;\n  private xItem?: UI.Toolbar.ToolbarItem;\n  private throttlingConditionsItem?: UI.Toolbar.ToolbarMenuButton;\n  private cachedModelType?: EmulationModel.DeviceModeModel.Type;\n  private cachedScale?: number;\n  private cachedModelDevice?: EmulationModel.EmulatedDevices.EmulatedDevice|null;\n  private cachedModelMode?: EmulationModel.EmulatedDevices.Mode|null;\n\n  constructor(\n      model: EmulationModel.DeviceModeModel.DeviceModeModel,\n      showMediaInspectorSetting: Common.Settings.Setting<boolean>,\n      showRulersSetting: Common.Settings.Setting<boolean>) {\n    this.model = model;\n    this.showMediaInspectorSetting = showMediaInspectorSetting;\n    this.showRulersSetting = showRulersSetting;\n\n    this.deviceOutlineSetting = this.model.deviceOutlineSetting();\n    this.showDeviceScaleFactorSetting =\n        Common.Settings.Settings.instance().createSetting('emulation.show-device-scale-factor', false);\n    this.showDeviceScaleFactorSetting.addChangeListener(this.updateDeviceScaleFactorVisibility, this);\n\n    this.showUserAgentTypeSetting =\n        Common.Settings.Settings.instance().createSetting('emulation.show-user-agent-type', false);\n    this.showUserAgentTypeSetting.addChangeListener(this.updateUserAgentTypeVisibility, this);\n\n    this.autoAdjustScaleSetting =\n        Common.Settings.Settings.instance().createSetting('emulation.auto-adjust-scale', true);\n\n    this.lastMode = new Map();\n\n    this.elementInternal = document.createElement('div');\n    this.elementInternal.classList.add('device-mode-toolbar');\n    this.elementInternal.setAttribute('jslog', `${VisualLogging.toolbar('device-mode').track({resize: true})}`);\n\n    const leftContainer = this.elementInternal.createChild('div', 'device-mode-toolbar-spacer');\n    leftContainer.createChild('div', 'device-mode-toolbar-spacer');\n    const leftToolbar = new UI.Toolbar.Toolbar('', leftContainer);\n    this.fillLeftToolbar(leftToolbar);\n\n    const mainToolbar = new UI.Toolbar.Toolbar('', this.elementInternal);\n    mainToolbar.makeWrappable();\n    this.widthInput = new EmulationComponents.DeviceSizeInputElement.SizeInputElement(\n        i18nString(UIStrings.width), {jslogContext: 'width'});\n    this.widthInput.addEventListener('sizechanged', ({size: width}) => {\n      if (this.autoAdjustScaleSetting.get()) {\n        this.model.setWidthAndScaleToFit(width);\n      } else {\n        this.model.setWidth(width);\n      }\n    });\n    this.heightInput = new EmulationComponents.DeviceSizeInputElement.SizeInputElement(\n        i18nString(UIStrings.heightLeaveEmptyForFull), {jslogContext: 'height'});\n    this.heightInput.addEventListener('sizechanged', ({size: height}) => {\n      if (this.autoAdjustScaleSetting.get()) {\n        this.model.setHeightAndScaleToFit(height);\n      } else {\n        this.model.setHeight(height);\n      }\n    });\n    this.fillMainToolbar(mainToolbar);\n\n    const rightContainer = this.elementInternal.createChild('div', 'device-mode-toolbar-spacer');\n    const rightToolbar = new UI.Toolbar.Toolbar('device-mode-toolbar-fixed-size', rightContainer);\n    rightToolbar.makeWrappable();\n    this.fillRightToolbar(rightToolbar);\n    const modeToolbar = new UI.Toolbar.Toolbar('device-mode-toolbar-fixed-size', rightContainer);\n    modeToolbar.makeWrappable();\n    this.fillModeToolbar(modeToolbar);\n    rightContainer.createChild('div', 'device-mode-toolbar-spacer');\n    const optionsToolbar = new UI.Toolbar.Toolbar('device-mode-toolbar-options', rightContainer);\n    optionsToolbar.makeWrappable();\n    this.fillOptionsToolbar(optionsToolbar);\n\n    this.emulatedDevicesList = EmulationModel.EmulatedDevices.EmulatedDevicesList.instance();\n    this.emulatedDevicesList.addEventListener(\n        EmulationModel.EmulatedDevices.Events.CUSTOM_DEVICES_UPDATED, this.deviceListChanged, this);\n    this.emulatedDevicesList.addEventListener(\n        EmulationModel.EmulatedDevices.Events.STANDARD_DEVICES_UPDATED, this.deviceListChanged, this);\n\n    this.persistenceSetting = Common.Settings.Settings.instance().createSetting(\n        'emulation.device-mode-value', {device: '', orientation: '', mode: ''});\n\n    this.model.toolbarControlsEnabledSetting().addChangeListener(updateToolbarsEnabled);\n    updateToolbarsEnabled();\n\n    function updateToolbarsEnabled(): void {\n      const enabled = model.toolbarControlsEnabledSetting().get();\n      leftToolbar.setEnabled(enabled);\n      mainToolbar.setEnabled(enabled);\n      rightToolbar.setEnabled(enabled);\n      modeToolbar.setEnabled(enabled);\n      optionsToolbar.setEnabled(enabled);\n    }\n  }\n\n  private createEmptyToolbarElement(): Element {\n    const element = document.createElement('div');\n    element.classList.add('device-mode-empty-toolbar-element');\n    return element;\n  }\n\n  private fillLeftToolbar(toolbar: UI.Toolbar.Toolbar): void {\n    toolbar.appendToolbarItem(this.wrapToolbarItem(this.createEmptyToolbarElement()));\n    this.deviceSelectItem =\n        new UI.Toolbar.ToolbarMenuButton(this.appendDeviceMenuItems.bind(this), undefined, undefined, 'device');\n    this.deviceSelectItem.turnShrinkable();\n    this.deviceSelectItem.setDarkText();\n    toolbar.appendToolbarItem(this.deviceSelectItem);\n  }\n\n  private fillMainToolbar(toolbar: UI.Toolbar.Toolbar): void {\n    toolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(this.widthInput));\n\n    const xElement = document.createElement('div');\n    xElement.classList.add('device-mode-x');\n    xElement.textContent = '\u00D7';\n    this.xItem = this.wrapToolbarItem(xElement);\n    toolbar.appendToolbarItem(this.xItem);\n\n    toolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(this.heightInput));\n  }\n\n  private fillRightToolbar(toolbar: UI.Toolbar.Toolbar): void {\n    toolbar.appendToolbarItem(this.wrapToolbarItem(this.createEmptyToolbarElement()));\n    this.scaleItem =\n        new UI.Toolbar.ToolbarMenuButton(this.appendScaleMenuItems.bind(this), undefined, undefined, 'scale');\n    setTitleForButton(this.scaleItem, i18nString(UIStrings.zoom));\n    this.scaleItem.setDarkText();\n    toolbar.appendToolbarItem(this.scaleItem);\n\n    toolbar.appendToolbarItem(this.wrapToolbarItem(this.createEmptyToolbarElement()));\n\n    this.deviceScaleItem = new UI.Toolbar.ToolbarMenuButton(\n        this.appendDeviceScaleMenuItems.bind(this), undefined, undefined, 'device-pixel-ratio');\n    this.deviceScaleItem.setVisible(this.showDeviceScaleFactorSetting.get());\n    setTitleForButton(this.deviceScaleItem, i18nString(UIStrings.devicePixelRatio));\n    this.deviceScaleItem.setDarkText();\n    toolbar.appendToolbarItem(this.deviceScaleItem);\n\n    toolbar.appendToolbarItem(this.wrapToolbarItem(this.createEmptyToolbarElement()));\n    this.uaItem =\n        new UI.Toolbar.ToolbarMenuButton(this.appendUserAgentMenuItems.bind(this), undefined, undefined, 'device-type');\n    this.uaItem.setVisible(this.showUserAgentTypeSetting.get());\n    setTitleForButton(this.uaItem, i18nString(UIStrings.deviceType));\n    this.uaItem.setDarkText();\n    toolbar.appendToolbarItem(this.uaItem);\n\n    this.throttlingConditionsItem =\n        MobileThrottling.ThrottlingManager.throttlingManager().createMobileThrottlingButton();\n    toolbar.appendToolbarItem(this.throttlingConditionsItem);\n  }\n\n  private fillModeToolbar(toolbar: UI.Toolbar.Toolbar): void {\n    toolbar.appendToolbarItem(this.wrapToolbarItem(this.createEmptyToolbarElement()));\n    this.modeButton = new UI.Toolbar.ToolbarButton('', 'screen-rotation', undefined, 'screen-rotation');\n    this.modeButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.modeMenuClicked, this);\n    toolbar.appendToolbarItem(this.modeButton);\n\n    // Show dual screen toolbar.\n    this.spanButton = new UI.Toolbar.ToolbarButton('', 'device-fold', undefined, 'device-fold');\n    this.spanButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.spanClicked, this);\n    toolbar.appendToolbarItem(this.spanButton);\n\n    // Show posture toolbar menu for foldable devices.\n    toolbar.appendToolbarItem(this.wrapToolbarItem(this.createEmptyToolbarElement()));\n    this.postureItem = new UI.Toolbar.ToolbarMenuButton(\n        this.appendDevicePostureItems.bind(this), undefined, undefined, 'device-posture');\n    this.postureItem.setDarkText();\n    setTitleForButton(this.postureItem, i18nString(UIStrings.devicePosture));\n    toolbar.appendToolbarItem(this.postureItem);\n\n    this.createExperimentalButton(toolbar);\n  }\n\n  private createExperimentalButton(toolbar: UI.Toolbar.Toolbar): void {\n    toolbar.appendToolbarItem(new UI.Toolbar.ToolbarSeparator(true));\n\n    const title = (this.model.webPlatformExperimentalFeaturesEnabled()) ?\n        i18nString(UIStrings.experimentalWebPlatformFeature) :\n        i18nString(UIStrings.experimentalWebPlatformFeatureFlag);\n    this.experimentalButton = new UI.Toolbar.ToolbarToggle(title, 'experiment-check');\n    this.experimentalButton.setToggled(this.model.webPlatformExperimentalFeaturesEnabled());\n    this.experimentalButton.setEnabled(true);\n    this.experimentalButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.experimentalClicked, this);\n\n    toolbar.appendToolbarItem(this.experimentalButton);\n  }\n\n  private experimentalClicked(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(\n        'chrome://flags/#enable-experimental-web-platform-features' as Platform.DevToolsPath.UrlString);\n  }\n\n  private fillOptionsToolbar(toolbar: UI.Toolbar.Toolbar): void {\n    toolbar.appendToolbarItem(this.wrapToolbarItem(this.createEmptyToolbarElement()));\n    const moreOptionsButton = new UI.Toolbar.ToolbarMenuButton(\n        this.appendOptionsMenuItems.bind(this), true, undefined, 'more-options', 'dots-vertical');\n    moreOptionsButton.setTitle(i18nString(UIStrings.moreOptions));\n    toolbar.appendToolbarItem(moreOptionsButton);\n  }\n\n  private appendDevicePostureItems(contextMenu: UI.ContextMenu.ContextMenu): void {\n    for (const title of ['Continuous', 'Folded']) {\n      contextMenu.defaultSection().appendCheckboxItem(\n          title, this.spanClicked.bind(this),\n          {checked: title === this.currentDevicePosture(), jslogContext: title.toLowerCase()});\n    }\n  }\n\n  private currentDevicePosture(): string {\n    const mode = this.model.mode();\n    if (mode &&\n        (mode.orientation === EmulationModel.EmulatedDevices.VerticalSpanned ||\n         mode.orientation === EmulationModel.EmulatedDevices.HorizontalSpanned)) {\n      return 'Folded';\n    }\n    return 'Continuous';\n  }\n\n  private appendScaleMenuItems(contextMenu: UI.ContextMenu.ContextMenu): void {\n    if (this.model.type() === EmulationModel.DeviceModeModel.Type.Device) {\n      contextMenu.footerSection().appendItem(\n          i18nString(UIStrings.fitToWindowF, {PH1: this.getPrettyFitZoomPercentage()}),\n          this.onScaleMenuChanged.bind(this, this.model.fitScale()), {jslogContext: 'fit-to-window'});\n    }\n    contextMenu.footerSection().appendCheckboxItem(\n        i18nString(UIStrings.autoadjustZoom), this.onAutoAdjustScaleChanged.bind(this),\n        {checked: this.autoAdjustScaleSetting.get(), jslogContext: 'auto-adjust-zoom'});\n    const boundAppendScaleItem = appendScaleItem.bind(this);\n    boundAppendScaleItem('50%', 0.5);\n    boundAppendScaleItem('75%', 0.75);\n    boundAppendScaleItem('100%', 1);\n    boundAppendScaleItem('125%', 1.25);\n    boundAppendScaleItem('150%', 1.5);\n    boundAppendScaleItem('200%', 2);\n\n    function appendScaleItem(this: DeviceModeToolbar, title: string, value: number): void {\n      contextMenu.defaultSection().appendCheckboxItem(\n          title, this.onScaleMenuChanged.bind(this, value),\n          {checked: this.model.scaleSetting().get() === value, jslogContext: title});\n    }\n  }\n\n  private onScaleMenuChanged(value: number): void {\n    this.model.scaleSetting().set(value);\n  }\n\n  private onAutoAdjustScaleChanged(): void {\n    this.autoAdjustScaleSetting.set(!this.autoAdjustScaleSetting.get());\n  }\n\n  private appendDeviceScaleMenuItems(contextMenu: UI.ContextMenu.ContextMenu): void {\n    const deviceScaleFactorSetting = this.model.deviceScaleFactorSetting();\n    const defaultValue = this.model.uaSetting().get() === EmulationModel.DeviceModeModel.UA.MOBILE ||\n            this.model.uaSetting().get() === EmulationModel.DeviceModeModel.UA.MOBILE_NO_TOUCH ?\n        EmulationModel.DeviceModeModel.defaultMobileScaleFactor :\n        window.devicePixelRatio;\n    appendDeviceScaleFactorItem(\n        contextMenu.headerSection(), i18nString(UIStrings.defaultF, {PH1: defaultValue}), 0, 'dpr-default');\n    appendDeviceScaleFactorItem(contextMenu.defaultSection(), '1', 1, 'dpr-1');\n    appendDeviceScaleFactorItem(contextMenu.defaultSection(), '2', 2, 'dpr-2');\n    appendDeviceScaleFactorItem(contextMenu.defaultSection(), '3', 3, 'dpr-3');\n\n    function appendDeviceScaleFactorItem(\n        section: UI.ContextMenu.Section, title: string, value: number, jslogContext: string): void {\n      section.appendCheckboxItem(\n          title, deviceScaleFactorSetting.set.bind(deviceScaleFactorSetting, value),\n          {checked: deviceScaleFactorSetting.get() === value, jslogContext});\n    }\n  }\n\n  private appendUserAgentMenuItems(contextMenu: UI.ContextMenu.ContextMenu): void {\n    const uaSetting = this.model.uaSetting();\n    appendUAItem(EmulationModel.DeviceModeModel.UA.MOBILE, EmulationModel.DeviceModeModel.UA.MOBILE);\n    appendUAItem(EmulationModel.DeviceModeModel.UA.MOBILE_NO_TOUCH, EmulationModel.DeviceModeModel.UA.MOBILE_NO_TOUCH);\n    appendUAItem(EmulationModel.DeviceModeModel.UA.DESKTOP, EmulationModel.DeviceModeModel.UA.DESKTOP);\n    appendUAItem(EmulationModel.DeviceModeModel.UA.DESKTOP_TOUCH, EmulationModel.DeviceModeModel.UA.DESKTOP_TOUCH);\n\n    function appendUAItem(title: string, value: EmulationModel.DeviceModeModel.UA): void {\n      contextMenu.defaultSection().appendCheckboxItem(\n          title, uaSetting.set.bind(uaSetting, value),\n          {checked: uaSetting.get() === value, jslogContext: Platform.StringUtilities.toKebabCase(value)});\n    }\n  }\n\n  private appendOptionsMenuItems(contextMenu: UI.ContextMenu.ContextMenu): void {\n    const model = this.model;\n    appendToggleItem(\n        contextMenu.headerSection(), this.deviceOutlineSetting, i18nString(UIStrings.hideDeviceFrame),\n        i18nString(UIStrings.showDeviceFrame), model.type() !== EmulationModel.DeviceModeModel.Type.Device,\n        'device-frame');\n    appendToggleItem(\n        contextMenu.headerSection(), this.showMediaInspectorSetting, i18nString(UIStrings.hideMediaQueries),\n        i18nString(UIStrings.showMediaQueries), undefined, 'media-queries');\n    appendToggleItem(\n        contextMenu.headerSection(), this.showRulersSetting, i18nString(UIStrings.hideRulers),\n        i18nString(UIStrings.showRulers), undefined, 'rulers');\n    appendToggleItem(\n        contextMenu.defaultSection(), this.showDeviceScaleFactorSetting, i18nString(UIStrings.removeDevicePixelRatio),\n        i18nString(UIStrings.addDevicePixelRatio), undefined, 'device-pixel-ratio');\n    appendToggleItem(\n        contextMenu.defaultSection(), this.showUserAgentTypeSetting, i18nString(UIStrings.removeDeviceType),\n        i18nString(UIStrings.addDeviceType), undefined, 'device-type');\n    contextMenu.appendItemsAtLocation('deviceModeMenu');\n    contextMenu.footerSection().appendItem(\n        i18nString(UIStrings.resetToDefaults), this.reset.bind(this), {jslogContext: 'reset-to-defaults'});\n    contextMenu.footerSection().appendItem(\n        i18nString(UIStrings.closeDevtools),\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.closeWindow.bind(\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance),\n        {jslogContext: 'close-dev-tools'});\n\n    function appendToggleItem(\n        section: UI.ContextMenu.Section, setting: Common.Settings.Setting<unknown>, title1: string, title2: string,\n        disabled?: boolean, context?: string): void {\n      if (typeof disabled === 'undefined') {\n        disabled = model.type() === EmulationModel.DeviceModeModel.Type.None;\n      }\n\n      const isEnabled = setting.get();\n      const jslogContext = `${context}-${isEnabled ? 'disable' : 'enable'}`;\n      section.appendItem(\n          isEnabled ? title1 : title2, setting.set.bind(setting, !setting.get()), {disabled, jslogContext});\n    }\n  }\n\n  private reset(): void {\n    this.deviceOutlineSetting.set(false);\n    this.showDeviceScaleFactorSetting.set(false);\n    this.showUserAgentTypeSetting.set(false);\n    this.showMediaInspectorSetting.set(false);\n    this.showRulersSetting.set(false);\n    this.model.reset();\n  }\n\n  private wrapToolbarItem(element: Element): UI.Toolbar.ToolbarItem {\n    const container = document.createElement('div');\n    const shadowRoot = UI.UIUtils.createShadowRootWithCoreStyles(\n        container, {cssFile: deviceModeToolbarStyles, delegatesFocus: undefined});\n    shadowRoot.appendChild(element);\n    return new UI.Toolbar.ToolbarItem(container);\n  }\n\n  private emulateDevice(device: EmulationModel.EmulatedDevices.EmulatedDevice): void {\n    const scale = this.autoAdjustScaleSetting.get() ? undefined : this.model.scaleSetting().get();\n    this.model.emulate(\n        EmulationModel.DeviceModeModel.Type.Device, device, this.lastMode.get(device) || device.modes[0], scale);\n  }\n\n  private switchToResponsive(): void {\n    this.model.emulate(EmulationModel.DeviceModeModel.Type.Responsive, null, null);\n  }\n\n  private filterDevices(devices: EmulationModel.EmulatedDevices.EmulatedDevice[]):\n      EmulationModel.EmulatedDevices.EmulatedDevice[] {\n    devices = devices.filter(function(d) {\n      return d.show();\n    });\n    devices.sort(EmulationModel.EmulatedDevices.EmulatedDevice.deviceComparator);\n    return devices;\n  }\n\n  private standardDevices(): EmulationModel.EmulatedDevices.EmulatedDevice[] {\n    return this.filterDevices(this.emulatedDevicesList.standard());\n  }\n\n  private customDevices(): EmulationModel.EmulatedDevices.EmulatedDevice[] {\n    return this.filterDevices(this.emulatedDevicesList.custom());\n  }\n\n  private allDevices(): EmulationModel.EmulatedDevices.EmulatedDevice[] {\n    return this.standardDevices().concat(this.customDevices());\n  }\n\n  private appendDeviceMenuItems(contextMenu: UI.ContextMenu.ContextMenu): void {\n    contextMenu.headerSection().appendCheckboxItem(\n        i18nString(UIStrings.responsive), this.switchToResponsive.bind(this),\n        {checked: this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive, jslogContext: 'responsive'});\n    appendGroup.call(this, this.standardDevices());\n    appendGroup.call(this, this.customDevices());\n    contextMenu.footerSection().appendItem(\n        i18nString(UIStrings.edit), this.emulatedDevicesList.revealCustomSetting.bind(this.emulatedDevicesList),\n        {jslogContext: 'edit'});\n\n    function appendGroup(this: DeviceModeToolbar, devices: EmulationModel.EmulatedDevices.EmulatedDevice[]): void {\n      if (!devices.length) {\n        return;\n      }\n      const section = contextMenu.section();\n      for (const device of devices) {\n        section.appendCheckboxItem(device.title, this.emulateDevice.bind(this, device), {\n          checked: this.model.device() === device,\n          jslogContext: Platform.StringUtilities.toKebabCase(device.title),\n        });\n      }\n    }\n  }\n\n  private deviceListChanged(): void {\n    const device = this.model.device();\n    if (!device) {\n      return;\n    }\n\n    const devices = this.allDevices();\n    if (devices.indexOf(device) === -1) {\n      if (devices.length) {\n        this.emulateDevice(devices[0]);\n      } else {\n        this.model.emulate(EmulationModel.DeviceModeModel.Type.Responsive, null, null);\n      }\n    } else {\n      this.emulateDevice(device);\n    }\n  }\n\n  private updateDeviceScaleFactorVisibility(): void {\n    if (this.deviceScaleItem) {\n      this.deviceScaleItem.setVisible(this.showDeviceScaleFactorSetting.get());\n    }\n  }\n\n  private updateUserAgentTypeVisibility(): void {\n    if (this.uaItem) {\n      this.uaItem.setVisible(this.showUserAgentTypeSetting.get());\n    }\n  }\n\n  private spanClicked(): void {\n    const device = this.model.device();\n\n    if (!device || (!device.isDualScreen && !device.isFoldableScreen)) {\n      return;\n    }\n\n    const scale = this.autoAdjustScaleSetting.get() ? undefined : this.model.scaleSetting().get();\n    const mode = this.model.mode();\n    if (!mode) {\n      return;\n    }\n\n    const newMode = device.getSpanPartner(mode);\n    if (!newMode) {\n      return;\n    }\n    this.model.emulate(this.model.type(), device, newMode, scale);\n    return;\n  }\n\n  private modeMenuClicked(event: {\n    data: Event,\n  }): void {\n    const device = this.model.device();\n    const model = this.model;\n    const autoAdjustScaleSetting = this.autoAdjustScaleSetting;\n\n    if (model.type() === EmulationModel.DeviceModeModel.Type.Responsive) {\n      const appliedSize = model.appliedDeviceSize();\n      if (autoAdjustScaleSetting.get()) {\n        model.setSizeAndScaleToFit(appliedSize.height, appliedSize.width);\n      } else {\n        model.setWidth(appliedSize.height);\n        model.setHeight(appliedSize.width);\n      }\n      return;\n    }\n\n    if (!device) {\n      return;\n    }\n\n    if ((device.isDualScreen || device.isFoldableScreen || device.modes.length === 2) &&\n        device.modes[0].orientation !== device.modes[1].orientation) {\n      const scale = autoAdjustScaleSetting.get() ? undefined : model.scaleSetting().get();\n      const mode = model.mode();\n      if (!mode) {\n        return;\n      }\n      const rotationPartner = device.getRotationPartner(mode);\n      if (!rotationPartner) {\n        return;\n      }\n\n      model.emulate(model.type(), model.device(), rotationPartner, scale);\n      return;\n    }\n\n    if (!this.modeButton) {\n      return;\n    }\n\n    const contextMenu = new UI.ContextMenu.ContextMenu(event.data, {\n      useSoftMenu: false,\n      x: this.modeButton.element.getBoundingClientRect().left,\n      y: this.modeButton.element.getBoundingClientRect().top + (this.modeButton.element as HTMLElement).offsetHeight,\n    });\n    addOrientation(EmulationModel.EmulatedDevices.Vertical, i18nString(UIStrings.portrait));\n    addOrientation(EmulationModel.EmulatedDevices.Horizontal, i18nString(UIStrings.landscape));\n    void contextMenu.show();\n\n    function addOrientation(orientation: string, title: string): void {\n      if (!device) {\n        return;\n      }\n\n      const modes = device.modesForOrientation(orientation);\n      if (!modes.length) {\n        return;\n      }\n      if (modes.length === 1) {\n        addMode(modes[0], title);\n      } else {\n        for (let index = 0; index < modes.length; index++) {\n          addMode(modes[index], title + ' \\u2013 ' + modes[index].title);\n        }\n      }\n    }\n\n    function addMode(mode: EmulationModel.EmulatedDevices.Mode, title: string): void {\n      contextMenu.defaultSection().appendCheckboxItem(\n          title, applyMode.bind(null, mode), {checked: model.mode() === mode, jslogContext: 'device-mode'});\n    }\n\n    function applyMode(mode: EmulationModel.EmulatedDevices.Mode): void {\n      const scale = autoAdjustScaleSetting.get() ? undefined : model.scaleSetting().get();\n      model.emulate(model.type(), model.device(), mode, scale);\n    }\n  }\n\n  private getPrettyFitZoomPercentage(): string {\n    return `${(this.model.fitScale() * 100).toFixed(0)}`;\n  }\n\n  private getPrettyZoomPercentage(): string {\n    return `${(this.model.scale() * 100).toFixed(0)}`;\n  }\n\n  element(): Element {\n    return this.elementInternal;\n  }\n\n  update(): void {\n    if (this.model.type() !== this.cachedModelType) {\n      this.cachedModelType = this.model.type();\n      this.widthInput.disabled = this.model.type() !== EmulationModel.DeviceModeModel.Type.Responsive;\n\n      this.heightInput.disabled = this.model.type() !== EmulationModel.DeviceModeModel.Type.Responsive;\n      this.deviceScaleItem.setEnabled(this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive);\n      this.uaItem.setEnabled(this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive);\n\n      if (this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive) {\n        this.modeButton.setEnabled(true);\n        setTitleForButton(this.modeButton, i18nString(UIStrings.rotate));\n      } else {\n        this.modeButton.setEnabled(false);\n      }\n    }\n\n    const size = this.model.appliedDeviceSize();\n    this.widthInput.size = String(size.width);\n    this.heightInput.size =\n        this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive && this.model.isFullHeight() ?\n        '' :\n        String(size.height);\n    this.heightInput.placeholder = String(size.height);\n\n    if (this.model.scale() !== this.cachedScale) {\n      this.scaleItem.setText(`${this.getPrettyZoomPercentage()}%`);\n      this.cachedScale = this.model.scale();\n    }\n\n    const deviceScale = this.model.appliedDeviceScaleFactor();\n    if (deviceScale !== this.cachedDeviceScale) {\n      this.deviceScaleItem.setText(`DPR: ${deviceScale.toFixed(1)}`);\n      this.cachedDeviceScale = deviceScale;\n    }\n\n    const uaType = this.model.appliedUserAgentType();\n    if (uaType !== this.cachedUaType) {\n      this.uaItem.setText(uaType);\n      this.cachedUaType = uaType;\n    }\n\n    let deviceItemTitle: string = i18nString(UIStrings.none);\n    if (this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive) {\n      deviceItemTitle = i18nString(UIStrings.responsive);\n    }\n    const device = this.model.device();\n    if (this.model.type() === EmulationModel.DeviceModeModel.Type.Device && device) {\n      deviceItemTitle = device.title;\n    }\n    this.deviceSelectItem.setText(`${i18nString(UIStrings.dimensions)}: ${deviceItemTitle}`);\n\n    if (this.model.device() !== this.cachedModelDevice) {\n      const device = this.model.device();\n      if (device) {\n        const modeCount = device ? device.modes.length : 0;\n        this.modeButton.setEnabled(modeCount >= 2);\n        setTitleForButton(\n            this.modeButton,\n            modeCount === 2 ? i18nString(UIStrings.rotate) : i18nString(UIStrings.screenOrientationOptions));\n      }\n      this.cachedModelDevice = device;\n    }\n\n    if (this.experimentalButton) {\n      const device = this.model.device();\n      if (device && (device.isDualScreen || device.isFoldableScreen)) {\n        if (device.isDualScreen) {\n          this.spanButton.setVisible(true);\n          this.postureItem.setVisible(false);\n        } else if (device.isFoldableScreen) {\n          this.spanButton.setVisible(false);\n          this.postureItem.setVisible(true);\n          this.postureItem.setText(this.currentDevicePosture());\n        }\n        this.experimentalButton.setVisible(true);\n      } else {\n        this.spanButton.setVisible(false);\n        this.postureItem.setVisible(false);\n        this.experimentalButton.setVisible(false);\n      }\n      setTitleForButton(this.spanButton, i18nString(UIStrings.toggleDualscreenMode));\n    }\n\n    if (this.model.type() === EmulationModel.DeviceModeModel.Type.Device) {\n      this.lastMode.set(\n          (this.model.device() as EmulationModel.EmulatedDevices.EmulatedDevice),\n          (this.model.mode() as EmulationModel.EmulatedDevices.Mode));\n    }\n\n    if (this.model.mode() !== this.cachedModelMode && this.model.type() !== EmulationModel.DeviceModeModel.Type.None) {\n      this.cachedModelMode = this.model.mode();\n      const value = this.persistenceSetting.get();\n      const device = this.model.device();\n      if (device) {\n        value.device = device.title;\n        const mode = this.model.mode();\n        value.orientation = mode ? mode.orientation : '';\n        value.mode = mode ? mode.title : '';\n      } else {\n        value.device = '';\n        value.orientation = '';\n        value.mode = '';\n      }\n      this.persistenceSetting.set(value);\n    }\n  }\n\n  restore(): void {\n    for (const device of this.allDevices()) {\n      if (device.title === this.persistenceSetting.get().device) {\n        for (const mode of device.modes) {\n          if (mode.orientation === this.persistenceSetting.get().orientation &&\n              mode.title === this.persistenceSetting.get().mode) {\n            this.lastMode.set(device, mode);\n            this.emulateDevice(device);\n            return;\n          }\n        }\n      }\n    }\n\n    this.model.emulate(EmulationModel.DeviceModeModel.Type.Responsive, null, null);\n  }\n}\n"],
  "mappings": "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",
  "names": ["device"]
}
