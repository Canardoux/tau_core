{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/event_listeners/EventListenersView.ts"],
  "sourcesContent": ["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\n/* eslint-disable rulesdir/es_modules_import */\nimport objectValueStyles from '../../ui/legacy/components/object_ui/objectValue.css.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {frameworkEventListeners, type FrameworkEventListenersObject} from './EventListenersUtils.js';\nimport eventListenersViewStyles from './eventListenersView.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Empty holder text content in Event Listeners View of the Event Listener Debugging pane in the Sources panel\n   */\n  noEventListeners: 'No event listeners',\n  /**\n   *@description Delete button title in Event Listeners View of the Event Listener Debugging pane in the Sources panel\n   */\n  deleteEventListener: 'Delete event listener',\n  /**\n   *@description Passive button text content in Event Listeners View of the Event Listener Debugging pane in the Sources panel\n   */\n  togglePassive: 'Toggle Passive',\n  /**\n   *@description Passive button title in Event Listeners View of the Event Listener Debugging pane in the Sources panel\n   */\n  toggleWhetherEventListenerIs: 'Toggle whether event listener is passive or blocking',\n  /**\n   *@description A context menu item to reveal a node in the DOM tree of the Elements Panel\n   */\n  openInElementsPanel: 'Open in Elements panel',\n  /**\n   *@description Text in Event Listeners Widget of the Elements panel\n   */\n  passive: 'Passive',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/event_listeners/EventListenersView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class EventListenersView extends UI.Widget.VBox {\n  private changeCallback: () => void;\n  private enableDefaultTreeFocus: boolean;\n  treeOutline: UI.TreeOutline.TreeOutlineInShadow;\n  private emptyHolder: HTMLDivElement;\n  private linkifier: Components.Linkifier.Linkifier;\n  private readonly treeItemMap: Map<string, EventListenersTreeElement>;\n  constructor(changeCallback: () => void, enableDefaultTreeFocus: boolean|undefined = false) {\n    super();\n    this.changeCallback = changeCallback;\n    this.enableDefaultTreeFocus = enableDefaultTreeFocus;\n    this.treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n    this.treeOutline.setComparator(EventListenersTreeElement.comparator);\n    this.treeOutline.element.classList.add('monospace');\n    this.treeOutline.setShowSelectionOnKeyboardFocus(true);\n    this.treeOutline.setFocusable(true);\n    this.element.appendChild(this.treeOutline.element);\n    this.emptyHolder = document.createElement('div');\n    this.emptyHolder.classList.add('gray-info-message');\n    this.emptyHolder.textContent = i18nString(UIStrings.noEventListeners);\n    this.emptyHolder.tabIndex = -1;\n    this.linkifier = new Components.Linkifier.Linkifier();\n    this.treeItemMap = new Map();\n  }\n\n  override focus(): void {\n    if (!this.enableDefaultTreeFocus) {\n      return;\n    }\n    if (!this.emptyHolder.parentNode) {\n      this.treeOutline.forceSelect();\n    } else {\n      this.emptyHolder.focus();\n    }\n  }\n\n  async addObjects(objects: (SDK.RemoteObject.RemoteObject|null)[]): Promise<void> {\n    this.reset();\n    await Promise.all(objects.map(obj => obj ? this.addObject(obj) : Promise.resolve()));\n    this.addEmptyHolderIfNeeded();\n    this.eventListenersArrivedForTest();\n  }\n\n  private addObject(object: SDK.RemoteObject.RemoteObject): Promise<void> {\n    let eventListeners: SDK.DOMDebuggerModel.EventListener[];\n    let frameworkEventListenersObject: (FrameworkEventListenersObject|null)|null = null;\n\n    const promises = [];\n    const domDebuggerModel = object.runtimeModel().target().model(SDK.DOMDebuggerModel.DOMDebuggerModel);\n    // TODO(kozyatinskiy): figure out how this should work for |window| when there is no DOMDebugger.\n    if (domDebuggerModel) {\n      promises.push(domDebuggerModel.eventListeners(object).then(storeEventListeners));\n    }\n    promises.push(frameworkEventListeners(object).then(storeFrameworkEventListenersObject));\n    return Promise.all(promises).then(markInternalEventListeners).then(addEventListeners.bind(this));\n\n    function storeEventListeners(result: SDK.DOMDebuggerModel.EventListener[]): void {\n      eventListeners = result;\n    }\n\n    function storeFrameworkEventListenersObject(result: FrameworkEventListenersObject|null): void {\n      frameworkEventListenersObject = result;\n    }\n\n    async function markInternalEventListeners(): Promise<void> {\n      if (!frameworkEventListenersObject) {\n        return;\n      }\n\n      if (!frameworkEventListenersObject.internalHandlers) {\n        return;\n      }\n      return frameworkEventListenersObject.internalHandlers.object()\n          .callFunctionJSON(isInternalEventListener as (this: Object) => boolean[], eventListeners.map(handlerArgument))\n          .then(setIsInternal);\n\n      function handlerArgument(listener: SDK.DOMDebuggerModel.EventListener): Protocol.Runtime.CallArgument {\n        return SDK.RemoteObject.RemoteObject.toCallArgument(listener.handler());\n      }\n\n      function isInternalEventListener(this: Function[]): boolean[] {\n        const isInternal = [];\n        const internalHandlersSet = new Set<Function>(this);\n        for (const handler of arguments) {\n          isInternal.push(internalHandlersSet.has(handler));\n        }\n        return isInternal;\n      }\n\n      function setIsInternal(isInternal: boolean[]): void {\n        for (let i = 0; i < eventListeners.length; ++i) {\n          if (isInternal[i]) {\n            eventListeners[i].markAsFramework();\n          }\n        }\n      }\n    }\n\n    function addEventListeners(this: EventListenersView): void {\n      this.addObjectEventListeners(object, eventListeners);\n      if (frameworkEventListenersObject) {\n        this.addObjectEventListeners(object, frameworkEventListenersObject.eventListeners);\n      }\n    }\n  }\n\n  private addObjectEventListeners(\n      object: SDK.RemoteObject.RemoteObject, eventListeners: SDK.DOMDebuggerModel.EventListener[]|null): void {\n    if (!eventListeners) {\n      return;\n    }\n    for (const eventListener of eventListeners) {\n      const treeItem = this.getOrCreateTreeElementForType(eventListener.type());\n      treeItem.addObjectEventListener(eventListener, object);\n    }\n  }\n\n  showFrameworkListeners(showFramework: boolean, showPassive: boolean, showBlocking: boolean): void {\n    const eventTypes = this.treeOutline.rootElement().children();\n    for (const eventType of eventTypes) {\n      let hiddenEventType = true;\n      for (const listenerElement of eventType.children()) {\n        const objectListenerElement = listenerElement as ObjectEventListenerBar;\n        const listenerOrigin = objectListenerElement.eventListener().origin();\n        let hidden = false;\n        if (listenerOrigin === SDK.DOMDebuggerModel.EventListener.Origin.FRAMEWORK_USER && !showFramework) {\n          hidden = true;\n        }\n        if (listenerOrigin === SDK.DOMDebuggerModel.EventListener.Origin.FRAMEWORK && showFramework) {\n          hidden = true;\n        }\n        if (!showPassive && objectListenerElement.eventListener().passive()) {\n          hidden = true;\n        }\n        if (!showBlocking && !objectListenerElement.eventListener().passive()) {\n          hidden = true;\n        }\n        objectListenerElement.hidden = hidden;\n        hiddenEventType = hiddenEventType && hidden;\n      }\n      eventType.hidden = hiddenEventType;\n    }\n  }\n\n  private getOrCreateTreeElementForType(type: string): EventListenersTreeElement {\n    let treeItem = this.treeItemMap.get(type);\n    if (!treeItem) {\n      treeItem = new EventListenersTreeElement(type, this.linkifier, this.changeCallback);\n      this.treeItemMap.set(type, treeItem);\n      treeItem.hidden = true;\n      this.treeOutline.appendChild(treeItem);\n    }\n    this.emptyHolder.remove();\n    return treeItem;\n  }\n\n  addEmptyHolderIfNeeded(): void {\n    let allHidden = true;\n    let firstVisibleChild: UI.TreeOutline.TreeElement|null = null;\n    for (const eventType of this.treeOutline.rootElement().children()) {\n      eventType.hidden = !eventType.firstChild();\n      allHidden = allHidden && eventType.hidden;\n      if (!firstVisibleChild && !eventType.hidden) {\n        firstVisibleChild = eventType;\n      }\n    }\n    if (allHidden && !this.emptyHolder.parentNode) {\n      this.element.appendChild(this.emptyHolder);\n    }\n    if (firstVisibleChild) {\n      firstVisibleChild.select(true /* omitFocus */);\n    }\n\n    this.treeOutline.setFocusable(Boolean(firstVisibleChild));\n  }\n\n  reset(): void {\n    const eventTypes = this.treeOutline.rootElement().children();\n    for (const eventType of eventTypes) {\n      eventType.removeChildren();\n    }\n    this.linkifier.reset();\n  }\n\n  private eventListenersArrivedForTest(): void {\n  }\n  override wasShown(): void {\n    super.wasShown();\n    this.treeOutline.registerCSSFiles([eventListenersViewStyles, objectValueStyles]);\n  }\n}\n\nexport class EventListenersTreeElement extends UI.TreeOutline.TreeElement {\n  override toggleOnClick: boolean;\n  private readonly linkifier: Components.Linkifier.Linkifier;\n  private readonly changeCallback: () => void;\n  constructor(type: string, linkifier: Components.Linkifier.Linkifier, changeCallback: () => void) {\n    super(type);\n    this.toggleOnClick = true;\n    this.linkifier = linkifier;\n    this.changeCallback = changeCallback;\n    UI.ARIAUtils.setLabel(this.listItemElement, `${type}, event listener`);\n  }\n\n  static comparator(element1: UI.TreeOutline.TreeElement, element2: UI.TreeOutline.TreeElement): number {\n    if (element1.title === element2.title) {\n      return 0;\n    }\n    return element1.title > element2.title ? 1 : -1;\n  }\n\n  addObjectEventListener(eventListener: SDK.DOMDebuggerModel.EventListener, object: SDK.RemoteObject.RemoteObject):\n      void {\n    const treeElement = new ObjectEventListenerBar(eventListener, object, this.linkifier, this.changeCallback);\n    this.appendChild(treeElement as UI.TreeOutline.TreeElement);\n  }\n}\n\nexport class ObjectEventListenerBar extends UI.TreeOutline.TreeElement {\n  private eventListenerInternal: SDK.DOMDebuggerModel.EventListener;\n  editable: boolean;\n  private readonly changeCallback: () => void;\n  private valueTitle?: Element;\n  constructor(\n      eventListener: SDK.DOMDebuggerModel.EventListener, object: SDK.RemoteObject.RemoteObject,\n      linkifier: Components.Linkifier.Linkifier, changeCallback: () => void) {\n    super('', true);\n    this.eventListenerInternal = eventListener;\n    this.editable = false;\n    this.setTitle(object, linkifier);\n    this.changeCallback = changeCallback;\n  }\n\n  override async onpopulate(): Promise<void> {\n    const properties = [];\n    const eventListener = this.eventListenerInternal;\n    const runtimeModel = eventListener.domDebuggerModel().runtimeModel();\n    properties.push(runtimeModel.createRemotePropertyFromPrimitiveValue('useCapture', eventListener.useCapture()));\n    properties.push(runtimeModel.createRemotePropertyFromPrimitiveValue('passive', eventListener.passive()));\n    properties.push(runtimeModel.createRemotePropertyFromPrimitiveValue('once', eventListener.once()));\n    if (typeof eventListener.handler() !== 'undefined') {\n      properties.push(new SDK.RemoteObject.RemoteObjectProperty('handler', eventListener.handler()));\n    }\n    ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement.populateWithProperties(\n        this, properties, [], true, true, null);\n  }\n\n  private setTitle(object: SDK.RemoteObject.RemoteObject, linkifier: Components.Linkifier.Linkifier): void {\n    const title = this.listItemElement.createChild('span', 'event-listener-details');\n\n    const propertyValue = ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection.createPropertyValue(\n        object, /* wasThrown */ false, /* showPreview */ false);\n    this.valueTitle = propertyValue.element;\n    title.appendChild(this.valueTitle);\n\n    if (this.eventListenerInternal.canRemove()) {\n      const deleteButton = new Buttons.Button.Button();\n      deleteButton.data = {\n        variant: Buttons.Button.Variant.ICON,\n        size: Buttons.Button.Size.SMALL,\n        iconName: 'bin',\n        jslogContext: 'delete-event-listener',\n      };\n      UI.Tooltip.Tooltip.install(deleteButton, i18nString(UIStrings.deleteEventListener));\n      deleteButton.addEventListener('click', event => {\n        this.removeListener();\n        event.consume();\n      }, false);\n      title.appendChild(deleteButton);\n    }\n\n    if (this.eventListenerInternal.isScrollBlockingType() && this.eventListenerInternal.canTogglePassive()) {\n      const passiveButton = title.createChild('button', 'event-listener-button');\n      passiveButton.textContent = i18nString(UIStrings.togglePassive);\n      passiveButton.setAttribute('jslog', `${VisualLogging.action('passive').track({click: true})}`);\n      UI.Tooltip.Tooltip.install(passiveButton, i18nString(UIStrings.toggleWhetherEventListenerIs));\n      passiveButton.addEventListener('click', event => {\n        this.togglePassiveListener();\n        event.consume();\n      }, false);\n      title.appendChild(passiveButton);\n    }\n\n    const subtitle = title.createChild('span', 'event-listener-tree-subtitle');\n    const linkElement =\n        linkifier.linkifyRawLocation(this.eventListenerInternal.location(), this.eventListenerInternal.sourceURL());\n    subtitle.appendChild(linkElement);\n\n    this.listItemElement.addEventListener('contextmenu', event => {\n      const menu = new UI.ContextMenu.ContextMenu(event);\n      if (event.target !== linkElement) {\n        menu.appendApplicableItems(linkElement);\n      }\n      if (object.subtype === 'node') {\n        menu.defaultSection().appendItem(\n            i18nString(UIStrings.openInElementsPanel), () => Common.Revealer.reveal(object),\n            {jslogContext: 'reveal-in-elements'});\n      }\n      menu.defaultSection().appendItem(\n          i18nString(UIStrings.deleteEventListener), this.removeListener.bind(this),\n          {disabled: !this.eventListenerInternal.canRemove(), jslogContext: 'delete-event-listener'});\n      menu.defaultSection().appendCheckboxItem(i18nString(UIStrings.passive), this.togglePassiveListener.bind(this), {\n        checked: this.eventListenerInternal.passive(),\n        disabled: !this.eventListenerInternal.canTogglePassive(),\n        jslogContext: 'passive',\n      });\n      void menu.show();\n    });\n  }\n\n  private removeListener(): void {\n    this.removeListenerBar();\n    void this.eventListenerInternal.remove();\n  }\n\n  private togglePassiveListener(): void {\n    void this.eventListenerInternal.togglePassive().then(() => this.changeCallback());\n  }\n\n  private removeListenerBar(): void {\n    const parent = this.parent;\n    if (!parent) {\n      return;\n    }\n    parent.removeChild(this);\n    if (!parent.childCount()) {\n      parent.collapse();\n    }\n    let allHidden = true;\n    for (const child of parent.children()) {\n      if (!child.hidden) {\n        allHidden = false;\n      }\n    }\n    parent.hidden = allHidden;\n  }\n\n  eventListener(): SDK.DOMDebuggerModel.EventListener {\n    return this.eventListenerInternal;\n  }\n\n  override onenter(): boolean {\n    if (this.valueTitle) {\n      (this.valueTitle as HTMLElement).click();\n      return true;\n    }\n\n    return false;\n  }\n\n  override ondelete(): boolean {\n    if (this.eventListenerInternal.canRemove()) {\n      this.removeListener();\n      return true;\n    }\n\n    return false;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
