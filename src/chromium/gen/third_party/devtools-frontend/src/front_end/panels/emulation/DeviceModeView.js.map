{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/emulation/DeviceModeView.ts"],
  "sourcesContent": ["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as EmulationModel from '../../models/emulation/emulation.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {DeviceModeToolbar} from './DeviceModeToolbar.js';\nimport deviceModeViewStyles from './deviceModeView.css.legacy.js';\nimport {MediaQueryInspector} from './MediaQueryInspector.js';\n\nconst UIStrings = {\n  /**\n   *@description Bottom resizer element title in Device Mode View of the Device Toolbar\n   */\n  doubleclickForFullHeight: 'Double-click for full height',\n  /**\n   * @description Name of a device that the user can select to emulate. Small mobile device.\n   * Translation of this phrase should be limited to 10 characters.\n   */\n  mobileS: 'Mobile S',\n  /**\n   * @description Name of a device that the user can select to emulate. Medium mobile device.\n   * Translation of this phrase should be limited to 10 characters.\n   */\n  mobileM: 'Mobile M',\n  /**\n   * @description Name of a device that the user can select to emulate. Large mobile device.\n   * Translation of this phrase should be limited to 10 characters.\n   */\n  mobileL: 'Mobile L',\n  /**\n   * @description Name of a device that the user can select to emulate. Tablet device.\n   * Translation of this phrase should be limited to 10 characters.\n   */\n  tablet: 'Tablet',\n  /**\n   * @description Name of a device that the user can select to emulate. Laptop device.\n   * Translation of this phrase should be limited to 10 characters.\n   */\n  laptop: 'Laptop',\n  /**\n   * @description Name of a device that the user can select to emulate. Large laptop device.\n   * Translation of this phrase should be limited to 10 characters.\n   */\n  laptopL: 'Laptop L',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/emulation/DeviceModeView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class DeviceModeView extends UI.Widget.VBox {\n  wrapperInstance!: UI.Widget.VBox|null;\n  blockElementToWidth: WeakMap<HTMLElement, number>;\n  private model: EmulationModel.DeviceModeModel.DeviceModeModel;\n  private readonly mediaInspector: MediaQueryInspector;\n  private showMediaInspectorSetting: Common.Settings.Setting<boolean>;\n  private showRulersSetting: Common.Settings.Setting<boolean>;\n  private readonly topRuler: Ruler;\n  private readonly leftRuler: Ruler;\n  private presetBlocks!: HTMLElement[];\n  private responsivePresetsContainer!: HTMLElement;\n  private screenArea!: HTMLElement;\n  private pageArea!: HTMLElement;\n  private outlineImage!: HTMLElement;\n  private contentClip!: HTMLElement;\n  private contentArea!: HTMLElement;\n  private rightResizerElement!: HTMLElement;\n  private leftResizerElement!: HTMLElement;\n  private bottomResizerElement!: HTMLElement;\n  private bottomRightResizerElement!: HTMLElement;\n  private bottomLeftResizerElement!: HTMLElement;\n  private cachedResizable!: boolean|undefined;\n  private mediaInspectorContainer!: HTMLElement;\n  private screenImage!: HTMLElement;\n  private toolbar!: DeviceModeToolbar;\n  private slowPositionStart?: {\n    x: number,\n    y: number,\n  }|null;\n  private resizeStart?: UI.Geometry.Size;\n  private cachedCssScreenRect?: EmulationModel.DeviceModeModel.Rect;\n  private cachedCssVisiblePageRect?: EmulationModel.DeviceModeModel.Rect;\n  private cachedOutlineRect?: EmulationModel.DeviceModeModel.Rect;\n  private cachedMediaInspectorVisible?: boolean;\n  private cachedShowRulers?: boolean;\n  private cachedScale?: number;\n  private handleWidth?: number;\n  private handleHeight?: number;\n\n  constructor() {\n    super(true);\n\n    this.blockElementToWidth = new WeakMap();\n\n    this.setMinimumSize(150, 150);\n    this.element.classList.add('device-mode-view');\n    this.registerRequiredCSS(deviceModeViewStyles);\n\n    this.model = EmulationModel.DeviceModeModel.DeviceModeModel.instance();\n    this.model.addEventListener(EmulationModel.DeviceModeModel.Events.UPDATED, this.updateUI, this);\n    this.mediaInspector = new MediaQueryInspector(\n        () => this.model.appliedDeviceSize().width, this.model.setWidth.bind(this.model),\n        new Common.Throttler.Throttler(0));\n    this.showMediaInspectorSetting = Common.Settings.Settings.instance().moduleSetting('show-media-query-inspector');\n    this.showMediaInspectorSetting.addChangeListener(this.updateUI, this);\n    this.showRulersSetting = Common.Settings.Settings.instance().moduleSetting('emulation.show-rulers');\n    this.showRulersSetting.addChangeListener(this.updateUI, this);\n\n    this.topRuler = new Ruler(true, this.model.setWidthAndScaleToFit.bind(this.model));\n    this.topRuler.element.classList.add('device-mode-ruler-top');\n    this.leftRuler = new Ruler(false, this.model.setHeightAndScaleToFit.bind(this.model));\n    this.leftRuler.element.classList.add('device-mode-ruler-left');\n    this.createUI();\n    UI.ZoomManager.ZoomManager.instance().addEventListener(UI.ZoomManager.Events.ZOOM_CHANGED, this.zoomChanged, this);\n  }\n\n  private createUI(): void {\n    this.toolbar = new DeviceModeToolbar(this.model, this.showMediaInspectorSetting, this.showRulersSetting);\n    this.contentElement.appendChild(this.toolbar.element());\n    this.contentClip = (this.contentElement.createChild('div', 'device-mode-content-clip vbox') as HTMLElement);\n    this.responsivePresetsContainer =\n        (this.contentClip.createChild('div', 'device-mode-presets-container') as HTMLElement);\n    this.responsivePresetsContainer.setAttribute('jslog', `${VisualLogging.responsivePresets()}`);\n    this.populatePresetsContainer();\n    this.mediaInspectorContainer = (this.contentClip.createChild('div', 'device-mode-media-container') as HTMLElement);\n    this.contentArea = (this.contentClip.createChild('div', 'device-mode-content-area') as HTMLElement);\n    this.outlineImage = (this.contentArea.createChild('img', 'device-mode-outline-image hidden fill') as HTMLElement);\n    this.outlineImage.addEventListener('load', this.onImageLoaded.bind(this, this.outlineImage, true), false);\n    this.outlineImage.addEventListener('error', this.onImageLoaded.bind(this, this.outlineImage, false), false);\n    this.screenArea = (this.contentArea.createChild('div', 'device-mode-screen-area') as HTMLElement);\n    this.screenImage = (this.screenArea.createChild('img', 'device-mode-screen-image hidden') as HTMLElement);\n    this.screenImage.addEventListener('load', this.onImageLoaded.bind(this, this.screenImage, true), false);\n    this.screenImage.addEventListener('error', this.onImageLoaded.bind(this, this.screenImage, false), false);\n    this.bottomRightResizerElement =\n        (this.screenArea.createChild('div', 'device-mode-resizer device-mode-bottom-right-resizer') as HTMLElement);\n    this.bottomRightResizerElement.createChild('div', '');\n    this.createResizer(this.bottomRightResizerElement, 2, 1);\n    this.bottomLeftResizerElement =\n        (this.screenArea.createChild('div', 'device-mode-resizer device-mode-bottom-left-resizer') as HTMLElement);\n    this.bottomLeftResizerElement.createChild('div', '');\n    this.createResizer(this.bottomLeftResizerElement, -2, 1);\n    this.rightResizerElement =\n        (this.screenArea.createChild('div', 'device-mode-resizer device-mode-right-resizer') as HTMLElement);\n    this.rightResizerElement.createChild('div', '');\n    this.createResizer(this.rightResizerElement, 2, 0);\n    this.leftResizerElement =\n        (this.screenArea.createChild('div', 'device-mode-resizer device-mode-left-resizer') as HTMLElement);\n    this.leftResizerElement.createChild('div', '');\n    this.createResizer(this.leftResizerElement, -2, 0);\n    this.bottomResizerElement =\n        (this.screenArea.createChild('div', 'device-mode-resizer device-mode-bottom-resizer') as HTMLElement);\n    this.bottomResizerElement.createChild('div', '');\n    this.createResizer(this.bottomResizerElement, 0, 1);\n    this.bottomResizerElement.addEventListener('dblclick', this.model.setHeight.bind(this.model, 0), false);\n    UI.Tooltip.Tooltip.install(this.bottomResizerElement, i18nString(UIStrings.doubleclickForFullHeight));\n    this.pageArea = (this.screenArea.createChild('div', 'device-mode-page-area') as HTMLElement);\n    this.pageArea.createChild('slot');\n  }\n\n  private populatePresetsContainer(): void {\n    const sizes = [320, 375, 425, 768, 1024, 1440, 2560];\n    const titles = [\n      i18nString(UIStrings.mobileS),\n      i18nString(UIStrings.mobileM),\n      i18nString(UIStrings.mobileL),\n      i18nString(UIStrings.tablet),\n      i18nString(UIStrings.laptop),\n      i18nString(UIStrings.laptopL),\n      '4K',\n    ];\n    this.presetBlocks = [];\n    const inner = this.responsivePresetsContainer.createChild('div', 'device-mode-presets-container-inner');\n    for (let i = sizes.length - 1; i >= 0; --i) {\n      const outer = inner.createChild('div', 'fill device-mode-preset-bar-outer');\n      const block = (outer.createChild('div', 'device-mode-preset-bar') as HTMLElement);\n      block.createChild('span').textContent = titles[i] + ' \\u2013 ' + sizes[i] + 'px';\n      block.setAttribute(\n          'jslog', `${VisualLogging.action().track({click: true}).context(`device-mode-preset-${sizes[i]}px`)}`);\n      block.addEventListener('click', applySize.bind(this, sizes[i]), false);\n      this.blockElementToWidth.set(block, sizes[i]);\n      this.presetBlocks.push(block);\n    }\n\n    function applySize(this: DeviceModeView, width: number, e: Event): void {\n      this.model.emulate(EmulationModel.DeviceModeModel.Type.Responsive, null, null);\n      this.model.setWidthAndScaleToFit(width);\n      e.consume();\n    }\n  }\n\n  private createResizer(element: Element, widthFactor: number, heightFactor: number): UI.ResizerWidget.ResizerWidget {\n    const resizer = new UI.ResizerWidget.ResizerWidget();\n    element.setAttribute('jslog', `${VisualLogging.slider('device-mode-resizer').track({drag: true})}`);\n    resizer.addElement((element as HTMLElement));\n    let cursor: 'nwse-resize'|'nesw-resize'|('ew-resize' | 'ns-resize') = widthFactor ? 'ew-resize' : 'ns-resize';\n    if (widthFactor * heightFactor > 0) {\n      cursor = 'nwse-resize';\n    }\n    if (widthFactor * heightFactor < 0) {\n      cursor = 'nesw-resize';\n    }\n    resizer.setCursor(cursor);\n    resizer.addEventListener(UI.ResizerWidget.Events.RESIZE_START, this.onResizeStart, this);\n    resizer.addEventListener(\n        UI.ResizerWidget.Events.RESIZE_UPDATE_XY, this.onResizeUpdate.bind(this, widthFactor, heightFactor));\n    resizer.addEventListener(UI.ResizerWidget.Events.RESIZE_END, this.onResizeEnd, this);\n    return resizer;\n  }\n\n  private onResizeStart(): void {\n    this.slowPositionStart = null;\n    const rect = this.model.screenRect();\n    this.resizeStart = new UI.Geometry.Size(rect.width, rect.height);\n  }\n\n  private onResizeUpdate(widthFactor: number, heightFactor: number, event: {\n    data: UI.ResizerWidget.ResizeUpdateXYEvent,\n  }): void {\n    if (event.data.shiftKey !== Boolean(this.slowPositionStart)) {\n      this.slowPositionStart = event.data.shiftKey ? {x: event.data.currentX, y: event.data.currentY} : null;\n    }\n\n    let cssOffsetX: number = event.data.currentX - event.data.startX;\n    let cssOffsetY: number = event.data.currentY - event.data.startY;\n    if (this.slowPositionStart) {\n      cssOffsetX = (event.data.currentX - this.slowPositionStart.x) / 10 + this.slowPositionStart.x - event.data.startX;\n      cssOffsetY = (event.data.currentY - this.slowPositionStart.y) / 10 + this.slowPositionStart.y - event.data.startY;\n    }\n\n    if (widthFactor && this.resizeStart) {\n      const dipOffsetX = cssOffsetX * UI.ZoomManager.ZoomManager.instance().zoomFactor();\n      let newWidth: number = this.resizeStart.width + dipOffsetX * widthFactor;\n      newWidth = Math.round(newWidth / this.model.scale());\n      if (newWidth >= EmulationModel.DeviceModeModel.MinDeviceSize &&\n          newWidth <= EmulationModel.DeviceModeModel.MaxDeviceSize) {\n        this.model.setWidth(newWidth);\n      }\n    }\n\n    if (heightFactor && this.resizeStart) {\n      const dipOffsetY = cssOffsetY * UI.ZoomManager.ZoomManager.instance().zoomFactor();\n      let newHeight: number = this.resizeStart.height + dipOffsetY * heightFactor;\n      newHeight = Math.round(newHeight / this.model.scale());\n      if (newHeight >= EmulationModel.DeviceModeModel.MinDeviceSize &&\n          newHeight <= EmulationModel.DeviceModeModel.MaxDeviceSize) {\n        this.model.setHeight(newHeight);\n      }\n    }\n  }\n\n  exitHingeMode(): void {\n    if (this.model) {\n      this.model.exitHingeMode();\n    }\n  }\n\n  private onResizeEnd(): void {\n    delete this.resizeStart;\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.ResizedViewInResponsiveMode);\n  }\n\n  private updateUI(): void {\n    function applyRect(element: HTMLElement, rect: EmulationModel.DeviceModeModel.Rect): void {\n      element.style.left = rect.left + 'px';\n      element.style.top = rect.top + 'px';\n      element.style.width = rect.width + 'px';\n      element.style.height = rect.height + 'px';\n    }\n\n    if (!this.isShowing()) {\n      return;\n    }\n\n    const zoomFactor = UI.ZoomManager.ZoomManager.instance().zoomFactor();\n    let callDoResize = false;\n    const showRulers = this.showRulersSetting.get() && this.model.type() !== EmulationModel.DeviceModeModel.Type.None;\n    let contentAreaResized = false;\n    let updateRulers = false;\n\n    const cssScreenRect = this.model.screenRect().scale(1 / zoomFactor);\n    if (!this.cachedCssScreenRect || !cssScreenRect.isEqual(this.cachedCssScreenRect)) {\n      applyRect(this.screenArea, cssScreenRect);\n      updateRulers = true;\n      callDoResize = true;\n      this.cachedCssScreenRect = cssScreenRect;\n    }\n\n    const cssVisiblePageRect = this.model.visiblePageRect().scale(1 / zoomFactor);\n    if (!this.cachedCssVisiblePageRect || !cssVisiblePageRect.isEqual(this.cachedCssVisiblePageRect)) {\n      applyRect(this.pageArea, cssVisiblePageRect);\n      callDoResize = true;\n      this.cachedCssVisiblePageRect = cssVisiblePageRect;\n    }\n\n    const outlineRectFromModel = this.model.outlineRect();\n    if (outlineRectFromModel) {\n      const outlineRect = outlineRectFromModel.scale(1 / zoomFactor);\n      if (!this.cachedOutlineRect || !outlineRect.isEqual(this.cachedOutlineRect)) {\n        applyRect(this.outlineImage, outlineRect);\n        callDoResize = true;\n        this.cachedOutlineRect = outlineRect;\n      }\n    }\n    this.contentClip.classList.toggle('device-mode-outline-visible', Boolean(this.model.outlineImage()));\n\n    const resizable = this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive;\n    if (resizable !== this.cachedResizable) {\n      this.rightResizerElement.classList.toggle('hidden', !resizable);\n      this.leftResizerElement.classList.toggle('hidden', !resizable);\n      this.bottomResizerElement.classList.toggle('hidden', !resizable);\n      this.bottomRightResizerElement.classList.toggle('hidden', !resizable);\n      this.bottomLeftResizerElement.classList.toggle('hidden', !resizable);\n      this.cachedResizable = resizable;\n    }\n\n    const mediaInspectorVisible =\n        this.showMediaInspectorSetting.get() && this.model.type() !== EmulationModel.DeviceModeModel.Type.None;\n    if (mediaInspectorVisible !== this.cachedMediaInspectorVisible) {\n      if (mediaInspectorVisible) {\n        this.mediaInspector.show(this.mediaInspectorContainer);\n      } else {\n        this.mediaInspector.detach();\n      }\n      contentAreaResized = true;\n      callDoResize = true;\n      this.cachedMediaInspectorVisible = mediaInspectorVisible;\n    }\n\n    if (showRulers !== this.cachedShowRulers) {\n      this.contentClip.classList.toggle('device-mode-rulers-visible', showRulers);\n      if (showRulers) {\n        this.topRuler.show(this.contentArea);\n        this.leftRuler.show(this.contentArea);\n      } else {\n        this.topRuler.detach();\n        this.leftRuler.detach();\n      }\n      contentAreaResized = true;\n      callDoResize = true;\n      this.cachedShowRulers = showRulers;\n    }\n\n    if (this.model.scale() !== this.cachedScale) {\n      updateRulers = true;\n      callDoResize = true;\n      for (const block of this.presetBlocks) {\n        const blockWidth = this.blockElementToWidth.get(block);\n        if (!blockWidth) {\n          throw new Error('Could not get width for block.');\n        }\n        block.style.width = blockWidth * this.model.scale() + 'px';\n      }\n      this.cachedScale = this.model.scale();\n    }\n\n    this.toolbar.update();\n    this.loadImage(this.screenImage, this.model.screenImage());\n    this.loadImage(this.outlineImage, this.model.outlineImage());\n    this.mediaInspector.setAxisTransform(this.model.scale());\n    if (callDoResize) {\n      this.doResize();\n    }\n    if (updateRulers) {\n      this.topRuler.render(this.model.scale());\n      this.leftRuler.render(this.model.scale());\n      this.topRuler.element.positionAt(\n          this.cachedCssScreenRect ? this.cachedCssScreenRect.left : 0,\n          this.cachedCssScreenRect ? this.cachedCssScreenRect.top : 0);\n      this.leftRuler.element.positionAt(\n          this.cachedCssScreenRect ? this.cachedCssScreenRect.left : 0,\n          this.cachedCssScreenRect ? this.cachedCssScreenRect.top : 0);\n    }\n    if (contentAreaResized) {\n      this.contentAreaResized();\n    }\n  }\n\n  private loadImage(element: Element, srcset: string): void {\n    if (element.getAttribute('srcset') === srcset) {\n      return;\n    }\n    element.setAttribute('srcset', srcset);\n    if (!srcset) {\n      element.classList.toggle('hidden', true);\n    }\n  }\n\n  private onImageLoaded(element: Element, success: boolean): void {\n    element.classList.toggle('hidden', !success);\n  }\n\n  setNonEmulatedAvailableSize(element: Element): void {\n    if (this.model.type() !== EmulationModel.DeviceModeModel.Type.None) {\n      return;\n    }\n    const zoomFactor = UI.ZoomManager.ZoomManager.instance().zoomFactor();\n    const rect = element.getBoundingClientRect();\n    const availableSize =\n        new UI.Geometry.Size(Math.max(rect.width * zoomFactor, 1), Math.max(rect.height * zoomFactor, 1));\n    this.model.setAvailableSize(availableSize, availableSize);\n  }\n\n  private contentAreaResized(): void {\n    const zoomFactor = UI.ZoomManager.ZoomManager.instance().zoomFactor();\n    const rect = this.contentArea.getBoundingClientRect();\n    const availableSize =\n        new UI.Geometry.Size(Math.max(rect.width * zoomFactor, 1), Math.max(rect.height * zoomFactor, 1));\n    const preferredSize = new UI.Geometry.Size(\n        Math.max((rect.width - 2 * (this.handleWidth || 0)) * zoomFactor, 1),\n        Math.max((rect.height - (this.handleHeight || 0)) * zoomFactor, 1));\n    this.model.setAvailableSize(availableSize, preferredSize);\n  }\n\n  private measureHandles(): void {\n    const hidden = this.rightResizerElement.classList.contains('hidden');\n    this.rightResizerElement.classList.toggle('hidden', false);\n    this.bottomResizerElement.classList.toggle('hidden', false);\n    this.handleWidth = this.rightResizerElement.offsetWidth;\n    this.handleHeight = this.bottomResizerElement.offsetHeight;\n    this.rightResizerElement.classList.toggle('hidden', hidden);\n    this.bottomResizerElement.classList.toggle('hidden', hidden);\n  }\n\n  private zoomChanged(): void {\n    delete this.handleWidth;\n    delete this.handleHeight;\n    if (this.isShowing()) {\n      this.measureHandles();\n      this.contentAreaResized();\n    }\n  }\n\n  override onResize(): void {\n    if (this.isShowing()) {\n      this.contentAreaResized();\n    }\n  }\n\n  override wasShown(): void {\n    this.measureHandles();\n    this.toolbar.restore();\n  }\n\n  override willHide(): void {\n    this.model.emulate(EmulationModel.DeviceModeModel.Type.None, null, null);\n  }\n\n  async captureScreenshot(): Promise<void> {\n    const screenshot = await this.model.captureScreenshot(false);\n    if (screenshot === null) {\n      return;\n    }\n\n    const pageImage = new Image();\n    pageImage.src = 'data:image/png;base64,' + screenshot;\n    pageImage.onload = async () => {\n      const scale = pageImage.naturalWidth / this.model.screenRect().width;\n      const outlineRectFromModel = this.model.outlineRect();\n      if (!outlineRectFromModel) {\n        throw new Error('Unable to take screenshot: no outlineRect available.');\n      }\n      const outlineRect = outlineRectFromModel.scale(scale);\n      const screenRect = this.model.screenRect().scale(scale);\n      const visiblePageRect = this.model.visiblePageRect().scale(scale);\n      const contentLeft = screenRect.left + visiblePageRect.left - outlineRect.left;\n      const contentTop = screenRect.top + visiblePageRect.top - outlineRect.top;\n\n      const canvas = document.createElement('canvas');\n      canvas.width = Math.floor(outlineRect.width);\n      // Cap the height to not hit the GPU limit.\n      // https://crbug.com/1260828\n      canvas.height = Math.min((1 << 14), Math.floor(outlineRect.height));\n      const ctx = canvas.getContext('2d');\n      if (!ctx) {\n        throw new Error('Could not get 2d context from canvas.');\n      }\n      ctx.imageSmoothingEnabled = false;\n\n      if (this.model.outlineImage()) {\n        await this.paintImage(ctx, this.model.outlineImage(), outlineRect.relativeTo(outlineRect));\n      }\n      if (this.model.screenImage()) {\n        await this.paintImage(ctx, this.model.screenImage(), screenRect.relativeTo(outlineRect));\n      }\n      ctx.drawImage(pageImage, Math.floor(contentLeft), Math.floor(contentTop));\n      this.saveScreenshot((canvas as HTMLCanvasElement));\n    };\n  }\n\n  async captureFullSizeScreenshot(): Promise<void> {\n    const screenshot = await this.model.captureScreenshot(true);\n    if (screenshot === null) {\n      return;\n    }\n    return this.saveScreenshotBase64(screenshot);\n  }\n\n  async captureAreaScreenshot(clip?: Protocol.Page.Viewport): Promise<void> {\n    const screenshot = await this.model.captureScreenshot(false, clip);\n    if (screenshot === null) {\n      return;\n    }\n    return this.saveScreenshotBase64(screenshot);\n  }\n\n  private saveScreenshotBase64(screenshot: string): void {\n    const pageImage = new Image();\n    pageImage.src = 'data:image/png;base64,' + screenshot;\n    pageImage.onload = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = pageImage.naturalWidth;\n      // Cap the height to not hit the GPU limit.\n      // https://crbug.com/1260828\n      canvas.height = Math.min((1 << 14), Math.floor(pageImage.naturalHeight));\n      const ctx = canvas.getContext('2d');\n      if (!ctx) {\n        throw new Error('Could not get 2d context for base64 screenshot.');\n      }\n      ctx.imageSmoothingEnabled = false;\n      ctx.drawImage(pageImage, 0, 0);\n      this.saveScreenshot((canvas as HTMLCanvasElement));\n    };\n  }\n\n  private paintImage(ctx: CanvasRenderingContext2D, src: string, rect: EmulationModel.DeviceModeModel.Rect):\n      Promise<void> {\n    return new Promise(resolve => {\n      const image = new Image();\n      image.crossOrigin = 'Anonymous';\n      image.srcset = src;\n      image.onerror = () => resolve();\n      image.onload = () => {\n        ctx.drawImage(image, rect.left, rect.top, rect.width, rect.height);\n        resolve();\n      };\n    });\n  }\n\n  private saveScreenshot(canvas: HTMLCanvasElement): void {\n    const url = this.model.inspectedURL();\n    let fileName = '';\n    if (url) {\n      const withoutFragment = Platform.StringUtilities.removeURLFragment(url);\n      fileName = Platform.StringUtilities.trimURL(withoutFragment);\n    }\n\n    const device = this.model.device();\n    if (device && this.model.type() === EmulationModel.DeviceModeModel.Type.Device) {\n      fileName += `(${device.title})`;\n    }\n    const link = document.createElement('a');\n    link.download = fileName + '.png';\n    canvas.toBlob(blob => {\n      if (blob === null) {\n        return;\n      }\n      link.href = URL.createObjectURL(blob);\n      link.click();\n    });\n  }\n}\n\nexport class Ruler extends UI.Widget.VBox {\n  private contentElementInternal: HTMLElement;\n  private readonly horizontal: boolean;\n  private scale: number;\n  private count: number;\n  private readonly throttler: Common.Throttler.Throttler;\n  private readonly applyCallback: (arg0: number) => void;\n  private renderedScale!: number|undefined;\n  private renderedZoomFactor!: number|undefined;\n  constructor(horizontal: boolean, applyCallback: (arg0: number) => void) {\n    super();\n    this.element.classList.add('device-mode-ruler');\n    this.element.setAttribute('jslog', `${VisualLogging.deviceModeRuler().track({click: true})}`);\n    this.contentElementInternal =\n        this.element.createChild('div', 'device-mode-ruler-content').createChild('div', 'device-mode-ruler-inner') as\n        HTMLDivElement;\n    this.horizontal = horizontal;\n    this.scale = 1;\n    this.count = 0;\n    this.throttler = new Common.Throttler.Throttler(0);\n    this.applyCallback = applyCallback;\n  }\n\n  render(scale: number): void {\n    this.scale = scale;\n    void this.throttler.schedule(this.update.bind(this));\n  }\n\n  override onResize(): void {\n    void this.throttler.schedule(this.update.bind(this));\n  }\n\n  override update(): Promise<void> {\n    const zoomFactor = UI.ZoomManager.ZoomManager.instance().zoomFactor();\n    const size = this.horizontal ? this.contentElementInternal.offsetWidth : this.contentElementInternal.offsetHeight;\n\n    if (this.scale !== this.renderedScale || zoomFactor !== this.renderedZoomFactor) {\n      this.contentElementInternal.removeChildren();\n      this.count = 0;\n      this.renderedScale = this.scale;\n      this.renderedZoomFactor = zoomFactor;\n    }\n\n    const dipSize = size * zoomFactor / this.scale;\n    const count = Math.ceil(dipSize / 5);\n    let step = 1;\n    if (this.scale < 0.8) {\n      step = 2;\n    }\n    if (this.scale < 0.6) {\n      step = 4;\n    }\n    if (this.scale < 0.4) {\n      step = 8;\n    }\n    if (this.scale < 0.2) {\n      step = 16;\n    }\n    if (this.scale < 0.1) {\n      step = 32;\n    }\n\n    for (let i = count; i < this.count; i++) {\n      if (!(i % step)) {\n        const lastChild = this.contentElementInternal.lastChild;\n        if (lastChild) {\n          lastChild.remove();\n        }\n      }\n    }\n\n    for (let i = this.count; i < count; i++) {\n      if (i % step) {\n        continue;\n      }\n      const marker = this.contentElementInternal.createChild('div', 'device-mode-ruler-marker');\n      if (i) {\n        if (this.horizontal) {\n          marker.style.left = (5 * i) * this.scale / zoomFactor + 'px';\n        } else {\n          marker.style.top = (5 * i) * this.scale / zoomFactor + 'px';\n        }\n        if (!(i % 20)) {\n          const text = marker.createChild('div', 'device-mode-ruler-text');\n          text.textContent = String(i * 5);\n          text.addEventListener('click', this.onMarkerClick.bind(this, i * 5), false);\n        }\n      }\n      if (!(i % 10)) {\n        marker.classList.add('device-mode-ruler-marker-large');\n      } else if (!(i % 5)) {\n        marker.classList.add('device-mode-ruler-marker-medium');\n      }\n    }\n\n    this.count = count;\n    return Promise.resolve();\n  }\n\n  private onMarkerClick(size: number): void {\n    this.applyCallback.call(null, size);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
