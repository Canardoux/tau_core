{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/elements/components/CSSVariableValueView.ts"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport cssVariableValueViewStyles from './cssVariableValueView.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Text for a link from custom property to its defining registration\n   */\n  registeredPropertyLinkTitle: 'View registered property',\n  /**\n   *@description Error message for a property value that failed to parse because it had an incorrect type. The message\n   * is shown in a popover when hovering the property value. The `type` placeholder will be rendered as an HTML element\n   * to apply some styling (color and monospace font)\n   *@example {<color>} type\n   */\n  invalidPropertyValue: 'Invalid property value, expected type {type}',\n  /**\n   *@description Text displayed in a tooltip shown when hovering over a var() CSS function in the Styles pane when the custom property in this function does not exist. The parameter is the name of the property.\n   *@example {--my-custom-property-name} PH1\n   */\n  sIsNotDefined: '{PH1} is not defined',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/components/CSSVariableValueView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nTemplate = LitHtml.i18nTemplate.bind(undefined, str_);\n\nconst {render, html} = LitHtml;\n\nexport interface RegisteredPropertyDetails {\n  registration: SDK.CSSMatchedStyles.CSSRegisteredProperty;\n  goToDefinition: () => void;\n}\n\nfunction getLinkSection(details: RegisteredPropertyDetails): LitHtml.TemplateResult {\n  return html`<div class=\"registered-property-links\">\n            <span role=\"button\" @click=${details?.goToDefinition} class=\"clickable underlined unbreakable-text\">\n              ${i18nString(UIStrings.registeredPropertyLinkTitle)}\n            </span>\n          </div>`;\n}\n\nexport class CSSVariableParserError extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  constructor(details: RegisteredPropertyDetails) {\n    super();\n    this.#shadow.adoptedStyleSheets = [cssVariableValueViewStyles];\n    this.#render(details);\n  }\n\n  #render(details: RegisteredPropertyDetails): void {\n    const type = html`<span class=\"monospace css-property\">${details.registration.syntax()}</span>`;\n    render(\n        html`\n      <div class=\"variable-value-popup-wrapper\">\n        ${i18nTemplate(UIStrings.invalidPropertyValue, {type})}\n        ${getLinkSection(details)}\n      </div>`,\n        this.#shadow, {\n          host: this,\n        });\n  }\n}\n\nexport class CSSVariableValueView extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly variableName: string;\n  readonly value: string|undefined;\n  readonly details: RegisteredPropertyDetails|undefined;\n\n  constructor({\n    variableName,\n    value,\n    details,\n  }: {\n    variableName: string,\n    value: string|undefined,\n    details?: RegisteredPropertyDetails,\n  }) {\n    super();\n    this.#shadow.adoptedStyleSheets = [cssVariableValueViewStyles];\n    this.variableName = variableName;\n    this.value = value;\n    this.details = details;\n    this.#render();\n  }\n\n  #render(): void {\n    const initialValue = this.details?.registration.initialValue();\n    const registrationView = this.details ? html`\n        <hr class=divider />\n        <div class=registered-property-popup-wrapper>\n          <div class=\"monospace\">\n            <div><span class=\"css-property\">syntax:</span> ${this.details.registration.syntax()}</div>\n            <div><span class=\"css-property\">inherits:</span> ${this.details.registration.inherits()}</div>\n            ${initialValue ? html`<div><span class=\"css-property\">initial-value:</span> ${initialValue}</div>` : ''}\n          </div>\n          ${getLinkSection(this.details)}\n        </div>` :\n                                            '';\n\n    const valueText = this.value ?? i18nString(UIStrings.sIsNotDefined, {PH1: this.variableName});\n    render(\n        html`<div class=\"variable-value-popup-wrapper\">\n               ${valueText}\n             </div>\n             ${registrationView}\n             `,\n        this.#shadow, {\n          host: this,\n        });\n  }\n}\n\ncustomElements.define('devtools-css-variable-value-view', CSSVariableValueView);\ncustomElements.define('devtools-css-variable-parser-error', CSSVariableParserError);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-css-variable-value-view': CSSVariableValueView;\n    'devtools-css-variable-parser-error': CSSVariableParserError;\n  }\n}\n"],
  "mappings": ";AAIA,YAAY,UAAU;AAEtB,YAAY,aAAa;AAEzB,OAAO,gCAAgC;AAEvC,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA,EAIhB,6BAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO7B,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtB,eAAe;AACjB;AACA,MAAM,OAAO,KAAK,KAAK,kBAAkB,sDAAsD,SAAS;AACxG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW,IAAI;AACpE,MAAM,eAAe,QAAQ,aAAa,KAAK,QAAW,IAAI;AAE9D,MAAM,EAAC,QAAQ,KAAI,IAAI;AAOvB,SAAS,eAAe,SAA4D;AAClF,SAAO;AAAA,yCACgC,SAAS,cAAc;AAAA,gBAChD,WAAW,UAAU,2BAA2B,CAAC;AAAA;AAAA;AAGjE;AAEO,aAAM,+BAA+B,YAAY;AAAA,EAC7C,UAAU,KAAK,aAAa,EAAC,MAAM,OAAM,CAAC;AAAA,EAEnD,YAAY,SAAoC;AAC9C,UAAM;AACN,SAAK,QAAQ,qBAAqB,CAAC,0BAA0B;AAC7D,SAAK,QAAQ,OAAO;AAAA,EACtB;AAAA,EAEA,QAAQ,SAA0C;AAChD,UAAM,OAAO,4CAA4C,QAAQ,aAAa,OAAO,CAAC;AACtF;AAAA,MACI;AAAA;AAAA,UAEE,aAAa,UAAU,sBAAsB,EAAC,KAAI,CAAC,CAAC;AAAA,UACpD,eAAe,OAAO,CAAC;AAAA;AAAA,MAEzB,KAAK;AAAA,MAAS;AAAA,QACZ,MAAM;AAAA,MACR;AAAA,IAAC;AAAA,EACP;AACF;AAEO,aAAM,6BAA6B,YAAY;AAAA,EAC3C,UAAU,KAAK,aAAa,EAAC,MAAM,OAAM,CAAC;AAAA,EAC1C;AAAA,EACA;AAAA,EACA;AAAA,EAET,YAAY;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAIG;AACD,UAAM;AACN,SAAK,QAAQ,qBAAqB,CAAC,0BAA0B;AAC7D,SAAK,eAAe;AACpB,SAAK,QAAQ;AACb,SAAK,UAAU;AACf,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,UAAgB;AACd,UAAM,eAAe,KAAK,SAAS,aAAa,aAAa;AAC7D,UAAM,mBAAmB,KAAK,UAAU;AAAA;AAAA;AAAA;AAAA,6DAIiB,KAAK,QAAQ,aAAa,OAAO,CAAC;AAAA,+DAChC,KAAK,QAAQ,aAAa,SAAS,CAAC;AAAA,cACrF,eAAe,6DAA6D,YAAY,WAAW,EAAE;AAAA;AAAA,YAEvG,eAAe,KAAK,OAAO,CAAC;AAAA,kBAEI;AAExC,UAAM,YAAY,KAAK,SAAS,WAAW,UAAU,eAAe,EAAC,KAAK,KAAK,aAAY,CAAC;AAC5F;AAAA,MACI;AAAA,iBACS,SAAS;AAAA;AAAA,eAEX,gBAAgB;AAAA;AAAA,MAEvB,KAAK;AAAA,MAAS;AAAA,QACZ,MAAM;AAAA,MACR;AAAA,IAAC;AAAA,EACP;AACF;AAEA,eAAe,OAAO,oCAAoC,oBAAoB;AAC9E,eAAe,OAAO,sCAAsC,sBAAsB;",
  "names": []
}
