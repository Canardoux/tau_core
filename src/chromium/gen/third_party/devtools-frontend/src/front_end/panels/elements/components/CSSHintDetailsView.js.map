{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/elements/components/CSSHintDetailsView.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/legacy/legacy.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport cssHintDetailsViewStyles from './cssHintDetailsView.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Text for button that redirects to CSS property documentation.\n   */\n    learnMore: 'Learn More',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/components/CSSHintDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html, Directives} = LitHtml;\n\ninterface Hint {\n  getMessage(): string;\n  getPossibleFixMessage(): string|null;\n  getLearnMoreLink(): string|undefined;\n}\n\nexport class CSSHintDetailsView extends HTMLElement {\n    readonly #shadow = this.attachShadow({mode: 'open'});\n    readonly #authoringHint: Hint;\n\n    constructor(authoringHint: Hint) {\n        super();\n        this.#authoringHint = authoringHint;\n        this.#shadow.adoptedStyleSheets = [cssHintDetailsViewStyles];\n        this.#render();\n    }\n\n    #render(): void {\n      const link = this.#authoringHint.getLearnMoreLink();\n      // clang-format off\n      render(html`\n        <div class=\"hint-popup-wrapper\">\n          <div class=\"hint-popup-reason\">\n            ${Directives.unsafeHTML(this.#authoringHint.getMessage())}\n          </div>\n          ${this.#authoringHint.getPossibleFixMessage() ? html`\n              <div class=\"hint-popup-possible-fix\">\n                  ${Directives.unsafeHTML(this.#authoringHint.getPossibleFixMessage())}\n                  ${link ? html`\n                      <x-link id=\"learn-more\" href=${link} class=\"clickable underlined unbreakable-text\">\n                          ${i18nString(UIStrings.learnMore)}\n                      </x-link>\n                  `: ''}\n              </div>\n          ` : ''}\n        </div>\n      `, this.#shadow, {\n        host: this,\n      });\n      // clang-format on\n    }\n}\n\ncustomElements.define('devtools-css-hint-details-view', CSSHintDetailsView);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-css-hint-details-view': CSSHintDetailsView;\n  }\n}\n"],
  "mappings": ";AAIA,OAAO;AAEP,YAAY,UAAU;AACtB,YAAY,aAAa;AAEzB,OAAO,8BAA8B;AAErC,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA,EAId,WAAW;AACf;AACA,MAAM,OAAO,KAAK,KAAK,kBAAkB,oDAAoD,SAAS;AACtG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW,IAAI;AAEpE,MAAM,EAAC,QAAQ,MAAM,WAAU,IAAI;AAQ5B,aAAM,2BAA2B,YAAY;AAAA,EACvC,UAAU,KAAK,aAAa,EAAC,MAAM,OAAM,CAAC;AAAA,EAC1C;AAAA,EAET,YAAY,eAAqB;AAC7B,UAAM;AACN,SAAK,iBAAiB;AACtB,SAAK,QAAQ,qBAAqB,CAAC,wBAAwB;AAC3D,SAAK,QAAQ;AAAA,EACjB;AAAA,EAEA,UAAgB;AACd,UAAM,OAAO,KAAK,eAAe,iBAAiB;AAElD,WAAO;AAAA;AAAA;AAAA,cAGC,WAAW,WAAW,KAAK,eAAe,WAAW,CAAC,CAAC;AAAA;AAAA,YAEzD,KAAK,eAAe,sBAAsB,IAAI;AAAA;AAAA,oBAEtC,WAAW,WAAW,KAAK,eAAe,sBAAsB,CAAC,CAAC;AAAA,oBAClE,OAAO;AAAA,qDAC0B,IAAI;AAAA,4BAC7B,WAAW,UAAU,SAAS,CAAC;AAAA;AAAA,sBAEtC,EAAE;AAAA;AAAA,cAET,EAAE;AAAA;AAAA,SAEP,KAAK,SAAS;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,EAEH;AACJ;AAEA,eAAe,OAAO,kCAAkC,kBAAkB;",
  "names": []
}
