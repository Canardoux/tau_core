{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/event_listeners/EventListenersUtils.ts"],
  "sourcesContent": ["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\n\nexport async function frameworkEventListeners(object: SDK.RemoteObject.RemoteObject):\n    Promise<FrameworkEventListenersObject> {\n  const domDebuggerModel = object.runtimeModel().target().model(SDK.DOMDebuggerModel.DOMDebuggerModel);\n  if (!domDebuggerModel) {\n    return {eventListeners: [], internalHandlers: null} as FrameworkEventListenersObject;\n  }\n\n  const listenersResult = {internalHandlers: null, eventListeners: []} as FrameworkEventListenersObject;\n  return object.callFunction(frameworkEventListenersImpl, undefined)\n      .then(assertCallFunctionResult)\n      .then(getOwnProperties)\n      .then(createEventListeners)\n      .then(returnResult)\n      .catch(error => {\n        console.error(error);\n        return listenersResult;\n      });\n\n  function getOwnProperties(object: SDK.RemoteObject.RemoteObject): Promise<SDK.RemoteObject.GetPropertiesResult> {\n    return object.getOwnProperties(false /* generatePreview */);\n  }\n\n  async function createEventListeners(result: SDK.RemoteObject.GetPropertiesResult): Promise<void> {\n    if (!result.properties) {\n      throw new Error('Object properties is empty');\n    }\n    const promises = [];\n    for (const property of result.properties) {\n      if (property.name === 'eventListeners' && property.value) {\n        promises.push(convertToEventListeners(property.value).then(storeEventListeners));\n      }\n      if (property.name === 'internalHandlers' && property.value) {\n        promises.push(convertToInternalHandlers(property.value).then(storeInternalHandlers));\n      }\n      if (property.name === 'errorString' && property.value) {\n        printErrorString(property.value);\n      }\n    }\n    await Promise.all(promises);\n  }\n\n  function convertToEventListeners(pageEventListenersObject: SDK.RemoteObject.RemoteObject):\n      Promise<SDK.DOMDebuggerModel.EventListener[]> {\n    return SDK.RemoteObject.RemoteArray.objectAsArray(pageEventListenersObject)\n        .map(toEventListener)\n        .then(filterOutEmptyObjects);\n\n    function toEventListener(listenerObject: SDK.RemoteObject.RemoteObject):\n        Promise<SDK.DOMDebuggerModel.EventListener|null> {\n      let type: string;\n      let useCapture: boolean;\n      let passive: boolean;\n      let once: boolean;\n      let handler: SDK.RemoteObject.RemoteObject|null = null;\n      let originalHandler: SDK.RemoteObject.RemoteObject|null = null;\n      let location: (SDK.DebuggerModel.Location|null)|null = null;\n      let removeFunctionObject: SDK.RemoteObject.RemoteObject|null = null;\n\n      const promises = [];\n      promises.push(\n          listenerObject\n              .callFunctionJSON(\n                  truncatePageEventListener as (this: Object) => TruncatedEventListenerObjectInInspectedPage, undefined)\n              .then(storeTruncatedListener));\n\n      function truncatePageEventListener(this: EventListenerObjectInInspectedPage):\n          TruncatedEventListenerObjectInInspectedPage {\n        return {type: this.type, useCapture: this.useCapture, passive: this.passive, once: this.once};\n      }\n\n      function storeTruncatedListener(truncatedListener: TruncatedEventListenerObjectInInspectedPage): void {\n        if (truncatedListener.type !== undefined) {\n          type = truncatedListener.type;\n        }\n        if (truncatedListener.useCapture !== undefined) {\n          useCapture = truncatedListener.useCapture;\n        }\n        if (truncatedListener.passive !== undefined) {\n          passive = truncatedListener.passive;\n        }\n        if (truncatedListener.once !== undefined) {\n          once = truncatedListener.once;\n        }\n      }\n\n      promises.push(\n          listenerObject.callFunction(handlerFunction as (this: Object) => SDK.RemoteObject.RemoteObject | null)\n              .then(assertCallFunctionResult)\n              .then(storeOriginalHandler)\n              .then(toTargetFunction)\n              .then(storeFunctionWithDetails));\n\n      function handlerFunction(this: EventListenerObjectInInspectedPage): SDK.RemoteObject.RemoteObject|null {\n        return this.handler || null;\n      }\n\n      function storeOriginalHandler(functionObject: SDK.RemoteObject.RemoteObject): SDK.RemoteObject.RemoteObject {\n        originalHandler = functionObject;\n        return originalHandler;\n      }\n\n      function storeFunctionWithDetails(functionObject: SDK.RemoteObject.RemoteObject): Promise<void> {\n        handler = functionObject;\n        return functionObject.debuggerModel().functionDetailsPromise(functionObject).then(storeFunctionDetails);\n      }\n\n      function storeFunctionDetails(functionDetails: SDK.DebuggerModel.FunctionDetails|null): void {\n        location = functionDetails ? functionDetails.location : null;\n      }\n\n      promises.push(\n          listenerObject.callFunction(getRemoveFunction as (this: Object) => SDK.RemoteObject.RemoteObject | null)\n              .then(assertCallFunctionResult)\n              .then(storeRemoveFunction));\n\n      function getRemoveFunction(this: EventListenerObjectInInspectedPage): SDK.RemoteObject.RemoteObject|null {\n        return this.remove || null;\n      }\n\n      function storeRemoveFunction(functionObject: SDK.RemoteObject.RemoteObject): void {\n        if (functionObject.type !== 'function') {\n          return;\n        }\n        removeFunctionObject = functionObject;\n      }\n\n      return Promise.all(promises).then(createEventListener).catch(error => {\n        console.error(error);\n        return null;\n      });\n\n      function createEventListener(): SDK.DOMDebuggerModel.EventListener {\n        if (!location) {\n          throw new Error('Empty event listener\\'s location');\n        }\n        return new SDK.DOMDebuggerModel.EventListener(\n            domDebuggerModel as SDK.DOMDebuggerModel.DOMDebuggerModel, object, type, useCapture, passive, once, handler,\n            originalHandler, location, removeFunctionObject, SDK.DOMDebuggerModel.EventListener.Origin.FRAMEWORK_USER);\n      }\n    }\n  }\n\n  function convertToInternalHandlers(pageInternalHandlersObject: SDK.RemoteObject.RemoteObject):\n      Promise<SDK.RemoteObject.RemoteArray> {\n    return SDK.RemoteObject.RemoteArray.objectAsArray(pageInternalHandlersObject)\n        .map(toTargetFunction)\n        .then(SDK.RemoteObject.RemoteArray.createFromRemoteObjects.bind(null));\n  }\n\n  function toTargetFunction(functionObject: SDK.RemoteObject.RemoteObject): Promise<SDK.RemoteObject.RemoteObject> {\n    return SDK.RemoteObject.RemoteFunction.objectAsFunction(functionObject).targetFunction();\n  }\n\n  function storeEventListeners(eventListeners: SDK.DOMDebuggerModel.EventListener[]): void {\n    listenersResult.eventListeners = eventListeners;\n  }\n\n  function storeInternalHandlers(internalHandlers: SDK.RemoteObject.RemoteArray): void {\n    listenersResult.internalHandlers = internalHandlers;\n  }\n\n  function printErrorString(errorString: SDK.RemoteObject.RemoteObject): void {\n    Common.Console.Console.instance().error(String(errorString.value));\n  }\n\n  function returnResult(): FrameworkEventListenersObject {\n    return listenersResult;\n  }\n\n  function assertCallFunctionResult(result: SDK.RemoteObject.CallFunctionResult): SDK.RemoteObject.RemoteObject {\n    if (result.wasThrown || !result.object) {\n      throw new Error('Exception in callFunction or empty result');\n    }\n    return result.object;\n  }\n\n  function filterOutEmptyObjects<T>(objects: (T|null)[]): T[] {\n    return objects.filter(filterOutEmpty) as T[];\n\n    function filterOutEmpty(object: T|null): boolean {\n      return Boolean(object);\n    }\n  }\n\n  /*\n    frameworkEventListeners fetcher functions should produce following output:\n        {\n          // framework event listeners\n          \"eventListeners\": [\n            {\n              \"handler\": function(),\n              \"useCapture\": true,\n              \"passive\": false,\n              \"once\": false,\n              \"type\": \"change\",\n              \"remove\": function(type, handler, useCapture, passive)\n            },\n            ...\n          ],\n          // internal framework event handlers\n          \"internalHandlers\": [\n            function(),\n            function(),\n            ...\n          ]\n        }\n    */\n  function frameworkEventListenersImpl(this: Object): {eventListeners: Array<EventListenerObjectInInspectedPage>} {\n    const errorLines = [];\n    let eventListeners: EventListenerObjectInInspectedPage[] = [];\n    let internalHandlers: (() => void)[] = [];\n    let fetchers = [jQueryFetcher];\n    try {\n      // @ts-ignore Here because of layout tests.\n      if (self.devtoolsFrameworkEventListeners && isArrayLike(self.devtoolsFrameworkEventListeners)) {\n        // @ts-ignore Here because of layout tests.\n        fetchers = fetchers.concat(self.devtoolsFrameworkEventListeners);\n      }\n    } catch (e) {\n      errorLines.push('devtoolsFrameworkEventListeners call produced error: ' + toString(e));\n    }\n\n    for (let i = 0; i < fetchers.length; ++i) {\n      try {\n        const fetcherResult = fetchers[i](this);\n        if (fetcherResult.eventListeners && isArrayLike(fetcherResult.eventListeners)) {\n          const fetcherResultEventListeners = fetcherResult.eventListeners;\n          const nonEmptyEventListeners = fetcherResultEventListeners\n                                             .map(eventListener => {\n                                               return checkEventListener(eventListener);\n                                             })\n                                             .filter(nonEmptyObject);\n          eventListeners = eventListeners.concat(nonEmptyEventListeners as EventListenerObjectInInspectedPage[]);\n        }\n        if (fetcherResult.internalHandlers && isArrayLike(fetcherResult.internalHandlers)) {\n          const fetcherResultInternalHandlers = fetcherResult.internalHandlers as (() => void)[];\n          const nonEmptyInternalHandlers = fetcherResultInternalHandlers\n                                               .map(handler => {\n                                                 return checkInternalHandler(handler);\n                                               })\n                                               .filter(nonEmptyObject);\n          internalHandlers = internalHandlers.concat(nonEmptyInternalHandlers as (() => void)[]);\n        }\n      } catch (e) {\n        errorLines.push('fetcher call produced error: ' + toString(e));\n      }\n    }\n    const result: {\n      eventListeners: EventListenerObjectInInspectedPage[],\n      internalHandlers?: (() => void)[],\n      errorString?: string,\n    } = {\n      eventListeners,\n      internalHandlers: internalHandlers.length ? internalHandlers : undefined,\n      errorString: undefined,\n    };\n\n    // The logic further up seems to expect that if the internalHandlers is set,\n    // that it should have a non-empty Array, but TS / Closure also expect the\n    // property to exist, so we always add it above, but then remove it again\n    // here if there's no value set.\n    if (!result.internalHandlers) {\n      delete result.internalHandlers;\n    }\n\n    if (errorLines.length) {\n      let errorString: string = 'Framework Event Listeners API Errors:\\n\\t' + errorLines.join('\\n\\t');\n      errorString = errorString.substr(0, errorString.length - 1);\n      result.errorString = errorString;\n    }\n\n    // Remove the errorString if it's not set.\n    if (result.errorString === '' || result.errorString === undefined) {\n      delete result.errorString;\n    }\n\n    return result;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function isArrayLike(obj: any): boolean {\n      if (!obj || typeof obj !== 'object') {\n        return false;\n      }\n      try {\n        if (typeof obj.splice === 'function') {\n          const len = obj.length;\n          return typeof len === 'number' && (len >>> 0 === len && (len > 0 || 1 / len > 0));\n        }\n      } catch (e) {\n      }\n      return false;\n    }\n\n    function checkEventListener(eventListener: PossibleEventListenerObjectInInspectedPage|\n                                null): EventListenerObjectInInspectedPage|null {\n      try {\n        let errorString = '';\n        if (!eventListener) {\n          errorString += 'empty event listener, ';\n        } else {\n          const type = eventListener.type;\n          if (!type || (typeof type !== 'string')) {\n            errorString += 'event listener\\'s type isn\\'t string or empty, ';\n          }\n          const useCapture = eventListener.useCapture;\n          if (typeof useCapture !== 'boolean') {\n            errorString += 'event listener\\'s useCapture isn\\'t boolean or undefined, ';\n          }\n          const passive = eventListener.passive;\n          if (typeof passive !== 'boolean') {\n            errorString += 'event listener\\'s passive isn\\'t boolean or undefined, ';\n          }\n          const once = eventListener.once;\n          if (typeof once !== 'boolean') {\n            errorString += 'event listener\\'s once isn\\'t boolean or undefined, ';\n          }\n          const handler = eventListener.handler;\n          if (!handler || (typeof handler !== 'function')) {\n            errorString += 'event listener\\'s handler isn\\'t a function or empty, ';\n          }\n          const remove = eventListener.remove;\n          if (remove && (typeof remove !== 'function')) {\n            errorString += 'event listener\\'s remove isn\\'t a function, ';\n          }\n          if (!errorString) {\n            return {\n              type,\n              useCapture,\n              passive,\n              once,\n              handler,\n              remove,\n            } as EventListenerObjectInInspectedPage;\n          }\n        }\n        errorLines.push(errorString.substr(0, errorString.length - 2));\n        return null;\n      } catch (error) {\n        errorLines.push(toString(error));\n        return null;\n      }\n    }\n\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function checkInternalHandler(handler: any): (() => void)|null {\n      if (handler && (typeof handler === 'function')) {\n        return handler;\n      }\n      errorLines.push('internal handler isn\\'t a function or empty');\n      return null;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function toString(obj: any): string {\n      try {\n        return String(obj);\n      } catch (e) {\n        return '<error>';\n      }\n    }\n\n    function nonEmptyObject<T>(obj: T|null): boolean {\n      return Boolean(obj);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function jQueryFetcher(node: any): {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      eventListeners: {handler: any, useCapture: boolean, passive: boolean, once: boolean, type: string}[],\n      internalHandlers?: (() => void)[],\n    } {\n      if (!node || !(node instanceof Node)) {\n        return {eventListeners: []};\n      }\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const jQuery = (window as any)['jQuery'];\n      if (!jQuery || !jQuery.fn) {\n        return {eventListeners: []};\n      }\n      const jQueryFunction = jQuery;\n      const data = jQuery._data || jQuery.data;\n\n      const eventListeners = [];\n      const internalHandlers = [];\n\n      if (typeof data === 'function') {\n        const events = data(node, 'events');\n        for (const type in events) {\n          for (const key in events[type]) {\n            const frameworkListener = events[type][key];\n            if (typeof frameworkListener === 'object' || typeof frameworkListener === 'function') {\n              const listener = {\n                handler: frameworkListener.handler || frameworkListener,\n                useCapture: true,\n                passive: false,\n                once: false,\n                type,\n                remove: jQueryRemove.bind(node, frameworkListener.selector),\n              };\n              eventListeners.push(listener);\n            }\n          }\n        }\n        const nodeData = data(node);\n        if (nodeData && typeof nodeData.handle === 'function') {\n          internalHandlers.push(nodeData.handle);\n        }\n      }\n      const entry = jQueryFunction(node)[0];\n      if (entry) {\n        const entryEvents = entry['$events'];\n        for (const type in entryEvents) {\n          const events = entryEvents[type];\n          for (const key in events) {\n            if (typeof events[key] === 'function') {\n              const listener = {handler: events[key], useCapture: true, passive: false, once: false, type};\n              // We don't support removing for old version < 1.4 of jQuery because it doesn't provide API for getting \"selector\".\n              eventListeners.push(listener);\n            }\n          }\n        }\n        if (entry && entry['$handle']) {\n          internalHandlers.push(entry['$handle']);\n        }\n      }\n      return {eventListeners, internalHandlers};\n    }\n\n    function jQueryRemove(this: Object|null, selector: string, type: string, handler: () => void): void {\n      if (!this || !(this instanceof Node)) {\n        return;\n      }\n      const node = this as Node;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const jQuery = (window as any)['jQuery'];\n      if (!jQuery || !jQuery.fn) {\n        return;\n      }\n      const jQueryFunction = jQuery as (arg0: Node) => {\n        off: Function,\n      };\n      jQueryFunction(node).off(type, selector, handler);\n    }\n  }\n}\nexport interface FrameworkEventListenersObject {\n  eventListeners: SDK.DOMDebuggerModel.EventListener[];\n  internalHandlers: SDK.RemoteObject.RemoteArray|null;\n}\nexport interface PossibleEventListenerObjectInInspectedPage {\n  type?: string;\n  useCapture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n  handler?: SDK.RemoteObject.RemoteObject|null;\n  remove?: SDK.RemoteObject.RemoteObject|null;\n}\nexport interface EventListenerObjectInInspectedPage {\n  type: string;\n  useCapture: boolean;\n  passive: boolean;\n  once: boolean;\n  handler: SDK.RemoteObject.RemoteObject|null;\n  remove: SDK.RemoteObject.RemoteObject|null;\n}\nexport interface TruncatedEventListenerObjectInInspectedPage {\n  type?: string;\n  useCapture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n"],
  "mappings": "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",
  "names": ["object", "eventListeners", "internalHandlers"]
}
