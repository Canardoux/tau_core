{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/issues/components/ElementsPanelLink.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport elementsPanelLinkStyles from './elementsPanelLink.css.js';\n\nconst {html} = LitHtml;\n\nexport interface ElementsPanelLinkData {\n  onElementRevealIconClick: (event?: Event) => void;\n  onElementRevealIconMouseEnter: (event?: Event) => void;\n  onElementRevealIconMouseLeave: (event?: Event) => void;\n}\nexport class ElementsPanelLink extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #onElementRevealIconClick: ((event?: Event) => void) = () => {};\n  #onElementRevealIconMouseEnter: ((event?: Event) => void) = () => {};\n  #onElementRevealIconMouseLeave: ((event?: Event) => void) = () => {};\n\n  set data(data: ElementsPanelLinkData) {\n    this.#onElementRevealIconClick = data.onElementRevealIconClick;\n    this.#onElementRevealIconMouseEnter = data.onElementRevealIconMouseEnter;\n    this.#onElementRevealIconMouseLeave = data.onElementRevealIconMouseLeave;\n    this.#update();\n  }\n\n  #update(): void {\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [elementsPanelLinkStyles];\n  }\n\n  #render(): void {\n    // clang-format off\n      LitHtml.render(html`\n      <span\n        class=\"element-reveal-icon\"\n        jslog=${VisualLogging.link('elements-panel').track({click: true})}\n        @click=${this.#onElementRevealIconClick}\n        @mouseenter=${this.#onElementRevealIconMouseEnter}\n        @mouseleave=${this.#onElementRevealIconMouseLeave}></span>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-elements-panel-link', ElementsPanelLink);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-elements-panel-link': ElementsPanelLink;\n  }\n}\n"],
  "mappings": ";AAIA,YAAY,aAAa;AACzB,YAAY,mBAAmB;AAE/B,OAAO,6BAA6B;AAEpC,MAAM,EAAC,KAAI,IAAI;AAOR,aAAM,0BAA0B,YAAY;AAAA,EACxC,UAAU,KAAK,aAAa,EAAC,MAAM,OAAM,CAAC;AAAA,EAEnD,4BAAuD,MAAM;AAAA,EAAC;AAAA,EAC9D,iCAA4D,MAAM;AAAA,EAAC;AAAA,EACnE,iCAA4D,MAAM;AAAA,EAAC;AAAA,EAEnE,IAAI,KAAK,MAA6B;AACpC,SAAK,4BAA4B,KAAK;AACtC,SAAK,iCAAiC,KAAK;AAC3C,SAAK,iCAAiC,KAAK;AAC3C,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,UAAgB;AACd,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,oBAA0B;AACxB,SAAK,QAAQ,qBAAqB,CAAC,uBAAuB;AAAA,EAC5D;AAAA,EAEA,UAAgB;AAEZ,YAAQ,OAAO;AAAA;AAAA;AAAA,gBAGL,cAAc,KAAK,gBAAgB,EAAE,MAAM,EAAC,OAAO,KAAI,CAAC,CAAC;AAAA,iBACxD,KAAK,yBAAyB;AAAA,sBACzB,KAAK,8BAA8B;AAAA,sBACnC,KAAK,8BAA8B;AAAA,SAChD,KAAK,SAAS,EAAC,MAAM,KAAI,CAAC;AAAA,EAEjC;AACF;AAEA,eAAe,OAAO,gCAAgC,iBAAiB;",
  "names": []
}
