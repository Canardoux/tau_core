{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/emulation/MediaQueryInspector.ts"],
  "sourcesContent": ["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport type * as Workspace from '../../models/workspace/workspace.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport mediaQueryInspectorStyles from './mediaQueryInspector.css.legacy.js';\n\nconst UIStrings = {\n  /**\n   * @description A context menu item/command in the Media Query Inspector of the Device Toolbar.\n   * Takes the user to the source code where this media query actually came from.\n   */\n  revealInSourceCode: 'Reveal in source code',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/emulation/MediaQueryInspector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class MediaQueryInspector extends UI.Widget.Widget implements\n    SDK.TargetManager.SDKModelObserver<SDK.CSSModel.CSSModel> {\n  private readonly mediaThrottler: Common.Throttler.Throttler;\n  private readonly getWidthCallback: () => number;\n  private readonly setWidthCallback: (arg0: number) => void;\n  private scale: number;\n  elementsToMediaQueryModel: WeakMap<Element, MediaQueryUIModel>;\n  elementsToCSSLocations: WeakMap<Element, SDK.CSSModel.CSSLocation[]>;\n  private cssModel?: SDK.CSSModel.CSSModel;\n  private cachedQueryModels?: MediaQueryUIModel[];\n\n  constructor(\n      getWidthCallback: () => number, setWidthCallback: (arg0: number) => void,\n      mediaThrottler: Common.Throttler.Throttler) {\n    super(true);\n    this.registerRequiredCSS(mediaQueryInspectorStyles);\n    this.contentElement.classList.add('media-inspector-view');\n    this.contentElement.setAttribute('jslog', `${VisualLogging.mediaInspectorView().track({click: true})}`);\n    this.contentElement.addEventListener('click', this.onMediaQueryClicked.bind(this), false);\n    this.contentElement.addEventListener('contextmenu', this.onContextMenu.bind(this), false);\n    this.mediaThrottler = mediaThrottler;\n\n    this.getWidthCallback = getWidthCallback;\n    this.setWidthCallback = setWidthCallback;\n    this.scale = 1;\n\n    this.elementsToMediaQueryModel = new WeakMap();\n    this.elementsToCSSLocations = new WeakMap();\n\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.CSSModel.CSSModel, this);\n    UI.ZoomManager.ZoomManager.instance().addEventListener(\n        UI.ZoomManager.Events.ZOOM_CHANGED, this.renderMediaQueries.bind(this), this);\n  }\n\n  modelAdded(cssModel: SDK.CSSModel.CSSModel): void {\n    // FIXME: adapt this to multiple targets.\n    if (cssModel.target() !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n      return;\n    }\n    this.cssModel = cssModel;\n    this.cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetAdded, this.scheduleMediaQueriesUpdate, this);\n    this.cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetRemoved, this.scheduleMediaQueriesUpdate, this);\n    this.cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetChanged, this.scheduleMediaQueriesUpdate, this);\n    this.cssModel.addEventListener(SDK.CSSModel.Events.MediaQueryResultChanged, this.scheduleMediaQueriesUpdate, this);\n  }\n\n  modelRemoved(cssModel: SDK.CSSModel.CSSModel): void {\n    if (cssModel !== this.cssModel) {\n      return;\n    }\n    this.cssModel.removeEventListener(SDK.CSSModel.Events.StyleSheetAdded, this.scheduleMediaQueriesUpdate, this);\n    this.cssModel.removeEventListener(SDK.CSSModel.Events.StyleSheetRemoved, this.scheduleMediaQueriesUpdate, this);\n    this.cssModel.removeEventListener(SDK.CSSModel.Events.StyleSheetChanged, this.scheduleMediaQueriesUpdate, this);\n    this.cssModel.removeEventListener(\n        SDK.CSSModel.Events.MediaQueryResultChanged, this.scheduleMediaQueriesUpdate, this);\n    delete this.cssModel;\n  }\n\n  setAxisTransform(scale: number): void {\n    if (Math.abs(this.scale - scale) < 1e-8) {\n      return;\n    }\n    this.scale = scale;\n    this.renderMediaQueries();\n  }\n\n  private onMediaQueryClicked(event: Event): void {\n    const mediaQueryMarker = (event.target as Node).enclosingNodeOrSelfWithClass('media-inspector-bar');\n    if (!mediaQueryMarker) {\n      return;\n    }\n\n    const model = this.elementsToMediaQueryModel.get(mediaQueryMarker);\n    if (!model) {\n      return;\n    }\n    const modelMaxWidth = model.maxWidthExpression();\n    const modelMinWidth = model.minWidthExpression();\n\n    if (model.section() === Section.MAX) {\n      this.setWidthCallback(modelMaxWidth ? modelMaxWidth.computedLength() || 0 : 0);\n      return;\n    }\n    if (model.section() === Section.MIN) {\n      this.setWidthCallback(modelMinWidth ? modelMinWidth.computedLength() || 0 : 0);\n      return;\n    }\n    const currentWidth = this.getWidthCallback();\n    if (modelMinWidth && currentWidth !== modelMinWidth.computedLength()) {\n      this.setWidthCallback(modelMinWidth.computedLength() || 0);\n    } else {\n      this.setWidthCallback(modelMaxWidth ? modelMaxWidth.computedLength() || 0 : 0);\n    }\n  }\n\n  private onContextMenu(event: Event): void {\n    if (!this.cssModel || !this.cssModel.isEnabled()) {\n      return;\n    }\n\n    const mediaQueryMarker = (event.target as Node).enclosingNodeOrSelfWithClass('media-inspector-bar');\n    if (!mediaQueryMarker) {\n      return;\n    }\n\n    const locations = this.elementsToCSSLocations.get(mediaQueryMarker) || [];\n    const uiLocations = new Map<string, Workspace.UISourceCode.UILocation>();\n    for (let i = 0; i < locations.length; ++i) {\n      const uiLocation =\n          Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().rawLocationToUILocation(locations[i]);\n      if (!uiLocation) {\n        continue;\n      }\n      const descriptor = typeof uiLocation.columnNumber === 'number' ?\n          Platform.StringUtilities.sprintf(\n              '%s:%d:%d', uiLocation.uiSourceCode.url(), uiLocation.lineNumber + 1, uiLocation.columnNumber + 1) :\n          Platform.StringUtilities.sprintf('%s:%d', uiLocation.uiSourceCode.url(), uiLocation.lineNumber + 1);\n      uiLocations.set(descriptor, uiLocation);\n    }\n\n    const contextMenuItems = [...uiLocations.keys()].sort();\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const subMenuItem = contextMenu.defaultSection().appendSubMenuItem(\n        i18nString(UIStrings.revealInSourceCode), undefined, 'reveal-in-source-list');\n    for (let i = 0; i < contextMenuItems.length; ++i) {\n      const title = contextMenuItems[i];\n      subMenuItem.defaultSection().appendItem(\n          title, this.revealSourceLocation.bind(this, (uiLocations.get(title) as Workspace.UISourceCode.UILocation)),\n          {jslogContext: 'reveal-in-source'});\n    }\n    void contextMenu.show();\n  }\n\n  private revealSourceLocation(location: Workspace.UISourceCode.UILocation): void {\n    void Common.Revealer.reveal(location);\n  }\n\n  private scheduleMediaQueriesUpdate(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n    void this.mediaThrottler.schedule(this.refetchMediaQueries.bind(this));\n  }\n\n  private refetchMediaQueries(): Promise<void> {\n    if (!this.isShowing() || !this.cssModel) {\n      return Promise.resolve();\n    }\n\n    return this.cssModel.getMediaQueries().then(this.rebuildMediaQueries.bind(this));\n  }\n\n  private squashAdjacentEqual(models: MediaQueryUIModel[]): MediaQueryUIModel[] {\n    const filtered = [];\n    for (let i = 0; i < models.length; ++i) {\n      const last = filtered[filtered.length - 1];\n      if (!last || !last.equals(models[i])) {\n        filtered.push(models[i]);\n      }\n    }\n    return filtered;\n  }\n\n  private rebuildMediaQueries(cssMedias: SDK.CSSMedia.CSSMedia[]): void {\n    let queryModels: MediaQueryUIModel[] = [];\n    for (let i = 0; i < cssMedias.length; ++i) {\n      const cssMedia = cssMedias[i];\n      if (!cssMedia.mediaList) {\n        continue;\n      }\n      for (let j = 0; j < cssMedia.mediaList.length; ++j) {\n        const mediaQuery = cssMedia.mediaList[j];\n        const queryModel = MediaQueryUIModel.createFromMediaQuery(cssMedia, mediaQuery);\n        if (queryModel) {\n          queryModels.push(queryModel);\n        }\n      }\n    }\n    queryModels.sort(compareModels);\n    queryModels = this.squashAdjacentEqual(queryModels);\n\n    let allEqual: (boolean|undefined) = this.cachedQueryModels && this.cachedQueryModels.length === queryModels.length;\n    for (let i = 0; allEqual && i < queryModels.length; ++i) {\n      allEqual = allEqual && this.cachedQueryModels && this.cachedQueryModels[i].equals(queryModels[i]);\n    }\n    if (allEqual) {\n      return;\n    }\n    this.cachedQueryModels = queryModels;\n    this.renderMediaQueries();\n\n    function compareModels(model1: MediaQueryUIModel, model2: MediaQueryUIModel): number {\n      return model1.compareTo(model2);\n    }\n  }\n\n  private renderMediaQueries(): void {\n    if (!this.cachedQueryModels || !this.isShowing()) {\n      return;\n    }\n\n    const markers = [];\n    let lastMarker: {\n      active: boolean,\n      model: MediaQueryUIModel,\n      locations: SDK.CSSModel.CSSLocation[],\n    }|null = null;\n    for (const model of this.cachedQueryModels) {\n      if (lastMarker && lastMarker.model.dimensionsEqual(model)) {\n        lastMarker.active = lastMarker.active || model.active();\n      } else {\n        lastMarker = {\n          active: model.active(),\n          model,\n          locations: ([] as SDK.CSSModel.CSSLocation[]),\n        };\n        markers.push(lastMarker);\n      }\n      const rawLocation = model.rawLocation();\n      if (rawLocation) {\n        lastMarker.locations.push(rawLocation);\n      }\n    }\n\n    this.contentElement.removeChildren();\n\n    let container: HTMLElement|null = null;\n    for (let i = 0; i < markers.length; ++i) {\n      if (!i || markers[i].model.section() !== markers[i - 1].model.section()) {\n        container = this.contentElement.createChild('div', 'media-inspector-marker-container');\n      }\n      const marker = markers[i];\n      const bar = this.createElementFromMediaQueryModel(marker.model);\n      this.elementsToMediaQueryModel.set(bar, marker.model);\n      this.elementsToCSSLocations.set(bar, marker.locations);\n      bar.classList.toggle('media-inspector-marker-inactive', !marker.active);\n      if (!container) {\n        throw new Error('Could not find container to render media queries into.');\n      }\n      container.appendChild(bar);\n    }\n  }\n\n  private zoomFactor(): number {\n    return UI.ZoomManager.ZoomManager.instance().zoomFactor() / this.scale;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.scheduleMediaQueriesUpdate();\n  }\n\n  private createElementFromMediaQueryModel(model: MediaQueryUIModel): Element {\n    const zoomFactor = this.zoomFactor();\n    const minWidthExpression = model.minWidthExpression();\n    const maxWidthExpression = model.maxWidthExpression();\n    const minWidthValue = minWidthExpression ? (minWidthExpression.computedLength() || 0) / zoomFactor : 0;\n    const maxWidthValue = maxWidthExpression ? (maxWidthExpression.computedLength() || 0) / zoomFactor : 0;\n    const result = document.createElement('div');\n    result.classList.add('media-inspector-bar');\n\n    if (model.section() === Section.MAX) {\n      result.createChild('div', 'media-inspector-marker-spacer');\n      const markerElement = result.createChild('div', 'media-inspector-marker media-inspector-marker-max-width');\n      markerElement.style.width = maxWidthValue + 'px';\n      UI.Tooltip.Tooltip.install(markerElement, model.mediaText());\n      appendLabel(markerElement, model.maxWidthExpression(), false, false);\n      appendLabel(markerElement, model.maxWidthExpression(), true, true);\n      result.createChild('div', 'media-inspector-marker-spacer');\n    }\n\n    if (model.section() === Section.MIN_MAX) {\n      result.createChild('div', 'media-inspector-marker-spacer');\n      const leftElement = result.createChild('div', 'media-inspector-marker media-inspector-marker-min-max-width');\n      leftElement.style.width = (maxWidthValue - minWidthValue) * 0.5 + 'px';\n      UI.Tooltip.Tooltip.install(leftElement, model.mediaText());\n      appendLabel(leftElement, model.maxWidthExpression(), true, false);\n      appendLabel(leftElement, model.minWidthExpression(), false, true);\n      result.createChild('div', 'media-inspector-marker-spacer').style.flex = '0 0 ' + minWidthValue + 'px';\n      const rightElement = result.createChild('div', 'media-inspector-marker media-inspector-marker-min-max-width');\n      rightElement.style.width = (maxWidthValue - minWidthValue) * 0.5 + 'px';\n      UI.Tooltip.Tooltip.install(rightElement, model.mediaText());\n      appendLabel(rightElement, model.minWidthExpression(), true, false);\n      appendLabel(rightElement, model.maxWidthExpression(), false, true);\n      result.createChild('div', 'media-inspector-marker-spacer');\n    }\n\n    if (model.section() === Section.MIN) {\n      const leftElement = result.createChild(\n          'div', 'media-inspector-marker media-inspector-marker-min-width media-inspector-marker-min-width-left');\n      UI.Tooltip.Tooltip.install(leftElement, model.mediaText());\n      appendLabel(leftElement, model.minWidthExpression(), false, false);\n      result.createChild('div', 'media-inspector-marker-spacer').style.flex = '0 0 ' + minWidthValue + 'px';\n      const rightElement = result.createChild(\n          'div', 'media-inspector-marker media-inspector-marker-min-width media-inspector-marker-min-width-right');\n      UI.Tooltip.Tooltip.install(rightElement, model.mediaText());\n      appendLabel(rightElement, model.minWidthExpression(), true, true);\n    }\n\n    function appendLabel(\n        marker: Element, expression: SDK.CSSMedia.CSSMediaQueryExpression|null, atLeft: boolean,\n        leftAlign: boolean): void {\n      if (!expression) {\n        return;\n      }\n      marker\n          .createChild(\n              'div',\n              'media-inspector-marker-label-container ' +\n                  (atLeft ? 'media-inspector-marker-label-container-left' :\n                            'media-inspector-marker-label-container-right'))\n          .createChild(\n              'span',\n              'media-inspector-marker-label ' +\n                  (leftAlign ? 'media-inspector-label-left' : 'media-inspector-label-right'))\n          .textContent = expression.value() + expression.unit();\n    }\n\n    return result;\n  }\n}\n\nexport const enum Section {\n  MAX = 0,\n  MIN_MAX = 1,\n  MIN = 2,\n}\n\nexport class MediaQueryUIModel {\n  private cssMedia: SDK.CSSMedia.CSSMedia;\n  private readonly minWidthExpressionInternal: SDK.CSSMedia.CSSMediaQueryExpression|null;\n  private readonly maxWidthExpressionInternal: SDK.CSSMedia.CSSMediaQueryExpression|null;\n  private readonly activeInternal: boolean;\n  private readonly sectionInternal: Section;\n  private rawLocationInternal?: SDK.CSSModel.CSSLocation|null;\n  constructor(\n      cssMedia: SDK.CSSMedia.CSSMedia, minWidthExpression: SDK.CSSMedia.CSSMediaQueryExpression|null,\n      maxWidthExpression: SDK.CSSMedia.CSSMediaQueryExpression|null, active: boolean) {\n    this.cssMedia = cssMedia;\n    this.minWidthExpressionInternal = minWidthExpression;\n    this.maxWidthExpressionInternal = maxWidthExpression;\n    this.activeInternal = active;\n    if (maxWidthExpression && !minWidthExpression) {\n      this.sectionInternal = Section.MAX;\n    } else if (minWidthExpression && maxWidthExpression) {\n      this.sectionInternal = Section.MIN_MAX;\n    } else {\n      this.sectionInternal = Section.MIN;\n    }\n  }\n\n  static createFromMediaQuery(cssMedia: SDK.CSSMedia.CSSMedia, mediaQuery: SDK.CSSMedia.CSSMediaQuery):\n      MediaQueryUIModel|null {\n    let maxWidthExpression: SDK.CSSMedia.CSSMediaQueryExpression|null = null;\n    let maxWidthPixels: number = Number.MAX_VALUE;\n    let minWidthExpression: SDK.CSSMedia.CSSMediaQueryExpression|null = null;\n    let minWidthPixels: number = Number.MIN_VALUE;\n    const expressions = mediaQuery.expressions();\n    if (!expressions) {\n      return null;\n    }\n\n    for (let i = 0; i < expressions.length; ++i) {\n      const expression = expressions[i];\n      const feature = expression.feature();\n      if (feature.indexOf('width') === -1) {\n        continue;\n      }\n      const pixels = expression.computedLength();\n      if (feature.startsWith('max-') && pixels && pixels < maxWidthPixels) {\n        maxWidthExpression = expression;\n        maxWidthPixels = pixels;\n      } else if (feature.startsWith('min-') && pixels && pixels > minWidthPixels) {\n        minWidthExpression = expression;\n        minWidthPixels = pixels;\n      }\n    }\n    if (minWidthPixels > maxWidthPixels || (!maxWidthExpression && !minWidthExpression)) {\n      return null;\n    }\n\n    return new MediaQueryUIModel(cssMedia, minWidthExpression, maxWidthExpression, mediaQuery.active());\n  }\n\n  equals(other: MediaQueryUIModel): boolean {\n    return this.compareTo(other) === 0;\n  }\n\n  dimensionsEqual(other: MediaQueryUIModel): boolean {\n    const thisMinWidthExpression = this.minWidthExpression();\n    const otherMinWidthExpression = other.minWidthExpression();\n    const thisMaxWidthExpression = this.maxWidthExpression();\n    const otherMaxWidthExpression = other.maxWidthExpression();\n\n    const sectionsEqual = this.section() === other.section();\n    // If there isn't an other min width expression, they aren't equal, so the optional chaining operator is safe to use here.\n    const minWidthEqual = !thisMinWidthExpression ||\n        thisMinWidthExpression.computedLength() === otherMinWidthExpression?.computedLength();\n    const maxWidthEqual = !thisMaxWidthExpression ||\n        thisMaxWidthExpression.computedLength() === otherMaxWidthExpression?.computedLength();\n\n    return sectionsEqual && minWidthEqual && maxWidthEqual;\n  }\n\n  compareTo(other: MediaQueryUIModel): number {\n    if (this.section() !== other.section()) {\n      return this.section() - other.section();\n    }\n    if (this.dimensionsEqual(other)) {\n      const myLocation = this.rawLocation();\n      const otherLocation = other.rawLocation();\n      if (!myLocation && !otherLocation) {\n        return Platform.StringUtilities.compare(this.mediaText(), other.mediaText());\n      }\n      if (myLocation && !otherLocation) {\n        return 1;\n      }\n      if (!myLocation && otherLocation) {\n        return -1;\n      }\n      if (this.active() !== other.active()) {\n        return this.active() ? -1 : 1;\n      }\n\n      if (!myLocation || !otherLocation) {\n        // This conditional never runs, because it's dealt with above, but\n        // TypeScript can't follow that by this point both myLocation and\n        // otherLocation must exist.\n        return 0;\n      }\n\n      return Platform.StringUtilities.compare(myLocation.url, otherLocation.url) ||\n          myLocation.lineNumber - otherLocation.lineNumber || myLocation.columnNumber - otherLocation.columnNumber;\n    }\n\n    const thisMaxWidthExpression = this.maxWidthExpression();\n    const otherMaxWidthExpression = other.maxWidthExpression();\n    const thisMaxLength = thisMaxWidthExpression ? thisMaxWidthExpression.computedLength() || 0 : 0;\n    const otherMaxLength = otherMaxWidthExpression ? otherMaxWidthExpression.computedLength() || 0 : 0;\n\n    const thisMinWidthExpression = this.minWidthExpression();\n    const otherMinWidthExpression = other.minWidthExpression();\n    const thisMinLength = thisMinWidthExpression ? thisMinWidthExpression.computedLength() || 0 : 0;\n    const otherMinLength = otherMinWidthExpression ? otherMinWidthExpression.computedLength() || 0 : 0;\n\n    if (this.section() === Section.MAX) {\n      return otherMaxLength - thisMaxLength;\n    }\n    if (this.section() === Section.MIN) {\n      return thisMinLength - otherMinLength;\n    }\n    return thisMinLength - otherMinLength || otherMaxLength - thisMaxLength;\n  }\n\n  section(): Section {\n    return this.sectionInternal;\n  }\n\n  mediaText(): string {\n    return this.cssMedia.text || '';\n  }\n\n  rawLocation(): SDK.CSSModel.CSSLocation|null {\n    if (!this.rawLocationInternal) {\n      this.rawLocationInternal = this.cssMedia.rawLocation();\n    }\n    return this.rawLocationInternal;\n  }\n\n  minWidthExpression(): SDK.CSSMedia.CSSMediaQueryExpression|null {\n    return this.minWidthExpressionInternal;\n  }\n\n  maxWidthExpression(): SDK.CSSMedia.CSSMediaQueryExpression|null {\n    return this.maxWidthExpressionInternal;\n  }\n\n  active(): boolean {\n    return this.activeInternal;\n  }\n}\n"],
  "mappings": "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",
  "names": ["Section"]
}
