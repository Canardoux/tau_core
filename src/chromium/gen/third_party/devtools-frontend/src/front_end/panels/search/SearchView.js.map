{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/search/SearchView.ts"],
  "sourcesContent": ["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {SearchResultsPane} from './SearchResultsPane.js';\nimport type {SearchResult, SearchScope} from './SearchScope.js';\nimport searchViewStyles from './searchView.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Placeholder text of a search bar\n   */\n  find: 'Find',\n  /**\n   *@description Tooltip text on a toggle to enable search by matching case of the input\n   */\n  enableCaseSensitive: 'Enable case sensitive search',\n  /**\n   *@description Tooltip text on a toggle to disable search by matching case of the input\n   */\n  disableCaseSensitive: 'Disable case sensitive search',\n  /**\n   *@description Tooltip text on a toggle to enable searching with regular expression\n   */\n  enableRegularExpression: 'Enable regular expressions',\n  /**\n   *@description Tooltip text on a toggle to disable searching with regular expression\n   */\n  disableRegularExpression: 'Disable regular expressions',\n  /**\n   *@description Text to refresh the page\n   */\n  refresh: 'Refresh',\n  /**\n   *@description Tooltip text to clear the search input field\n   */\n  clearInput: 'Clear',\n  /**\n   *@description Text to clear content\n   */\n  clear: 'Clear search',\n  /**\n   *@description Search message element text content in Search View of the Search tab\n   */\n  indexing: 'Indexing\u2026',\n  /**\n   *@description Text to indicate the searching is in progress\n   */\n  searching: 'Searching\u2026',\n  /**\n   *@description Text in Search View of the Search tab\n   */\n  indexingInterrupted: 'Indexing interrupted.',\n  /**\n   *@description Search results message element text content in Search View of the Search tab\n   */\n  foundMatchingLineInFile: 'Found 1 matching line in 1 file.',\n  /**\n   *@description Search results message element text content in Search View of the Search tab\n   *@example {2} PH1\n   */\n  foundDMatchingLinesInFile: 'Found {PH1} matching lines in 1 file.',\n  /**\n   *@description Search results message element text content in Search View of the Search tab\n   *@example {2} PH1\n   *@example {2} PH2\n   */\n  foundDMatchingLinesInDFiles: 'Found {PH1} matching lines in {PH2} files.',\n  /**\n   *@description Search results message element text content in Search View of the Search tab\n   */\n  noMatchesFound: 'No matches found.',\n  /**\n   *@description Text in Search View of the Search tab\n   */\n  searchFinished: 'Search finished.',\n  /**\n   *@description Text in Search View of the Search tab\n   */\n  searchInterrupted: 'Search interrupted.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/search/SearchView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nfunction createSearchToggleButton(iconName: string, jslogContext: string): Buttons.Button.Button {\n  const button = new Buttons.Button.Button();\n  button.data = {\n    variant: Buttons.Button.Variant.ICON_TOGGLE,\n    iconName,\n    toggledIconName: iconName,\n    toggleType: Buttons.Button.ToggleType.PRIMARY,\n    toggled: false,\n    jslogContext,\n  };\n  return button;\n}\nexport class SearchView extends UI.Widget.VBox {\n  private focusOnShow: boolean;\n  private isIndexing: boolean;\n  private searchId: number;\n  private searchMatchesCount: number;\n  private searchResultsCount: number;\n  private nonEmptySearchResultsCount: number;\n  private searchingView: UI.Widget.Widget|null;\n  private notFoundView: UI.Widget.Widget|null;\n  private searchConfig: Workspace.SearchConfig.SearchConfig|null;\n  private pendingSearchConfig: Workspace.SearchConfig.SearchConfig|null;\n  private searchResultsPane: SearchResultsPane|null;\n  private progressIndicator: UI.ProgressIndicator.ProgressIndicator|null;\n  private visiblePane: UI.Widget.Widget|null;\n  private readonly searchPanelElement: HTMLElement;\n  private readonly searchResultsElement: HTMLElement;\n  protected readonly search: UI.HistoryInput.HistoryInput;\n  protected readonly matchCaseButton: Buttons.Button.Button;\n  protected readonly regexButton: Buttons.Button.Button;\n  private searchMessageElement: HTMLElement;\n  private readonly searchProgressPlaceholderElement: HTMLElement;\n  private searchResultsMessageElement: HTMLElement;\n  private readonly advancedSearchConfig: Common.Settings.Setting<{\n    query: string,\n    ignoreCase: boolean,\n    isRegex: boolean,\n  }>;\n  private searchScope: SearchScope|null;\n\n  // We throttle adding search results, otherwise we trigger DOM layout for each\n  // result added.\n  #throttler: Common.Throttler.Throttler;\n  #pendingSearchResults: SearchResult[] = [];\n\n  constructor(settingKey: string, throttler: Common.Throttler.Throttler) {\n    super(true);\n    this.setMinimumSize(0, 40);\n\n    this.focusOnShow = false;\n    this.isIndexing = false;\n    this.searchId = 1;\n    this.searchMatchesCount = 0;\n    this.searchResultsCount = 0;\n    this.nonEmptySearchResultsCount = 0;\n    this.searchingView = null;\n    this.notFoundView = null;\n    this.searchConfig = null;\n    this.pendingSearchConfig = null;\n    this.searchResultsPane = null;\n    this.progressIndicator = null;\n    this.visiblePane = null;\n    this.#throttler = throttler;\n\n    this.contentElement.setAttribute('jslog', `${VisualLogging.panel('search').track({resize: true})}`);\n\n    this.contentElement.classList.add('search-view');\n    this.contentElement.addEventListener('keydown', event => {\n      this.onKeyDownOnPanel((event as KeyboardEvent));\n    });\n\n    this.searchPanelElement = this.contentElement.createChild('div', 'search-drawer-header');\n    this.searchResultsElement = this.contentElement.createChild('div');\n    this.searchResultsElement.className = 'search-results';\n\n    const searchContainer = document.createElement('div');\n    searchContainer.classList.add('search-container');\n    const searchElements = searchContainer.createChild('div', 'toolbar-item-search');\n\n    const searchIcon = IconButton.Icon.create('search');\n    searchElements.appendChild(searchIcon);\n\n    this.search = UI.HistoryInput.HistoryInput.create();\n    this.search.addEventListener('keydown', event => {\n      this.onKeyDown((event as KeyboardEvent));\n    });\n    this.search.setAttribute(\n        'jslog', `${VisualLogging.textField().track({change: true, keydown: 'ArrowUp|ArrowDown|Enter'})}`);\n    searchElements.appendChild(this.search);\n    this.search.placeholder = i18nString(UIStrings.find);\n    this.search.setAttribute('type', 'search');\n    this.search.setAttribute('results', '0');\n    this.search.setAttribute('size', '100');\n    this.search.classList.add('search-toolbar-input');\n    UI.ARIAUtils.setLabel(this.search, this.search.placeholder);\n\n    const clearInputFieldButton = new Buttons.Button.Button();\n    clearInputFieldButton.data = {\n      variant: Buttons.Button.Variant.ICON,\n      iconName: 'cross-circle-filled',\n      jslogContext: 'clear-input',\n      title: i18nString(UIStrings.clearInput),\n    };\n    clearInputFieldButton.classList.add('clear-button');\n    clearInputFieldButton.addEventListener('click', () => {\n      this.onSearchInputClear();\n    });\n    clearInputFieldButton.tabIndex = -1;\n    searchElements.appendChild(clearInputFieldButton);\n\n    const regexIconName = 'regular-expression';\n    this.regexButton = createSearchToggleButton(regexIconName, regexIconName);\n    this.regexButton.addEventListener('click', () => this.regexButtonToggled());\n    searchElements.appendChild(this.regexButton);\n\n    const matchCaseIconName = 'match-case';\n    this.matchCaseButton = createSearchToggleButton(matchCaseIconName, matchCaseIconName);\n    this.matchCaseButton.addEventListener('click', () => this.matchCaseButtonToggled());\n    searchElements.appendChild(this.matchCaseButton);\n\n    this.searchPanelElement.appendChild(searchContainer);\n    const toolbar = new UI.Toolbar.Toolbar('search-toolbar', this.searchPanelElement);\n    toolbar.element.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n    const refreshButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.refresh), 'refresh', undefined, 'search.refresh');\n    const clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clear), 'clear', undefined, 'search.clear');\n    toolbar.appendToolbarItem(refreshButton);\n    toolbar.appendToolbarItem(clearButton);\n    refreshButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => this.onAction());\n    clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => {\n      this.resetSearch();\n      this.onSearchInputClear();\n    });\n\n    const searchStatusBarElement = this.contentElement.createChild('div', 'search-toolbar-summary');\n    this.searchMessageElement = searchStatusBarElement.createChild('div', 'search-message');\n    this.searchProgressPlaceholderElement = searchStatusBarElement.createChild('div', 'flex-centered');\n    this.searchResultsMessageElement = searchStatusBarElement.createChild('div', 'search-message');\n\n    this.advancedSearchConfig = Common.Settings.Settings.instance().createLocalSetting(\n        settingKey + '-search-config', new Workspace.SearchConfig.SearchConfig('', true, false).toPlainObject());\n\n    this.load();\n    this.searchScope = null;\n  }\n\n  regexButtonToggled(): void {\n    this.regexButton.title = this.regexButton.toggled ? i18nString(UIStrings.disableRegularExpression) :\n                                                        i18nString(UIStrings.enableRegularExpression);\n  }\n\n  matchCaseButtonToggled(): void {\n    this.matchCaseButton.title = this.matchCaseButton.toggled ? i18nString(UIStrings.disableCaseSensitive) :\n                                                                i18nString(UIStrings.enableCaseSensitive);\n  }\n\n  private buildSearchConfig(): Workspace.SearchConfig.SearchConfig {\n    return new Workspace.SearchConfig.SearchConfig(\n        this.search.value, !this.matchCaseButton.toggled, this.regexButton.toggled);\n  }\n\n  toggle(queryCandidate: string, searchImmediately?: boolean): void {\n    this.search.value = queryCandidate;\n    if (this.isShowing()) {\n      this.focus();\n    } else {\n      this.focusOnShow = true;\n    }\n\n    this.initScope();\n    if (searchImmediately) {\n      this.onAction();\n    } else {\n      this.startIndexing();\n    }\n  }\n\n  createScope(): SearchScope {\n    throw new Error('Not implemented');\n  }\n\n  private initScope(): void {\n    this.searchScope = this.createScope();\n  }\n\n  override wasShown(): void {\n    if (this.focusOnShow) {\n      this.focus();\n      this.focusOnShow = false;\n    }\n    this.registerCSSFiles([searchViewStyles]);\n  }\n\n  private onIndexingFinished(): void {\n    if (!this.progressIndicator) {\n      return;\n    }\n\n    const finished = !this.progressIndicator.isCanceled();\n    this.progressIndicator.done();\n    this.progressIndicator = null;\n    this.isIndexing = false;\n    this.searchMessageElement.textContent = finished ? '' : i18nString(UIStrings.indexingInterrupted);\n    if (!finished) {\n      this.pendingSearchConfig = null;\n    }\n    if (!this.pendingSearchConfig) {\n      return;\n    }\n    const searchConfig = this.pendingSearchConfig;\n    this.pendingSearchConfig = null;\n    this.innerStartSearch(searchConfig);\n  }\n\n  private startIndexing(): void {\n    this.isIndexing = true;\n    if (this.progressIndicator) {\n      this.progressIndicator.done();\n    }\n    this.progressIndicator = new UI.ProgressIndicator.ProgressIndicator();\n    this.searchMessageElement.textContent = i18nString(UIStrings.indexing);\n    this.progressIndicator.show(this.searchProgressPlaceholderElement);\n    if (this.searchScope) {\n      this.searchScope.performIndexing(\n          new Common.Progress.ProgressProxy(this.progressIndicator, this.onIndexingFinished.bind(this)));\n    }\n  }\n\n  private onSearchInputClear(): void {\n    this.search.value = '';\n    this.save();\n    this.focus();\n  }\n\n  private onSearchResult(searchId: number, searchResult: SearchResult): void {\n    if (searchId !== this.searchId || !this.progressIndicator) {\n      return;\n    }\n    if (this.progressIndicator && this.progressIndicator.isCanceled()) {\n      this.onIndexingFinished();\n      return;\n    }\n    if (!this.searchResultsPane) {\n      this.searchResultsPane = new SearchResultsPane((this.searchConfig as Workspace.SearchConfig.SearchConfig));\n      this.showPane(this.searchResultsPane);\n    }\n    this.#pendingSearchResults.push(searchResult);\n    void this.#throttler.schedule(async () => this.#addPendingSearchResults());\n  }\n\n  #addPendingSearchResults(): void {\n    for (const searchResult of this.#pendingSearchResults) {\n      this.addSearchResult(searchResult);\n      if (searchResult.matchesCount()) {\n        this.searchResultsPane?.addSearchResult(searchResult);\n      }\n    }\n    this.#pendingSearchResults = [];\n  }\n\n  private onSearchFinished(searchId: number, finished: boolean): void {\n    if (searchId !== this.searchId || !this.progressIndicator) {\n      return;\n    }\n    if (!this.searchResultsPane) {\n      this.nothingFound();\n    }\n    this.searchFinished(finished);\n    this.searchConfig = null;\n    UI.ARIAUtils.alert(this.searchMessageElement.textContent + ' ' + this.searchResultsMessageElement.textContent);\n  }\n\n  private innerStartSearch(searchConfig: Workspace.SearchConfig.SearchConfig): void {\n    this.searchConfig = searchConfig;\n    if (this.progressIndicator) {\n      this.progressIndicator.done();\n    }\n    this.progressIndicator = new UI.ProgressIndicator.ProgressIndicator();\n    this.searchStarted(this.progressIndicator);\n    if (this.searchScope) {\n      void this.searchScope.performSearch(\n          searchConfig, this.progressIndicator, this.onSearchResult.bind(this, this.searchId),\n          this.onSearchFinished.bind(this, this.searchId));\n    }\n  }\n\n  private resetSearch(): void {\n    this.stopSearch();\n    this.showPane(null);\n    this.searchResultsPane = null;\n    this.searchMessageElement.textContent = '';\n    this.searchResultsMessageElement.textContent = '';\n  }\n\n  private stopSearch(): void {\n    if (this.progressIndicator && !this.isIndexing) {\n      this.progressIndicator.cancel();\n    }\n    if (this.searchScope) {\n      this.searchScope.stopSearch();\n    }\n    this.searchConfig = null;\n  }\n\n  private searchStarted(progressIndicator: UI.ProgressIndicator.ProgressIndicator): void {\n    this.searchMatchesCount = 0;\n    this.searchResultsCount = 0;\n    this.nonEmptySearchResultsCount = 0;\n    if (!this.searchingView) {\n      this.searchingView = new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.searching));\n    }\n    this.showPane(this.searchingView);\n    this.searchMessageElement.textContent = i18nString(UIStrings.searching);\n    progressIndicator.show(this.searchProgressPlaceholderElement);\n    this.updateSearchResultsMessage();\n  }\n\n  private updateSearchResultsMessage(): void {\n    if (this.searchMatchesCount && this.searchResultsCount) {\n      if (this.searchMatchesCount === 1 && this.nonEmptySearchResultsCount === 1) {\n        this.searchResultsMessageElement.textContent = i18nString(UIStrings.foundMatchingLineInFile);\n      } else if (this.searchMatchesCount > 1 && this.nonEmptySearchResultsCount === 1) {\n        this.searchResultsMessageElement.textContent =\n            i18nString(UIStrings.foundDMatchingLinesInFile, {PH1: this.searchMatchesCount});\n      } else {\n        this.searchResultsMessageElement.textContent = i18nString(\n            UIStrings.foundDMatchingLinesInDFiles,\n            {PH1: this.searchMatchesCount, PH2: this.nonEmptySearchResultsCount});\n      }\n    } else {\n      this.searchResultsMessageElement.textContent = '';\n    }\n  }\n\n  private showPane(panel: UI.Widget.Widget|null): void {\n    if (this.visiblePane) {\n      this.visiblePane.detach();\n    }\n    if (panel) {\n      panel.show(this.searchResultsElement);\n    }\n    this.visiblePane = panel;\n  }\n\n  private nothingFound(): void {\n    if (!this.notFoundView) {\n      this.notFoundView = new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.noMatchesFound));\n    }\n    this.showPane(this.notFoundView);\n    this.searchResultsMessageElement.textContent = i18nString(UIStrings.noMatchesFound);\n  }\n\n  private addSearchResult(searchResult: SearchResult): void {\n    const matchesCount = searchResult.matchesCount();\n    this.searchMatchesCount += matchesCount;\n    this.searchResultsCount++;\n    if (matchesCount) {\n      this.nonEmptySearchResultsCount++;\n    }\n    this.updateSearchResultsMessage();\n  }\n\n  private searchFinished(finished: boolean): void {\n    this.searchMessageElement.textContent =\n        finished ? i18nString(UIStrings.searchFinished) : i18nString(UIStrings.searchInterrupted);\n  }\n\n  override focus(): void {\n    this.search.focus();\n    this.search.select();\n  }\n\n  override willHide(): void {\n    this.stopSearch();\n  }\n\n  private onKeyDown(event: KeyboardEvent): void {\n    this.save();\n    switch (event.keyCode) {\n      case UI.KeyboardShortcut.Keys.Enter.code:\n        this.onAction();\n        break;\n    }\n  }\n\n  /**\n   * Handles keydown event on panel itself for handling expand/collapse all shortcut\n   *\n   * We use `event.code` instead of `event.key` here to check whether the shortcut is triggered.\n   * The reason is, `event.key` is dependent on the modification keys, locale and keyboard layout.\n   * Usually it is useful when we care about the character that needs to be printed.\n   *\n   * However, our aim in here is to assign a shortcut to the physical key combination on the keyboard\n   * not on the character that the key combination prints.\n   *\n   * For example, `Cmd + [` shortcut in global shortcuts map to focusing on previous panel.\n   * In Turkish - Q keyboard layout, the key combination that triggers the shortcut prints `\u011F`\n   * character. Whereas in Turkish - Q Legacy keyboard layout, the shortcut that triggers focusing\n   * on previous panel prints `[` character. So, if we use `event.key` and check\n   * whether it is `[`, we break the shortcut in Turkish - Q keyboard layout.\n   *\n   * @param event KeyboardEvent\n   */\n  private onKeyDownOnPanel(event: KeyboardEvent): void {\n    const isMac = Host.Platform.isMac();\n    // \"Command + Alt + ]\" for Mac\n    const shouldShowAllForMac =\n        isMac && event.metaKey && !event.ctrlKey && event.altKey && event.code === 'BracketRight';\n    // \"Ctrl + Shift + }\" for other platforms\n    const shouldShowAllForOtherPlatforms =\n        !isMac && event.ctrlKey && !event.metaKey && event.shiftKey && event.code === 'BracketRight';\n    // \"Command + Alt + [\" for Mac\n    const shouldCollapseAllForMac =\n        isMac && event.metaKey && !event.ctrlKey && event.altKey && event.code === 'BracketLeft';\n    // \"Command + Alt + {\" for other platforms\n    const shouldCollapseAllForOtherPlatforms =\n        !isMac && event.ctrlKey && !event.metaKey && event.shiftKey && event.code === 'BracketLeft';\n\n    if (shouldShowAllForMac || shouldShowAllForOtherPlatforms) {\n      this.searchResultsPane?.showAllMatches();\n      void VisualLogging.logKeyDown(event.currentTarget, event, 'show-all-matches');\n    } else if (shouldCollapseAllForMac || shouldCollapseAllForOtherPlatforms) {\n      this.searchResultsPane?.collapseAllResults();\n      void VisualLogging.logKeyDown(event.currentTarget, event, 'collapse-all-results');\n    }\n  }\n\n  private save(): void {\n    this.advancedSearchConfig.set(this.buildSearchConfig().toPlainObject());\n  }\n\n  private load(): void {\n    const searchConfig = Workspace.SearchConfig.SearchConfig.fromPlainObject(this.advancedSearchConfig.get());\n    this.search.value = searchConfig.query();\n\n    this.matchCaseButton.toggled = !searchConfig.ignoreCase();\n    this.matchCaseButtonToggled();\n\n    this.regexButton.toggled = searchConfig.isRegex();\n    this.regexButtonToggled();\n  }\n\n  private onAction(): void {\n    const searchConfig = this.buildSearchConfig();\n    if (!searchConfig.query() || !searchConfig.query().length) {\n      return;\n    }\n    this.resetSearch();\n    ++this.searchId;\n    this.initScope();\n    if (!this.isIndexing) {\n      this.startIndexing();\n    }\n    this.pendingSearchConfig = searchConfig;\n  }\n\n  get throttlerForTest(): Common.Throttler.Throttler {\n    return this.#throttler;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
