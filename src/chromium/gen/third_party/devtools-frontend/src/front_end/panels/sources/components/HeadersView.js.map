{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/sources/components/HeadersView.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as Persistence from '../../../models/persistence/persistence.js';\nimport * as Workspace from '../../../models/workspace/workspace.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport HeadersViewStyles from './HeadersView.css.js';\n\nconst {html} = LitHtml;\n\nconst UIStrings = {\n  /**\n   *@description The title of a button that adds a field to input a header in the editor form.\n   */\n  addHeader: 'Add a header',\n  /**\n   *@description The title of a button that removes a field to input a header in the editor form.\n   */\n  removeHeader: 'Remove this header',\n  /**\n   *@description The title of a button that removes a section for defining header overrides in the editor form.\n   */\n  removeBlock: 'Remove this \\'`ApplyTo`\\'-section',\n  /**\n   *@description Error message for files which cannot not be parsed.\n   *@example {.headers} PH1\n   */\n  errorWhenParsing: 'Error when parsing \\'\\'{PH1}\\'\\'.',\n  /**\n   *@description Explainer for files which cannot be parsed.\n   *@example {.headers} PH1\n   */\n  parsingErrorExplainer:\n      'This is most likely due to a syntax error in \\'\\'{PH1}\\'\\'. Try opening this file in an external editor to fix the error or delete the file and re-create the override.',\n  /**\n   *@description Button text for a button which adds an additional header override rule.\n   */\n  addOverrideRule: 'Add override rule',\n  /**\n   *@description Text which is a hyperlink to more documentation\n   */\n  learnMore: 'Learn more',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/components/HeadersView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst plusIconUrl = new URL('../../../Images/plus.svg', import.meta.url).toString();\nconst trashIconUrl = new URL('../../../Images/bin.svg', import.meta.url).toString();\n\nconst DEFAULT_HEADER_VALUE = 'header value';\nconst getDefaultHeaderName = (i: number): string => `header-name-${i}`;\n\nexport class HeadersView extends UI.View.SimpleView {\n  readonly #headersViewComponent = new HeadersViewComponent();\n  #uiSourceCode: Workspace.UISourceCode.UISourceCode;\n\n  constructor(uiSourceCode: Workspace.UISourceCode.UISourceCode) {\n    super(i18n.i18n.lockedString('HeadersView'));\n    this.element.setAttribute('jslog', `${VisualLogging.pane('headers-view')}`);\n    this.#uiSourceCode = uiSourceCode;\n    this.#uiSourceCode.addEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyChanged, this.#onWorkingCopyChanged, this);\n    this.#uiSourceCode.addEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyCommitted, this.#onWorkingCopyCommitted, this);\n    this.element.appendChild(this.#headersViewComponent);\n    void this.#setInitialData();\n  }\n\n  async #setInitialData(): Promise<void> {\n    const content = await this.#uiSourceCode.requestContent();\n    this.#setComponentData(content.content || '');\n  }\n\n  #setComponentData(content: string): void {\n    let parsingError = false;\n    let headerOverrides: Persistence.NetworkPersistenceManager.HeaderOverride[] = [];\n    content = content || '[]';\n    try {\n      headerOverrides = JSON.parse(content) as Persistence.NetworkPersistenceManager.HeaderOverride[];\n      if (!headerOverrides.every(Persistence.NetworkPersistenceManager.isHeaderOverride)) {\n        throw 'Type mismatch after parsing';\n      }\n    } catch (e) {\n      console.error('Failed to parse', this.#uiSourceCode.url(), 'for locally overriding headers.');\n      parsingError = true;\n    }\n\n    this.#headersViewComponent.data = {\n      headerOverrides,\n      uiSourceCode: this.#uiSourceCode,\n      parsingError,\n    };\n  }\n\n  #onWorkingCopyChanged(): void {\n    this.#setComponentData(this.#uiSourceCode.workingCopy());\n  }\n\n  #onWorkingCopyCommitted(): void {\n    this.#setComponentData(this.#uiSourceCode.workingCopy());\n  }\n\n  getComponent(): HeadersViewComponent {\n    return this.#headersViewComponent;\n  }\n\n  dispose(): void {\n    this.#uiSourceCode.removeEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyChanged, this.#onWorkingCopyChanged, this);\n    this.#uiSourceCode.removeEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyCommitted, this.#onWorkingCopyCommitted, this);\n  }\n}\n\nexport interface HeadersViewComponentData {\n  headerOverrides: Persistence.NetworkPersistenceManager.HeaderOverride[];\n  uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  parsingError: boolean;\n}\n\nexport class HeadersViewComponent extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #boundRender = this.#render.bind(this);\n  #headerOverrides: Persistence.NetworkPersistenceManager.HeaderOverride[] = [];\n  #uiSourceCode: Workspace.UISourceCode.UISourceCode|null = null;\n  #parsingError = false;\n  #focusElement: {blockIndex: number, headerIndex?: number}|null = null;\n  #textOnFocusIn = '';\n\n  constructor() {\n    super();\n    this.#shadow.addEventListener('focusin', this.#onFocusIn.bind(this));\n    this.#shadow.addEventListener('focusout', this.#onFocusOut.bind(this));\n    this.#shadow.addEventListener('click', this.#onClick.bind(this));\n    this.#shadow.addEventListener('input', this.#onInput.bind(this));\n    this.#shadow.addEventListener('keydown', this.#onKeyDown.bind(this));\n    this.#shadow.addEventListener('paste', this.#onPaste.bind(this));\n    this.addEventListener('contextmenu', this.#onContextMenu.bind(this));\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [HeadersViewStyles];\n  }\n\n  set data(data: HeadersViewComponentData) {\n    this.#headerOverrides = data.headerOverrides;\n    this.#uiSourceCode = data.uiSourceCode;\n    this.#parsingError = data.parsingError;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  // 'Enter' key should not create a new line in the contenteditable. Focus\n  // on the next contenteditable instead.\n  #onKeyDown(event: Event): void {\n    const target = event.target as HTMLElement;\n    if (!target.matches('.editable')) {\n      return;\n    }\n    const keyboardEvent = event as KeyboardEvent;\n    if (target.matches('.header-name') && target.innerText === '' &&\n        (keyboardEvent.key === 'Enter' || keyboardEvent.key === 'Tab')) {\n      // onFocusOut will remove the header -> blur instead of focusing on next editable\n      event.preventDefault();\n      target.blur();\n    } else if (keyboardEvent.key === 'Enter') {\n      event.preventDefault();\n      target.blur();\n      this.#focusNext(target);\n    } else if (keyboardEvent.key === 'Escape') {\n      event.consume();\n      target.innerText = this.#textOnFocusIn;\n      target.blur();\n      this.#onChange(target);\n    }\n  }\n\n  #focusNext(target: HTMLElement): void {\n    const elements = Array.from(this.#shadow.querySelectorAll('.editable')) as HTMLElement[];\n    const idx = elements.indexOf(target);\n    if (idx !== -1 && idx + 1 < elements.length) {\n      elements[idx + 1].focus();\n    }\n  }\n\n  #selectAllText(target: HTMLElement): void {\n    const selection = window.getSelection();\n    const range = document.createRange();\n    range.selectNodeContents(target);\n    selection?.removeAllRanges();\n    selection?.addRange(range);\n  }\n\n  #onFocusIn(event: Event): void {\n    const target = event.target as HTMLElement;\n    if (target.matches('.editable')) {\n      this.#selectAllText(target);\n      this.#textOnFocusIn = target.innerText;\n    }\n  }\n\n  #onFocusOut(event: Event): void {\n    const target = event.target as HTMLElement;\n    if (target.innerText === '') {\n      const rowElement = target.closest('.row') as HTMLElement;\n      const blockIndex = Number(rowElement.dataset.blockIndex);\n      const headerIndex = Number(rowElement.dataset.headerIndex);\n      if (target.matches('.apply-to')) {\n        target.innerText = '*';\n        this.#headerOverrides[blockIndex].applyTo = '*';\n        this.#onHeadersChanged();\n      } else if (target.matches('.header-name')) {\n        this.#removeHeader(blockIndex, headerIndex);\n      }\n    }\n\n    // clear selection\n    const selection = window.getSelection();\n    selection?.removeAllRanges();\n\n    this.#uiSourceCode?.commitWorkingCopy();\n  }\n\n  #onContextMenu(event: Event): void {\n    if (!this.#uiSourceCode) {\n      return;\n    }\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.appendApplicableItems(this.#uiSourceCode);\n    void contextMenu.show();\n  }\n\n  #generateNextHeaderName(headers: Protocol.Fetch.HeaderEntry[]): string {\n    const takenNames = new Set<string>(headers.map(header => header.name));\n    let idx = 1;\n    while (takenNames.has(getDefaultHeaderName(idx))) {\n      idx++;\n    }\n    return getDefaultHeaderName(idx);\n  }\n\n  #onClick(event: Event): void {\n    const target = event.target as HTMLButtonElement;\n    const rowElement = target.closest('.row') as HTMLElement | null;\n    const blockIndex = Number(rowElement?.dataset.blockIndex || 0);\n    const headerIndex = Number(rowElement?.dataset.headerIndex || 0);\n    if (target.matches('.add-header')) {\n      this.#headerOverrides[blockIndex].headers.splice(\n          headerIndex + 1, 0,\n          {name: this.#generateNextHeaderName(this.#headerOverrides[blockIndex].headers), value: DEFAULT_HEADER_VALUE});\n      this.#focusElement = {blockIndex, headerIndex: headerIndex + 1};\n      this.#onHeadersChanged();\n    } else if (target.matches('.remove-header')) {\n      this.#removeHeader(blockIndex, headerIndex);\n    } else if (target.matches('.add-block')) {\n      this.#headerOverrides.push(\n          {applyTo: '*', headers: [{name: getDefaultHeaderName(1), value: DEFAULT_HEADER_VALUE}]});\n      this.#focusElement = {blockIndex: this.#headerOverrides.length - 1};\n      this.#onHeadersChanged();\n    } else if (target.matches('.remove-block')) {\n      this.#headerOverrides.splice(blockIndex, 1);\n      this.#onHeadersChanged();\n    }\n  }\n\n  #isDeletable(blockIndex: number, headerIndex: number): boolean {\n    const isOnlyDefaultHeader = headerIndex === 0 && this.#headerOverrides[blockIndex].headers.length === 1 &&\n        this.#headerOverrides[blockIndex].headers[headerIndex].name === getDefaultHeaderName(1) &&\n        this.#headerOverrides[blockIndex].headers[headerIndex].value === DEFAULT_HEADER_VALUE;\n    return !isOnlyDefaultHeader;\n  }\n\n  #removeHeader(blockIndex: number, headerIndex: number): void {\n    this.#headerOverrides[blockIndex].headers.splice(headerIndex, 1);\n    if (this.#headerOverrides[blockIndex].headers.length === 0) {\n      this.#headerOverrides[blockIndex].headers.push(\n          {name: this.#generateNextHeaderName(this.#headerOverrides[blockIndex].headers), value: DEFAULT_HEADER_VALUE});\n    }\n    this.#onHeadersChanged();\n  }\n\n  #onInput(event: Event): void {\n    this.#onChange(event.target as HTMLElement);\n  }\n\n  #onChange(target: HTMLElement): void {\n    const rowElement = target.closest('.row') as HTMLElement;\n    const blockIndex = Number(rowElement.dataset.blockIndex);\n    const headerIndex = Number(rowElement.dataset.headerIndex);\n    if (target.matches('.header-name')) {\n      this.#headerOverrides[blockIndex].headers[headerIndex].name = target.innerText;\n      this.#onHeadersChanged();\n    }\n    if (target.matches('.header-value')) {\n      this.#headerOverrides[blockIndex].headers[headerIndex].value = target.innerText;\n      this.#onHeadersChanged();\n    }\n    if (target.matches('.apply-to')) {\n      this.#headerOverrides[blockIndex].applyTo = target.innerText;\n      this.#onHeadersChanged();\n    }\n  }\n\n  #onHeadersChanged(): void {\n    this.#uiSourceCode?.setWorkingCopy(JSON.stringify(this.#headerOverrides, null, 2));\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.HeaderOverrideHeadersFileEdited);\n  }\n\n  #onPaste(event: Event): void {\n    const clipboardEvent = event as ClipboardEvent;\n    event.preventDefault();\n    if (clipboardEvent.clipboardData) {\n      const text = clipboardEvent.clipboardData.getData('text/plain');\n      const range = this.#shadow.getSelection()?.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n      range.deleteContents();\n\n      const textNode = document.createTextNode(text);\n      range.insertNode(textNode);\n      range.selectNodeContents(textNode);\n      range.collapse(false);\n\n      const selection = window.getSelection();\n      selection?.removeAllRanges();\n      selection?.addRange(range);\n\n      this.#onChange(event.target as HTMLElement);\n    }\n  }\n\n  #render(): void {\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('HeadersView render was not scheduled');\n    }\n\n    if (this.#parsingError) {\n      const fileName = this.#uiSourceCode?.name() || '.headers';\n      // clang-format off\n      LitHtml.render(html`\n        <div class=\"center-wrapper\">\n          <div class=\"centered\">\n            <div class=\"error-header\">${i18nString(UIStrings.errorWhenParsing, {PH1: fileName})}</div>\n            <div class=\"error-body\">${i18nString(UIStrings.parsingErrorExplainer, {PH1: fileName})}</div>\n          </div>\n        </div>\n      `, this.#shadow, {host: this});\n      // clang-format on\n      return;\n    }\n\n    // clang-format off\n    LitHtml.render(html`\n      ${this.#headerOverrides.map((headerOverride, blockIndex) =>\n        html`\n          ${this.#renderApplyToRow(headerOverride.applyTo, blockIndex)}\n          ${headerOverride.headers.map((header, headerIndex) =>\n            html`\n              ${this.#renderHeaderRow(header, blockIndex, headerIndex)}\n            `,\n          )}\n        `,\n      )}\n      <devtools-button\n          .variant=${Buttons.Button.Variant.OUTLINED}\n          .jslogContext=${'headers-view.add-override-rule'}\n          class=\"add-block\">\n        ${i18nString(UIStrings.addOverrideRule)}\n      </devtools-button>\n      <div class=\"learn-more-row\">\n        <x-link\n            href=\"https://goo.gle/devtools-override\"\n            class=\"link\"\n            jslog=${VisualLogging.link('learn-more').track({click: true})}>${i18nString(UIStrings.learnMore)}</x-link>\n      </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n\n    if (this.#focusElement) {\n      let focusElement: Element|null = null;\n      if (this.#focusElement.headerIndex) {\n        focusElement = this.#shadow.querySelector(`[data-block-index=\"${\n            this.#focusElement.blockIndex}\"][data-header-index=\"${this.#focusElement.headerIndex}\"] .header-name`);\n      } else {\n        focusElement = this.#shadow.querySelector(`[data-block-index=\"${this.#focusElement.blockIndex}\"] .apply-to`);\n      }\n      if (focusElement) {\n        (focusElement as HTMLElement).focus();\n      }\n      this.#focusElement = null;\n    }\n  }\n\n  #renderApplyToRow(pattern: string, blockIndex: number): LitHtml.TemplateResult {\n    // clang-format off\n    return html`\n      <div class=\"row\" data-block-index=${blockIndex}\n           jslog=${VisualLogging.treeItem(pattern === '*' ? pattern : undefined)}>\n        <div>${i18n.i18n.lockedString('Apply to')}</div>\n        <div class=\"separator\">:</div>\n        ${this.#renderEditable(pattern, 'apply-to')}\n        <devtools-button\n        title=${i18nString(UIStrings.removeBlock)}\n        .size=${Buttons.Button.Size.SMALL}\n        .iconUrl=${trashIconUrl}\n        .iconWidth=${'14px'}\n        .iconHeight=${'14px'}\n        .variant=${Buttons.Button.Variant.ICON}\n        .jslogContext=${'headers-view.remove-apply-to-section'}\n        class=\"remove-block inline-button\"\n      ></devtools-button>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #renderHeaderRow(header: Protocol.Fetch.HeaderEntry, blockIndex: number, headerIndex: number):\n      LitHtml.TemplateResult {\n    // clang-format off\n    return html`\n      <div class=\"row padded\" data-block-index=${blockIndex} data-header-index=${headerIndex}\n           jslog=${VisualLogging.treeItem(header.name).parent('headers-editor-row-parent')}>\n        ${this.#renderEditable(header.name, 'header-name red', true)}\n        <div class=\"separator\">:</div>\n        ${this.#renderEditable(header.value, 'header-value')}\n        <devtools-button\n          title=${i18nString(UIStrings.addHeader)}\n          .size=${Buttons.Button.Size.SMALL}\n          .iconUrl=${plusIconUrl}\n          .variant=${Buttons.Button.Variant.ICON}\n          .jslogContext=${'headers-view.add-header'}\n          class=\"add-header inline-button\"\n        ></devtools-button>\n        <devtools-button\n          title=${i18nString(UIStrings.removeHeader)}\n          .size=${Buttons.Button.Size.SMALL}\n          .iconUrl=${trashIconUrl}\n          .variant=${Buttons.Button.Variant.ICON}\n          ?hidden=${!this.#isDeletable(blockIndex, headerIndex)}\n          .jslogContext=${'headers-view.remove-header'}\n          class=\"remove-header inline-button\"\n        ></devtools-button>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #renderEditable(value: string, className?: string, isKey?: boolean): LitHtml.TemplateResult {\n    // This uses LitHtml's `live`-directive, so that when checking whether to\n    // update during re-render, `value` is compared against the actual live DOM\n    // value of the contenteditable element and not the potentially outdated\n    // value from the previous render.\n    // clang-format off\n    const jslog = isKey ? VisualLogging.key() : VisualLogging.value();\n    return html`<span jslog=${jslog.track({change: true, keydown: 'Enter|Escape|Tab', click: true})}\n                              contenteditable=\"true\"\n                              class=\"editable ${className}\"\n                              tabindex=\"0\"\n                              .innerText=${LitHtml.Directives.live(value)}></span>`;\n    // clang-format on\n  }\n}\n\nVisualLogging.registerParentProvider('headers-editor-row-parent', (e: Element) => {\n  while (e.previousElementSibling?.classList?.contains('padded')) {\n    e = e.previousElementSibling;\n  }\n  return e.previousElementSibling || undefined;\n});\n\ncustomElements.define('devtools-sources-headers-view', HeadersViewComponent);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-sources-headers-view': HeadersViewComponent;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
