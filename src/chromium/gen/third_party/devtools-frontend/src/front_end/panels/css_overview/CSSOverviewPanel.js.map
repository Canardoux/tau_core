{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/css_overview/CSSOverviewPanel.ts"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as CSSOverviewComponents from './components/components.js';\nimport cssOverviewStyles from './cssOverview.css.js';\nimport {type ContrastIssue, CSSOverviewCompletedView} from './CSSOverviewCompletedView.js';\nimport {Events, type OverviewController} from './CSSOverviewController.js';\nimport {CSSOverviewModel, type GlobalStyleStats} from './CSSOverviewModel.js';\nimport {CSSOverviewProcessingView} from './CSSOverviewProcessingView.js';\nimport type {UnusedDeclaration} from './CSSOverviewUnusedDeclarations.js';\n\nexport class CSSOverviewPanel extends UI.Panel.Panel implements SDK.TargetManager.Observer {\n  readonly #controller: OverviewController;\n  readonly #startView: CSSOverviewComponents.CSSOverviewStartView.CSSOverviewStartView;\n  readonly #processingView: CSSOverviewProcessingView;\n  readonly #completedView: CSSOverviewCompletedView;\n  #model?: CSSOverviewModel;\n  #backgroundColors!: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  #textColors!: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  #fillColors!: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  #borderColors!: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  #fontInfo!: Map<string, Map<string, Map<string, Protocol.DOM.BackendNodeId[]>>>;\n  #mediaQueries!: Map<string, Protocol.CSS.CSSMedia[]>;\n  #unusedDeclarations!: Map<string, UnusedDeclaration[]>;\n  #elementCount!: number;\n  #globalStyleStats!: GlobalStyleStats;\n  #textColorContrastIssues!: Map<string, ContrastIssue[]>;\n\n  constructor(controller: OverviewController) {\n    super('css-overview');\n\n    this.element.classList.add('css-overview-panel');\n\n    this.#controller = controller;\n    this.#startView = new CSSOverviewComponents.CSSOverviewStartView.CSSOverviewStartView();\n    this.#startView.addEventListener(\n        'overviewstartrequested', () => this.#controller.dispatchEventToListeners(Events.REQUEST_OVERVIEW_START));\n    this.#processingView = new CSSOverviewProcessingView(this.#controller);\n    this.#completedView = new CSSOverviewCompletedView(this.#controller);\n\n    SDK.TargetManager.TargetManager.instance().observeTargets(this);\n\n    this.#controller.addEventListener(Events.REQUEST_OVERVIEW_START, _event => {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.CaptureCssOverviewClicked);\n      void this.#startOverview();\n    }, this);\n    this.#controller.addEventListener(Events.OVERVIEW_COMPLETED, this.#overviewCompleted, this);\n    this.#controller.addEventListener(Events.RESET, this.#reset, this);\n    this.#controller.addEventListener(Events.REQUEST_NODE_HIGHLIGHT, this.#requestNodeHighlight, this);\n\n    this.#reset();\n  }\n\n  targetAdded(target: SDK.Target.Target): void {\n    if (target !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n      return;\n    }\n    this.#completedView.initializeModels(target);\n    const model = target.model(CSSOverviewModel);\n    this.#model = (model as CSSOverviewModel);\n  }\n\n  targetRemoved(): void {\n  }\n\n  #getModel(): CSSOverviewModel {\n    if (!this.#model) {\n      throw new Error('Did not retrieve model information yet.');\n    }\n    return this.#model;\n  }\n\n  #reset(): void {\n    this.#backgroundColors = new Map();\n    this.#textColors = new Map();\n    this.#fillColors = new Map();\n    this.#borderColors = new Map();\n    this.#fontInfo = new Map();\n    this.#mediaQueries = new Map();\n    this.#unusedDeclarations = new Map();\n    this.#elementCount = 0;\n    this.#globalStyleStats = {\n      styleRules: 0,\n      inlineStyles: 0,\n      externalSheets: 0,\n      stats: {\n        // Simple.\n        type: 0,\n        class: 0,\n        id: 0,\n        universal: 0,\n        attribute: 0,\n\n        // Non-simple.\n        nonSimple: 0,\n      },\n    };\n    this.#textColorContrastIssues = new Map();\n    this.#renderInitialView();\n  }\n\n  #requestNodeHighlight(evt: Common.EventTarget.EventTargetEvent<number>): void {\n    this.#getModel().highlightNode((evt.data as Protocol.DOM.BackendNodeId));\n  }\n\n  #renderInitialView(): void {\n    this.#processingView.hideWidget();\n    this.#completedView.hideWidget();\n\n    this.contentElement.append(this.#startView);\n    this.#startView.show();\n  }\n\n  #renderOverviewStartedView(): void {\n    this.#startView.hide();\n    this.#completedView.hideWidget();\n\n    this.#processingView.show(this.contentElement);\n  }\n\n  #renderOverviewCompletedView(): void {\n    this.#startView.hide();\n    this.#processingView.hideWidget();\n\n    this.#completedView.show(this.contentElement);\n    this.#completedView.setOverviewData({\n      backgroundColors: this.#backgroundColors,\n      textColors: this.#textColors,\n      textColorContrastIssues: this.#textColorContrastIssues,\n      fillColors: this.#fillColors,\n      borderColors: this.#borderColors,\n      globalStyleStats: this.#globalStyleStats,\n      fontInfo: this.#fontInfo,\n      elementCount: this.#elementCount,\n      mediaQueries: this.#mediaQueries,\n      unusedDeclarations: this.#unusedDeclarations,\n    });\n  }\n\n  async #startOverview(): Promise<void> {\n    this.#renderOverviewStartedView();\n\n    const model = this.#getModel();\n    const [globalStyleStats, { elementCount, backgroundColors, textColors, textColorContrastIssues, fillColors, borderColors, fontInfo, unusedDeclarations }, mediaQueries] = await Promise.all([\n      model.getGlobalStylesheetStats(),\n      model.getNodeStyleStats(),\n      model.getMediaQueries(),\n    ]);\n\n    if (elementCount) {\n      this.#elementCount = elementCount;\n    }\n\n    if (globalStyleStats) {\n      this.#globalStyleStats = globalStyleStats;\n    }\n\n    if (mediaQueries) {\n      this.#mediaQueries = mediaQueries;\n    }\n\n    if (backgroundColors) {\n      this.#backgroundColors = backgroundColors;\n    }\n\n    if (textColors) {\n      this.#textColors = textColors;\n    }\n\n    if (textColorContrastIssues) {\n      this.#textColorContrastIssues = textColorContrastIssues;\n    }\n\n    if (fillColors) {\n      this.#fillColors = fillColors;\n    }\n\n    if (borderColors) {\n      this.#borderColors = borderColors;\n    }\n\n    if (fontInfo) {\n      this.#fontInfo = fontInfo;\n    }\n\n    if (unusedDeclarations) {\n      this.#unusedDeclarations = unusedDeclarations;\n    }\n\n    this.#controller.dispatchEventToListeners(Events.OVERVIEW_COMPLETED);\n  }\n\n  #overviewCompleted(): void {\n    this.#renderOverviewCompletedView();\n  }\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([cssOverviewStyles]);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
