{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/mobile_throttling/ThrottlingSettingsTab.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as Cards from '../../ui/components/cards/cards.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport throttlingSettingsTabStyles from './throttlingSettingsTab.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Throttling Settings Tab of the Network panel\n   */\n  networkThrottlingProfiles: 'Network throttling profiles',\n  /**\n   *@description Text of add conditions button in Throttling Settings Tab of the Network panel\n   */\n  addCustomProfile: 'Add profile',\n  /**\n   *@description A value in milliseconds\n   *@example {3} PH1\n   */\n  dms: '{PH1} `ms`',\n  /**\n   *@description Text in Throttling Settings Tab of the Network panel\n   */\n  profileName: 'Profile Name',\n  /**\n   * @description Label for a textbox that sets the download speed in the Throttling Settings Tab.\n   * Noun, short for 'download speed'.\n   */\n  download: 'Download',\n  /**\n   * @description Label for a textbox that sets the upload speed in the Throttling Settings Tab.\n   * Noun, short for 'upload speed'.\n   */\n  upload: 'Upload',\n  /**\n   * @description Label for a textbox that sets the latency in the Throttling Settings Tab.\n   */\n  latency: 'Latency',\n  /**\n   * @description Label for a textbox that sets the packet loss percentage for real-time networks in the Throttling Settings Tab.\n   */\n  packetLoss: 'Packet Loss',\n  /**\n   * @description Label for a textbox serving as a unit in the Throttling Settings Tab for the field Packet Loss column.\n   */\n  percent: 'percent',\n  /**\n   * @description Label for a textbox that sets the maximum packet queue length for real-time networks in the Throttling Settings Tab.\n   */\n  packetQueueLength: 'Packet Queue Length',\n  /**\n   * @description Label for a checkbox that allows packet reordering in the Throttling Settings Tab.\n   */\n  packetReordering: 'Packet Reordering',\n  /**\n   * @description Label for a textbox serving as a unit in the Throttling Settings Tab for the field Packet Queue Length column.\n   */\n  packet: 'packet',\n  /**\n   *@description Text in Throttling Settings Tab of the Network panel\n   */\n  optional: 'optional',\n  /**\n   *@description Error message for Profile Name input in Throtting pane of the Settings\n   *@example {49} PH1\n   */\n  profileNameCharactersLengthMust: 'Profile Name characters length must be between 1 to {PH1} inclusive',\n  /**\n   *@description Error message for Download and Upload inputs in Throttling pane of the Settings\n   *@example {Download} PH1\n   *@example {0} PH2\n   *@example {10000000} PH3\n   */\n  sMustBeANumberBetweenSkbsToSkbs: '{PH1} must be a number between {PH2} `kbit/s` to {PH3} `kbit/s` inclusive',\n  /**\n   *@description Error message for Latency input in Throttling pane of the Settings\n   *@example {0} PH1\n   *@example {1000000} PH2\n   */\n  latencyMustBeAnIntegerBetweenSms: 'Latency must be an integer between {PH1} `ms` to {PH2} `ms` inclusive',\n  /**\n   *@description Error message for Packet Loss input in Throttling pane of the Settings\n   *@example {0} PH1\n   *@example {100} PH2\n   */\n  packetLossMustBeAnIntegerBetweenSpct: 'Packet Loss must be a number between {PH1} `%` to {PH2} `%` inclusive',\n  /**\n   *@description Error message for Packet Queue Length input in Throttling pane of the Settings\n   */\n  packetQueueLengthMustBeAnIntegerGreaterOrEqualToZero: 'Packet Queue Length must be greater or equal to 0',\n  /**\n   * @description Text in Throttling Settings Tab of the Network panel, indicating the download or\n   * upload speed that will be applied in kilobits per second.\n   * @example {25} PH1\n   */\n  dskbits: '{PH1} `kbit/s`',\n  /**\n   * @description Text in Throttling Settings Tab of the Network panel, indicating the download or\n   * upload speed that will be applied in megabits per second.\n   * @example {25.4} PH1\n   */\n  fsmbits: '{PH1} `Mbit/s`',\n  /**\n   * @description Label for the column Packet Reordering to indicate it is enabled in the Throttling Settings Tab.\n   */\n  on: 'On',\n  /**\n   * @description Label for the column Packet Reordering to indicate it is disabled in the Throttling Settings Tab.\n   */\n  off: 'Off',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/mobile_throttling/ThrottlingSettingsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ThrottlingSettingsTab extends UI.Widget.VBox implements\n    UI.ListWidget.Delegate<SDK.NetworkManager.Conditions> {\n  private readonly list: UI.ListWidget.ListWidget<SDK.NetworkManager.Conditions>;\n  private readonly customSetting: Common.Settings.Setting<SDK.NetworkManager.Conditions[]>;\n  private editor?: UI.ListWidget.Editor<SDK.NetworkManager.Conditions>;\n\n  constructor() {\n    super(true);\n\n    this.element.setAttribute('jslog', `${VisualLogging.pane('throttling-conditions')}`);\n\n    const settingsContent =\n        this.contentElement.createChild('div', 'settings-card-container-wrapper').createChild('div');\n    settingsContent.classList.add('settings-card-container', 'throttling-conditions-settings');\n\n    const addButton = new Buttons.Button.Button();\n    addButton.classList.add('add-conditions-button');\n    addButton.data = {\n      variant: Buttons.Button.Variant.OUTLINED,\n      iconName: 'plus',\n      jslogContext: 'network.add-conditions',\n    };\n    addButton.textContent = i18nString(UIStrings.addCustomProfile);\n    addButton.addEventListener('click', () => this.addButtonClicked());\n\n    const container = settingsContent.createChild('div');\n    const card = new Cards.Card.Card();\n    settingsContent.appendChild(card);\n    card.data = {\n      heading: i18nString(UIStrings.networkThrottlingProfiles),\n      content: [container],\n    };\n    this.list = new UI.ListWidget.ListWidget(this);\n    this.list.element.classList.add('conditions-list');\n    this.list.show(container);\n    container.appendChild(addButton);\n\n    this.customSetting = Common.Settings.Settings.instance().moduleSetting('custom-network-conditions');\n    this.customSetting.addChangeListener(this.conditionsUpdated, this);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.list.registerCSSFiles([throttlingSettingsTabStyles]);\n    this.registerCSSFiles([throttlingSettingsTabStyles]);\n    this.conditionsUpdated();\n  }\n\n  private conditionsUpdated(): void {\n    this.list.clear();\n\n    const conditions = this.customSetting.get();\n    for (let i = 0; i < conditions.length; ++i) {\n      this.list.appendItem(conditions[i], true);\n    }\n\n    this.list.appendSeparator();\n  }\n\n  private addButtonClicked(): void {\n    this.list.addNewItem(\n        this.customSetting.get().length,\n        {title: () => '', download: -1, upload: -1, latency: 0, packetLoss: 0, packetReordering: false});\n  }\n\n  renderItem(conditions: SDK.NetworkManager.Conditions, _editable: boolean): Element {\n    const element = document.createElement('div');\n    element.classList.add('conditions-list-item');\n    const title = element.createChild('div', 'conditions-list-text conditions-list-title');\n    const titleText = title.createChild('div', 'conditions-list-title-text');\n    const castedTitle = this.retrieveOptionsTitle(conditions);\n    titleText.textContent = castedTitle;\n    UI.Tooltip.Tooltip.install(titleText, castedTitle);\n    element.createChild('div', 'conditions-list-separator');\n    element.createChild('div', 'conditions-list-text').textContent = throughputText(conditions.download);\n    element.createChild('div', 'conditions-list-separator');\n    element.createChild('div', 'conditions-list-text').textContent = throughputText(conditions.upload);\n    element.createChild('div', 'conditions-list-separator');\n    element.createChild('div', 'conditions-list-text').textContent =\n        i18nString(UIStrings.dms, {PH1: conditions.latency});\n    element.createChild('div', 'conditions-list-separator');\n    element.createChild('div', 'conditions-list-text').textContent = percentText(conditions.packetLoss ?? 0);\n    element.createChild('div', 'conditions-list-separator');\n    element.createChild('div', 'conditions-list-text').textContent = String(conditions.packetQueueLength ?? 0);\n    element.createChild('div', 'conditions-list-separator');\n    element.createChild('div', 'conditions-list-text').textContent =\n        conditions.packetReordering ? i18nString(UIStrings.on) : i18nString(UIStrings.off);\n\n    return element;\n  }\n\n  removeItemRequested(_item: SDK.NetworkManager.Conditions, index: number): void {\n    const list = this.customSetting.get();\n    list.splice(index, 1);\n    this.customSetting.set(list);\n  }\n\n  retrieveOptionsTitle(conditions: SDK.NetworkManager.Conditions): string {\n    // The title is usually an i18nLazyString except for custom values that are stored in the local storage in the form of a string.\n    const castedTitle = typeof conditions.title === 'function' ? conditions.title() : conditions.title;\n    return castedTitle;\n  }\n\n  commitEdit(\n      conditions: SDK.NetworkManager.Conditions, editor: UI.ListWidget.Editor<SDK.NetworkManager.Conditions>,\n      isNew: boolean): void {\n    conditions.title = editor.control('title').value.trim();\n    const download = editor.control('download').value.trim();\n    conditions.download = download ? parseInt(download, 10) * (1000 / 8) : -1;\n    const upload = editor.control('upload').value.trim();\n    conditions.upload = upload ? parseInt(upload, 10) * (1000 / 8) : -1;\n    const latency = editor.control('latency').value.trim();\n    conditions.latency = latency ? parseInt(latency, 10) : 0;\n    const packetLoss = editor.control('packetLoss').value.trim();\n    conditions.packetLoss = packetLoss ? parseFloat(packetLoss) : 0;\n    const packetQueueLength = editor.control('packetQueueLength').value.trim();\n    conditions.packetQueueLength = packetQueueLength ? parseFloat(packetQueueLength) : 0;\n    const packetReordering = (editor.control('packetReordering') as HTMLInputElement).checked;\n    conditions.packetReordering = packetReordering;\n\n    const list = this.customSetting.get();\n    if (isNew) {\n      list.push(conditions);\n    }\n\n    this.customSetting.set(list);\n  }\n\n  beginEdit(conditions: SDK.NetworkManager.Conditions): UI.ListWidget.Editor<SDK.NetworkManager.Conditions> {\n    const editor = this.createEditor();\n    editor.control('title').value = this.retrieveOptionsTitle(conditions);\n    editor.control('download').value = conditions.download <= 0 ? '' : String(conditions.download / (1000 / 8));\n    editor.control('upload').value = conditions.upload <= 0 ? '' : String(conditions.upload / (1000 / 8));\n    editor.control('latency').value = conditions.latency ? String(conditions.latency) : '';\n    editor.control('packetLoss').value = conditions.packetLoss ? String(conditions.packetLoss) : '';\n    editor.control('packetQueueLength').value =\n        conditions.packetQueueLength ? String(conditions.packetQueueLength) : '';\n    (editor.control('packetReordering') as HTMLInputElement).checked = conditions.packetReordering ?? false;\n    return editor;\n  }\n\n  private createEditor(): UI.ListWidget.Editor<SDK.NetworkManager.Conditions> {\n    if (this.editor) {\n      return this.editor;\n    }\n\n    const editor = new UI.ListWidget.Editor<SDK.NetworkManager.Conditions>();\n    this.editor = editor;\n    const content = editor.contentElement();\n\n    const titles = content.createChild('div', 'conditions-edit-row');\n    const nameLabel = titles.createChild('div', 'conditions-list-text conditions-list-title');\n    const nameStr = i18nString(UIStrings.profileName);\n    const nameLabelText = nameLabel.createChild('div', 'conditions-list-title-text');\n    nameLabelText.textContent = nameStr;\n    titles.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n    const downloadLabel = titles.createChild('div', 'conditions-list-text');\n    const downloadStr = i18nString(UIStrings.download);\n    const downloadLabelText = downloadLabel.createChild('div', 'conditions-list-title-text');\n    downloadLabelText.textContent = downloadStr;\n    titles.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n    const uploadLabel = titles.createChild('div', 'conditions-list-text');\n    const uploadLabelText = uploadLabel.createChild('div', 'conditions-list-title-text');\n    const uploadStr = i18nString(UIStrings.upload);\n    uploadLabelText.textContent = uploadStr;\n    titles.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n    const latencyLabel = titles.createChild('div', 'conditions-list-text');\n    const latencyStr = i18nString(UIStrings.latency);\n    const latencyLabelText = latencyLabel.createChild('div', 'conditions-list-title-text');\n    latencyLabelText.textContent = latencyStr;\n    titles.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n    const packetLossLabel = titles.createChild('div', 'conditions-list-text');\n    const packetLossStr = i18nString(UIStrings.packetLoss);\n    const packetLossLabelText = packetLossLabel.createChild('div', 'conditions-list-title-text');\n    packetLossLabelText.textContent = packetLossStr;\n    titles.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n    const packetQueueLengthLabel = titles.createChild('div', 'conditions-list-text');\n    const packetQueueLengthStr = i18nString(UIStrings.packetQueueLength);\n    const packetQueueLengthLabelText = packetQueueLengthLabel.createChild('div', 'conditions-list-title-text');\n    packetQueueLengthLabelText.textContent = packetQueueLengthStr;\n    titles.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n    const packetReorderingLabel = titles.createChild('div', 'conditions-list-text');\n    const packetReorderingStr = i18nString(UIStrings.packetReordering);\n    const packetReorderingText = packetReorderingLabel.createChild('div', 'conditions-list-title-text');\n    packetReorderingText.textContent = packetReorderingStr;\n\n    const fields = content.createChild('div', 'conditions-edit-row');\n    const nameInput = editor.createInput('title', 'text', '', titleValidator);\n    UI.ARIAUtils.setLabel(nameInput, nameStr);\n    fields.createChild('div', 'conditions-list-text conditions-list-title').appendChild(nameInput);\n    fields.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n\n    let cell = fields.createChild('div', 'conditions-list-text');\n    const downloadInput = editor.createInput('download', 'text', i18n.i18n.lockedString('kbit/s'), throughputValidator);\n    cell.appendChild(downloadInput);\n    UI.ARIAUtils.setLabel(downloadInput, downloadStr);\n    const downloadOptional = cell.createChild('div', 'conditions-edit-optional');\n    const optionalStr = i18nString(UIStrings.optional);\n    downloadOptional.textContent = optionalStr;\n    UI.ARIAUtils.setDescription(downloadInput, optionalStr);\n    fields.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n\n    cell = fields.createChild('div', 'conditions-list-text');\n    const uploadInput = editor.createInput('upload', 'text', i18n.i18n.lockedString('kbit/s'), throughputValidator);\n    UI.ARIAUtils.setLabel(uploadInput, uploadStr);\n    cell.appendChild(uploadInput);\n    const uploadOptional = cell.createChild('div', 'conditions-edit-optional');\n    uploadOptional.textContent = optionalStr;\n    UI.ARIAUtils.setDescription(uploadInput, optionalStr);\n    fields.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n\n    cell = fields.createChild('div', 'conditions-list-text');\n    const latencyInput = editor.createInput('latency', 'text', i18n.i18n.lockedString('ms'), latencyValidator);\n    UI.ARIAUtils.setLabel(latencyInput, latencyStr);\n    cell.appendChild(latencyInput);\n    const latencyOptional = cell.createChild('div', 'conditions-edit-optional');\n    latencyOptional.textContent = optionalStr;\n    UI.ARIAUtils.setDescription(latencyInput, optionalStr);\n    fields.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n\n    cell = fields.createChild('div', 'conditions-list-text');\n    const packetLossInput =\n        editor.createInput('packetLoss', 'text', i18n.i18n.lockedString('percent'), packetLossValidator);\n    UI.ARIAUtils.setLabel(packetLossInput, packetLossStr);\n    cell.appendChild(packetLossInput);\n    const packetLossOptional = cell.createChild('div', 'conditions-edit-optional');\n    packetLossOptional.textContent = optionalStr;\n    UI.ARIAUtils.setDescription(packetLossInput, optionalStr);\n    fields.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n\n    cell = fields.createChild('div', 'conditions-list-text');\n    const packetQueueLengthInput =\n        editor.createInput('packetQueueLength', 'text', i18nString(UIStrings.packet), packetQueueLengthValidator);\n    UI.ARIAUtils.setLabel(packetQueueLengthInput, packetQueueLengthStr);\n    cell.appendChild(packetQueueLengthInput);\n    const packetQueueLengthOptional = cell.createChild('div', 'conditions-edit-optional');\n    packetQueueLengthOptional.textContent = optionalStr;\n    UI.ARIAUtils.setDescription(packetQueueLengthInput, optionalStr);\n    fields.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n\n    cell = fields.createChild('div', 'conditions-list-text');\n    const packetReorderingInput =\n        editor.createInput('packetReordering', 'checkbox', i18nString(UIStrings.percent), packetReorderingValidator);\n    UI.ARIAUtils.setLabel(packetReorderingInput, packetLossStr);\n    cell.appendChild(packetReorderingInput);\n\n    return editor;\n\n    function titleValidator(_item: SDK.NetworkManager.Conditions, _index: number, input: UI.ListWidget.EditorControl):\n        UI.ListWidget.ValidatorResult {\n      const maxLength = 49;\n      const value = input.value.trim();\n      const valid = value.length > 0 && value.length <= maxLength;\n      if (!valid) {\n        const errorMessage = i18nString(UIStrings.profileNameCharactersLengthMust, {PH1: maxLength});\n        return {valid, errorMessage};\n      }\n      return {valid, errorMessage: undefined};\n    }\n\n    function throughputValidator(\n        _item: SDK.NetworkManager.Conditions, _index: number,\n        input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      const minThroughput = 0;\n      const maxThroughput = 10000000;\n      const value = input.value.trim();\n      const parsedValue = Number(value);\n      const throughput = input.getAttribute('aria-label');\n      const valid = !Number.isNaN(parsedValue) && parsedValue >= minThroughput && parsedValue <= maxThroughput;\n      if (!valid) {\n        const errorMessage = i18nString(\n            UIStrings.sMustBeANumberBetweenSkbsToSkbs,\n            {PH1: String(throughput), PH2: minThroughput, PH3: maxThroughput});\n        return {valid, errorMessage};\n      }\n      return {valid, errorMessage: undefined};\n    }\n\n    function latencyValidator(_item: SDK.NetworkManager.Conditions, _index: number, input: UI.ListWidget.EditorControl):\n        UI.ListWidget.ValidatorResult {\n      const minLatency = 0;\n      const maxLatency = 1000000;\n      const value = input.value.trim();\n      const parsedValue = Number(value);\n      const valid = Number.isInteger(parsedValue) && parsedValue >= minLatency && parsedValue <= maxLatency;\n      if (!valid) {\n        const errorMessage = i18nString(UIStrings.latencyMustBeAnIntegerBetweenSms, {PH1: minLatency, PH2: maxLatency});\n        return {valid, errorMessage};\n      }\n      return {valid, errorMessage: undefined};\n    }\n\n    function packetLossValidator(\n        _item: SDK.NetworkManager.Conditions, _index: number,\n        input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      const minPacketLoss = 0;\n      const maxPacketLoss = 100;\n      const value = input.value.trim();\n      const parsedValue = Number(value);\n      const valid = parsedValue >= minPacketLoss && parsedValue <= maxPacketLoss;\n      if (!valid) {\n        const errorMessage =\n            i18nString(UIStrings.packetLossMustBeAnIntegerBetweenSpct, {PH1: minPacketLoss, PH2: maxPacketLoss});\n        return {valid, errorMessage};\n      }\n      return {valid, errorMessage: undefined};\n    }\n\n    function packetQueueLengthValidator(\n        _item: SDK.NetworkManager.Conditions, _index: number,\n        input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      const minPacketQueueLength = 0;\n      const value = input.value.trim();\n      const parsedValue = Number(value);\n      const valid = parsedValue >= minPacketQueueLength;\n      if (!valid) {\n        const errorMessage = i18nString(UIStrings.packetQueueLengthMustBeAnIntegerGreaterOrEqualToZero);\n        return {valid, errorMessage};\n      }\n      return {valid, errorMessage: undefined};\n    }\n\n    function packetReorderingValidator(\n        _item: SDK.NetworkManager.Conditions, _index: number,\n        _input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      return {valid: true, errorMessage: undefined};\n    }\n  }\n}\n\nfunction throughputText(throughput: number): string {\n  if (throughput < 0) {\n    return '';\n  }\n  const throughputInKbps = throughput / (1000 / 8);\n  if (throughputInKbps < 1000) {\n    return i18nString(UIStrings.dskbits, {PH1: throughputInKbps});\n  }\n  if (throughputInKbps < 1000 * 10) {\n    const formattedResult = (throughputInKbps / 1000).toFixed(1);\n    return i18nString(UIStrings.fsmbits, {PH1: formattedResult});\n  }\n  // TODO(petermarshall): Figure out if there is a difference we need to tell i18n about\n  // for these two versions: one with decimal places and one without.\n  return i18nString(UIStrings.fsmbits, {PH1: (throughputInKbps / 1000) | 0});\n}\n\nfunction percentText(percent: number): string {\n  if (percent < 0) {\n    return '';\n  }\n  return String(percent) + '%';\n}\n"],
  "mappings": "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",
  "names": []
}
