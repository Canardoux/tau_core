{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/elements/components/ElementsBreadcrumbsUtils.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\n\nimport type {DOMNode} from './Helper.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Elements Breadcrumbs of the Elements panel. Indicates that a HTML element\n   * is a text node, meaning it contains text only and no other HTML elements. Should be translatd.\n   */\n  text: '(text)',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/components/ElementsBreadcrumbsUtils.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport type UserScrollPosition = 'start'|'middle'|'end';\n\nexport interface Crumb {\n  title: CrumbTitle;\n  selected: boolean;\n  node: DOMNode;\n  originalNode: unknown;\n}\n\nexport interface CrumbTitle {\n  main: string;\n  extras: {id?: string, classes?: string[]};\n}\n\nexport const crumbsToRender = (crumbs: readonly DOMNode[], selectedNode: Readonly<DOMNode>|null): Crumb[] => {\n  if (!selectedNode) {\n    return [];\n  }\n\n  return crumbs\n      .filter(crumb => {\n        return crumb.nodeType !== Node.DOCUMENT_NODE;\n      })\n      .map(crumb => {\n        return {\n          title: determineElementTitle(crumb),\n          selected: crumb.id === selectedNode.id,\n          node: crumb,\n          originalNode: crumb.legacyDomNode,\n        };\n      })\n      .reverse();\n};\n\nconst makeCrumbTitle = (main: string, extras = {}): CrumbTitle => {\n  return {\n    main,\n    extras,\n  };\n};\n\nexport const determineElementTitle = (domNode: DOMNode): CrumbTitle => {\n  switch (domNode.nodeType) {\n    case Node.ELEMENT_NODE: {\n      if (domNode.pseudoType) {\n        return makeCrumbTitle('::' + domNode.pseudoType);\n      }\n      const crumbTitle = makeCrumbTitle(domNode.nodeNameNicelyCased);\n\n      const id = domNode.getAttribute('id');\n      if (id) {\n        crumbTitle.extras.id = id;\n      }\n\n      const classAttribute = domNode.getAttribute('class');\n      if (classAttribute) {\n        const classes = new Set(classAttribute.split(/\\s+/));\n        crumbTitle.extras.classes = Array.from(classes);\n      }\n\n      return crumbTitle;\n    }\n\n    case Node.TEXT_NODE:\n      return makeCrumbTitle(i18nString(UIStrings.text));\n    case Node.COMMENT_NODE:\n      return makeCrumbTitle('<!-->');\n    case Node.DOCUMENT_TYPE_NODE:\n      return makeCrumbTitle('<!doctype>');\n    case Node.DOCUMENT_FRAGMENT_NODE:\n      return makeCrumbTitle(domNode.shadowRootType ? '#shadow-root' : domNode.nodeNameNicelyCased);\n    default:\n      return makeCrumbTitle(domNode.nodeNameNicelyCased);\n  }\n};\n"],
  "mappings": ";AAIA,YAAY,UAAU;AAItB,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAKhB,MAAM;AACR;AACA,MAAM,OAAO,KAAK,KAAK,kBAAkB,0DAA0D,SAAS;AAC5G,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW,IAAI;AAgB7D,aAAM,iBAAiB,CAAC,QAA4B,iBAAkD;AAC3G,MAAI,CAAC,cAAc;AACjB,WAAO,CAAC;AAAA,EACV;AAEA,SAAO,OACF,OAAO,WAAS;AACf,WAAO,MAAM,aAAa,KAAK;AAAA,EACjC,CAAC,EACA,IAAI,WAAS;AACZ,WAAO;AAAA,MACL,OAAO,sBAAsB,KAAK;AAAA,MAClC,UAAU,MAAM,OAAO,aAAa;AAAA,MACpC,MAAM;AAAA,MACN,cAAc,MAAM;AAAA,IACtB;AAAA,EACF,CAAC,EACA,QAAQ;AACf;AAEA,MAAM,iBAAiB,CAAC,MAAc,SAAS,CAAC,MAAkB;AAChE,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAEO,aAAM,wBAAwB,CAAC,YAAiC;AACrE,UAAQ,QAAQ,UAAU;AAAA,IACxB,KAAK,KAAK,cAAc;AACtB,UAAI,QAAQ,YAAY;AACtB,eAAO,eAAe,OAAO,QAAQ,UAAU;AAAA,MACjD;AACA,YAAM,aAAa,eAAe,QAAQ,mBAAmB;AAE7D,YAAM,KAAK,QAAQ,aAAa,IAAI;AACpC,UAAI,IAAI;AACN,mBAAW,OAAO,KAAK;AAAA,MACzB;AAEA,YAAM,iBAAiB,QAAQ,aAAa,OAAO;AACnD,UAAI,gBAAgB;AAClB,cAAM,UAAU,IAAI,IAAI,eAAe,MAAM,KAAK,CAAC;AACnD,mBAAW,OAAO,UAAU,MAAM,KAAK,OAAO;AAAA,MAChD;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,KAAK,KAAK;AACR,aAAO,eAAe,WAAW,UAAU,IAAI,CAAC;AAAA,IAClD,KAAK,KAAK;AACR,aAAO,eAAe,OAAO;AAAA,IAC/B,KAAK,KAAK;AACR,aAAO,eAAe,YAAY;AAAA,IACpC,KAAK,KAAK;AACR,aAAO,eAAe,QAAQ,iBAAiB,iBAAiB,QAAQ,mBAAmB;AAAA,IAC7F;AACE,aAAO,eAAe,QAAQ,mBAAmB;AAAA,EACrD;AACF;",
  "names": []
}
