{
  "version": 3,
  "sources": ["../../../../../../../../../../third_party/devtools-frontend/src/front_end/panels/elements/components/LayoutPane.ts"],
  "sourcesContent": ["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/components/node_text/node_text.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as Input from '../../../ui/components/input/input.js';\nimport * as LegacyWrapper from '../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n// eslint-disable-next-line rulesdir/es_modules_import\nimport inspectorCommonStyles from '../../../ui/legacy/inspectorCommon.css.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport layoutPaneStyles from './layoutPane.css.js';\nimport type {BooleanSetting, EnumSetting, LayoutElement, Setting} from './LayoutPaneUtils.js';\n\nconst UIStrings = {\n  /**\n   *@description Title of the input to select the overlay color for an element using the color picker\n   */\n  chooseElementOverlayColor: 'Choose the overlay color for this element',\n  /**\n   *@description Title of the show element button in the Layout pane of the Elements panel\n   */\n  showElementInTheElementsPanel: 'Show element in the Elements panel',\n  /**\n   *@description Title of a section on CSS Grid tooling\n   */\n  grid: 'Grid',\n  /**\n   *@description Title of a section in the Layout Sidebar pane of the Elements panel\n   */\n  overlayDisplaySettings: 'Overlay display settings',\n  /**\n   *@description Title of a section in Layout sidebar pane\n   */\n  gridOverlays: 'Grid overlays',\n  /**\n   *@description Message in the Layout panel informing users that no CSS Grid layouts were found on the page\n   */\n  noGridLayoutsFoundOnThisPage: 'No grid layouts found on this page',\n  /**\n   *@description Title of the Flexbox section in the Layout panel\n   */\n  flexbox: 'Flexbox',\n  /**\n   *@description Title of a section in the Layout panel\n   */\n  flexboxOverlays: 'Flexbox overlays',\n  /**\n   *@description Text in the Layout panel, when no flexbox elements are found\n   */\n  noFlexboxLayoutsFoundOnThisPage: 'No flexbox layouts found on this page',\n  /**\n   *@description Screen reader announcement when opening color picker tool.\n   */\n  colorPickerOpened: 'Color picker opened.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/components/LayoutPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport {LayoutElement};\n\nconst {render, html} = LitHtml;\n\nconst nodeToLayoutElement = (node: SDK.DOMModel.DOMNode): LayoutElement => {\n  const className = node.getAttribute('class');\n  const nodeId = node.id;\n  return {\n    id: nodeId,\n    color: 'var(--sys-color-inverse-surface)',\n    name: node.localName(),\n    domId: node.getAttribute('id'),\n    domClasses: className ? className.split(/\\s+/).filter(s => Boolean(s)) : undefined,\n    enabled: false,\n    reveal: () => {\n      void Common.Revealer.reveal(node);\n      void node.scrollIntoView();\n    },\n    highlight: () => {\n      node.highlight();\n    },\n    hideHighlight: () => {\n      SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    },\n    toggle: (_value: boolean) => {\n      throw new Error('Not implemented');\n    },\n    setColor(_value: string): never {\n      throw new Error('Not implemented');\n    },\n  };\n};\n\nconst gridNodesToElements = (nodes: SDK.DOMModel.DOMNode[]): LayoutElement[] => {\n  return nodes.map(node => {\n    const layoutElement = nodeToLayoutElement(node);\n    const nodeId = node.id;\n    return {\n      ...layoutElement,\n      color:\n          node.domModel().overlayModel().colorOfGridInPersistentOverlay(nodeId) || 'var(--sys-color-inverse-surface)',\n      enabled: node.domModel().overlayModel().isHighlightedGridInPersistentOverlay(nodeId),\n      toggle: (value: boolean) => {\n        if (value) {\n          node.domModel().overlayModel().highlightGridInPersistentOverlay(nodeId);\n        } else {\n          node.domModel().overlayModel().hideGridInPersistentOverlay(nodeId);\n        }\n      },\n      setColor(value: string): void {\n        this.color = value;\n        node.domModel().overlayModel().setColorOfGridInPersistentOverlay(nodeId, value);\n      },\n    };\n  });\n};\n\nconst flexContainerNodesToElements = (nodes: SDK.DOMModel.DOMNode[]): LayoutElement[] => {\n  return nodes.map(node => {\n    const layoutElement = nodeToLayoutElement(node);\n    const nodeId = node.id;\n    return {\n      ...layoutElement,\n      color:\n          node.domModel().overlayModel().colorOfFlexInPersistentOverlay(nodeId) || 'var(--sys-color-inverse-surface)',\n      enabled: node.domModel().overlayModel().isHighlightedFlexContainerInPersistentOverlay(nodeId),\n      toggle: (value: boolean) => {\n        if (value) {\n          node.domModel().overlayModel().highlightFlexContainerInPersistentOverlay(nodeId);\n        } else {\n          node.domModel().overlayModel().hideFlexContainerInPersistentOverlay(nodeId);\n        }\n      },\n      setColor(value: string): void {\n        this.color = value;\n        node.domModel().overlayModel().setColorOfFlexInPersistentOverlay(nodeId, value);\n      },\n    };\n  });\n};\n\ninterface HTMLInputElementEvent extends Event {\n  target: HTMLInputElement;\n}\n\nfunction isEnumSetting(setting: Setting): setting is EnumSetting {\n  return setting.type === Common.Settings.SettingType.ENUM;\n}\n\nfunction isBooleanSetting(setting: Setting): setting is BooleanSetting {\n  return setting.type === Common.Settings.SettingType.BOOLEAN;\n}\n\nexport interface LayoutPaneData {\n  settings: Setting[];\n  gridElements: LayoutElement[];\n  flexContainerElements?: LayoutElement[];\n}\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\nlet layoutPaneWrapperInstance: LegacyWrapper.LegacyWrapper.LegacyWrapper<UI.Widget.Widget, LayoutPane>;\n\nexport class LayoutPane extends LegacyWrapper.LegacyWrapper.WrappableComponent {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #settings: Readonly<Setting[]> = [];\n  readonly #uaShadowDOMSetting: Common.Settings.Setting<boolean>;\n  #domModels: SDK.DOMModel.DOMModel[];\n\n  constructor() {\n    super();\n    this.#settings = this.#makeSettings();\n    this.#uaShadowDOMSetting = Common.Settings.Settings.instance().moduleSetting('show-ua-shadow-dom');\n    this.#domModels = [];\n    this.#shadow.adoptedStyleSheets = [\n      Input.checkboxStyles,\n      layoutPaneStyles,\n      inspectorCommonStyles,\n    ];\n  }\n\n  static instance(): LayoutPane {\n    if (!layoutPaneWrapperInstance) {\n      layoutPaneWrapperInstance = LegacyWrapper.LegacyWrapper.legacyWrapper(UI.Widget.Widget, new LayoutPane());\n    }\n    layoutPaneWrapperInstance.element.style.minWidth = 'min-content';\n    layoutPaneWrapperInstance.element.setAttribute('jslog', `${VisualLogging.pane('layout').track({resize: true})}`);\n    return layoutPaneWrapperInstance.getComponent();\n  }\n\n  modelAdded(domModel: SDK.DOMModel.DOMModel): void {\n    const overlayModel = domModel.overlayModel();\n    overlayModel.addEventListener(SDK.OverlayModel.Events.PERSISTENT_GRID_OVERLAY_STATE_CHANGED, this.render, this);\n    overlayModel.addEventListener(\n        SDK.OverlayModel.Events.PERSISTENT_FLEX_CONTAINER_OVERLAY_STATE_CHANGED, this.render, this);\n    this.#domModels.push(domModel);\n  }\n\n  modelRemoved(domModel: SDK.DOMModel.DOMModel): void {\n    const overlayModel = domModel.overlayModel();\n    overlayModel.removeEventListener(SDK.OverlayModel.Events.PERSISTENT_GRID_OVERLAY_STATE_CHANGED, this.render, this);\n    overlayModel.removeEventListener(\n        SDK.OverlayModel.Events.PERSISTENT_FLEX_CONTAINER_OVERLAY_STATE_CHANGED, this.render, this);\n    this.#domModels = this.#domModels.filter(model => model !== domModel);\n  }\n\n  async #fetchNodesByStyle(style: {\n    name: string,\n    value: string,\n  }[]): Promise<SDK.DOMModel.DOMNode[]> {\n    const showUAShadowDOM = this.#uaShadowDOMSetting.get();\n\n    const nodes = [];\n    for (const domModel of this.#domModels) {\n      try {\n        const nodeIds = await domModel.getNodesByStyle(style, true /* pierce */);\n        for (const nodeId of nodeIds) {\n          const node = domModel.nodeForId(nodeId);\n          if (node !== null && (showUAShadowDOM || !node.ancestorUserAgentShadowRoot())) {\n            nodes.push(node);\n          }\n        }\n      } catch (error) {\n        // TODO(crbug.com/1167706): Sometimes in E2E tests the layout panel is updated after a DOM node\n        // has been removed. This causes an error that a node has not been found.\n        // We can skip nodes that resulted in an error.\n        console.warn(error);\n      }\n    }\n\n    return nodes;\n  }\n\n  async #fetchGridNodes(): Promise<SDK.DOMModel.DOMNode[]> {\n    return await this.#fetchNodesByStyle([{name: 'display', value: 'grid'}, {name: 'display', value: 'inline-grid'}]);\n  }\n\n  async #fetchFlexContainerNodes(): Promise<SDK.DOMModel.DOMNode[]> {\n    return await this.#fetchNodesByStyle([{name: 'display', value: 'flex'}, {name: 'display', value: 'inline-flex'}]);\n  }\n\n  #makeSettings(): Setting[] {\n    const settings = [];\n    for (const settingName\n             of ['show-grid-line-labels', 'show-grid-track-sizes', 'show-grid-areas', 'extend-grid-lines']) {\n      const setting = Common.Settings.Settings.instance().moduleSetting(settingName);\n      const settingValue = setting.get();\n      const settingType = setting.type();\n      if (!settingType) {\n        throw new Error('A setting provided to LayoutSidebarPane does not have a setting type');\n      }\n      if (settingType !== Common.Settings.SettingType.BOOLEAN && settingType !== Common.Settings.SettingType.ENUM) {\n        throw new Error('A setting provided to LayoutSidebarPane does not have a supported setting type');\n      }\n      const mappedSetting = {\n        type: settingType,\n        name: setting.name,\n        title: setting.title(),\n      };\n      if (typeof settingValue === 'boolean') {\n        settings.push({\n          ...mappedSetting,\n          value: settingValue,\n          options: setting.options().map(opt => ({\n                                           ...opt,\n                                           value: (opt.value as boolean),\n                                         })),\n        });\n      } else if (typeof settingValue === 'string') {\n        settings.push({\n          ...mappedSetting,\n          value: settingValue,\n          options: setting.options().map(opt => ({\n                                           ...opt,\n                                           value: (opt.value as string),\n                                         })),\n        });\n      }\n    }\n    return settings;\n  }\n\n  onSettingChanged(setting: string, value: string|boolean): void {\n    Common.Settings.Settings.instance().moduleSetting(setting).set(value);\n  }\n\n  override wasShown(): void {\n    for (const setting of this.#settings) {\n      Common.Settings.Settings.instance().moduleSetting(setting.name).addChangeListener(this.render, this);\n    }\n    for (const domModel of this.#domModels) {\n      this.modelRemoved(domModel);\n    }\n    this.#domModels = [];\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.DOMModel.DOMModel, this, {scoped: true});\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.render, this);\n    this.#uaShadowDOMSetting.addChangeListener(this.render, this);\n    void this.render();\n  }\n\n  override willHide(): void {\n    for (const setting of this.#settings) {\n      Common.Settings.Settings.instance().moduleSetting(setting.name).removeChangeListener(this.render, this);\n    }\n    SDK.TargetManager.TargetManager.instance().unobserveModels(SDK.DOMModel.DOMModel, this);\n    UI.Context.Context.instance().removeFlavorChangeListener(SDK.DOMModel.DOMNode, this.render, this);\n    this.#uaShadowDOMSetting.removeChangeListener(this.render, this);\n  }\n\n  #onSummaryKeyDown(event: KeyboardEvent): void {\n    if (!event.target) {\n      return;\n    }\n    const summaryElement = event.target as HTMLElement;\n    const detailsElement = summaryElement.parentElement as HTMLDetailsElement;\n    if (!detailsElement) {\n      throw new Error('<details> element is not found for a <summary> element');\n    }\n    switch (event.key) {\n      case 'ArrowLeft':\n        detailsElement.open = false;\n        break;\n      case 'ArrowRight':\n        detailsElement.open = true;\n        break;\n    }\n  }\n\n  override async render(): Promise<void> {\n    const gridElements = gridNodesToElements(await this.#fetchGridNodes());\n    const flexContainerElements = flexContainerNodesToElements(await this.#fetchFlexContainerNodes());\n    await coordinator.write('LayoutPane render', () => {\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      render(html`\n        <details open>\n          <summary class=\"header\" @keydown=${this.#onSummaryKeyDown} jslog=${VisualLogging.sectionHeader('grid-settings').track({click: true})}>\n            ${i18nString(UIStrings.grid)}\n          </summary>\n          <div class=\"content-section\" jslog=${VisualLogging.section('grid-settings')}>\n            <h3 class=\"content-section-title\">${i18nString(UIStrings.overlayDisplaySettings)}</h3>\n            <div class=\"select-settings\">\n              ${this.#getEnumSettings().map(setting => this.#renderEnumSetting(setting))}\n            </div>\n            <div class=\"checkbox-settings\">\n              ${this.#getBooleanSettings().map(setting => this.#renderBooleanSetting(setting))}\n            </div>\n          </div>\n          ${gridElements ?\n            html`<div class=\"content-section\" jslog=${VisualLogging.section('grid-overlays')}>\n              <h3 class=\"content-section-title\">\n                ${gridElements.length ? i18nString(UIStrings.gridOverlays) : i18nString(UIStrings.noGridLayoutsFoundOnThisPage)}\n              </h3>\n              ${gridElements.length ?\n                html`<div class=\"elements\">\n                  ${gridElements.map(element => this.#renderElement(element))}\n                </div>` : ''}\n            </div>` : ''}\n        </details>\n        ${flexContainerElements !== undefined ?\n          html`\n          <details open>\n            <summary class=\"header\" @keydown=${this.#onSummaryKeyDown} jslog=${VisualLogging.sectionHeader('flexbox-overlays').track({click: true})}>\n              ${i18nString(UIStrings.flexbox)}\n            </summary>\n            ${flexContainerElements ?\n              html`<div class=\"content-section\" jslog=${VisualLogging.section('flexbox-overlays')}>\n                <h3 class=\"content-section-title\">\n                  ${flexContainerElements.length ? i18nString(UIStrings.flexboxOverlays) : i18nString(UIStrings.noFlexboxLayoutsFoundOnThisPage)}\n                </h3>\n                ${flexContainerElements.length ?\n                  html`<div class=\"elements\">\n                    ${flexContainerElements.map(element => this.#renderElement(element))}\n                  </div>` : ''}\n              </div>` : ''}\n          </details>\n          `\n        : ''}\n      `, this.#shadow, {\n        host: this,\n      });\n      // clang-format on\n    });\n  }\n\n  #getEnumSettings(): EnumSetting[] {\n    return this.#settings.filter(isEnumSetting);\n  }\n\n  #getBooleanSettings(): BooleanSetting[] {\n    return this.#settings.filter(isBooleanSetting);\n  }\n\n  #onBooleanSettingChange(setting: BooleanSetting, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    this.onSettingChanged(setting.name, event.target.checked);\n  }\n\n  #onEnumSettingChange(setting: EnumSetting, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    this.onSettingChanged(setting.name, event.target.value);\n  }\n\n  #onElementToggle(element: LayoutElement, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    element.toggle(event.target.checked);\n  }\n\n  #onElementClick(element: LayoutElement, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    element.reveal();\n  }\n\n  #onColorChange(element: LayoutElement, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    element.setColor(event.target.value);\n    void this.render();\n  }\n\n  #onElementMouseEnter(element: LayoutElement, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    element.highlight();\n  }\n\n  #onElementMouseLeave(element: LayoutElement, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    element.hideHighlight();\n  }\n\n  #renderElement(element: LayoutElement): LitHtml.TemplateResult {\n    const onElementToggle = this.#onElementToggle.bind(this, element);\n    const onElementClick = this.#onElementClick.bind(this, element);\n    const onColorChange = this.#onColorChange.bind(this, element);\n    const onMouseEnter = this.#onElementMouseEnter.bind(this, element);\n    const onMouseLeave = this.#onElementMouseLeave.bind(this, element);\n    const onColorLabelKeyUp = (event: KeyboardEvent): void => {\n      // Handle Enter and Space events to make the color picker accessible.\n      if (event.key !== 'Enter' && event.key !== ' ') {\n        return;\n      }\n      const target = event.target as HTMLLabelElement;\n      const input = target.querySelector('input') as HTMLInputElement;\n      input.click();\n      UI.ARIAUtils.alert(i18nString(UIStrings.colorPickerOpened));\n      event.preventDefault();\n    };\n    const onColorLabelKeyDown = (event: KeyboardEvent): void => {\n      // Prevent default scrolling when the Space key is pressed.\n      if (event.key === ' ') {\n        event.preventDefault();\n      }\n    };\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`<div class=\"element\" jslog=${VisualLogging.item()}>\n      <label data-element=\"true\" class=\"checkbox-label\">\n        <input data-input=\"true\" type=\"checkbox\" .checked=${element.enabled} @change=${onElementToggle} jslog=${VisualLogging.toggle().track({click:true})} />\n        <span class=\"node-text-container\" data-label=\"true\" @mouseenter=${onMouseEnter} @mouseleave=${onMouseLeave}>\n          <devtools-node-text .data=${{\n            nodeId: element.domId,\n            nodeTitle: element.name,\n            nodeClasses: element.domClasses,\n          }}></devtools-node-text>\n        </span>\n      </label>\n      <label @keyup=${onColorLabelKeyUp} @keydown=${onColorLabelKeyDown} class=\"color-picker-label\" style=\"background: ${element.color};\" jslog=${VisualLogging.showStyleEditor('color').track({click: true})}>\n        <input @change=${onColorChange} @input=${onColorChange} title=${i18nString(UIStrings.chooseElementOverlayColor)} tabindex=\"0\" class=\"color-picker\" type=\"color\" value=${element.color} />\n      </label>\n      <devtools-button class=\"show-element\"\n                                           .title=${i18nString(UIStrings.showElementInTheElementsPanel)}\n                                           aria-label=${i18nString(UIStrings.showElementInTheElementsPanel)}\n                                           .iconName=${'select-element'}\n                                           .jslogContext=${'elements.select-element'}\n                                           .size=${Buttons.Button.Size.SMALL}\n                                           .variant=${Buttons.Button.Variant.ICON}\n                                           @click=${onElementClick}></devtools-button>\n    </div>`;\n            // clang-format on\n  }\n\n  #renderBooleanSetting(setting: BooleanSetting): LitHtml.TemplateResult {\n    const onBooleanSettingChange = this.#onBooleanSettingChange.bind(this, setting);\n    return html`<label data-boolean-setting=\"true\" class=\"checkbox-label\" title=${setting.title} jslog=${\n        VisualLogging.toggle().track({click: true}).context(setting.name)}>\n      <input data-input=\"true\" type=\"checkbox\" .checked=${setting.value} @change=${onBooleanSettingChange} />\n      <span data-label=\"true\">${setting.title}</span>\n    </label>`;\n  }\n\n  #renderEnumSetting(setting: EnumSetting): LitHtml.TemplateResult {\n    const onEnumSettingChange = this.#onEnumSettingChange.bind(this, setting);\n    return html`<label data-enum-setting=\"true\" class=\"select-label\" title=${setting.title}>\n      <select\n        class=\"chrome-select\"\n        data-input=\"true\"\n        jslog=${VisualLogging.dropDown().track({change: true}).context(setting.name)}\n        @change=${onEnumSettingChange}>\n        ${\n        setting.options.map(\n            opt => html`<option value=${opt.value} .selected=${setting.value === opt.value} jslog=${\n                VisualLogging.item(Platform.StringUtilities.toKebabCase(opt.value)).track({click: true})}>${\n                opt.title}</option>`)}\n      </select>\n    </label>`;\n  }\n}\n\ncustomElements.define('devtools-layout-pane', LayoutPane);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-layout-pane': LayoutPane;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
