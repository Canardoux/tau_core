{
  "version": 3,
  "sources": ["../../../../../../../../../third_party/devtools-frontend/src/front_end/entrypoints/formatter_worker/JSONFormatter.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type {FormattedContentBuilder} from './FormattedContentBuilder.js';\nimport {createTokenizer} from './FormatterWorker.js';\n\nexport class JSONFormatter {\n  builder: FormattedContentBuilder;\n  toOffset!: number;\n  fromOffset!: number;\n  lineEndings!: number[];\n  lastLine: number;\n  text!: string;\n  constructor(builder: FormattedContentBuilder) {\n    this.builder = builder;\n    this.lastLine = -1;\n  }\n\n  format(text: string, lineEndings: number[], fromOffset: number, toOffset: number): void {\n    this.lineEndings = lineEndings;\n    this.fromOffset = fromOffset;\n    this.toOffset = toOffset;\n    this.lastLine = -1;\n    this.text = text;\n    const tokenize = createTokenizer('application/json');\n    tokenize(text.substring(this.fromOffset, this.toOffset), this.tokenCallback.bind(this));\n  }\n\n  tokenCallback(token: string, type: string|null, startPosition: number): void {\n    switch (token.charAt(0)) {\n      case '{':\n      case '[':\n        if (this.text[startPosition + 1] === '}' || this.text[startPosition + 1] === ']') {\n          this.builder.addToken(token, startPosition);\n        } else {\n          this.builder.addToken(token, startPosition);\n          this.builder.addNewLine();\n          this.builder.increaseNestingLevel();\n        }\n        break;\n      case '}':\n      case ']':\n        if (this.text[startPosition - 1] === '{' || this.text[startPosition - 1] === '[') {\n          this.builder.addToken(token, startPosition);\n        } else {\n          this.builder.decreaseNestingLevel();\n          this.builder.addNewLine();\n          this.builder.addToken(token, startPosition);\n        }\n        break;\n      case ':':\n        this.builder.addToken(token, startPosition);\n        this.builder.addSoftSpace();\n        break;\n      case ',':\n        this.builder.addToken(token, startPosition);\n        this.builder.addNewLine();\n        break;\n      case '':\n      case ' ':\n      case '\\n':\n        break;\n      default:\n        this.builder.addToken(token, startPosition);\n        break;\n    }\n  }\n}\n"],
  "mappings": ";AAKA,SAAQ,uBAAsB;AAEvB,aAAM,cAAc;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY,SAAkC;AAC5C,SAAK,UAAU;AACf,SAAK,WAAW;AAAA,EAClB;AAAA,EAEA,OAAO,MAAc,aAAuB,YAAoB,UAAwB;AACtF,SAAK,cAAc;AACnB,SAAK,aAAa;AAClB,SAAK,WAAW;AAChB,SAAK,WAAW;AAChB,SAAK,OAAO;AACZ,UAAM,WAAW,gBAAgB,kBAAkB;AACnD,aAAS,KAAK,UAAU,KAAK,YAAY,KAAK,QAAQ,GAAG,KAAK,cAAc,KAAK,IAAI,CAAC;AAAA,EACxF;AAAA,EAEA,cAAc,OAAe,MAAmB,eAA6B;AAC3E,YAAQ,MAAM,OAAO,CAAC,GAAG;AAAA,MACvB,KAAK;AAAA,MACL,KAAK;AACH,YAAI,KAAK,KAAK,gBAAgB,CAAC,MAAM,OAAO,KAAK,KAAK,gBAAgB,CAAC,MAAM,KAAK;AAChF,eAAK,QAAQ,SAAS,OAAO,aAAa;AAAA,QAC5C,OAAO;AACL,eAAK,QAAQ,SAAS,OAAO,aAAa;AAC1C,eAAK,QAAQ,WAAW;AACxB,eAAK,QAAQ,qBAAqB;AAAA,QACpC;AACA;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AACH,YAAI,KAAK,KAAK,gBAAgB,CAAC,MAAM,OAAO,KAAK,KAAK,gBAAgB,CAAC,MAAM,KAAK;AAChF,eAAK,QAAQ,SAAS,OAAO,aAAa;AAAA,QAC5C,OAAO;AACL,eAAK,QAAQ,qBAAqB;AAClC,eAAK,QAAQ,WAAW;AACxB,eAAK,QAAQ,SAAS,OAAO,aAAa;AAAA,QAC5C;AACA;AAAA,MACF,KAAK;AACH,aAAK,QAAQ,SAAS,OAAO,aAAa;AAC1C,aAAK,QAAQ,aAAa;AAC1B;AAAA,MACF,KAAK;AACH,aAAK,QAAQ,SAAS,OAAO,aAAa;AAC1C,aAAK,QAAQ,WAAW;AACxB;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH;AAAA,MACF;AACE,aAAK,QAAQ,SAAS,OAAO,aAAa;AAC1C;AAAA,IACJ;AAAA,EACF;AACF;",
  "names": []
}
