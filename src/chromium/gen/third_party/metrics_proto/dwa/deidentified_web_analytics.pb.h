// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dwa/deidentified_web_analytics.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dwa_2fdeidentified_5fweb_5fanalytics_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dwa_2fdeidentified_5fweb_5fanalytics_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "system_profile.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dwa_2fdeidentified_5fweb_5fanalytics_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dwa_2fdeidentified_5fweb_5fanalytics_2eproto {
  static const uint32_t offsets[];
};
namespace dwa {
class CoarseSystemInfo;
struct CoarseSystemInfoDefaultTypeInternal;
extern CoarseSystemInfoDefaultTypeInternal _CoarseSystemInfo_default_instance_;
class DeidentifiedWebAnalyticsEvent;
struct DeidentifiedWebAnalyticsEventDefaultTypeInternal;
extern DeidentifiedWebAnalyticsEventDefaultTypeInternal _DeidentifiedWebAnalyticsEvent_default_instance_;
class DeidentifiedWebAnalyticsEvent_ContentMetric;
struct DeidentifiedWebAnalyticsEvent_ContentMetricDefaultTypeInternal;
extern DeidentifiedWebAnalyticsEvent_ContentMetricDefaultTypeInternal _DeidentifiedWebAnalyticsEvent_ContentMetric_default_instance_;
class DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics;
struct DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetricsDefaultTypeInternal;
extern DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetricsDefaultTypeInternal _DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_default_instance_;
class DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric;
struct DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_MetricDefaultTypeInternal;
extern DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_MetricDefaultTypeInternal _DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric_default_instance_;
class DeidentifiedWebAnalyticsReport;
struct DeidentifiedWebAnalyticsReportDefaultTypeInternal;
extern DeidentifiedWebAnalyticsReportDefaultTypeInternal _DeidentifiedWebAnalyticsReport_default_instance_;
class EncryptedPageLoadEvents;
struct EncryptedPageLoadEventsDefaultTypeInternal;
extern EncryptedPageLoadEventsDefaultTypeInternal _EncryptedPageLoadEvents_default_instance_;
class EncryptedPageLoadEvents_EncryptedPageLoadEvent;
struct EncryptedPageLoadEvents_EncryptedPageLoadEventDefaultTypeInternal;
extern EncryptedPageLoadEvents_EncryptedPageLoadEventDefaultTypeInternal _EncryptedPageLoadEvents_EncryptedPageLoadEvent_default_instance_;
class EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent;
struct EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEventDefaultTypeInternal;
extern EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEventDefaultTypeInternal _EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent_default_instance_;
class PageLoadEvents;
struct PageLoadEventsDefaultTypeInternal;
extern PageLoadEventsDefaultTypeInternal _PageLoadEvents_default_instance_;
}  // namespace dwa
PROTOBUF_NAMESPACE_OPEN
template<> ::dwa::CoarseSystemInfo* Arena::CreateMaybeMessage<::dwa::CoarseSystemInfo>(Arena*);
template<> ::dwa::DeidentifiedWebAnalyticsEvent* Arena::CreateMaybeMessage<::dwa::DeidentifiedWebAnalyticsEvent>(Arena*);
template<> ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric* Arena::CreateMaybeMessage<::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric>(Arena*);
template<> ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics* Arena::CreateMaybeMessage<::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics>(Arena*);
template<> ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric* Arena::CreateMaybeMessage<::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric>(Arena*);
template<> ::dwa::DeidentifiedWebAnalyticsReport* Arena::CreateMaybeMessage<::dwa::DeidentifiedWebAnalyticsReport>(Arena*);
template<> ::dwa::EncryptedPageLoadEvents* Arena::CreateMaybeMessage<::dwa::EncryptedPageLoadEvents>(Arena*);
template<> ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent* Arena::CreateMaybeMessage<::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent>(Arena*);
template<> ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent* Arena::CreateMaybeMessage<::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent>(Arena*);
template<> ::dwa::PageLoadEvents* Arena::CreateMaybeMessage<::dwa::PageLoadEvents>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace dwa {

enum CoarseSystemInfo_Channel : int {
  CoarseSystemInfo_Channel_CHANNEL_INVALID = 0,
  CoarseSystemInfo_Channel_CHANNEL_STABLE = 1,
  CoarseSystemInfo_Channel_CHANNEL_NOT_STABLE = 2
};
bool CoarseSystemInfo_Channel_IsValid(int value);
constexpr CoarseSystemInfo_Channel CoarseSystemInfo_Channel_Channel_MIN = CoarseSystemInfo_Channel_CHANNEL_INVALID;
constexpr CoarseSystemInfo_Channel CoarseSystemInfo_Channel_Channel_MAX = CoarseSystemInfo_Channel_CHANNEL_NOT_STABLE;
constexpr int CoarseSystemInfo_Channel_Channel_ARRAYSIZE = CoarseSystemInfo_Channel_Channel_MAX + 1;

const std::string& CoarseSystemInfo_Channel_Name(CoarseSystemInfo_Channel value);
template<typename T>
inline const std::string& CoarseSystemInfo_Channel_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CoarseSystemInfo_Channel>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CoarseSystemInfo_Channel_Name.");
  return CoarseSystemInfo_Channel_Name(static_cast<CoarseSystemInfo_Channel>(enum_t_value));
}
bool CoarseSystemInfo_Channel_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CoarseSystemInfo_Channel* value);
enum CoarseSystemInfo_Platform : int {
  CoarseSystemInfo_Platform_PLATFORM_INVALID = 0,
  CoarseSystemInfo_Platform_PLATFORM_OTHER = 1,
  CoarseSystemInfo_Platform_PLATFORM_ANDROID_WEBVIEW = 2,
  CoarseSystemInfo_Platform_PLATFORM_ANDROID_BROWSER_APP = 3,
  CoarseSystemInfo_Platform_PLATFORM_ANDROID_CCT = 4,
  CoarseSystemInfo_Platform_PLATFORM_ANDROID_PWA = 5,
  CoarseSystemInfo_Platform_PLATFORM_ANDROID_TWA = 6,
  CoarseSystemInfo_Platform_PLATFORM_IOS = 7,
  CoarseSystemInfo_Platform_PLATFORM_WINDOWS = 8,
  CoarseSystemInfo_Platform_PLATFORM_MACOS = 9,
  CoarseSystemInfo_Platform_PLATFORM_LINUX = 10,
  CoarseSystemInfo_Platform_PLATFORM_CHROMEOS = 11,
  CoarseSystemInfo_Platform_PLATFORM_ANDROID = 12
};
bool CoarseSystemInfo_Platform_IsValid(int value);
constexpr CoarseSystemInfo_Platform CoarseSystemInfo_Platform_Platform_MIN = CoarseSystemInfo_Platform_PLATFORM_INVALID;
constexpr CoarseSystemInfo_Platform CoarseSystemInfo_Platform_Platform_MAX = CoarseSystemInfo_Platform_PLATFORM_ANDROID;
constexpr int CoarseSystemInfo_Platform_Platform_ARRAYSIZE = CoarseSystemInfo_Platform_Platform_MAX + 1;

const std::string& CoarseSystemInfo_Platform_Name(CoarseSystemInfo_Platform value);
template<typename T>
inline const std::string& CoarseSystemInfo_Platform_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CoarseSystemInfo_Platform>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CoarseSystemInfo_Platform_Name.");
  return CoarseSystemInfo_Platform_Name(static_cast<CoarseSystemInfo_Platform>(enum_t_value));
}
bool CoarseSystemInfo_Platform_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CoarseSystemInfo_Platform* value);
enum CoarseSystemInfo_GeoDesignation : int {
  CoarseSystemInfo_GeoDesignation_GEO_DESIGNATION_INVALID = 0,
  CoarseSystemInfo_GeoDesignation_GEO_DESIGNATION_EEA = 1,
  CoarseSystemInfo_GeoDesignation_GEO_DESIGNATION_ROW = 2
};
bool CoarseSystemInfo_GeoDesignation_IsValid(int value);
constexpr CoarseSystemInfo_GeoDesignation CoarseSystemInfo_GeoDesignation_GeoDesignation_MIN = CoarseSystemInfo_GeoDesignation_GEO_DESIGNATION_INVALID;
constexpr CoarseSystemInfo_GeoDesignation CoarseSystemInfo_GeoDesignation_GeoDesignation_MAX = CoarseSystemInfo_GeoDesignation_GEO_DESIGNATION_ROW;
constexpr int CoarseSystemInfo_GeoDesignation_GeoDesignation_ARRAYSIZE = CoarseSystemInfo_GeoDesignation_GeoDesignation_MAX + 1;

const std::string& CoarseSystemInfo_GeoDesignation_Name(CoarseSystemInfo_GeoDesignation value);
template<typename T>
inline const std::string& CoarseSystemInfo_GeoDesignation_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CoarseSystemInfo_GeoDesignation>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CoarseSystemInfo_GeoDesignation_Name.");
  return CoarseSystemInfo_GeoDesignation_Name(static_cast<CoarseSystemInfo_GeoDesignation>(enum_t_value));
}
bool CoarseSystemInfo_GeoDesignation_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CoarseSystemInfo_GeoDesignation* value);
enum CoarseSystemInfo_ClientAge : int {
  CoarseSystemInfo_ClientAge_CLIENT_AGE_INVALID = 0,
  CoarseSystemInfo_ClientAge_CLIENT_AGE_RECENT = 1,
  CoarseSystemInfo_ClientAge_CLIENT_AGE_NOT_RECENT = 2
};
bool CoarseSystemInfo_ClientAge_IsValid(int value);
constexpr CoarseSystemInfo_ClientAge CoarseSystemInfo_ClientAge_ClientAge_MIN = CoarseSystemInfo_ClientAge_CLIENT_AGE_INVALID;
constexpr CoarseSystemInfo_ClientAge CoarseSystemInfo_ClientAge_ClientAge_MAX = CoarseSystemInfo_ClientAge_CLIENT_AGE_NOT_RECENT;
constexpr int CoarseSystemInfo_ClientAge_ClientAge_ARRAYSIZE = CoarseSystemInfo_ClientAge_ClientAge_MAX + 1;

const std::string& CoarseSystemInfo_ClientAge_Name(CoarseSystemInfo_ClientAge value);
template<typename T>
inline const std::string& CoarseSystemInfo_ClientAge_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CoarseSystemInfo_ClientAge>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CoarseSystemInfo_ClientAge_Name.");
  return CoarseSystemInfo_ClientAge_Name(static_cast<CoarseSystemInfo_ClientAge>(enum_t_value));
}
bool CoarseSystemInfo_ClientAge_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CoarseSystemInfo_ClientAge* value);
enum DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType : int {
  DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_CONTENT_TYPE_INVALID = 0,
  DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_CONTENT_TYPE_URL = 1
};
bool DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_IsValid(int value);
constexpr DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_ContentType_MIN = DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_CONTENT_TYPE_INVALID;
constexpr DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_ContentType_MAX = DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_CONTENT_TYPE_URL;
constexpr int DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_ContentType_ARRAYSIZE = DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_ContentType_MAX + 1;

const std::string& DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_Name(DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType value);
template<typename T>
inline const std::string& DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_Name.");
  return DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_Name(static_cast<DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType>(enum_t_value));
}
bool DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType* value);
// ===================================================================

class DeidentifiedWebAnalyticsReport final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:dwa.DeidentifiedWebAnalyticsReport) */ {
 public:
  inline DeidentifiedWebAnalyticsReport() : DeidentifiedWebAnalyticsReport(nullptr) {}
  ~DeidentifiedWebAnalyticsReport() override;
  explicit PROTOBUF_CONSTEXPR DeidentifiedWebAnalyticsReport(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeidentifiedWebAnalyticsReport(const DeidentifiedWebAnalyticsReport& from);
  DeidentifiedWebAnalyticsReport(DeidentifiedWebAnalyticsReport&& from) noexcept
    : DeidentifiedWebAnalyticsReport() {
    *this = ::std::move(from);
  }

  inline DeidentifiedWebAnalyticsReport& operator=(const DeidentifiedWebAnalyticsReport& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeidentifiedWebAnalyticsReport& operator=(DeidentifiedWebAnalyticsReport&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const DeidentifiedWebAnalyticsReport& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeidentifiedWebAnalyticsReport* internal_default_instance() {
    return reinterpret_cast<const DeidentifiedWebAnalyticsReport*>(
               &_DeidentifiedWebAnalyticsReport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DeidentifiedWebAnalyticsReport& a, DeidentifiedWebAnalyticsReport& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(DeidentifiedWebAnalyticsReport* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeidentifiedWebAnalyticsReport* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeidentifiedWebAnalyticsReport* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeidentifiedWebAnalyticsReport>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const DeidentifiedWebAnalyticsReport& from);
  void MergeFrom(const DeidentifiedWebAnalyticsReport& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeidentifiedWebAnalyticsReport* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dwa.DeidentifiedWebAnalyticsReport";
  }
  protected:
  explicit DeidentifiedWebAnalyticsReport(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageLoadEventsFieldNumber = 3,
    kEncryptedPageLoadEventsFieldNumber = 4,
    kCoarseSystemInfoFieldNumber = 1,
    kDwaEphemeralIdFieldNumber = 2,
    kTimestampFieldNumber = 5,
  };
  // repeated .dwa.PageLoadEvents page_load_events = 3;
  int page_load_events_size() const;
  private:
  int _internal_page_load_events_size() const;
  public:
  void clear_page_load_events();
  ::dwa::PageLoadEvents* mutable_page_load_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::PageLoadEvents >*
      mutable_page_load_events();
  private:
  const ::dwa::PageLoadEvents& _internal_page_load_events(int index) const;
  ::dwa::PageLoadEvents* _internal_add_page_load_events();
  public:
  const ::dwa::PageLoadEvents& page_load_events(int index) const;
  ::dwa::PageLoadEvents* add_page_load_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::PageLoadEvents >&
      page_load_events() const;

  // repeated .dwa.EncryptedPageLoadEvents encrypted_page_load_events = 4;
  int encrypted_page_load_events_size() const;
  private:
  int _internal_encrypted_page_load_events_size() const;
  public:
  void clear_encrypted_page_load_events();
  ::dwa::EncryptedPageLoadEvents* mutable_encrypted_page_load_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::EncryptedPageLoadEvents >*
      mutable_encrypted_page_load_events();
  private:
  const ::dwa::EncryptedPageLoadEvents& _internal_encrypted_page_load_events(int index) const;
  ::dwa::EncryptedPageLoadEvents* _internal_add_encrypted_page_load_events();
  public:
  const ::dwa::EncryptedPageLoadEvents& encrypted_page_load_events(int index) const;
  ::dwa::EncryptedPageLoadEvents* add_encrypted_page_load_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::EncryptedPageLoadEvents >&
      encrypted_page_load_events() const;

  // optional .dwa.CoarseSystemInfo coarse_system_info = 1;
  bool has_coarse_system_info() const;
  private:
  bool _internal_has_coarse_system_info() const;
  public:
  void clear_coarse_system_info();
  const ::dwa::CoarseSystemInfo& coarse_system_info() const;
  PROTOBUF_NODISCARD ::dwa::CoarseSystemInfo* release_coarse_system_info();
  ::dwa::CoarseSystemInfo* mutable_coarse_system_info();
  void set_allocated_coarse_system_info(::dwa::CoarseSystemInfo* coarse_system_info);
  private:
  const ::dwa::CoarseSystemInfo& _internal_coarse_system_info() const;
  ::dwa::CoarseSystemInfo* _internal_mutable_coarse_system_info();
  public:
  void unsafe_arena_set_allocated_coarse_system_info(
      ::dwa::CoarseSystemInfo* coarse_system_info);
  ::dwa::CoarseSystemInfo* unsafe_arena_release_coarse_system_info();

  // optional fixed64 dwa_ephemeral_id = 2;
  bool has_dwa_ephemeral_id() const;
  private:
  bool _internal_has_dwa_ephemeral_id() const;
  public:
  void clear_dwa_ephemeral_id();
  uint64_t dwa_ephemeral_id() const;
  void set_dwa_ephemeral_id(uint64_t value);
  private:
  uint64_t _internal_dwa_ephemeral_id() const;
  void _internal_set_dwa_ephemeral_id(uint64_t value);
  public:

  // optional int64 timestamp = 5;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  int64_t timestamp() const;
  void set_timestamp(int64_t value);
  private:
  int64_t _internal_timestamp() const;
  void _internal_set_timestamp(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:dwa.DeidentifiedWebAnalyticsReport)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::PageLoadEvents > page_load_events_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::EncryptedPageLoadEvents > encrypted_page_load_events_;
    ::dwa::CoarseSystemInfo* coarse_system_info_;
    uint64_t dwa_ephemeral_id_;
    int64_t timestamp_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dwa_2fdeidentified_5fweb_5fanalytics_2eproto;
};
// -------------------------------------------------------------------

class CoarseSystemInfo final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:dwa.CoarseSystemInfo) */ {
 public:
  inline CoarseSystemInfo() : CoarseSystemInfo(nullptr) {}
  ~CoarseSystemInfo() override;
  explicit PROTOBUF_CONSTEXPR CoarseSystemInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CoarseSystemInfo(const CoarseSystemInfo& from);
  CoarseSystemInfo(CoarseSystemInfo&& from) noexcept
    : CoarseSystemInfo() {
    *this = ::std::move(from);
  }

  inline CoarseSystemInfo& operator=(const CoarseSystemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CoarseSystemInfo& operator=(CoarseSystemInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const CoarseSystemInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CoarseSystemInfo* internal_default_instance() {
    return reinterpret_cast<const CoarseSystemInfo*>(
               &_CoarseSystemInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CoarseSystemInfo& a, CoarseSystemInfo& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(CoarseSystemInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CoarseSystemInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CoarseSystemInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CoarseSystemInfo>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const CoarseSystemInfo& from);
  void MergeFrom(const CoarseSystemInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CoarseSystemInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dwa.CoarseSystemInfo";
  }
  protected:
  explicit CoarseSystemInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef CoarseSystemInfo_Channel Channel;
  static constexpr Channel CHANNEL_INVALID =
    CoarseSystemInfo_Channel_CHANNEL_INVALID;
  static constexpr Channel CHANNEL_STABLE =
    CoarseSystemInfo_Channel_CHANNEL_STABLE;
  static constexpr Channel CHANNEL_NOT_STABLE =
    CoarseSystemInfo_Channel_CHANNEL_NOT_STABLE;
  static inline bool Channel_IsValid(int value) {
    return CoarseSystemInfo_Channel_IsValid(value);
  }
  static constexpr Channel Channel_MIN =
    CoarseSystemInfo_Channel_Channel_MIN;
  static constexpr Channel Channel_MAX =
    CoarseSystemInfo_Channel_Channel_MAX;
  static constexpr int Channel_ARRAYSIZE =
    CoarseSystemInfo_Channel_Channel_ARRAYSIZE;
  template<typename T>
  static inline const std::string& Channel_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Channel>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Channel_Name.");
    return CoarseSystemInfo_Channel_Name(enum_t_value);
  }
  static inline bool Channel_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Channel* value) {
    return CoarseSystemInfo_Channel_Parse(name, value);
  }

  typedef CoarseSystemInfo_Platform Platform;
  static constexpr Platform PLATFORM_INVALID =
    CoarseSystemInfo_Platform_PLATFORM_INVALID;
  static constexpr Platform PLATFORM_OTHER =
    CoarseSystemInfo_Platform_PLATFORM_OTHER;
  static constexpr Platform PLATFORM_ANDROID_WEBVIEW =
    CoarseSystemInfo_Platform_PLATFORM_ANDROID_WEBVIEW;
  static constexpr Platform PLATFORM_ANDROID_BROWSER_APP =
    CoarseSystemInfo_Platform_PLATFORM_ANDROID_BROWSER_APP;
  static constexpr Platform PLATFORM_ANDROID_CCT =
    CoarseSystemInfo_Platform_PLATFORM_ANDROID_CCT;
  static constexpr Platform PLATFORM_ANDROID_PWA =
    CoarseSystemInfo_Platform_PLATFORM_ANDROID_PWA;
  static constexpr Platform PLATFORM_ANDROID_TWA =
    CoarseSystemInfo_Platform_PLATFORM_ANDROID_TWA;
  static constexpr Platform PLATFORM_IOS =
    CoarseSystemInfo_Platform_PLATFORM_IOS;
  static constexpr Platform PLATFORM_WINDOWS =
    CoarseSystemInfo_Platform_PLATFORM_WINDOWS;
  static constexpr Platform PLATFORM_MACOS =
    CoarseSystemInfo_Platform_PLATFORM_MACOS;
  static constexpr Platform PLATFORM_LINUX =
    CoarseSystemInfo_Platform_PLATFORM_LINUX;
  static constexpr Platform PLATFORM_CHROMEOS =
    CoarseSystemInfo_Platform_PLATFORM_CHROMEOS;
  static constexpr Platform PLATFORM_ANDROID =
    CoarseSystemInfo_Platform_PLATFORM_ANDROID;
  static inline bool Platform_IsValid(int value) {
    return CoarseSystemInfo_Platform_IsValid(value);
  }
  static constexpr Platform Platform_MIN =
    CoarseSystemInfo_Platform_Platform_MIN;
  static constexpr Platform Platform_MAX =
    CoarseSystemInfo_Platform_Platform_MAX;
  static constexpr int Platform_ARRAYSIZE =
    CoarseSystemInfo_Platform_Platform_ARRAYSIZE;
  template<typename T>
  static inline const std::string& Platform_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Platform>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Platform_Name.");
    return CoarseSystemInfo_Platform_Name(enum_t_value);
  }
  static inline bool Platform_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Platform* value) {
    return CoarseSystemInfo_Platform_Parse(name, value);
  }

  typedef CoarseSystemInfo_GeoDesignation GeoDesignation;
  static constexpr GeoDesignation GEO_DESIGNATION_INVALID =
    CoarseSystemInfo_GeoDesignation_GEO_DESIGNATION_INVALID;
  static constexpr GeoDesignation GEO_DESIGNATION_EEA =
    CoarseSystemInfo_GeoDesignation_GEO_DESIGNATION_EEA;
  static constexpr GeoDesignation GEO_DESIGNATION_ROW =
    CoarseSystemInfo_GeoDesignation_GEO_DESIGNATION_ROW;
  static inline bool GeoDesignation_IsValid(int value) {
    return CoarseSystemInfo_GeoDesignation_IsValid(value);
  }
  static constexpr GeoDesignation GeoDesignation_MIN =
    CoarseSystemInfo_GeoDesignation_GeoDesignation_MIN;
  static constexpr GeoDesignation GeoDesignation_MAX =
    CoarseSystemInfo_GeoDesignation_GeoDesignation_MAX;
  static constexpr int GeoDesignation_ARRAYSIZE =
    CoarseSystemInfo_GeoDesignation_GeoDesignation_ARRAYSIZE;
  template<typename T>
  static inline const std::string& GeoDesignation_Name(T enum_t_value) {
    static_assert(::std::is_same<T, GeoDesignation>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function GeoDesignation_Name.");
    return CoarseSystemInfo_GeoDesignation_Name(enum_t_value);
  }
  static inline bool GeoDesignation_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      GeoDesignation* value) {
    return CoarseSystemInfo_GeoDesignation_Parse(name, value);
  }

  typedef CoarseSystemInfo_ClientAge ClientAge;
  static constexpr ClientAge CLIENT_AGE_INVALID =
    CoarseSystemInfo_ClientAge_CLIENT_AGE_INVALID;
  static constexpr ClientAge CLIENT_AGE_RECENT =
    CoarseSystemInfo_ClientAge_CLIENT_AGE_RECENT;
  static constexpr ClientAge CLIENT_AGE_NOT_RECENT =
    CoarseSystemInfo_ClientAge_CLIENT_AGE_NOT_RECENT;
  static inline bool ClientAge_IsValid(int value) {
    return CoarseSystemInfo_ClientAge_IsValid(value);
  }
  static constexpr ClientAge ClientAge_MIN =
    CoarseSystemInfo_ClientAge_ClientAge_MIN;
  static constexpr ClientAge ClientAge_MAX =
    CoarseSystemInfo_ClientAge_ClientAge_MAX;
  static constexpr int ClientAge_ARRAYSIZE =
    CoarseSystemInfo_ClientAge_ClientAge_ARRAYSIZE;
  template<typename T>
  static inline const std::string& ClientAge_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ClientAge>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ClientAge_Name.");
    return CoarseSystemInfo_ClientAge_Name(enum_t_value);
  }
  static inline bool ClientAge_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ClientAge* value) {
    return CoarseSystemInfo_ClientAge_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kChannelFieldNumber = 1,
    kPlatformFieldNumber = 2,
    kGeoDesignationFieldNumber = 3,
    kClientAgeFieldNumber = 4,
    kMilestonePrefixTrimmedFieldNumber = 5,
    kIsUkmEnabledFieldNumber = 6,
  };
  // optional .dwa.CoarseSystemInfo.Channel channel = 1;
  bool has_channel() const;
  private:
  bool _internal_has_channel() const;
  public:
  void clear_channel();
  ::dwa::CoarseSystemInfo_Channel channel() const;
  void set_channel(::dwa::CoarseSystemInfo_Channel value);
  private:
  ::dwa::CoarseSystemInfo_Channel _internal_channel() const;
  void _internal_set_channel(::dwa::CoarseSystemInfo_Channel value);
  public:

  // optional .dwa.CoarseSystemInfo.Platform platform = 2;
  bool has_platform() const;
  private:
  bool _internal_has_platform() const;
  public:
  void clear_platform();
  ::dwa::CoarseSystemInfo_Platform platform() const;
  void set_platform(::dwa::CoarseSystemInfo_Platform value);
  private:
  ::dwa::CoarseSystemInfo_Platform _internal_platform() const;
  void _internal_set_platform(::dwa::CoarseSystemInfo_Platform value);
  public:

  // optional .dwa.CoarseSystemInfo.GeoDesignation geo_designation = 3;
  bool has_geo_designation() const;
  private:
  bool _internal_has_geo_designation() const;
  public:
  void clear_geo_designation();
  ::dwa::CoarseSystemInfo_GeoDesignation geo_designation() const;
  void set_geo_designation(::dwa::CoarseSystemInfo_GeoDesignation value);
  private:
  ::dwa::CoarseSystemInfo_GeoDesignation _internal_geo_designation() const;
  void _internal_set_geo_designation(::dwa::CoarseSystemInfo_GeoDesignation value);
  public:

  // optional .dwa.CoarseSystemInfo.ClientAge client_age = 4;
  bool has_client_age() const;
  private:
  bool _internal_has_client_age() const;
  public:
  void clear_client_age();
  ::dwa::CoarseSystemInfo_ClientAge client_age() const;
  void set_client_age(::dwa::CoarseSystemInfo_ClientAge value);
  private:
  ::dwa::CoarseSystemInfo_ClientAge _internal_client_age() const;
  void _internal_set_client_age(::dwa::CoarseSystemInfo_ClientAge value);
  public:

  // optional int32 milestone_prefix_trimmed = 5;
  bool has_milestone_prefix_trimmed() const;
  private:
  bool _internal_has_milestone_prefix_trimmed() const;
  public:
  void clear_milestone_prefix_trimmed();
  int32_t milestone_prefix_trimmed() const;
  void set_milestone_prefix_trimmed(int32_t value);
  private:
  int32_t _internal_milestone_prefix_trimmed() const;
  void _internal_set_milestone_prefix_trimmed(int32_t value);
  public:

  // optional bool is_ukm_enabled = 6;
  bool has_is_ukm_enabled() const;
  private:
  bool _internal_has_is_ukm_enabled() const;
  public:
  void clear_is_ukm_enabled();
  bool is_ukm_enabled() const;
  void set_is_ukm_enabled(bool value);
  private:
  bool _internal_is_ukm_enabled() const;
  void _internal_set_is_ukm_enabled(bool value);
  public:

  // @@protoc_insertion_point(class_scope:dwa.CoarseSystemInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int channel_;
    int platform_;
    int geo_designation_;
    int client_age_;
    int32_t milestone_prefix_trimmed_;
    bool is_ukm_enabled_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dwa_2fdeidentified_5fweb_5fanalytics_2eproto;
};
// -------------------------------------------------------------------

class PageLoadEvents final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:dwa.PageLoadEvents) */ {
 public:
  inline PageLoadEvents() : PageLoadEvents(nullptr) {}
  ~PageLoadEvents() override;
  explicit PROTOBUF_CONSTEXPR PageLoadEvents(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PageLoadEvents(const PageLoadEvents& from);
  PageLoadEvents(PageLoadEvents&& from) noexcept
    : PageLoadEvents() {
    *this = ::std::move(from);
  }

  inline PageLoadEvents& operator=(const PageLoadEvents& from) {
    CopyFrom(from);
    return *this;
  }
  inline PageLoadEvents& operator=(PageLoadEvents&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const PageLoadEvents& default_instance() {
    return *internal_default_instance();
  }
  static inline const PageLoadEvents* internal_default_instance() {
    return reinterpret_cast<const PageLoadEvents*>(
               &_PageLoadEvents_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PageLoadEvents& a, PageLoadEvents& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(PageLoadEvents* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PageLoadEvents* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PageLoadEvents* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PageLoadEvents>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const PageLoadEvents& from);
  void MergeFrom(const PageLoadEvents& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PageLoadEvents* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dwa.PageLoadEvents";
  }
  protected:
  explicit PageLoadEvents(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventsFieldNumber = 1,
  };
  // repeated .dwa.DeidentifiedWebAnalyticsEvent events = 1;
  int events_size() const;
  private:
  int _internal_events_size() const;
  public:
  void clear_events();
  ::dwa::DeidentifiedWebAnalyticsEvent* mutable_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent >*
      mutable_events();
  private:
  const ::dwa::DeidentifiedWebAnalyticsEvent& _internal_events(int index) const;
  ::dwa::DeidentifiedWebAnalyticsEvent* _internal_add_events();
  public:
  const ::dwa::DeidentifiedWebAnalyticsEvent& events(int index) const;
  ::dwa::DeidentifiedWebAnalyticsEvent* add_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent >&
      events() const;

  // @@protoc_insertion_point(class_scope:dwa.PageLoadEvents)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent > events_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dwa_2fdeidentified_5fweb_5fanalytics_2eproto;
};
// -------------------------------------------------------------------

class EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.EncryptedDeidentifiedWebAnalyticsEvent) */ {
 public:
  inline EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent() : EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent(nullptr) {}
  ~EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent() override;
  explicit PROTOBUF_CONSTEXPR EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent(const EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent& from);
  EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent(EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent&& from) noexcept
    : EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent() {
    *this = ::std::move(from);
  }

  inline EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent& operator=(const EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent& operator=(EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent* internal_default_instance() {
    return reinterpret_cast<const EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent*>(
               &_EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent& a, EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent& from);
  void MergeFrom(const EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.EncryptedDeidentifiedWebAnalyticsEvent";
  }
  protected:
  explicit EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEncryptedEventFieldNumber = 1,
    kFieldTrialsHashFieldNumber = 2,
    kEventHashFieldNumber = 3,
  };
  // optional bytes encrypted_event = 1;
  bool has_encrypted_event() const;
  private:
  bool _internal_has_encrypted_event() const;
  public:
  void clear_encrypted_event();
  const std::string& encrypted_event() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_encrypted_event(ArgT0&& arg0, ArgT... args);
  std::string* mutable_encrypted_event();
  PROTOBUF_NODISCARD std::string* release_encrypted_event();
  void set_allocated_encrypted_event(std::string* encrypted_event);
  private:
  const std::string& _internal_encrypted_event() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_encrypted_event(const std::string& value);
  std::string* _internal_mutable_encrypted_event();
  public:

  // optional fixed64 field_trials_hash = 2;
  bool has_field_trials_hash() const;
  private:
  bool _internal_has_field_trials_hash() const;
  public:
  void clear_field_trials_hash();
  uint64_t field_trials_hash() const;
  void set_field_trials_hash(uint64_t value);
  private:
  uint64_t _internal_field_trials_hash() const;
  void _internal_set_field_trials_hash(uint64_t value);
  public:

  // optional fixed64 event_hash = 3;
  bool has_event_hash() const;
  private:
  bool _internal_has_event_hash() const;
  public:
  void clear_event_hash();
  uint64_t event_hash() const;
  void set_event_hash(uint64_t value);
  private:
  uint64_t _internal_event_hash() const;
  void _internal_set_event_hash(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.EncryptedDeidentifiedWebAnalyticsEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr encrypted_event_;
    uint64_t field_trials_hash_;
    uint64_t event_hash_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dwa_2fdeidentified_5fweb_5fanalytics_2eproto;
};
// -------------------------------------------------------------------

class EncryptedPageLoadEvents_EncryptedPageLoadEvent final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent) */ {
 public:
  inline EncryptedPageLoadEvents_EncryptedPageLoadEvent() : EncryptedPageLoadEvents_EncryptedPageLoadEvent(nullptr) {}
  ~EncryptedPageLoadEvents_EncryptedPageLoadEvent() override;
  explicit PROTOBUF_CONSTEXPR EncryptedPageLoadEvents_EncryptedPageLoadEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EncryptedPageLoadEvents_EncryptedPageLoadEvent(const EncryptedPageLoadEvents_EncryptedPageLoadEvent& from);
  EncryptedPageLoadEvents_EncryptedPageLoadEvent(EncryptedPageLoadEvents_EncryptedPageLoadEvent&& from) noexcept
    : EncryptedPageLoadEvents_EncryptedPageLoadEvent() {
    *this = ::std::move(from);
  }

  inline EncryptedPageLoadEvents_EncryptedPageLoadEvent& operator=(const EncryptedPageLoadEvents_EncryptedPageLoadEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline EncryptedPageLoadEvents_EncryptedPageLoadEvent& operator=(EncryptedPageLoadEvents_EncryptedPageLoadEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const EncryptedPageLoadEvents_EncryptedPageLoadEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const EncryptedPageLoadEvents_EncryptedPageLoadEvent* internal_default_instance() {
    return reinterpret_cast<const EncryptedPageLoadEvents_EncryptedPageLoadEvent*>(
               &_EncryptedPageLoadEvents_EncryptedPageLoadEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(EncryptedPageLoadEvents_EncryptedPageLoadEvent& a, EncryptedPageLoadEvents_EncryptedPageLoadEvent& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(EncryptedPageLoadEvents_EncryptedPageLoadEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EncryptedPageLoadEvents_EncryptedPageLoadEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EncryptedPageLoadEvents_EncryptedPageLoadEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EncryptedPageLoadEvents_EncryptedPageLoadEvent>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const EncryptedPageLoadEvents_EncryptedPageLoadEvent& from);
  void MergeFrom(const EncryptedPageLoadEvents_EncryptedPageLoadEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EncryptedPageLoadEvents_EncryptedPageLoadEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent";
  }
  protected:
  explicit EncryptedPageLoadEvents_EncryptedPageLoadEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent EncryptedDeidentifiedWebAnalyticsEvent;

  // accessors -------------------------------------------------------

  enum : int {
    kEncryptedDeidentifiedWebAnalyticsEventsFieldNumber = 1,
  };
  // repeated .dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.EncryptedDeidentifiedWebAnalyticsEvent encrypted_deidentified_web_analytics_events = 1;
  int encrypted_deidentified_web_analytics_events_size() const;
  private:
  int _internal_encrypted_deidentified_web_analytics_events_size() const;
  public:
  void clear_encrypted_deidentified_web_analytics_events();
  ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent* mutable_encrypted_deidentified_web_analytics_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent >*
      mutable_encrypted_deidentified_web_analytics_events();
  private:
  const ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent& _internal_encrypted_deidentified_web_analytics_events(int index) const;
  ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent* _internal_add_encrypted_deidentified_web_analytics_events();
  public:
  const ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent& encrypted_deidentified_web_analytics_events(int index) const;
  ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent* add_encrypted_deidentified_web_analytics_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent >&
      encrypted_deidentified_web_analytics_events() const;

  // @@protoc_insertion_point(class_scope:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent > encrypted_deidentified_web_analytics_events_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dwa_2fdeidentified_5fweb_5fanalytics_2eproto;
};
// -------------------------------------------------------------------

class EncryptedPageLoadEvents final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:dwa.EncryptedPageLoadEvents) */ {
 public:
  inline EncryptedPageLoadEvents() : EncryptedPageLoadEvents(nullptr) {}
  ~EncryptedPageLoadEvents() override;
  explicit PROTOBUF_CONSTEXPR EncryptedPageLoadEvents(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EncryptedPageLoadEvents(const EncryptedPageLoadEvents& from);
  EncryptedPageLoadEvents(EncryptedPageLoadEvents&& from) noexcept
    : EncryptedPageLoadEvents() {
    *this = ::std::move(from);
  }

  inline EncryptedPageLoadEvents& operator=(const EncryptedPageLoadEvents& from) {
    CopyFrom(from);
    return *this;
  }
  inline EncryptedPageLoadEvents& operator=(EncryptedPageLoadEvents&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const EncryptedPageLoadEvents& default_instance() {
    return *internal_default_instance();
  }
  static inline const EncryptedPageLoadEvents* internal_default_instance() {
    return reinterpret_cast<const EncryptedPageLoadEvents*>(
               &_EncryptedPageLoadEvents_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(EncryptedPageLoadEvents& a, EncryptedPageLoadEvents& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(EncryptedPageLoadEvents* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EncryptedPageLoadEvents* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EncryptedPageLoadEvents* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EncryptedPageLoadEvents>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const EncryptedPageLoadEvents& from);
  void MergeFrom(const EncryptedPageLoadEvents& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EncryptedPageLoadEvents* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dwa.EncryptedPageLoadEvents";
  }
  protected:
  explicit EncryptedPageLoadEvents(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef EncryptedPageLoadEvents_EncryptedPageLoadEvent EncryptedPageLoadEvent;

  // accessors -------------------------------------------------------

  enum : int {
    kEncryptedPageLoadEventsFieldNumber = 1,
  };
  // repeated .dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent encrypted_page_load_events = 1;
  int encrypted_page_load_events_size() const;
  private:
  int _internal_encrypted_page_load_events_size() const;
  public:
  void clear_encrypted_page_load_events();
  ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent* mutable_encrypted_page_load_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent >*
      mutable_encrypted_page_load_events();
  private:
  const ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent& _internal_encrypted_page_load_events(int index) const;
  ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent* _internal_add_encrypted_page_load_events();
  public:
  const ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent& encrypted_page_load_events(int index) const;
  ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent* add_encrypted_page_load_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent >&
      encrypted_page_load_events() const;

  // @@protoc_insertion_point(class_scope:dwa.EncryptedPageLoadEvents)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent > encrypted_page_load_events_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dwa_2fdeidentified_5fweb_5fanalytics_2eproto;
};
// -------------------------------------------------------------------

class DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics.Metric) */ {
 public:
  inline DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric() : DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric(nullptr) {}
  ~DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric() override;
  explicit PROTOBUF_CONSTEXPR DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric(const DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric& from);
  DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric(DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric&& from) noexcept
    : DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric() {
    *this = ::std::move(from);
  }

  inline DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric& operator=(const DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric& operator=(DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric* internal_default_instance() {
    return reinterpret_cast<const DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric*>(
               &_DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric& a, DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric& from);
  void MergeFrom(const DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics.Metric";
  }
  protected:
  explicit DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameHashFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // optional fixed64 name_hash = 1;
  bool has_name_hash() const;
  private:
  bool _internal_has_name_hash() const;
  public:
  void clear_name_hash();
  uint64_t name_hash() const;
  void set_name_hash(uint64_t value);
  private:
  uint64_t _internal_name_hash() const;
  void _internal_set_name_hash(uint64_t value);
  public:

  // optional int64 value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  int64_t value() const;
  void set_value(int64_t value);
  private:
  int64_t _internal_value() const;
  void _internal_set_value(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics.Metric)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t name_hash_;
    int64_t value_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dwa_2fdeidentified_5fweb_5fanalytics_2eproto;
};
// -------------------------------------------------------------------

class DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics) */ {
 public:
  inline DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics() : DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics(nullptr) {}
  ~DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics() override;
  explicit PROTOBUF_CONSTEXPR DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics(const DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics& from);
  DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics(DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics&& from) noexcept
    : DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics() {
    *this = ::std::move(from);
  }

  inline DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics& operator=(const DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics& operator=(DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics* internal_default_instance() {
    return reinterpret_cast<const DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics*>(
               &_DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics& a, DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics& from);
  void MergeFrom(const DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics";
  }
  protected:
  explicit DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric Metric;

  // accessors -------------------------------------------------------

  enum : int {
    kMetricFieldNumber = 1,
  };
  // repeated .dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics.Metric metric = 1;
  int metric_size() const;
  private:
  int _internal_metric_size() const;
  public:
  void clear_metric();
  ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric* mutable_metric(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric >*
      mutable_metric();
  private:
  const ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric& _internal_metric(int index) const;
  ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric* _internal_add_metric();
  public:
  const ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric& metric(int index) const;
  ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric* add_metric();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric >&
      metric() const;

  // @@protoc_insertion_point(class_scope:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric > metric_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dwa_2fdeidentified_5fweb_5fanalytics_2eproto;
};
// -------------------------------------------------------------------

class DeidentifiedWebAnalyticsEvent_ContentMetric final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric) */ {
 public:
  inline DeidentifiedWebAnalyticsEvent_ContentMetric() : DeidentifiedWebAnalyticsEvent_ContentMetric(nullptr) {}
  ~DeidentifiedWebAnalyticsEvent_ContentMetric() override;
  explicit PROTOBUF_CONSTEXPR DeidentifiedWebAnalyticsEvent_ContentMetric(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeidentifiedWebAnalyticsEvent_ContentMetric(const DeidentifiedWebAnalyticsEvent_ContentMetric& from);
  DeidentifiedWebAnalyticsEvent_ContentMetric(DeidentifiedWebAnalyticsEvent_ContentMetric&& from) noexcept
    : DeidentifiedWebAnalyticsEvent_ContentMetric() {
    *this = ::std::move(from);
  }

  inline DeidentifiedWebAnalyticsEvent_ContentMetric& operator=(const DeidentifiedWebAnalyticsEvent_ContentMetric& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeidentifiedWebAnalyticsEvent_ContentMetric& operator=(DeidentifiedWebAnalyticsEvent_ContentMetric&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const DeidentifiedWebAnalyticsEvent_ContentMetric& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeidentifiedWebAnalyticsEvent_ContentMetric* internal_default_instance() {
    return reinterpret_cast<const DeidentifiedWebAnalyticsEvent_ContentMetric*>(
               &_DeidentifiedWebAnalyticsEvent_ContentMetric_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(DeidentifiedWebAnalyticsEvent_ContentMetric& a, DeidentifiedWebAnalyticsEvent_ContentMetric& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(DeidentifiedWebAnalyticsEvent_ContentMetric* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeidentifiedWebAnalyticsEvent_ContentMetric* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeidentifiedWebAnalyticsEvent_ContentMetric* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeidentifiedWebAnalyticsEvent_ContentMetric>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const DeidentifiedWebAnalyticsEvent_ContentMetric& from);
  void MergeFrom(const DeidentifiedWebAnalyticsEvent_ContentMetric& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeidentifiedWebAnalyticsEvent_ContentMetric* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dwa.DeidentifiedWebAnalyticsEvent.ContentMetric";
  }
  protected:
  explicit DeidentifiedWebAnalyticsEvent_ContentMetric(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics EntryMetrics;

  typedef DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType ContentType;
  static constexpr ContentType CONTENT_TYPE_INVALID =
    DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_CONTENT_TYPE_INVALID;
  static constexpr ContentType CONTENT_TYPE_URL =
    DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_CONTENT_TYPE_URL;
  static inline bool ContentType_IsValid(int value) {
    return DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_IsValid(value);
  }
  static constexpr ContentType ContentType_MIN =
    DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_ContentType_MIN;
  static constexpr ContentType ContentType_MAX =
    DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_ContentType_MAX;
  static constexpr int ContentType_ARRAYSIZE =
    DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_ContentType_ARRAYSIZE;
  template<typename T>
  static inline const std::string& ContentType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ContentType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ContentType_Name.");
    return DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_Name(enum_t_value);
  }
  static inline bool ContentType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ContentType* value) {
    return DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kMetricsFieldNumber = 3,
    kContentHashFieldNumber = 2,
    kContentTypeFieldNumber = 1,
  };
  // repeated .dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics metrics = 3;
  int metrics_size() const;
  private:
  int _internal_metrics_size() const;
  public:
  void clear_metrics();
  ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics* mutable_metrics(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics >*
      mutable_metrics();
  private:
  const ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics& _internal_metrics(int index) const;
  ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics* _internal_add_metrics();
  public:
  const ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics& metrics(int index) const;
  ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics* add_metrics();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics >&
      metrics() const;

  // optional fixed64 content_hash = 2;
  bool has_content_hash() const;
  private:
  bool _internal_has_content_hash() const;
  public:
  void clear_content_hash();
  uint64_t content_hash() const;
  void set_content_hash(uint64_t value);
  private:
  uint64_t _internal_content_hash() const;
  void _internal_set_content_hash(uint64_t value);
  public:

  // optional .dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.ContentType content_type = 1;
  bool has_content_type() const;
  private:
  bool _internal_has_content_type() const;
  public:
  void clear_content_type();
  ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType content_type() const;
  void set_content_type(::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType value);
  private:
  ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType _internal_content_type() const;
  void _internal_set_content_type(::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType value);
  public:

  // @@protoc_insertion_point(class_scope:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics > metrics_;
    uint64_t content_hash_;
    int content_type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dwa_2fdeidentified_5fweb_5fanalytics_2eproto;
};
// -------------------------------------------------------------------

class DeidentifiedWebAnalyticsEvent final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:dwa.DeidentifiedWebAnalyticsEvent) */ {
 public:
  inline DeidentifiedWebAnalyticsEvent() : DeidentifiedWebAnalyticsEvent(nullptr) {}
  ~DeidentifiedWebAnalyticsEvent() override;
  explicit PROTOBUF_CONSTEXPR DeidentifiedWebAnalyticsEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeidentifiedWebAnalyticsEvent(const DeidentifiedWebAnalyticsEvent& from);
  DeidentifiedWebAnalyticsEvent(DeidentifiedWebAnalyticsEvent&& from) noexcept
    : DeidentifiedWebAnalyticsEvent() {
    *this = ::std::move(from);
  }

  inline DeidentifiedWebAnalyticsEvent& operator=(const DeidentifiedWebAnalyticsEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeidentifiedWebAnalyticsEvent& operator=(DeidentifiedWebAnalyticsEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const DeidentifiedWebAnalyticsEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeidentifiedWebAnalyticsEvent* internal_default_instance() {
    return reinterpret_cast<const DeidentifiedWebAnalyticsEvent*>(
               &_DeidentifiedWebAnalyticsEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(DeidentifiedWebAnalyticsEvent& a, DeidentifiedWebAnalyticsEvent& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(DeidentifiedWebAnalyticsEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeidentifiedWebAnalyticsEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeidentifiedWebAnalyticsEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeidentifiedWebAnalyticsEvent>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const DeidentifiedWebAnalyticsEvent& from);
  void MergeFrom(const DeidentifiedWebAnalyticsEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeidentifiedWebAnalyticsEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dwa.DeidentifiedWebAnalyticsEvent";
  }
  protected:
  explicit DeidentifiedWebAnalyticsEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef DeidentifiedWebAnalyticsEvent_ContentMetric ContentMetric;

  // accessors -------------------------------------------------------

  enum : int {
    kContentMetricsFieldNumber = 2,
    kFieldTrialsFieldNumber = 3,
    kEventHashFieldNumber = 1,
  };
  // repeated .dwa.DeidentifiedWebAnalyticsEvent.ContentMetric content_metrics = 2;
  int content_metrics_size() const;
  private:
  int _internal_content_metrics_size() const;
  public:
  void clear_content_metrics();
  ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric* mutable_content_metrics(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric >*
      mutable_content_metrics();
  private:
  const ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric& _internal_content_metrics(int index) const;
  ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric* _internal_add_content_metrics();
  public:
  const ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric& content_metrics(int index) const;
  ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric* add_content_metrics();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric >&
      content_metrics() const;

  // repeated .metrics.SystemProfileProto.FieldTrial field_trials = 3;
  int field_trials_size() const;
  private:
  int _internal_field_trials_size() const;
  public:
  void clear_field_trials();
  ::metrics::SystemProfileProto_FieldTrial* mutable_field_trials(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::metrics::SystemProfileProto_FieldTrial >*
      mutable_field_trials();
  private:
  const ::metrics::SystemProfileProto_FieldTrial& _internal_field_trials(int index) const;
  ::metrics::SystemProfileProto_FieldTrial* _internal_add_field_trials();
  public:
  const ::metrics::SystemProfileProto_FieldTrial& field_trials(int index) const;
  ::metrics::SystemProfileProto_FieldTrial* add_field_trials();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::metrics::SystemProfileProto_FieldTrial >&
      field_trials() const;

  // optional fixed64 event_hash = 1;
  bool has_event_hash() const;
  private:
  bool _internal_has_event_hash() const;
  public:
  void clear_event_hash();
  uint64_t event_hash() const;
  void set_event_hash(uint64_t value);
  private:
  uint64_t _internal_event_hash() const;
  void _internal_set_event_hash(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:dwa.DeidentifiedWebAnalyticsEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric > content_metrics_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::metrics::SystemProfileProto_FieldTrial > field_trials_;
    uint64_t event_hash_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dwa_2fdeidentified_5fweb_5fanalytics_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DeidentifiedWebAnalyticsReport

// optional .dwa.CoarseSystemInfo coarse_system_info = 1;
inline bool DeidentifiedWebAnalyticsReport::_internal_has_coarse_system_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.coarse_system_info_ != nullptr);
  return value;
}
inline bool DeidentifiedWebAnalyticsReport::has_coarse_system_info() const {
  return _internal_has_coarse_system_info();
}
inline void DeidentifiedWebAnalyticsReport::clear_coarse_system_info() {
  if (_impl_.coarse_system_info_ != nullptr) _impl_.coarse_system_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::dwa::CoarseSystemInfo& DeidentifiedWebAnalyticsReport::_internal_coarse_system_info() const {
  const ::dwa::CoarseSystemInfo* p = _impl_.coarse_system_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::dwa::CoarseSystemInfo&>(
      ::dwa::_CoarseSystemInfo_default_instance_);
}
inline const ::dwa::CoarseSystemInfo& DeidentifiedWebAnalyticsReport::coarse_system_info() const {
  // @@protoc_insertion_point(field_get:dwa.DeidentifiedWebAnalyticsReport.coarse_system_info)
  return _internal_coarse_system_info();
}
inline void DeidentifiedWebAnalyticsReport::unsafe_arena_set_allocated_coarse_system_info(
    ::dwa::CoarseSystemInfo* coarse_system_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.coarse_system_info_);
  }
  _impl_.coarse_system_info_ = coarse_system_info;
  if (coarse_system_info) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dwa.DeidentifiedWebAnalyticsReport.coarse_system_info)
}
inline ::dwa::CoarseSystemInfo* DeidentifiedWebAnalyticsReport::release_coarse_system_info() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dwa::CoarseSystemInfo* temp = _impl_.coarse_system_info_;
  _impl_.coarse_system_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dwa::CoarseSystemInfo* DeidentifiedWebAnalyticsReport::unsafe_arena_release_coarse_system_info() {
  // @@protoc_insertion_point(field_release:dwa.DeidentifiedWebAnalyticsReport.coarse_system_info)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dwa::CoarseSystemInfo* temp = _impl_.coarse_system_info_;
  _impl_.coarse_system_info_ = nullptr;
  return temp;
}
inline ::dwa::CoarseSystemInfo* DeidentifiedWebAnalyticsReport::_internal_mutable_coarse_system_info() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.coarse_system_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::dwa::CoarseSystemInfo>(GetArenaForAllocation());
    _impl_.coarse_system_info_ = p;
  }
  return _impl_.coarse_system_info_;
}
inline ::dwa::CoarseSystemInfo* DeidentifiedWebAnalyticsReport::mutable_coarse_system_info() {
  ::dwa::CoarseSystemInfo* _msg = _internal_mutable_coarse_system_info();
  // @@protoc_insertion_point(field_mutable:dwa.DeidentifiedWebAnalyticsReport.coarse_system_info)
  return _msg;
}
inline void DeidentifiedWebAnalyticsReport::set_allocated_coarse_system_info(::dwa::CoarseSystemInfo* coarse_system_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.coarse_system_info_;
  }
  if (coarse_system_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(coarse_system_info);
    if (message_arena != submessage_arena) {
      coarse_system_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, coarse_system_info, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.coarse_system_info_ = coarse_system_info;
  // @@protoc_insertion_point(field_set_allocated:dwa.DeidentifiedWebAnalyticsReport.coarse_system_info)
}

// optional fixed64 dwa_ephemeral_id = 2;
inline bool DeidentifiedWebAnalyticsReport::_internal_has_dwa_ephemeral_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool DeidentifiedWebAnalyticsReport::has_dwa_ephemeral_id() const {
  return _internal_has_dwa_ephemeral_id();
}
inline void DeidentifiedWebAnalyticsReport::clear_dwa_ephemeral_id() {
  _impl_.dwa_ephemeral_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t DeidentifiedWebAnalyticsReport::_internal_dwa_ephemeral_id() const {
  return _impl_.dwa_ephemeral_id_;
}
inline uint64_t DeidentifiedWebAnalyticsReport::dwa_ephemeral_id() const {
  // @@protoc_insertion_point(field_get:dwa.DeidentifiedWebAnalyticsReport.dwa_ephemeral_id)
  return _internal_dwa_ephemeral_id();
}
inline void DeidentifiedWebAnalyticsReport::_internal_set_dwa_ephemeral_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.dwa_ephemeral_id_ = value;
}
inline void DeidentifiedWebAnalyticsReport::set_dwa_ephemeral_id(uint64_t value) {
  _internal_set_dwa_ephemeral_id(value);
  // @@protoc_insertion_point(field_set:dwa.DeidentifiedWebAnalyticsReport.dwa_ephemeral_id)
}

// repeated .dwa.PageLoadEvents page_load_events = 3;
inline int DeidentifiedWebAnalyticsReport::_internal_page_load_events_size() const {
  return _impl_.page_load_events_.size();
}
inline int DeidentifiedWebAnalyticsReport::page_load_events_size() const {
  return _internal_page_load_events_size();
}
inline void DeidentifiedWebAnalyticsReport::clear_page_load_events() {
  _impl_.page_load_events_.Clear();
}
inline ::dwa::PageLoadEvents* DeidentifiedWebAnalyticsReport::mutable_page_load_events(int index) {
  // @@protoc_insertion_point(field_mutable:dwa.DeidentifiedWebAnalyticsReport.page_load_events)
  return _impl_.page_load_events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::PageLoadEvents >*
DeidentifiedWebAnalyticsReport::mutable_page_load_events() {
  // @@protoc_insertion_point(field_mutable_list:dwa.DeidentifiedWebAnalyticsReport.page_load_events)
  return &_impl_.page_load_events_;
}
inline const ::dwa::PageLoadEvents& DeidentifiedWebAnalyticsReport::_internal_page_load_events(int index) const {
  return _impl_.page_load_events_.Get(index);
}
inline const ::dwa::PageLoadEvents& DeidentifiedWebAnalyticsReport::page_load_events(int index) const {
  // @@protoc_insertion_point(field_get:dwa.DeidentifiedWebAnalyticsReport.page_load_events)
  return _internal_page_load_events(index);
}
inline ::dwa::PageLoadEvents* DeidentifiedWebAnalyticsReport::_internal_add_page_load_events() {
  return _impl_.page_load_events_.Add();
}
inline ::dwa::PageLoadEvents* DeidentifiedWebAnalyticsReport::add_page_load_events() {
  ::dwa::PageLoadEvents* _add = _internal_add_page_load_events();
  // @@protoc_insertion_point(field_add:dwa.DeidentifiedWebAnalyticsReport.page_load_events)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::PageLoadEvents >&
DeidentifiedWebAnalyticsReport::page_load_events() const {
  // @@protoc_insertion_point(field_list:dwa.DeidentifiedWebAnalyticsReport.page_load_events)
  return _impl_.page_load_events_;
}

// repeated .dwa.EncryptedPageLoadEvents encrypted_page_load_events = 4;
inline int DeidentifiedWebAnalyticsReport::_internal_encrypted_page_load_events_size() const {
  return _impl_.encrypted_page_load_events_.size();
}
inline int DeidentifiedWebAnalyticsReport::encrypted_page_load_events_size() const {
  return _internal_encrypted_page_load_events_size();
}
inline void DeidentifiedWebAnalyticsReport::clear_encrypted_page_load_events() {
  _impl_.encrypted_page_load_events_.Clear();
}
inline ::dwa::EncryptedPageLoadEvents* DeidentifiedWebAnalyticsReport::mutable_encrypted_page_load_events(int index) {
  // @@protoc_insertion_point(field_mutable:dwa.DeidentifiedWebAnalyticsReport.encrypted_page_load_events)
  return _impl_.encrypted_page_load_events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::EncryptedPageLoadEvents >*
DeidentifiedWebAnalyticsReport::mutable_encrypted_page_load_events() {
  // @@protoc_insertion_point(field_mutable_list:dwa.DeidentifiedWebAnalyticsReport.encrypted_page_load_events)
  return &_impl_.encrypted_page_load_events_;
}
inline const ::dwa::EncryptedPageLoadEvents& DeidentifiedWebAnalyticsReport::_internal_encrypted_page_load_events(int index) const {
  return _impl_.encrypted_page_load_events_.Get(index);
}
inline const ::dwa::EncryptedPageLoadEvents& DeidentifiedWebAnalyticsReport::encrypted_page_load_events(int index) const {
  // @@protoc_insertion_point(field_get:dwa.DeidentifiedWebAnalyticsReport.encrypted_page_load_events)
  return _internal_encrypted_page_load_events(index);
}
inline ::dwa::EncryptedPageLoadEvents* DeidentifiedWebAnalyticsReport::_internal_add_encrypted_page_load_events() {
  return _impl_.encrypted_page_load_events_.Add();
}
inline ::dwa::EncryptedPageLoadEvents* DeidentifiedWebAnalyticsReport::add_encrypted_page_load_events() {
  ::dwa::EncryptedPageLoadEvents* _add = _internal_add_encrypted_page_load_events();
  // @@protoc_insertion_point(field_add:dwa.DeidentifiedWebAnalyticsReport.encrypted_page_load_events)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::EncryptedPageLoadEvents >&
DeidentifiedWebAnalyticsReport::encrypted_page_load_events() const {
  // @@protoc_insertion_point(field_list:dwa.DeidentifiedWebAnalyticsReport.encrypted_page_load_events)
  return _impl_.encrypted_page_load_events_;
}

// optional int64 timestamp = 5;
inline bool DeidentifiedWebAnalyticsReport::_internal_has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool DeidentifiedWebAnalyticsReport::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void DeidentifiedWebAnalyticsReport::clear_timestamp() {
  _impl_.timestamp_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int64_t DeidentifiedWebAnalyticsReport::_internal_timestamp() const {
  return _impl_.timestamp_;
}
inline int64_t DeidentifiedWebAnalyticsReport::timestamp() const {
  // @@protoc_insertion_point(field_get:dwa.DeidentifiedWebAnalyticsReport.timestamp)
  return _internal_timestamp();
}
inline void DeidentifiedWebAnalyticsReport::_internal_set_timestamp(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.timestamp_ = value;
}
inline void DeidentifiedWebAnalyticsReport::set_timestamp(int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:dwa.DeidentifiedWebAnalyticsReport.timestamp)
}

// -------------------------------------------------------------------

// CoarseSystemInfo

// optional .dwa.CoarseSystemInfo.Channel channel = 1;
inline bool CoarseSystemInfo::_internal_has_channel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CoarseSystemInfo::has_channel() const {
  return _internal_has_channel();
}
inline void CoarseSystemInfo::clear_channel() {
  _impl_.channel_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::dwa::CoarseSystemInfo_Channel CoarseSystemInfo::_internal_channel() const {
  return static_cast< ::dwa::CoarseSystemInfo_Channel >(_impl_.channel_);
}
inline ::dwa::CoarseSystemInfo_Channel CoarseSystemInfo::channel() const {
  // @@protoc_insertion_point(field_get:dwa.CoarseSystemInfo.channel)
  return _internal_channel();
}
inline void CoarseSystemInfo::_internal_set_channel(::dwa::CoarseSystemInfo_Channel value) {
  assert(::dwa::CoarseSystemInfo_Channel_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.channel_ = value;
}
inline void CoarseSystemInfo::set_channel(::dwa::CoarseSystemInfo_Channel value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:dwa.CoarseSystemInfo.channel)
}

// optional .dwa.CoarseSystemInfo.Platform platform = 2;
inline bool CoarseSystemInfo::_internal_has_platform() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CoarseSystemInfo::has_platform() const {
  return _internal_has_platform();
}
inline void CoarseSystemInfo::clear_platform() {
  _impl_.platform_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::dwa::CoarseSystemInfo_Platform CoarseSystemInfo::_internal_platform() const {
  return static_cast< ::dwa::CoarseSystemInfo_Platform >(_impl_.platform_);
}
inline ::dwa::CoarseSystemInfo_Platform CoarseSystemInfo::platform() const {
  // @@protoc_insertion_point(field_get:dwa.CoarseSystemInfo.platform)
  return _internal_platform();
}
inline void CoarseSystemInfo::_internal_set_platform(::dwa::CoarseSystemInfo_Platform value) {
  assert(::dwa::CoarseSystemInfo_Platform_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.platform_ = value;
}
inline void CoarseSystemInfo::set_platform(::dwa::CoarseSystemInfo_Platform value) {
  _internal_set_platform(value);
  // @@protoc_insertion_point(field_set:dwa.CoarseSystemInfo.platform)
}

// optional .dwa.CoarseSystemInfo.GeoDesignation geo_designation = 3;
inline bool CoarseSystemInfo::_internal_has_geo_designation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CoarseSystemInfo::has_geo_designation() const {
  return _internal_has_geo_designation();
}
inline void CoarseSystemInfo::clear_geo_designation() {
  _impl_.geo_designation_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::dwa::CoarseSystemInfo_GeoDesignation CoarseSystemInfo::_internal_geo_designation() const {
  return static_cast< ::dwa::CoarseSystemInfo_GeoDesignation >(_impl_.geo_designation_);
}
inline ::dwa::CoarseSystemInfo_GeoDesignation CoarseSystemInfo::geo_designation() const {
  // @@protoc_insertion_point(field_get:dwa.CoarseSystemInfo.geo_designation)
  return _internal_geo_designation();
}
inline void CoarseSystemInfo::_internal_set_geo_designation(::dwa::CoarseSystemInfo_GeoDesignation value) {
  assert(::dwa::CoarseSystemInfo_GeoDesignation_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.geo_designation_ = value;
}
inline void CoarseSystemInfo::set_geo_designation(::dwa::CoarseSystemInfo_GeoDesignation value) {
  _internal_set_geo_designation(value);
  // @@protoc_insertion_point(field_set:dwa.CoarseSystemInfo.geo_designation)
}

// optional .dwa.CoarseSystemInfo.ClientAge client_age = 4;
inline bool CoarseSystemInfo::_internal_has_client_age() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CoarseSystemInfo::has_client_age() const {
  return _internal_has_client_age();
}
inline void CoarseSystemInfo::clear_client_age() {
  _impl_.client_age_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::dwa::CoarseSystemInfo_ClientAge CoarseSystemInfo::_internal_client_age() const {
  return static_cast< ::dwa::CoarseSystemInfo_ClientAge >(_impl_.client_age_);
}
inline ::dwa::CoarseSystemInfo_ClientAge CoarseSystemInfo::client_age() const {
  // @@protoc_insertion_point(field_get:dwa.CoarseSystemInfo.client_age)
  return _internal_client_age();
}
inline void CoarseSystemInfo::_internal_set_client_age(::dwa::CoarseSystemInfo_ClientAge value) {
  assert(::dwa::CoarseSystemInfo_ClientAge_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.client_age_ = value;
}
inline void CoarseSystemInfo::set_client_age(::dwa::CoarseSystemInfo_ClientAge value) {
  _internal_set_client_age(value);
  // @@protoc_insertion_point(field_set:dwa.CoarseSystemInfo.client_age)
}

// optional int32 milestone_prefix_trimmed = 5;
inline bool CoarseSystemInfo::_internal_has_milestone_prefix_trimmed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CoarseSystemInfo::has_milestone_prefix_trimmed() const {
  return _internal_has_milestone_prefix_trimmed();
}
inline void CoarseSystemInfo::clear_milestone_prefix_trimmed() {
  _impl_.milestone_prefix_trimmed_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline int32_t CoarseSystemInfo::_internal_milestone_prefix_trimmed() const {
  return _impl_.milestone_prefix_trimmed_;
}
inline int32_t CoarseSystemInfo::milestone_prefix_trimmed() const {
  // @@protoc_insertion_point(field_get:dwa.CoarseSystemInfo.milestone_prefix_trimmed)
  return _internal_milestone_prefix_trimmed();
}
inline void CoarseSystemInfo::_internal_set_milestone_prefix_trimmed(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.milestone_prefix_trimmed_ = value;
}
inline void CoarseSystemInfo::set_milestone_prefix_trimmed(int32_t value) {
  _internal_set_milestone_prefix_trimmed(value);
  // @@protoc_insertion_point(field_set:dwa.CoarseSystemInfo.milestone_prefix_trimmed)
}

// optional bool is_ukm_enabled = 6;
inline bool CoarseSystemInfo::_internal_has_is_ukm_enabled() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CoarseSystemInfo::has_is_ukm_enabled() const {
  return _internal_has_is_ukm_enabled();
}
inline void CoarseSystemInfo::clear_is_ukm_enabled() {
  _impl_.is_ukm_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool CoarseSystemInfo::_internal_is_ukm_enabled() const {
  return _impl_.is_ukm_enabled_;
}
inline bool CoarseSystemInfo::is_ukm_enabled() const {
  // @@protoc_insertion_point(field_get:dwa.CoarseSystemInfo.is_ukm_enabled)
  return _internal_is_ukm_enabled();
}
inline void CoarseSystemInfo::_internal_set_is_ukm_enabled(bool value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.is_ukm_enabled_ = value;
}
inline void CoarseSystemInfo::set_is_ukm_enabled(bool value) {
  _internal_set_is_ukm_enabled(value);
  // @@protoc_insertion_point(field_set:dwa.CoarseSystemInfo.is_ukm_enabled)
}

// -------------------------------------------------------------------

// PageLoadEvents

// repeated .dwa.DeidentifiedWebAnalyticsEvent events = 1;
inline int PageLoadEvents::_internal_events_size() const {
  return _impl_.events_.size();
}
inline int PageLoadEvents::events_size() const {
  return _internal_events_size();
}
inline void PageLoadEvents::clear_events() {
  _impl_.events_.Clear();
}
inline ::dwa::DeidentifiedWebAnalyticsEvent* PageLoadEvents::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:dwa.PageLoadEvents.events)
  return _impl_.events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent >*
PageLoadEvents::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:dwa.PageLoadEvents.events)
  return &_impl_.events_;
}
inline const ::dwa::DeidentifiedWebAnalyticsEvent& PageLoadEvents::_internal_events(int index) const {
  return _impl_.events_.Get(index);
}
inline const ::dwa::DeidentifiedWebAnalyticsEvent& PageLoadEvents::events(int index) const {
  // @@protoc_insertion_point(field_get:dwa.PageLoadEvents.events)
  return _internal_events(index);
}
inline ::dwa::DeidentifiedWebAnalyticsEvent* PageLoadEvents::_internal_add_events() {
  return _impl_.events_.Add();
}
inline ::dwa::DeidentifiedWebAnalyticsEvent* PageLoadEvents::add_events() {
  ::dwa::DeidentifiedWebAnalyticsEvent* _add = _internal_add_events();
  // @@protoc_insertion_point(field_add:dwa.PageLoadEvents.events)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent >&
PageLoadEvents::events() const {
  // @@protoc_insertion_point(field_list:dwa.PageLoadEvents.events)
  return _impl_.events_;
}

// -------------------------------------------------------------------

// EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent

// optional bytes encrypted_event = 1;
inline bool EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::_internal_has_encrypted_event() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::has_encrypted_event() const {
  return _internal_has_encrypted_event();
}
inline void EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::clear_encrypted_event() {
  _impl_.encrypted_event_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::encrypted_event() const {
  // @@protoc_insertion_point(field_get:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.EncryptedDeidentifiedWebAnalyticsEvent.encrypted_event)
  return _internal_encrypted_event();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::set_encrypted_event(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.encrypted_event_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.EncryptedDeidentifiedWebAnalyticsEvent.encrypted_event)
}
inline std::string* EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::mutable_encrypted_event() {
  std::string* _s = _internal_mutable_encrypted_event();
  // @@protoc_insertion_point(field_mutable:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.EncryptedDeidentifiedWebAnalyticsEvent.encrypted_event)
  return _s;
}
inline const std::string& EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::_internal_encrypted_event() const {
  return _impl_.encrypted_event_.Get();
}
inline void EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::_internal_set_encrypted_event(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.encrypted_event_.Set(value, GetArenaForAllocation());
}
inline std::string* EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::_internal_mutable_encrypted_event() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.encrypted_event_.Mutable(GetArenaForAllocation());
}
inline std::string* EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::release_encrypted_event() {
  // @@protoc_insertion_point(field_release:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.EncryptedDeidentifiedWebAnalyticsEvent.encrypted_event)
  if (!_internal_has_encrypted_event()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.encrypted_event_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.encrypted_event_.IsDefault()) {
    _impl_.encrypted_event_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::set_allocated_encrypted_event(std::string* encrypted_event) {
  if (encrypted_event != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.encrypted_event_.SetAllocated(encrypted_event, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.encrypted_event_.IsDefault()) {
    _impl_.encrypted_event_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.EncryptedDeidentifiedWebAnalyticsEvent.encrypted_event)
}

// optional fixed64 field_trials_hash = 2;
inline bool EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::_internal_has_field_trials_hash() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::has_field_trials_hash() const {
  return _internal_has_field_trials_hash();
}
inline void EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::clear_field_trials_hash() {
  _impl_.field_trials_hash_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::_internal_field_trials_hash() const {
  return _impl_.field_trials_hash_;
}
inline uint64_t EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::field_trials_hash() const {
  // @@protoc_insertion_point(field_get:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.EncryptedDeidentifiedWebAnalyticsEvent.field_trials_hash)
  return _internal_field_trials_hash();
}
inline void EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::_internal_set_field_trials_hash(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.field_trials_hash_ = value;
}
inline void EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::set_field_trials_hash(uint64_t value) {
  _internal_set_field_trials_hash(value);
  // @@protoc_insertion_point(field_set:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.EncryptedDeidentifiedWebAnalyticsEvent.field_trials_hash)
}

// optional fixed64 event_hash = 3;
inline bool EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::_internal_has_event_hash() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::has_event_hash() const {
  return _internal_has_event_hash();
}
inline void EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::clear_event_hash() {
  _impl_.event_hash_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::_internal_event_hash() const {
  return _impl_.event_hash_;
}
inline uint64_t EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::event_hash() const {
  // @@protoc_insertion_point(field_get:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.EncryptedDeidentifiedWebAnalyticsEvent.event_hash)
  return _internal_event_hash();
}
inline void EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::_internal_set_event_hash(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.event_hash_ = value;
}
inline void EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent::set_event_hash(uint64_t value) {
  _internal_set_event_hash(value);
  // @@protoc_insertion_point(field_set:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.EncryptedDeidentifiedWebAnalyticsEvent.event_hash)
}

// -------------------------------------------------------------------

// EncryptedPageLoadEvents_EncryptedPageLoadEvent

// repeated .dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.EncryptedDeidentifiedWebAnalyticsEvent encrypted_deidentified_web_analytics_events = 1;
inline int EncryptedPageLoadEvents_EncryptedPageLoadEvent::_internal_encrypted_deidentified_web_analytics_events_size() const {
  return _impl_.encrypted_deidentified_web_analytics_events_.size();
}
inline int EncryptedPageLoadEvents_EncryptedPageLoadEvent::encrypted_deidentified_web_analytics_events_size() const {
  return _internal_encrypted_deidentified_web_analytics_events_size();
}
inline void EncryptedPageLoadEvents_EncryptedPageLoadEvent::clear_encrypted_deidentified_web_analytics_events() {
  _impl_.encrypted_deidentified_web_analytics_events_.Clear();
}
inline ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent* EncryptedPageLoadEvents_EncryptedPageLoadEvent::mutable_encrypted_deidentified_web_analytics_events(int index) {
  // @@protoc_insertion_point(field_mutable:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.encrypted_deidentified_web_analytics_events)
  return _impl_.encrypted_deidentified_web_analytics_events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent >*
EncryptedPageLoadEvents_EncryptedPageLoadEvent::mutable_encrypted_deidentified_web_analytics_events() {
  // @@protoc_insertion_point(field_mutable_list:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.encrypted_deidentified_web_analytics_events)
  return &_impl_.encrypted_deidentified_web_analytics_events_;
}
inline const ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent& EncryptedPageLoadEvents_EncryptedPageLoadEvent::_internal_encrypted_deidentified_web_analytics_events(int index) const {
  return _impl_.encrypted_deidentified_web_analytics_events_.Get(index);
}
inline const ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent& EncryptedPageLoadEvents_EncryptedPageLoadEvent::encrypted_deidentified_web_analytics_events(int index) const {
  // @@protoc_insertion_point(field_get:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.encrypted_deidentified_web_analytics_events)
  return _internal_encrypted_deidentified_web_analytics_events(index);
}
inline ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent* EncryptedPageLoadEvents_EncryptedPageLoadEvent::_internal_add_encrypted_deidentified_web_analytics_events() {
  return _impl_.encrypted_deidentified_web_analytics_events_.Add();
}
inline ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent* EncryptedPageLoadEvents_EncryptedPageLoadEvent::add_encrypted_deidentified_web_analytics_events() {
  ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent* _add = _internal_add_encrypted_deidentified_web_analytics_events();
  // @@protoc_insertion_point(field_add:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.encrypted_deidentified_web_analytics_events)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent_EncryptedDeidentifiedWebAnalyticsEvent >&
EncryptedPageLoadEvents_EncryptedPageLoadEvent::encrypted_deidentified_web_analytics_events() const {
  // @@protoc_insertion_point(field_list:dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent.encrypted_deidentified_web_analytics_events)
  return _impl_.encrypted_deidentified_web_analytics_events_;
}

// -------------------------------------------------------------------

// EncryptedPageLoadEvents

// repeated .dwa.EncryptedPageLoadEvents.EncryptedPageLoadEvent encrypted_page_load_events = 1;
inline int EncryptedPageLoadEvents::_internal_encrypted_page_load_events_size() const {
  return _impl_.encrypted_page_load_events_.size();
}
inline int EncryptedPageLoadEvents::encrypted_page_load_events_size() const {
  return _internal_encrypted_page_load_events_size();
}
inline void EncryptedPageLoadEvents::clear_encrypted_page_load_events() {
  _impl_.encrypted_page_load_events_.Clear();
}
inline ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent* EncryptedPageLoadEvents::mutable_encrypted_page_load_events(int index) {
  // @@protoc_insertion_point(field_mutable:dwa.EncryptedPageLoadEvents.encrypted_page_load_events)
  return _impl_.encrypted_page_load_events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent >*
EncryptedPageLoadEvents::mutable_encrypted_page_load_events() {
  // @@protoc_insertion_point(field_mutable_list:dwa.EncryptedPageLoadEvents.encrypted_page_load_events)
  return &_impl_.encrypted_page_load_events_;
}
inline const ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent& EncryptedPageLoadEvents::_internal_encrypted_page_load_events(int index) const {
  return _impl_.encrypted_page_load_events_.Get(index);
}
inline const ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent& EncryptedPageLoadEvents::encrypted_page_load_events(int index) const {
  // @@protoc_insertion_point(field_get:dwa.EncryptedPageLoadEvents.encrypted_page_load_events)
  return _internal_encrypted_page_load_events(index);
}
inline ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent* EncryptedPageLoadEvents::_internal_add_encrypted_page_load_events() {
  return _impl_.encrypted_page_load_events_.Add();
}
inline ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent* EncryptedPageLoadEvents::add_encrypted_page_load_events() {
  ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent* _add = _internal_add_encrypted_page_load_events();
  // @@protoc_insertion_point(field_add:dwa.EncryptedPageLoadEvents.encrypted_page_load_events)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::EncryptedPageLoadEvents_EncryptedPageLoadEvent >&
EncryptedPageLoadEvents::encrypted_page_load_events() const {
  // @@protoc_insertion_point(field_list:dwa.EncryptedPageLoadEvents.encrypted_page_load_events)
  return _impl_.encrypted_page_load_events_;
}

// -------------------------------------------------------------------

// DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric

// optional fixed64 name_hash = 1;
inline bool DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric::_internal_has_name_hash() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric::has_name_hash() const {
  return _internal_has_name_hash();
}
inline void DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric::clear_name_hash() {
  _impl_.name_hash_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric::_internal_name_hash() const {
  return _impl_.name_hash_;
}
inline uint64_t DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric::name_hash() const {
  // @@protoc_insertion_point(field_get:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics.Metric.name_hash)
  return _internal_name_hash();
}
inline void DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric::_internal_set_name_hash(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_hash_ = value;
}
inline void DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric::set_name_hash(uint64_t value) {
  _internal_set_name_hash(value);
  // @@protoc_insertion_point(field_set:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics.Metric.name_hash)
}

// optional int64 value = 2;
inline bool DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric::_internal_has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric::has_value() const {
  return _internal_has_value();
}
inline void DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric::clear_value() {
  _impl_.value_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric::_internal_value() const {
  return _impl_.value_;
}
inline int64_t DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric::value() const {
  // @@protoc_insertion_point(field_get:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics.Metric.value)
  return _internal_value();
}
inline void DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric::_internal_set_value(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.value_ = value;
}
inline void DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric::set_value(int64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics.Metric.value)
}

// -------------------------------------------------------------------

// DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics

// repeated .dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics.Metric metric = 1;
inline int DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics::_internal_metric_size() const {
  return _impl_.metric_.size();
}
inline int DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics::metric_size() const {
  return _internal_metric_size();
}
inline void DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics::clear_metric() {
  _impl_.metric_.Clear();
}
inline ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric* DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics::mutable_metric(int index) {
  // @@protoc_insertion_point(field_mutable:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics.metric)
  return _impl_.metric_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric >*
DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics::mutable_metric() {
  // @@protoc_insertion_point(field_mutable_list:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics.metric)
  return &_impl_.metric_;
}
inline const ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric& DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics::_internal_metric(int index) const {
  return _impl_.metric_.Get(index);
}
inline const ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric& DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics::metric(int index) const {
  // @@protoc_insertion_point(field_get:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics.metric)
  return _internal_metric(index);
}
inline ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric* DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics::_internal_add_metric() {
  return _impl_.metric_.Add();
}
inline ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric* DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics::add_metric() {
  ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric* _add = _internal_add_metric();
  // @@protoc_insertion_point(field_add:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics.metric)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics_Metric >&
DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics::metric() const {
  // @@protoc_insertion_point(field_list:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics.metric)
  return _impl_.metric_;
}

// -------------------------------------------------------------------

// DeidentifiedWebAnalyticsEvent_ContentMetric

// optional .dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.ContentType content_type = 1;
inline bool DeidentifiedWebAnalyticsEvent_ContentMetric::_internal_has_content_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool DeidentifiedWebAnalyticsEvent_ContentMetric::has_content_type() const {
  return _internal_has_content_type();
}
inline void DeidentifiedWebAnalyticsEvent_ContentMetric::clear_content_type() {
  _impl_.content_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType DeidentifiedWebAnalyticsEvent_ContentMetric::_internal_content_type() const {
  return static_cast< ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType >(_impl_.content_type_);
}
inline ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType DeidentifiedWebAnalyticsEvent_ContentMetric::content_type() const {
  // @@protoc_insertion_point(field_get:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.content_type)
  return _internal_content_type();
}
inline void DeidentifiedWebAnalyticsEvent_ContentMetric::_internal_set_content_type(::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType value) {
  assert(::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.content_type_ = value;
}
inline void DeidentifiedWebAnalyticsEvent_ContentMetric::set_content_type(::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType value) {
  _internal_set_content_type(value);
  // @@protoc_insertion_point(field_set:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.content_type)
}

// optional fixed64 content_hash = 2;
inline bool DeidentifiedWebAnalyticsEvent_ContentMetric::_internal_has_content_hash() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool DeidentifiedWebAnalyticsEvent_ContentMetric::has_content_hash() const {
  return _internal_has_content_hash();
}
inline void DeidentifiedWebAnalyticsEvent_ContentMetric::clear_content_hash() {
  _impl_.content_hash_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t DeidentifiedWebAnalyticsEvent_ContentMetric::_internal_content_hash() const {
  return _impl_.content_hash_;
}
inline uint64_t DeidentifiedWebAnalyticsEvent_ContentMetric::content_hash() const {
  // @@protoc_insertion_point(field_get:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.content_hash)
  return _internal_content_hash();
}
inline void DeidentifiedWebAnalyticsEvent_ContentMetric::_internal_set_content_hash(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.content_hash_ = value;
}
inline void DeidentifiedWebAnalyticsEvent_ContentMetric::set_content_hash(uint64_t value) {
  _internal_set_content_hash(value);
  // @@protoc_insertion_point(field_set:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.content_hash)
}

// repeated .dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.EntryMetrics metrics = 3;
inline int DeidentifiedWebAnalyticsEvent_ContentMetric::_internal_metrics_size() const {
  return _impl_.metrics_.size();
}
inline int DeidentifiedWebAnalyticsEvent_ContentMetric::metrics_size() const {
  return _internal_metrics_size();
}
inline void DeidentifiedWebAnalyticsEvent_ContentMetric::clear_metrics() {
  _impl_.metrics_.Clear();
}
inline ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics* DeidentifiedWebAnalyticsEvent_ContentMetric::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.metrics)
  return _impl_.metrics_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics >*
DeidentifiedWebAnalyticsEvent_ContentMetric::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.metrics)
  return &_impl_.metrics_;
}
inline const ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics& DeidentifiedWebAnalyticsEvent_ContentMetric::_internal_metrics(int index) const {
  return _impl_.metrics_.Get(index);
}
inline const ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics& DeidentifiedWebAnalyticsEvent_ContentMetric::metrics(int index) const {
  // @@protoc_insertion_point(field_get:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.metrics)
  return _internal_metrics(index);
}
inline ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics* DeidentifiedWebAnalyticsEvent_ContentMetric::_internal_add_metrics() {
  return _impl_.metrics_.Add();
}
inline ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics* DeidentifiedWebAnalyticsEvent_ContentMetric::add_metrics() {
  ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics* _add = _internal_add_metrics();
  // @@protoc_insertion_point(field_add:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.metrics)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_EntryMetrics >&
DeidentifiedWebAnalyticsEvent_ContentMetric::metrics() const {
  // @@protoc_insertion_point(field_list:dwa.DeidentifiedWebAnalyticsEvent.ContentMetric.metrics)
  return _impl_.metrics_;
}

// -------------------------------------------------------------------

// DeidentifiedWebAnalyticsEvent

// optional fixed64 event_hash = 1;
inline bool DeidentifiedWebAnalyticsEvent::_internal_has_event_hash() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool DeidentifiedWebAnalyticsEvent::has_event_hash() const {
  return _internal_has_event_hash();
}
inline void DeidentifiedWebAnalyticsEvent::clear_event_hash() {
  _impl_.event_hash_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t DeidentifiedWebAnalyticsEvent::_internal_event_hash() const {
  return _impl_.event_hash_;
}
inline uint64_t DeidentifiedWebAnalyticsEvent::event_hash() const {
  // @@protoc_insertion_point(field_get:dwa.DeidentifiedWebAnalyticsEvent.event_hash)
  return _internal_event_hash();
}
inline void DeidentifiedWebAnalyticsEvent::_internal_set_event_hash(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.event_hash_ = value;
}
inline void DeidentifiedWebAnalyticsEvent::set_event_hash(uint64_t value) {
  _internal_set_event_hash(value);
  // @@protoc_insertion_point(field_set:dwa.DeidentifiedWebAnalyticsEvent.event_hash)
}

// repeated .dwa.DeidentifiedWebAnalyticsEvent.ContentMetric content_metrics = 2;
inline int DeidentifiedWebAnalyticsEvent::_internal_content_metrics_size() const {
  return _impl_.content_metrics_.size();
}
inline int DeidentifiedWebAnalyticsEvent::content_metrics_size() const {
  return _internal_content_metrics_size();
}
inline void DeidentifiedWebAnalyticsEvent::clear_content_metrics() {
  _impl_.content_metrics_.Clear();
}
inline ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric* DeidentifiedWebAnalyticsEvent::mutable_content_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:dwa.DeidentifiedWebAnalyticsEvent.content_metrics)
  return _impl_.content_metrics_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric >*
DeidentifiedWebAnalyticsEvent::mutable_content_metrics() {
  // @@protoc_insertion_point(field_mutable_list:dwa.DeidentifiedWebAnalyticsEvent.content_metrics)
  return &_impl_.content_metrics_;
}
inline const ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric& DeidentifiedWebAnalyticsEvent::_internal_content_metrics(int index) const {
  return _impl_.content_metrics_.Get(index);
}
inline const ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric& DeidentifiedWebAnalyticsEvent::content_metrics(int index) const {
  // @@protoc_insertion_point(field_get:dwa.DeidentifiedWebAnalyticsEvent.content_metrics)
  return _internal_content_metrics(index);
}
inline ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric* DeidentifiedWebAnalyticsEvent::_internal_add_content_metrics() {
  return _impl_.content_metrics_.Add();
}
inline ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric* DeidentifiedWebAnalyticsEvent::add_content_metrics() {
  ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric* _add = _internal_add_content_metrics();
  // @@protoc_insertion_point(field_add:dwa.DeidentifiedWebAnalyticsEvent.content_metrics)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric >&
DeidentifiedWebAnalyticsEvent::content_metrics() const {
  // @@protoc_insertion_point(field_list:dwa.DeidentifiedWebAnalyticsEvent.content_metrics)
  return _impl_.content_metrics_;
}

// repeated .metrics.SystemProfileProto.FieldTrial field_trials = 3;
inline int DeidentifiedWebAnalyticsEvent::_internal_field_trials_size() const {
  return _impl_.field_trials_.size();
}
inline int DeidentifiedWebAnalyticsEvent::field_trials_size() const {
  return _internal_field_trials_size();
}
inline ::metrics::SystemProfileProto_FieldTrial* DeidentifiedWebAnalyticsEvent::mutable_field_trials(int index) {
  // @@protoc_insertion_point(field_mutable:dwa.DeidentifiedWebAnalyticsEvent.field_trials)
  return _impl_.field_trials_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::metrics::SystemProfileProto_FieldTrial >*
DeidentifiedWebAnalyticsEvent::mutable_field_trials() {
  // @@protoc_insertion_point(field_mutable_list:dwa.DeidentifiedWebAnalyticsEvent.field_trials)
  return &_impl_.field_trials_;
}
inline const ::metrics::SystemProfileProto_FieldTrial& DeidentifiedWebAnalyticsEvent::_internal_field_trials(int index) const {
  return _impl_.field_trials_.Get(index);
}
inline const ::metrics::SystemProfileProto_FieldTrial& DeidentifiedWebAnalyticsEvent::field_trials(int index) const {
  // @@protoc_insertion_point(field_get:dwa.DeidentifiedWebAnalyticsEvent.field_trials)
  return _internal_field_trials(index);
}
inline ::metrics::SystemProfileProto_FieldTrial* DeidentifiedWebAnalyticsEvent::_internal_add_field_trials() {
  return _impl_.field_trials_.Add();
}
inline ::metrics::SystemProfileProto_FieldTrial* DeidentifiedWebAnalyticsEvent::add_field_trials() {
  ::metrics::SystemProfileProto_FieldTrial* _add = _internal_add_field_trials();
  // @@protoc_insertion_point(field_add:dwa.DeidentifiedWebAnalyticsEvent.field_trials)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::metrics::SystemProfileProto_FieldTrial >&
DeidentifiedWebAnalyticsEvent::field_trials() const {
  // @@protoc_insertion_point(field_list:dwa.DeidentifiedWebAnalyticsEvent.field_trials)
  return _impl_.field_trials_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dwa

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::dwa::CoarseSystemInfo_Channel> : ::std::true_type {};
template <> struct is_proto_enum< ::dwa::CoarseSystemInfo_Platform> : ::std::true_type {};
template <> struct is_proto_enum< ::dwa::CoarseSystemInfo_GeoDesignation> : ::std::true_type {};
template <> struct is_proto_enum< ::dwa::CoarseSystemInfo_ClientAge> : ::std::true_type {};
template <> struct is_proto_enum< ::dwa::DeidentifiedWebAnalyticsEvent_ContentMetric_ContentType> : ::std::true_type {};

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dwa_2fdeidentified_5fweb_5fanalytics_2eproto
